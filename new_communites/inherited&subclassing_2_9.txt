trickier, private, members, ---------------------------------------------------

trickier,private,members,class,public
with subclassing is trickier because any private members of a class are not inherited by the subclassing but protected and public are

ireadwrite,implements,class,base
since ireadwrite implements ireadonly ireadwrite is said to be a subclassing of ireadonly although subclassing is more accurately used to describe a class which inherited a base class rather then implements an interface--for the sake of simplicity they are very nearly the same concept

other---------------------------------------------------

likely,contractual,nature,abstract
with inherited this is less likely to happen due the contractual nature of subclassing abstract classes

information,standard,constructors,tree,parameters,class
if a subclassing needs more information than the standard parameters which came up for us you have the option of a second parameters class type that you use as a second parameter but then you have two types of constructors in the tree or using inherited in the parameters class hierarchy

useful,new,method,data
inherited is more useful when a new subclassing wants to change the way a method works if you just need to change the data the class uses to work probably an approach like this would do the trick

methods,superclass,order
similarly as the subclassing gains more methods it inherited the list of superclass in the order in which they were named that precede it

behavior,group,serious,re-use,functions,properties
i generally use interfaces are too enforce a common behavior that a group of classes share whereas subclassing is more appropriately used in cases where you can achieve serious code re-use through inherited functions properties

custom,resource,better,wrapper,composition
depending on how your application is structured this means you may want to have your own base class implementing iresource which creates your custom not found resource for all of its subclassing or better make a wrapper since composition is better than inherited

hibernate,support,mapping,powerful,hierarchy,table,strategies
but native hibernate support regarding inherited mapping is more powerful than standard jpa and single table per class hierarchy or table per subclassing mapping strategies are more suitable for polymorphic queries and associations than table per concrete class strategy

