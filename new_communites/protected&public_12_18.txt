closer, perfect, method, ---------------------------------------------------

restrictive
protected is more restrictive than public

restrictive,private
so a protected is more restrictive than public and private is more restrictive than protected

closer,private
furthermore protected is actually closer to public than to private

closer,private
protected is closer to public than private

private,better,..
that means private is better than protected protected is better than public etc ..

perfect,method,parameters,better
it s not perfect but i guess that a protected method that does not check parameters is better than a public method that does not do it

package, accessible, possibility, ---------------------------------------------------

possibility,access,package,private,restrictive
otherwise there is still the possibility to change a public access to a protected or package private access which will be much more restrictive than public

accessible,better,private,read
change it to public to make it more accessible or perhaps better protected to make it less accessible than public but more than private read more about that here

package,accessible,accessibility,foo
since package protected is less accessible than public the code is reducing the accessibility of the foo method

constructor, types, sense, ---------------------------------------------------

constructor,types,sense
therefore the only types that should have access to a constructor are its derived types and hence protected makes much more sense than public

constructor,access
oh i see you need a constructor that has more access than protected but less than public

someone,class,access
the theory is that someone extending your class with protected access knows more about what they are doing than someone who is merely using it with public access

other---------------------------------------------------

inheritance,accessible,base,class,members,level,permissive
for public inheritance it means that all the accessible members of base class that is the public and protected members can not be at a level more permissive than public

rationale,private,stuff,life,programmer,easier
what is the true rationale behind all the private and protected stuff when we can just make our life as a programmer easier by using public for everything

better,hibernate,performance,web,private,accessor,methods,fields
reason i once heard that protected is better for hibernate performance but all i can find on the web is hibernate can access public private and protected accessor methods as well as public private and protected fields directly

functions,weaker,invariant,call
protected functions maintain a weaker invariant than the public one before and after each call

higher
public is higher than protected so there s no problem

view,function,users,limited,exposure,private
from a software engineering point of view as soon as you make a function protected you expose it to other users of course much more limited than public exposure but still much more exposed than private and you create expectation about some stability of the api

