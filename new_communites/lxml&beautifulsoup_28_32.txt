parser, direct, manner, ---------------------------------------------------

direct,manner,faster
since you re using lxml why not use it in a more direct manner lxml is believed to be faster than beautifulsoup

faster,fastest,parser
lxml is much faster than beautifulsoup and probably the fastest parser available for python

order,preserved.with,simple,faster
how can i find all div and span tags with order preserved.with beautifulsoup it is very simple but i switched recently to lxml since it is much faster than beautifulsoup

faster,uses,easy,typical
you ll probably find that lxml runs faster than beautifulsoup but in my uses beautifulsoup was very easy to learn and use and handled typical crappy html as found in the wild well enough that i don t have need for anything else

note,parser,slower,default
note that using the beautifulsoup parser is a lot slower than lxml s default parser

html, task, better, ---------------------------------------------------

html,work,faster
edit don t use this for html work use the lxml library it s python based and much faster than beautifulsoup

task,html,files,better
the reason for using lxml for such a task is that it cleans html files better than beautifulsoup do

efficient,broken,html,better
regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup

suitable,html,parsing
beautifulsoup is more suitable for html parsing than lxml

html,simple,faster,orders,magnitude
i would recommend lxml for html parsing it s simple and considerably faster than beautifulsoup can be as much as two orders of magnitude

note,better,kind,task,author
note that lxml is probably a better option than beautifulsoup for this kind of task nowadays for the reasons given by beautifulsoup s author

better, module, pyquery, ---------------------------------------------------

module,faster
alternatively you can use lxml module which is lot faster than beautifulsoup

pyquery,faster
pyquery is based on lxml so it s also much faster than beautifulsoup

harder,faster
i prefere lxml it s a harder to understand but much faster than beautifulsoup

faster,ref
it s generally accepted that lxml is faster than beautifulsoup ref

posts,experience,faster
according to the above posts and my own experience lxml is definitely faster than beautifulsoup

fast,faster
speed isn t important here but in other applications it is good to know that regexes are very fast 100 times faster than lxml and 1000 faster than beautifulsoup

faster,better,functionality
lxml is faster than beautifulsoup i think and has much better functionality while remaining relatively easy to use

faster,efficient
lxml is supposed to be much faster and efficient and can do much more than beautifulsoup

faster,documents,size
i ve found that even if lxml is faster than beautifulsoup for documents that size it s usually best to try to reduce the size to a few kb via regex or direct stripping and load that into bs as you are doing now

benchmark,tests,faster
according to some benchmark tests lxml is nearly 100 times faster than beautifulsoup

faster
lxml is also much much faster than beautifulsoup

faster
it uses lxml underneath and is much faster than beautifulsoup

things,better,support,proper
one of the things that makes lxml better than beautifulsoup is support for proper css-like class selection or even supports full css selectors if you want to use them

better
i prefer to use beautifulsoup better than lxml

xpath, easier, solution, ---------------------------------------------------

xpath,easier
lxml enables you to search for elements using xpath which i think is easier than using beautifulsoup s api

solution,beautifulsoup-where-are-you-putting-my-html,easier
i found a solution to this problem using beautifulsoup at beautifulsoup-where-are-you-putting-my-html because i think it is easier than lxml

xpath,painful,interface
lxml will let you use xpath here which i think will be less painful than beautifulsoup s interface

other---------------------------------------------------

starters,longer,author,alternatives
for starters beautifulsoup is no longer actively maintained and the author even recommends alternatives such as lxml

stricter
i do understand that traditionally they are saying that lxml are stricter than beautifulsoup however what i do not get is the following

powerful,robust,experienced,opinion
lxml is significantly more powerful and robust than beautifulsoup in my experienced opinion

features
lxml also has more features and offers beautifulsoup too

