faster, use, non-native, ---------------------------------------------------

faster,use,non-native
if i remember correctly lodash argued they were faster than underscore.js because the use non-native functions for key operations

stunned,faster,simple,native
i am stunned right now seeing a lodash performing 100-150 faster than underscore.js in even simple native functions such as array.every in chrome

latest, compatibility, stable, ---------------------------------------------------

compatibility,latest,stable,version
because lodash is updated more frequently than underscore.js a lodash underscore.js build is provided to ensure compatibility with the latest stable version of underscore.js

easiest,solution,features,latest
the easiest solution is to just replace underscore.js with lodash which has even more features than the latest underscore.js

better, comment, likely, ---------------------------------------------------

comment,likely,better,solution
edit as pointed out in the comment lodash is likely to be a better solution than underscore.js

open,better,version,flattendeep,element
if you re open to using lodash which is a better version of underscore.js imo this can be expressed fairly simply using flattendeep on each element of your multi-dimensional array

better,details,blog
i believe lodash is a better choice over underscore.js more details in this blog post

other---------------------------------------------------

years,old,place,solution
given that this is 4 years old and lodash has more or less taken the place of underscore.js i thought i would share this solution using lodash

faster,implementation,utility,methods
lodash is another faster implementation of underscore.js that will provide a lot of utility methods for working wit arrays objects functions etc

charliefl,faster,browser
the solution from charliefl is approximately 100x faster than underscore.js depending on browser in this case and lodash being up to 2x faster than underscore.js

iteration,method,source,convoluted
basically collections are things that implement some kind of iterable interface and they internally use the same iteration method though lodash source is a bit more convoluted than underscore.js

modular,5kb,17kb,lighter
lodash is more modular than underscore.js underscore.js around 5kb lodash around 17kb but is generally lighter because you only include the specific modules you need

slower
lodash is definitely not slower than underscore.js

