the problem is that tcp creates bigger packages of data while udp uses 8 kb of data blocks

why the header size of udp is less than tcp

you will notice that the tcp header has more fields than the udp header and many of those fields will be populated by information from the handshake

udp packets are easier structured than tcp packets but sacrifice security for their size

udp sockets have much lower overhead than tcp because packets are not acknowledged by the recipient

as far as tcp goes i think tcp is more generally used protocol for more data-centric requests like chat or things that require packet integrity udp tolerates packet loss to lower latency

udp is more of a fire and forget whereas tcp maintains a connection state

getting much more information is needed in the packet header for connection less like udp but why the header size of udp is less than tcp

like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie

tcp is subject to higher latencies than udp as it requires the client to send back packet confirmations

udp is faster than tcp because packets are sent without guarantee of delivery nor order

in a congested network yes udp will send its packets faster than tcp this is because tcp takes then congestion into account using a mechanism called congestion control

for example i read an experiment in which a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp

one can say udp has a lower overhead than tcp because its packets have a smaller header and therefore take less bandwidth to send the payload the data

also remember that dns requests can use tcp if the request or response would need more than 1 udp packet

tcp has bigger overhead than udp because it needs to add more data to your payload but you are guaranteed that your data will be received in it s destination in the order you sent it and not corrupted

i am using udp because it is much faster than tcp but sometimes i need the know for sure if the packet reached to the other side in my program i can not use tcp at all so i am sending ack packets

for example tcp has much more flags window-length syn ack etc - and also starts and ends a connection in a very stable way - the three way handshake - while all udp has is source ip dest ip length source port dest port and checksum

is sending packets via an established tcp connection after all hand shaking has been done a method to be faster than udp

udp is connection less but at the same level as tcp

one often finds the argument that udp is faster then tcp

i read in a case where a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp

udp is really faster than tcp and the simple reason is because it s non-existent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculatd by using the tcp window size and round-trip time rtt .

only when packets can be discarded unordered can udp be faster than tcp

try to increase timeout value tcp is slower than udp

i know tcp is a safer choice but let s assume i can only use udp and i need to ensure i can send packets over at a high rate with no missing packets what should i do

the fact that udp s header size is less than tcp s is because is a simpler protocol that needs less header space that s all there is to it

udp is faster than tcp and the simple reason is because its nonexistent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculated by using the tcp window size and round-trip time rtt

