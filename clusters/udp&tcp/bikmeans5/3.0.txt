instead you can use udp and implement your own scheme for verification of data that is less stringent than tcp

hello to all i am developing an application that needs to send a image via the udp socket.i know that tcp is a better protocol but playing with kryonet in java i have learnt that udp is better for this type of application.i have this small class that i have made

use socket for tcp and datagram for udp its a lot faster than tcp but less connection oriented

for instance zeromq can leverage udp multicast to run faster than any tcp protocol but the application programmer doesn t need to learn a new api

or is there any specific scenario where udp is better than tcp

udp is also more work than tcp if you need reliability which is built in to tcp

2 tcp needs more processing at network interface level where as in udp it√¢ s not

a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented

-- in which scenario configuration would i get udp to perform better than tcp

as far as tcp goes i think tcp is more generally used protocol for more data-centric requests like chat or things that require packet integrity udp tolerates packet loss to lower latency

udp is more of a fire and forget whereas tcp maintains a connection state

i think udp will perform better than tcp gcdasyncsocket in your case video transfer

scenario where udp is better than tcp

udp is less reliable on a wide area network but in a closed environment of a vm talking to its host you can safely skip all the tcp reliability stuff

but with the udp protocol in particular this is easier than for tcp

it may be that the kernel heuristics for servering tcp connections is more aggressive than for udp sockets since tcp connections require more state and more continuous processing than do udp sockets

http is an application layer protocol which could be encapsulated with a protocol that uses udp providing arguably faster reliable communication than tcp

udp is simpler protocol than tcp and you can still simulate features of tcp using udp

in general the tcp protocol manages the available network bandwidth better than the udp protocol

tcp is way better then udp for that

you could get them to do a udp multicast within a lan environment to identify the programs using protocol messages then have a stored cache of each other s identity and then use tcp to connect and do main exchanging of messages which is more reliable than udp

normally a server wouldn t need to know the client s address beforehand but udp s knottier than tcp the more usual stream-oriented approach to socket communication in many ways

i know tcp is better to send file but i have a homework about sending file via udp protocol

because of tcp requires connection and provides security it is slower than udp and therefore it should not be preffered during a video streaming

the decision on yours the tcp protocol used for connection oriented network that is more secure than udp

for some requirements tcp is better for some udp

udp is connection less but at the same level as tcp

while udp has less network overhead than tcp it generally relies on you the developer to come up with your own mechanisms for flow control fragmentation handling lost packets etc.

udp communication is connection less as compared to tcp which need a connection

