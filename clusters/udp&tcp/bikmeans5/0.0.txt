i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp average 65 better

the problem is that tcp creates bigger packages of data while udp uses 8 kb of data blocks

udp is extremely faster than tcp which is suitable to stream a user s voice input

why the header size of udp is less than tcp

the reason i asking this is because i read tcp is slower than udp because tcp ensures order of packets

also sending receiving data over udp is much simpler than over tcp and it does not require any connections

for this particular application sending simple data chunk to the client from an index given by the client tcp will not perform any better than udp

udp is quicker than tcp but if you re using quickfix you ll be using tcp

you will notice that the tcp header has more fields than the udp header and many of those fields will be populated by information from the handshake

tcp has to do a lot of error checking to ensure that your packets don t get dropped and so tcp is much slower than udp

when writing your server bear in mind that the sequence of events for a tcp socket is much harder than for a udp socket since as well as the normal socket and bind calls you also have to listen and accept

tcp streaming for audio can be less helpful than udp rtp as you d have to turn off nagling

tcp socket is even more likely than udp socket but both work

if you can do everything with udp it is lighter than tcp

udp packets are easier structured than tcp packets but sacrifice security for their size

tcp ip is supposed to be more reliable than udp ip see this comparison

udp sockets have much lower overhead than tcp because packets are not acknowledged by the recipient

getting much more information is needed in the packet header for connection less like udp but why the header size of udp is less than tcp

does udp always perform better than tcp

short answer if you can tolerance with any packet loss udp is better otherwise tcp

we propose to use udp over tcp since udp is faster than tcp

like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie

if the data is critical you should go for tcp which is slower as compared to udp which in fact doesn t guarantee the packets will arrive in order or even if they d arrive or not

tcp sockets- guaranteed delivery bigger payload than udp cumbersome to setup for web based solutions

tcp is subject to higher latencies than udp as it requires the client to send back packet confirmations

if they are connected over the internet you could try to use the examples for tcp but tcp has more overhead than udp

note that udp is more difficult to work with than tcp because packets are not always guaranteed to be delivered

if you can t afford lost packets then tcp is probably a better option than udp since it provides that guarantee out of the box

udp is faster than tcp because packets are sent without guarantee of delivery nor order

udp port scanning is possible but it is harder than tcp scanning

in a congested network yes udp will send its packets faster than tcp this is because tcp takes then congestion into account using a mechanism called congestion control

for example i read an experiment in which a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp

one can say udp has a lower overhead than tcp because its packets have a smaller header and therefore take less bandwidth to send the payload the data

also remember that dns requests can use tcp if the request or response would need more than 1 udp packet

tcp has bigger overhead than udp because it needs to add more data to your payload but you are guaranteed that your data will be received in it s destination in the order you sent it and not corrupted

the reason udp is faster than tcp is because there is no form of flow control or error correction

but when i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp for 10mb of data

i am using udp because it is much faster than tcp but sometimes i need the know for sure if the packet reached to the other side in my program i can not use tcp at all so i am sending ack packets

note that there are exceptions to the above - for example tcp generally traverses firewalls better than udp which may be blocked due to security to traffic policy reasons so voip speech may sometimes be sent over tcp for part of its journey at least

for example tcp has much more flags window-length syn ack etc - and also starts and ends a connection in a very stable way - the three way handshake - while all udp has is source ip dest ip length source port dest port and checksum

is sending packets via an established tcp connection after all hand shaking has been done a method to be faster than udp

udp is much faster then tcp but tcp has flow control and guaranteed delivery

apart from that tcp packets by themselves are not slower than udp packets and data transfer with a simple tcp connection can be faster than with a simple udp connection because flow control and reliable transfer is already integrated and you don t have to reinvent everything again and often worse

tcp is certainly going to be more reliable than udp since udp doesn t guarantee packet delivery which is probably why you application is hanging on the receive

i read in a case where a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp

it is worth nothing that in a link where udp and tcp are sharing the bandwidth tcp is better behaved than udp in that it will try to limit itself to avoid congestion

udp is really faster than tcp and the simple reason is because it s non-existent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculatd by using the tcp window size and round-trip time rtt .

only when packets can be discarded unordered can udp be faster than tcp

try to increase timeout value tcp is slower than udp

first of udp s datagram is simpler than tcp s one

i ve considered that udp is more suitable for sending a series of discrete data sets but i need the reliability of tcp

i know tcp is a safer choice but let s assume i can only use udp and i need to ensure i can send packets over at a high rate with no missing packets what should i do

-- does udp always perform better than tcp

if you were attempting to beat the performance of tcp by shifting to udp keep in mind that part of the reason you get lower performance with tcp is because tcp tracks and redelivers the lost packets for you

udp is faster than tcp and the simple reason is because its nonexistent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculated by using the tcp window size and round-trip time rtt

