137

3des	aes---------------------------------------------------

faster slower
('3des', 'much slower', 'aes', '23658313', 'furthermore 3des is much slower than aes\n')
('aes', 'faster', '3des', '3938726', 'should be as fast as 3des aes turned out to be much faster than 3des in software typically 5 to 10 times faster\n')

jqplot	flot---------------------------------------------------

directory	folder---------------------------------------------------

ftp ls head
('folder', 'way more', 'directory', '26279419', 'this folder has way more than 1 directory and has a bunch of files so apparently it snot reading something correctly\n')
('directory', 'more', 'folder', '11553430', 'i am using the bash ftp command to ftp files however i have a problem where i try to create a directory that is more than 2 folder deep\n')
('directory', 'less', 'folder', '15032819', 'i have tested on mp3 files in different directory it takes less than one second with over 6000 files stored in different folder\n')
('directory', 'lower', 'folder', '47611724', 'i created a php file which deals with file deleting and uploading but i this file is one directory lower than the folder for files\n')
('directory', 'also faster', 'folder', '23086696', 'rm -rf directory also works faster for billion of files in one folder\n')
('directory', 'faster ls', 'folder', '32341733', 'if i run ls folder | head in a directory with a lot of files the execution time is about 50 times faster than ls folder | tail\n')
('directory', 'target', 'folder', '34044187', 'file must be in the same or higher directory as target folder\n')
('directory', 'more', 'folder', '6048084', 'i would recommend placing the common files in the same directory as the solution file or no more than 1 folder deep\n')

nfa	dfa---------------------------------------------------

faster compact powerful
('nfa', 'slower', 'dfa', '36630254', 'perl uses nfa which is slower yet more powerful than the dfa engine sed has\n')
('dfa', 'faster', 'nfa', '37892171', 'generally speaking dfa is faster but nfa is more compact\n')
('nfa', 'slower', 'dfa', '9192904', 'regex is a nfa and is as such in most cases slower than a dfa or hand-written parser\n')

awt	swing---------------------------------------------------

functionality advanced better
('swing', 'richer', 'awt', '2044311', 'well swing is richer in terms of out-of-the-box components than awt\n')
('swing', 'much better performance', 'awt', '16289744', 'consider using swing which has much better performance over the old heavyweight awt\n')
('swing', 'more', 'awt', '43499648', 'it has functionality the same as a canvas but swing is more advanced and has better features than awt\n')
('swing', 'far better', 'awt', '9996090', 'swing is far better than the obsolete awt library\n')
('swing', 'newer', 'awt', '21279086', 'you can read all over the web that awt is old and deprecated and swing is old but newer than awt and should be preferred over awt whenever possible\n')
('swing', 'newer', 'awt', '33978735', 'swing has newer and better api s than awt\n')
('swing', 'more', 'awt', '2377467', 'in swing has more features than the awt components\n')
('swing', 'better', 'awt', '9009156', 'swing is better and few people remember how to use awt components\n')
('swing', 'far better then', 'awt', '21215282', 'swing is far better then awt and should be educated to people who is writing gui-based java for the first time\n')
('swing', 'newer', 'awt', '36696741', 'yes swing has newer and better api s than awt\n')
('swing', 'better', 'awt', '29239458', 'swing or javafx would be better than awt\n')
('awt', 'faster', 'swing', '12145525', 'its was said that awt is faster than swing as it uses the platform component but due the arrival of faster processor etc ..\n')

useful
('awt', 'more', 'swing', '408820', 'are there any cases where awt is more useful advised to use than swing or vice-versa\n')
('awt', 'more useful', 'swing', '1090158', 'as far as when awt may be more useful than swing -\n')

mp4	webm---------------------------------------------------

geocode	geocoding---------------------------------------------------

qplaintextedit	qtextedit---------------------------------------------------

double	int---------------------------------------------------

precision general precise
('int', 'much less', 'double', '45266203', 'indeed fact is limited by the range of type unsigned int which is much less than the precision of type long double\n')
('double', 'less', 'int', '36164348', 'further the precision of double may be less than int introducing other problems\n')
('double', 'more precision', 'int', '35525303', 'double can hold more precision than int\n')
('double', 'better', 'int', '21886861', 'double is better than int though as it will help you keep precision\n')
('int', 'more precsion', 'double', '38865387', 'this is important because if the int needs more precsion than 52-bits the precision is too low for a double\n')
('double', 'more general type', 'int', '19823940', 'double can in a way be seen as a more general type than int\n')
('int', 'less precise', 'double', '36801182', 'since int is less precise than double i thought i needed to cast it when parsing it into a method\n')
('double', 'more', 'int', '3878773', 'a double is a more precise type than an int in a general manner of speaking\n')
('double', 'more', 'int', '15770825', 'but this isn t true because double is more general than int and therefore int is the most-specific option in this case\n')
('double', 'more', 'int', '25924215', 'you used the double to calculate an int result the double is more precise than the int so you lost precision\n')
('double', 'more precision', 'int', '29687757', 'double doesn t have infinite precision and you can t gain more precision than a double has by converting a double to a bigdecimal like you can t gain more precision with an int when you do which is 0.0 because it widens an int to a double\n')

space memory outofmemory
('int', 'less space', 'double', '14674829', 'int would take up less space than a double\n')
('double', 'more space ints-an', 'int', '1935145', 'you re getting the outofmemory because if you declare int 1000 the memory is allocated immediately additionally double take up more space than ints-an int representation will also save you space\n')
('int', 'less', 'double', '14638096', 'int takes less space than double on ram\n')
('int', 'less memory', 'double', '21528753', 'int needs less memory comparing to double numbers\n')
('int', 'less space', 'double', '17383440', 'i don t understand how an int 63823 takes up less space than a double 1.0\n')

larger range bigger
('double', 'shorter', 'int', '43554894', 'note that when float values are passed to printf they are automatically converted to double just as numeric types shorter than int are promoted to int\n')
('double', 'higher', 'int', '2625948', 'because a double is higher it will merge the int into the 0.0\n')
('double', 'higher', 'int', '43723712', 'if your resulting double has higher int value then simple int math sometimes stops working\n')
('int', 'smaller range', 'double', '1696724', 'int can hold a smaller range than double\n')
('double', 'larger', 'int', '12015986', 'double is larger than an int hence the overflow\n')
('double', 'larger', 'int', '27064252', 'you do explicit type casting to get your result in int because double is a larger data-type than int\n')
('double', 'smaller', 'int', '32021034', 'in the third case double precision loss is much smaller than the int and you get something like\n')
('double', 'larger', 'int', '35973092', 'if you are not storing infinity nowhere and use it just for comparison you can use double infinity which is larger than int and long max value\n')
('double', 'bigger maximum', 'int', '37956224', 'i know that there s another way to check if a double number is bigger than maximum int value but i m curious as why it s happening this way\n')
('double', 'smaller', 'int', '10789396', 'you could try to add some value to the double to make sure it s bigger or smaller than an int can be\n')
('int', 'smaller range', 'double', '42537385', 'int or int32 has a much smaller range than double\n')
('double', 'larger 64-bit', 'int', '21071959', 'typically a double is 64-bit ieee floating point with roughly 52 bits precision and with range much larger than 64-bit int so magnitude is no problem\n')
('double', 'bigger', 'int', '39108379', 'double is much bigger than int\n')
('double', 'array less', 'int', '43258026', 'if a value in the double array is less than the int value at the same position of the two dimensional array then in that part of the boolean array the value would is true\n')
('double', 'larger', 'int', '29017088', 'when the result of math.pow i j a double is larger than integer.max_value and you cast to an int then the result is integer.max_value\n')
('double', 'wider', 'int', '26209492', 'the range of double is wider than int\n')
('int', 'larger', 'double', '4391609', 'your upccode int is larger than the long data type so i tried it with double which is a float but works\n')
('int', 'much smaller', 'double', '4181954', 'don t forget that the range of int is much smaller than the range of double\n')
('int', 'smaller', 'double', '8103414', 'in vararg functions such as printf int smaller than int are promoted to int and floats smaller than double are promoted to double\n')
('double', 'value also larger', 'int', '511928', 'the largest double value is also larger than the largest int so it would have to be a long\n')
('double', 'not bigger', 'int', '16268270', 'this will work as long as the double is not bigger than what can fit in an int\n')
('double', 'bigger', 'int', '32663774', 'if you tell it the top of the stack has a double and double is bigger than int you ve now just told it to take extra bytes off of the stack which is terrible\n')
('double', 'higher', 'int', '40734664', 'and if the value of your double is higher than the range of an int then this can produce undefined behavior\n')
('double', 'bigger', 'int', '20354046', 'you can convert your object into double and then into int but you should take care as double value is much bigger than int\n')
('double', 'larger numbers', 'int', '5693480', 'because double can contain larger numbers than int or long\n')
('double', 'larger', 'int', '34400483', 'because a double is larger than an int this accesses the 4 bytes of the original int and an extra 4 bytes on the stack\n')
('double', 'bigger', 'int', '10556878', 'a double is also probably bigger than an int\n')
('double', 'bigger', 'int', '10951622', 'one of long long and double is bigger than 3 int and a multiple of 8\n')
('double', 'larger values', 'int', '8424026', 'a double variable can hold larger values than an int and is able to store an approximation of the value 4000000000\n')
('double', 'more', 'int', '30079823', 'operations on float and especially double cost more than on int\n')
('int', 'greater', 'double', '32134782', 'what i need to do it iterate over a list find the first int which is greater than 3 and is even then just double it and return it\n')
('double', 'larger', 'int', '20181170', 'many processors and or compilers implement long double types larger than any int type regardless of name and there are processors with 32 byte pointers\n')
('double', 'greater value', 'int', '5693478', 'double has a greater value range than int\n')
('int', 'range much smaller', 'double', '27334337', '1 int range is much smaller than double and for pow 2 100 that fails\n')
('double', 'smaller values', 'int', '32946829', 'another option would be to add a cast not recommended due to the same loss of information the error warns you about - the fractional part will simply be removed from the value and double can hold way larger and smaller values than int\n')
('double', 'greater', 'int', '41806502', 'a double has a range that can be greater than any int type\n')
('double', 'greater precision', 'int', '25636405', 'and the second calculation 33 5.0 the result is actually promoted to double which has greater precision than int and resulted to decimal\n')
('int', 'better', 'double', '35717845', 'it would really depend on the processor and the range of the int which is better and using double would resolve most of the range issues\n')
('double', 'smaller', 'int', '5772391', 'these conversions promote float to double and anything smaller than int to int or unsigned int\n')
('double', 'much wider', 'int', '1348958', 'the range of double is much wider than the range of int or long\n')
('double', 'smaller', 'int', '38606192', 'that means a float will be a double and anything smaller than an int will be an int\n')
('int', 'range wider', 'double', '41360457', 'can be false when int range is wider than double uncommon and dx is a rounded value whose next higher representable value to 2 greater\n')
('int', 'greater', 'double', '6297636', 'you should be using math.ceiling which will return the smallest int value that is greater than the double passed in\n')
('int', 'larger', 'double', '43662319', 'for platforms where int is larger than double it s obviously false\n')
('double', 'smaller', 'int', '24119742', 'this imply that result of pow x y converted to int will be truncated because of double arithmetic and exponentiation that will return double value slightly smaller than int\n')
('int', 'smaller', 'double', '28683183', 'extra arguments to variatic functions with types smaller than int are promoted to int and passed as such and floating point types smaller than double are promoted to double and passed as such\n')
('double', 'bigger maximum', 'int', '37956224', 'so if i try to convert a double number bigger than maximum int it crashes instead of returning nil\n')
('double', 'larger', 'int', '30706940', 'because a double which f expects probably is larger than an int on your platform\n')
('double', 'value bigger', 'int', '37956224', 'i wanted to check if a double value is bigger than maximum int value but because converting function does not return an optional value i am not be able to check by using optional binding\n')
('int', 'smaller', 'double', '45198135', '4 + 4 since int is smaller size compared to double padding of double size is done\n')
('int', 'smaller sizeof', 'double', '24146146', 'since sizeof int is very probably smaller than sizeof double this is going to lead to horror\n')
('double', 'bigger', 'int', '18580095', 'you could try using double which is bigger than a long and use only the int part\n')
('double', 'less', 'int', '15949536', 'you really might need to up cast everything into a double and then check to see if the result is greater than or less than an int\n')
('double', 'bigger numbers', 'int', '25060840', 'clearly calling int x on a double is asking for trouble since double can store bigger numbers than int\n')
('int', 'type larger', 'double', '12323870', 'you need to use 2 even if the number of bits in your int type is larger than the precision of a double since the number of used bits in the most significant value might only be 1\n')
('double', 'way greater', 'int', '605544', 'the range of double is way greater than the range of 32 or 64 bit int which is why std floor returns a double\n')
('double', 'greater', 'int', '12314984', 'since double is greater that int and long int and long will be turned into double in double long and int double\n')
('double', 'bigger', 'int', '2386794', 'the double has a bigger mantissa the int bits of the real number\n')
('int', 'smaller', 'double', '13032415', 'and since float is typically promoted to double with varargs calls if your int is smaller than your double this will break\n')
('double', 'larger type', 'int', '12931816', 'the math.round double a method returns a long which is a larger type than int\n')
('double', 'wider range', 'int', '5694078', 'also given that double has a wider range what would one return for those out of range int values\n')
('double', 'bigger', 'int', '26690571', 'a double is bigger than an int\n')
('double', 'greater', 'int', '526070', 'today i noticed that when i cast a double that is greater than the maximum possible int to an int i get -2147483648\n')
('double', 'larger range', 'int', '39937154', 'if one of the operands is a double the result of the multiplication would be a double which allows for a much larger range than an int\n')
('double', 'larger', 'int', '20732505', 'a double is 1 typically larger than an int and 2 has some internal structure\n')
('double', 'far greater', 'int', '605547', 'another reason is that the range of double is far greater than that of int\n')

parameter sizeof greater
('double', 'greater', 'int', '38741563', 'this causes a referencing to a memory area that was not completely initialized with value passed as parameter to the printf because double size memory buffer area is greater than int size\n')
('int', 'smaller', 'double', '23953851', 'it doesn t matter if second member would be int short or whatever - as long as it is smaller than double sizeof struct will be 16\n')
('double', 'larger', 'int', '44542353', 'the undefined behaviour as identified in other answers is explained on my intel platform with vc as that the f format specifier expects a double on the stack which is larger than an int so when it retrieves the value it retrieves more bytes than of an int and now assumes the next parameter at a diferent position on the stack causing z to be printed wrong it is not z that is printed\n')
('double', 'greater sizeof', 'int', '11321381', 'alternatively if fieldsize is equal to sizeof double and sizeof double is greater than sizeof int then you are writing off the end of d_buffer and then something is corrupting your data\n')

precision bits actual
('int', 'more', 'double', '9447869', 'as soon as the int needs more than 29 bits the atom is changed by the vm into a number type which is really represented as a 29 bit pointer to the actual 64 bit double precision float\n')
('double', 'precision less bits', 'int', '38489471', 'however if you have large enough number the limit checking does not work because 64bit double precision has less bits usually 54 but this is not defined in standard for the fractions part than a 64bit int\n')
('int', 'more bits', 'double', '14313668', 'you can work around this issue if you ll advance to big int floating point numbers that store more bits than a double precision number\n')
('double', 'range more', 'int', '2582032', 'double has range more than a 64-bit int but its precision is less dues to its representation since double is 64-bit as well it can t fit more actual values\n')
('int', 'greater', 'double', '22740584', 'if a 64-bit long is written as an int and is greater than 2 53 ieee double has a 52-bit mantissa then reading it as a double will lose precision\n')
('int', 'smaller', 'double', '31627536', 'since an int is representing by a non-decimal number 1 and a double is represented by a decimal-number with precision 32 bytes more than that of a float 1.0 we can say that int s are less than or smaller than double s and by that logic int s can be promoted to double s and double s can be demoted to int s\n')

specific void first
('int', 'less specific', 'double', '25924211', 'this is java detecting what you are doing and thinking it may be a mistake on your part - int s are less specific than double s\n')
('int', 'indeed more', 'double', '42046449', 'an implicit conversion from byte to int is indeed more specific than an implicit conversion from byte to double according to widening primitive conversions rules\n')
('int', 'more specific', 'double', '42046449', 'we could check that void mymethod int i is more specific than void mymethod double a if any invocation handled by the first method can be passed on to the other one without a compile-time type error\n')
('int', 'more specific', 'double', '32293611', 'this behaviour is due to the fact that int is more specific than double while there is no such comparison between int and boolean\n')
('double', 'less specific', 'int', '42050694', 'so overloadedsingleparam double a is less specific than void overloadedsingleparam int a when an int value is passed as argument\n')
('int', 'more', 'double', '2521374', 'by contrast void doitagain int is more specific than void doitagain double because int is a subtype of double according the the jls\n')
('int', 'more specific', 'double', '19436196', 'i thought when i pass 1 as the argument java would have picked the first argument because int is more specific than double\n')

length value
('int', 'less', 'double', '35931486', 'or a value for int a that is 6 less than double c\n')
('double', 'more', 'int', '22203178', 'double s length is way more than int that s why you should be checking int first\n')

narrower type positive
('int', 'type substantially narrower', 'double', '19591563', 'the int portions of the logarithms of 31 and 310 use different numbers of bits so there are different numbers of bits left for the significand so they end up being rounded to slightly different values. as long as the int type is substantially narrower than the double type the calculated limit will be much larger than the error in log10\n')
('int', 'narrower', 'double', '19591563', 'i believe the following works as a sort comparison function for positive int provided the int type used is substantially narrower than the double type 32-bit int and 64-bit double and the log10 routine used returns exactly correct results for exact powers of 10 which a good implementation does\n')

likely overruns bear
('double', 'bigger', 'int', '11001264', 'with the cast that bad stuff is undefined behavior most likely double is bigger than int and it overruns the memory for i\n')
('double', 'larger', 'int', '33913731', 'bear in mind that if the double returned is larger or smaller than that which can be held in an int then the program behaviour is undefined\n')

faster slower machine
('int', 'faster', 'double', '37742530', 'maybe division between double and int is faster than it between double\n')
('double', 'slower', 'int', '16741312', 'incrementing the value might be a special case but it s possible that on your machine incrementing double is slower than incrementing int\n')
('int', 'faster', 'double', '24159693', 'int subtractions are 2.5 times faster than double subtractions on my machine\n')
('int', 'math faster', 'double', '31346703', 'often using int math is faster than double\n')
('double', 'much slower', 'int', '15298409', 'double is much slower than int\n')
('double', 'less', 'int', '526070', 'similarly when i cast a double that is less than the minimum possible int i also get -2147483648\n')
('int', 'slower', 'double', '10107000', 'even dividing int is slower than multiplying floats or double in some cases\n')
('double', 'faster', 'int', '12443760', 'on my machine the double swap loop completes 11 times faster than the int swap loop\n')
('int', 'faster pow', 'double', '25354205', 'this can t help performance either since pow double int is significantly faster than pow double double in general\n')
('double', 'slower manipulations', 'int', '41633258', 'also after the first coercion from a side effect of a benchmark as noted above r will operate on double s and that contains slower manipulations than on int s\n')
('int', 'slower', 'double', '7896213', 'with it is nub on and comparing big int is slower than comparing double\n')
('double', 'faster', 'int', '594466', 'so i asked myself can a double be faster than a int\n')
('double', 'little less', 'int', '35802753', 'you will get 24 if pow 10 2 returns a double that is little less than 100 99.9999999998765 which when cast to int would be truncated resulting in 99 and thus you get\n')
('int', 'faster', 'double', '24159693', 'int multiplications however are only 1.5 times faster than double multiplications\n')

solution small fractions
('int', 'quicker float', 'double', '11286328', 'a solution using int only calculations should be quicker than float double calculations is\n')
('double', 'bigger', 'int', '2551657', 'edit actually my solution does not work because double can be very big much bigger than int and also very small like fractions\n')

performance better version
('int', 'better', 'double', '14285655', 'note how i cast the result to int which is better suited for years than the double precision returned by extract\n')
('int', 'better', 'double', '29631941', 'byte takes less memory than double and int and provides better performance than bigger datatypes especially better than double\n')
('int', 'faster', 'double', '45876593', 'the versions using diff are especially impacted ave_diff with int constants is about 2.5 times faster than the double contants version\n')
('int', 'better', 'double', '36965719', 'well in multithread the performance of the int version is 2.6 times better than the double precision\n')
('int', 'better performance', 'double', '3676567', 'i m writing a c# class to perform 2d separable convolution using int to obtain better performance than double counterpart\n')

closest math.ceil math.floor
('int', 'more', 'double', '7472356', 'or math.ceil double which returns the closest int that is more than the double\n')
('int', 'less', 'double', '7472356', 'you can also use math.floor double to get the closest int that is less than the double\n')

largest form equal
('int', 'less', 'double', '3027395', 'it implicitly converts an int to a double gets the double form of largest int that is less or equal to that double and converts that back to an int\n')
('int', 'less memory', 'double', '13566079', 'typically an int will use less memory than a double that is why one doesn t just use the largest possible datatype\n')

aware inexactness inexact
('double', 'less', 'int', '23666565', 'as far as i m aware so long as the spacing between two double is less than 2 then int values stored as double should be exact - and though 10 14 is pushing it this should be an exact int since 10 14 2 46.507 2 53\n')
('double', 'more inexact', 'int', '14701685', 'about the inexactness problem you should be aware that double can be more inexact than int\n')

64-bit instructions equivalent
('double', 'less', 'int', '3481367', 'that wouldn t work on platforms where a double is less than 64 bits but it would work on many platforms without 64-bit int\n')
('int', 'types more instructions', 'double', '6385312', 'on a 32-bit machine doing addition and comparison on 64-bit int types takes more instructions than doing the equivalent on double s\n')

type lower rank
('int', 'lower', 'double', '18709820', 'num is a of type const int which is of lower rank when compared to the type of z which is double\n')
('double', 'higher values', 'int', '17379031', 'to prevent the code from overflowing the int value space you should could change the type of res to double long anything that can hold higher values than int\n')
('int', 'lower', 'double', '13589067', 'so no arguments after the 1st one get automatically converted except as defined by default argument conversions basically any int type with a rank lower than int to int and any floating-point type with a rank lower than double to double thank you pascal cuoq\n')
('double', 'lower ranges', 'int', '25831721', 'if we use float data type in java we have to add f at the end of floating point literal as java assumes it to be double data type and gives an error why not do the same for short and byte as both have lower ranges than int\n')
('int', 'smaller rank', 'double', '25343540', 'for historical reasons you can not pass an int argument of smaller rank than int or a floating type of smaller rank than double to a variadic function\n')
('double', 'higher precision', 'int', '19565419', 'you can assign the int s returned from integer.parseint string s to your double variables because double s are higher precision than int s and so type conversion happens automatically without the need for an explicit cast\n')

better match overload
('int', 'better', 'double', '28466553', 'with gcc 4.9 it prints error because the second overload isn t discarded and int is a better match than double\n')
('int', 'better results', 'double', '5787578', 'if you use int between -128 and 127 you will get much better results than double from -128 to 127 because the former uses caches values the later does not\n')
('int', 'better', 'double', '22307506', 'imho int looks better than double in your task\n')
('int', 'better', 'double', '27318100', 'is simply a hard error because f int is a better match than f double even though the f int overload causes a hard error further on\n')
('double', 'better fit', 'int', '38239419', 'so your compiler picks the double constructor as a better fit than the int one\n')
('double', 'better', 'int', '17306689', 'except that double is much better than int for storing the join_angle in radians\n')

difference clock cycles
('int', 'slower code', 'double', '2242618', 'using and at the same time to check equality on a int results in slower code because it takes two comparisons instead of one taking the double amount of time\n')
('int', 'faster', 'double', '16298551', 'the difference is that int are still faster than double because it takes very few clock cycles to do arithmetic operations on int\n')

arithmetic complex modern
('int', 'more efficient', 'double', '7998350', 'if you want the modulus use as it gives an int and would be more efficient than double arithmetic\n')
('double', 'precision much more complex', 'int', '3632503', 'as for the last question floating point arithmetic particularly double precision is much more complex than int arithmetic so on a reasonably modern pipelined processor each instruction will take longer to execute\n')

uicollectionview	uitableview---------------------------------------------------

pagespeed	yslow---------------------------------------------------

nexus	artifactory---------------------------------------------------

cin	cout---------------------------------------------------

little preferable situations
('cin', 'printf faster', 'cout', '780111', 'scanf is faster than cin printf is faster than cout etc\n')
('cout', 'faster', 'cin', '22112628', 'using printf isn t faster than cout but scanf is a little faster than cin 0.04s + - 0.05\n')
('cin', 'more practical', 'cout', '14757282', 'there are obviously situations where in c++ scanf is preferable to cin i was wondering if there are any situations where printf is more practical than cout\n')

macports	fink---------------------------------------------------

stable top access
('fink', 'reputedly more stable', 'macports', '4527378', 'because fink is reputedly more stable than macports and has many more packages\n')
('fink', 'more packages', 'macports', '4396834', 'on top of that fink gives you access to more packages than macports\n')
('fink', 'more packages', 'macports', '3822232', 'fink has more packages than macports\n')

cudnn	theano---------------------------------------------------

landscape	portrait---------------------------------------------------

screen mode smaller
('landscape', 'bigger', 'portrait', '25076470', 'my problem with this is that the calculation works fine in the portrait mode but as soon as i switch to landscape mode the distance between bottom and button is bigger than in portrait mode\n')
('portrait', 'more rows', 'landscape', '15130794', 'portrait mode can display more rows than in landscape mode\n')
('landscape', 'smaller', 'portrait', '7752076', 'because in landscape your height is smaller than in portrait you need to have a value smaller than 1.0\n')
('landscape', 'more', 'portrait', '40165509', 'in landscape it has more buttons in addition to what is there in portrait mode\n')
('landscape', 'larger', 'portrait', '38283302', 'i had an outlet of a viewgraph which was a subclass of uiview in which i drew some graphics.in landscape mode the size of the viewgraph is larger than in portrait mode\n')
('portrait', 'choppier', 'landscape', '11651304', 'if you switch between portrait and landscape when viewing this on an ipad3 you ll need to refresh the browser window between switches you can see that portrait mode is choppier than landscape\n')
('landscape', 'less', 'portrait', '43578371', 'on an iphone compact in landscape mode the status bar is hidden and the navigation bar height is less than in portrait\n')
('landscape', 'bigger', 'portrait', '35218575', 'you are using the screen size to generate your placeholder image and the width of the screen in landscape is bigger than portrait\n')
('portrait', 'more', 'landscape', '29184666', 'then you can write separate css for width less than 650px portrait more than 650 landscape\n')
('portrait', 'lower', 'landscape', '3222095', 'without more detail it s hard to say why your approach doesn t work but my guess is that you are seeing the sprite positioning you describe as a result of the fact that if you don t change orientation the lower left in portrait is the lower right in landscape when rotated left it s the same point in gl space 0 0\n')
('landscape', 'smaller', 'portrait', '39829397', 'your imageview in landscape is smaller than portrait\n')
('portrait', 'smaller', 'landscape', '13646497', 'obviously i want in portrait view the content area of this iframe to be smaller than in landscape\n')
('landscape', 'mode lower then', 'portrait', '45437891', 'you have this issue because height in landscape mode is lower then in portrait\n')
('portrait', 'mode more', 'landscape', '32246796', 'its because the height of the screen in portrait mode is more when compared to height of the screen in landscape mode\n')
('landscape', 'more space', 'portrait', '32267160', 'in portrait the spacing is decent but in landscape mode i feel like the graphs should be bigger and take up more space than in portrait mode which is simply not possible with the tab bar and navigation bar\n')
('portrait', 'mode greater', 'landscape', '19364430', 'the amount of spacing to the right of the uiview when in portrait mode is greater than i want for landscape mode and the distance from the bottom is less than i want for landscape mode\n')
('portrait', 'bigger topbar', 'landscape', '29092300', 'topbar portrait height is bigger than topbar landscape height everywhere except iphone 6 plus\n')
('portrait', 'mode less', 'landscape', '15405098', 'now my doubt is when i rotate it to portrait mode from landscape mode since the width of the textblocks present inside the itemtemplate of listbox is already defined when i rotate the it to portrait i am not able to see all the data present it cuts off since the width of the portrait mode is less when compared to landscape mode\n')

css nothing images
('landscape', 'wider', 'portrait', '19877662', 'as long as landscape means wider than taller and portrait viceversa it means to read the image into memory and check width and height\n')
('portrait', 'taller', 'landscape', '29357275', 'portrait is taller landscape is wider\n')
('landscape', 'lesser space', 'portrait', '34962474', 'as landscape has lesser space than portrait you are able to view only top scrollview so only that portion would be scrollable\n')
('landscape', 'cell much wider', 'portrait', '28429494', 'the difference between a min and max dimension can be very large as the given area covered by a landscape cell is much wider and shorter than a portrait cell\n')
('landscape', 'more horizontal space', 'portrait', '45057795', 'i want all of the images to fit inside the width of the text area which will change dynamically with the window size and i want them all to be the same height meaning of course that landscape images take up more horizontal space than portrait ones etc\n')
('portrait', 'taller', 'landscape', '34425898', 'i am trying to make all a row of 4 images all have the same height size i already tried to play around with the width and height using css but nothing seems to work the portrait images always end up taller than the landscape ones here s the code\n')
('landscape', 'narrower', 'portrait', '25353972', 'as you can see the bottom two photos landscape so have been rotated are narrower than the portrait ones at the top\n')
('portrait', 'layout more', 'landscape', '34962474', 'i guess you are able to see the complete layout in portrait just because portrait layout is having more space and your complete layout is fitting well but landscape is having lesser space\n')

compareto	equals---------------------------------------------------

bigger lesser numbers
('compareto', 'greater', 'equals', '22186019', 'the compareto method returns 1 0 or -1 depending on whether value a is respectively greater than equals to or lesser than value b\n')
('compareto', 'less', 'equals', '13719521', 'compareto method returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '1168889', 'compareto compares values and returns an int which tells if the values compare less than equals or greater than\n')
('compareto', 'less', 'equals', '8694958', 'icomparable declares the compareto method which returns an integer that specifies a less than equals to or greater than relationship between two objects of the same type\n')
('compareto', 'less', 'equals', '20005392', 'i know that in java there is a compareto method that you can write in a class that will compare two variables and return a value -1 1 or 0 signifing greater than less than and equals to operations\n')
('compareto', 'less', 'equals', '2045608', 'in the compareto method you can then write the code which will call the getters for the year month and so on until it figures out whether the current object is less than equals to or greater than the object o being passed into the compareto method\n')
('compareto', 'less', 'equals', '2504816', 'the interface defines one method compareto that must return a negative integer zero or a positive integer if this object is less than equals to or greater than the other object respectively\n')
('compareto', 'less', 'equals', '14918703', 'compareto return a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '27008416', 'in the compareto method you can decide which fields are used for the comparison greater less than or equals\n')
('compareto', 'less', 'equals', '26910623', 'you should be using compareto method for less than or equals or greater than\n')
('compareto', 'less', 'equals', '13620180', 'this interface defines the method compareto t which will return a negative number zero or a positive number if the first object is less than equals to or greater than the other one respectively\n')
('compareto', 'less', 'equals', '30146917', 'is a generic type at compile time java will require that an instance provide an implementation of int compareto t o which from the javadoc returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'bigger', 'equals', '40578389', 'we can call its compareto method to decide whether it is bigger than equals to or less than any int\n')
('compareto', 'less', 'equals', '8528899', 'or is it compareto returns negative numbers 0 and positive numbers respectively indicating whether the calling object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '22751028', 'with this rather than needing to implement a comparator all you need to implement is the int compareto class o method in the class which returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object.\n')
('compareto', 'less', 'equals', '17790456', 'compareto returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '35256125', 'the compareto method returns one of -1 0 1 depending on whether or not the argument is less than equals to or greater than respectively\n')
('compareto', 'less', 'equals', '43117226', 'according to javadoc compareto needs to return a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'greater', 'equals', '21615168', 'you need to call the compareto method which will indicate the result of the comparison by returning an integer less than greater than or equals to 0\n')
('compareto', 'greater less', 'equals', '27367410', 'the only significance of a compareto return value is if it is greater less than or equals to zero\n')
('compareto', 'greater', 'equals', '11146653', 'i am using the compareto method in java to try and check if a certain date is greater than or equals than 24 hours after another date\n')

localization	translation---------------------------------------------------

short	base---------------------------------------------------

namedtuple	dictionary---------------------------------------------------

use lists lower
('namedtuple', 'less overhead', 'dictionary', '36613126', 'namedtuple should perform better less overhead than dictionary if the lists are long\n')
('dictionary', 'better', 'namedtuple', '30406083', 'depending on your use case a dictionary might fit better than a namedtuple\n')
('namedtuple', 'lower overhead', 'dictionary', '9072260', 'namedtuple have a lower overhead than dictionary since the duplicate keys don t have to be stored per item but have the convenience of named access\n')

polygons	distance---------------------------------------------------

httphandler	httpmodule---------------------------------------------------

swift	objective-c---------------------------------------------------

faster slower compiler
('swift', 'faster pure', 'objective-c', '28699167', 'it is possible for swift to be faster than pure objective-c in things that you would traditionally use c or c++ for anyway\n')
('swift', 'newer', 'objective-c', '42119927', 'the swift compiler is doing a lot more and is quite a bit newer than the objective-c compiler so it unlikely it will be as stable fast for quite some time\n')
('swift', 'dramatically slower then', 'objective-c', '26990394', 'the swift one is dramatically slower then objective-c implementation\n')
('swift', 'code slower', 'objective-c', '26991969', 'there are multiple reasons why the swift code is slower than the objective-c code\n')
('swift', 'more', 'objective-c', '27570223', 'swift s compiler is also doing a lot more than objective-c s compiler considering swift is more strongly typed and does not required specifying imports among other things\n')
('swift', 'slower', 'objective-c', '37892309', 'wouldn t swift be slower than objective-c in this case since it is layered on top of it\n')
('swift', 'faster', 'objective-c', '28162623', 'bottom line i would personally hesitate to draw any simple conclusions of swift is faster than objective-c or vice versa\n')
('swift', 'faster', 'objective-c', '38899257', 'the perf hit will be ridiculous i know apple say swift execute faster than objective-c but this is low level so it will be harmless\n')
('swift', 'faster', 'objective-c', '24019229', 'as craig revealed within the announcement of swift it is said to be faster than objective-c by far\n')
('swift', 'faster', 'objective-c', '24765759', 'i don t think that as of today you can run these tests and determine with any certainty whether swift 1.0 is faster or slower than objective-c\n')
('swift', 'more faster', 'objective-c', '24078665', 'and also apple does might not confidently announce that swift is more faster than objective-c in all the cases\n')
('swift', 'faster', 'objective-c', '34341377', 'most importantly for your image processing app the compiler will optimize swift code to run faster than objective-c\n')
('objective-c', 'faster', 'swift', '24078665', 'my view is that if in some cases objective-c is faster than swift it doesn t mean that all over performance of swift is slower\n')

familiar apps unfamiliar
('swift', 'less familiar', 'objective-c', '32918935', 'i m learning swift and much less familiar with objective-c but for the life of me i can t figure out how they are trying to achieve the goal stated as build list of encodings sorted and including only those with human readable names.\n')
('objective-c', 'more familiar', 'swift', '30496890', 'this article seems to suggest that this is possible by swizzling a fake location into apple s cllocationmanager class to be used by other apps but i am unfamiliar with the objective-c code more familiar with swift\n')

syntax new wise
('swift', 'more', 'objective-c', '38606180', 'im new to swift but i like it more than objective-c as it looks a bit like java does to me from syntax wise compared to objective-c\n')
('objective-c', 'more comfortable', 'swift', '38241771', 'however i read that swift was the successor of objective-c and i would feel more comfortable with swift syntax\n')

class easier method
('swift', 'cleaner', 'objective-c', '33330810', 'usually i find swift s method naming to be cleaner than objective-c s but init methods can be an exception\n')
('swift', 'more static', 'objective-c', '24050500', 'we ve seen that swift uses a more static method dispatch than objective-c which unless a class dervices from foundation nsobject prevents the style of swizzling based on remapping method implementations at runtime\n')
('swift', 'easier', 'objective-c', '45696488', 'early this month i started learning swift as i found it fun and easier than objective-c\n')
('swift', 'lot smarter', 'objective-c', '33758594', 'swift is lot smarter than objective-c about singleton class\n')
('swift', 'easier', 'objective-c', '4850967', 'download xcode free and learn objective-c or swift swift is easier to learn than objective-c\n')
('swift', 'easier', 'objective-c', '30210640', 'on the other hand swift is easier to learn especially if you have objective-c background so it can be adopted during the time slowly and paralelly with using objective-c\n')
('swift', 'better', 'objective-c', '29049334', 'swift also prevents us i believe from overriding a parent class s property but also still lets us observe changes to that property--this is much better than objective-c s approach\n')
('objective-c', 'much more free', 'swift', '37682771', 'objective-c is much more free and easy with types and compilation checks where swift isn t\n')
('swift', 'much easier', 'objective-c', '38170278', 'as you can see defining a singleton class in swift is much easier than in objective-c\n')

application fine unit
('objective-c', 'more comfortable', 'swift', '27609828', 'i have a objective-c application working fine and smooth to be more comfortable with swift i decided to write the unit tests for this app in swift\n')
('swift', 'application harder', 'objective-c', '28549095', 'injecting code in a swift application is harder than it was for an objective-c application but it s still possible\n')
('swift', 'application much bigger', 'objective-c', '28741895', 'executable size of swift application is much bigger than size of objective-c application\n')

readable print
('objective-c', 'print more', 'swift', '42978589', 'objective-c print is more readable compared to swift\n')
('swift', 'more readable', 'objective-c', '36220153', 'with swift the code is much more readable than with objective-c\n')

use
('objective-c', 'more', 'swift', '33544254', 'i use objective-c more than swift\n')
('objective-c', 'more', 'swift', '33706305', 'also note that i use objective-c more than swift\n')

better safer safe
('swift', 'less safe', 'objective-c', '41691607', 'swift in that case would not be safer but less safe than objective-c\n')
('swift', 'better', 'objective-c', '24049884', 'so i ve started learning swift because it looks way better than objective-c\n')
('swift', 'easier', 'objective-c', '28699167', 'swift is neither easier to read nor understand than objective-c\n')
('swift', 'better', 'objective-c', '27468779', 'better if you have a code swift is better but is not problem objective-c\n')

applications older programming
('objective-c', 'older', 'swift', '39811417', 'as objective-c is the older programming language for ios or macos applications swift allows you to use those classes structs in your code\n')
('swift', 'more', 'objective-c', '32190188', 'writing swift 2.0 in my professional work my personal opinion is that it s indeed ready for enterprise applications -- maybe even more than objective-c ever were\n')

piston	tastypie---------------------------------------------------

query similar luck
('piston', 'better luck', 'tastypie', '2397232', '- similar to piston but i ve had better luck with tastypie\n')
('tastypie', 'better', 'piston', '15662815', 'edit i found out that piston was proposing query throttling but everywhere people say that tastypie is better than piston\n')

ini	config---------------------------------------------------

sudo	passwd---------------------------------------------------

datamapper	activerecord---------------------------------------------------

complex easier domain
('datamapper', 'potentially more', 'activerecord', '94070', 'datamapper is potentially more complex then activerecord but it s a lot easier to develop your domain model and database asynchronous then with activerecord\n')
('datamapper', 'model much easier', 'activerecord', '4338143', 'from my point of view the datamapper model is much easier to grasp but since activerecord is the defacto standard it feels weird to change the orm just for this little problem\n')

smarter newer better
('datamapper', 'newer', 'activerecord', '3828265', 'so a question for those who know better is datamapper newer than activerecord\n')
('datamapper', 'much smarter', 'activerecord', '5351338', 'datamapper is much smarter then activerecord\n')
('datamapper', 'newer', 'activerecord', '3828562', 'datamapper is newer than activerecord\n')

ienumerable	iqueryable---------------------------------------------------

calls quicker place
('iqueryable', 'way quicker', 'ienumerable', '17920394', 'with really basic calls to the database iqueryable is way quicker but when do i need to think about using an ienumerable in its place\n')
('iqueryable', 'more suitable', 'ienumerable', '13622131', 'i d say iqueryable is more suitable for interaction with a database than ienumerable is\n')

better query linq
('iqueryable', 'better', 'ienumerable', '7791066', 'i have read about ienumerable and iqueryable i have read that iqueryable is better with linq because when you use where clauses it creates the exact query it needs but with ienumerable it retrieves all rows from database and then filters on memory\n')
('iqueryable', 'better', 'ienumerable', '36964658', 'what i know is using iqueryable is better than ienumerable if another query is going to be performed\n')

generic instances
('ienumerable', 'more generic', 'iqueryable', '20529312', 'ienumerable is more generic than iqueryable though all instances of iqueryable implement ienumerable and only defines\n')
('ienumerable', 'more', 'iqueryable', '23475916', 'ienumerable is more generic than iqueryable though all\n')

elasticsearch	kibana---------------------------------------------------

opera	google-chrome---------------------------------------------------

addition	multiplying---------------------------------------------------

boilerplate operation complex
('multiplying', 'more complex', 'addition', '23188645', 'the boilerplate code would multiplying rapidly when the express get more complex than addition of two terms\n')
('multiplying', 'more complex', 'addition', '28311068', 'however multiplying is a more complex operation than addition or shifting\n')

stateful	stateless---------------------------------------------------

kinds transactions faster
('stateless', 'better', 'stateful', '17227882', 'in ejb3 there is no such thing as stateless is better than stateful session beans\n')
('stateless', 'lighter', 'stateful', '40551515', 'service to build drools knowledge and get session i prepared a stateless engine lighter than the stateful one\n')
('stateless', 'faster', 'stateful', '5497077', 'for certain kinds of transactions a stateless session may perform slightly faster than a stateful session\n')

implements	extends---------------------------------------------------

runnable better thread
('implements', 'better', 'extends', '17311842', 'i also know implements runable is better than extends thread\n')
('implements', 'runnable better', 'extends', '28491250', 'i have read that implements runnable is better than extends thread but i have no idea of how\n')
('implements', 'runnable better', 'extends', '21962174', 'implements runnable is better because you can extends other classes\n')
('implements', 'runnable more preferrable', 'extends', '22595284', 'they say that implements runnable is more preferrable than extends thread\n')
('implements', 'better system', 'extends', '3311788', 'i have not found a lot of times when implements an interface would be a better system than extends a superclass\n')
('implements', 'better option', 'extends', '2782744', 'why is implements runnable a better option than extends from thread class\n')

note mouseadapter easier
('extends', 'easier', 'implements', '18354161', 'second in order to add or update the value of listview in general extends arrayadapter is much easier than implements baseadapter because of arrayadapter support add remove insert method by itself\n')
('extends', 'mouseadapter easier', 'implements', '42584044', 'note extends mouseadapter is easier since you only need to implements the methods you want to handle\n')

ubuntu	centos---------------------------------------------------

xapian	whoosh---------------------------------------------------

outputstream	inputstream---------------------------------------------------

vmware	virtualbox---------------------------------------------------

better slower server
('vmware', 'better', 'virtualbox', '5763931', 'i am not sure if vmware server will be much better than virtualbox\n')
('vmware', 'faster', 'virtualbox', '630233', 'in my experience i ve found that vmware seems to be faster than virtualbox although i don t have any hard data to back it up\n')
('vmware', 'faster', 'virtualbox', '12349097', 'from my experience vmware 5 is faster than virtualbox 4.2 rc3 and has better smp performance\n')
('virtualbox', 'slower', 'vmware', '46375001', 'virtualbox is slower than vmware\n')
('virtualbox', 'better', 'vmware', '3791405', 'fwiw i have never gotten freebsd to work properly under virtualbox perhaps if you need that you would be better off with vmware which does\n')

good free powerfull
('vmware', 'faster', 'virtualbox', '630233', 'even though vmware has been faster for me i still use virtualbox because it s good enough and is free and im cheap\n')
('virtualbox', 'less powerfull', 'vmware', '8107257', 'virtualbox free but less powerfull than vmware\n')

listview	gridview---------------------------------------------------

easier better
('listview', 'easier', 'gridview', '36362028', 'you may also consider using a listview which is easier to customize than the gridview\n')
('gridview', 'better', 'listview', '37560070', 'i think using a gridview is better for your case than a listview\n')

situation dataview clean
('listview', 'better', 'gridview', '10809', 'listview much better than the gridview dataview in that they let you write out clean html\n')
('listview', 'better', 'gridview', '16225337', 'i think the listview is better than gridview in this situation\n')

control article fit
('gridview', 'much finer', 'listview', '31765196', 'i believe gridview allows much finer grained control of display than does listview\n')
('listview', 'better fit', 'gridview', '13209588', 'here s another article that describes the listview control and why it s probably a better fit than the gridview\n')

mayavi	matplotlib---------------------------------------------------

stuff past performance
('mayavi', 'way better', 'matplotlib', '20386398', 'anyway if you re willing to do advanced 3d stuff mayavi is way better than matplotlib\n')
('mayavi', 'better', 'matplotlib', '46457858', 'personally i ve used mayavi in the past and found the performance much better than matplotlib for 3d scatter plotting though the python bindings are somewhat in question moving forward i think\n')

google-chrome	firefox---------------------------------------------------

higher smaller bigger
('google-chrome', 'smaller', 'firefox', '5699024', 'if we remove the font-size it appears properly in google-chrome but shows up smaller in firefox\n')
('google-chrome', 'smaller', 'firefox', '23072956', 'my question is similar the same page in my pc renders fine firefox google-chrome but the same one on a server rendered smaller by firefox google-chrome ok\n')
('firefox', 'higher baseline', 'google-chrome', '14870041', 'ie firefox higher than baseline google-chrome on baseline\n')
('google-chrome', 'longer input', 'firefox', '30248543', 'google-chrome renders longer input fields than firefox and ie\n')
('firefox', 'bigger', 'google-chrome', '30802594', 'i have too problem with text in the firefox is bigger maybe bolder as in google-chrome .\n')
('google-chrome', 'smaller', 'firefox', '12990034', 'google-chrome renders passwords smaller than firefox\n')
('firefox', 'bigger', 'google-chrome', '11542460', 'here the working header request with firefox bigger than google-chrome request\n')
('google-chrome', 'bigger', 'firefox', '7229568', 'why height in google-chrome is bigger than firefox of input\n')
('firefox', 'more padding', 'google-chrome', '38729442', 'firefox s default textbox includes more padding than ie google-chrome\n')
('google-chrome', 'higher however', 'firefox', '16534059', 'i just found out that if you re using google-chrome you trigger antialiasing at 49px or higher however with firefox it s set at 257px or higher\n')
('firefox', 'taller', 'google-chrome', '6557784', 'by highlighting the shape of the two elements you can see that in firefox left the button is 2px taller than in google-chrome right\n')
('google-chrome', 'more spacing', 'firefox', '3702732', 'any ideas why google-chrome is apply more spacing than firefox ie\n')
('firefox', 'higher', 'google-chrome', '11648488', 'i know different engines render fonts differently and but the issue i m having is that firefox renders the font higher than google-chrome - at the size i am displaying the font this is very noticeable 3 or 4 px - which on a button means they re totally misaligned\n')
('firefox', 'smaller', 'google-chrome', '13139755', 'my menu links seem in google-chrome correctly but in firefox my menu links are 1 px smaller than google-chrome\n')
('google-chrome', 'smaller', 'firefox', '11605875', 'in google-chrome the button should be a tad smaller than in firefox\n')
('google-chrome', 'more', 'firefox', '16420086', 'when i run my http web server on google google-chrome it gives more 324 error than in firefox\n')
('firefox', 'perhaps more right', 'google-chrome', '20625114', 'thus i think firefox is perhaps more right but other developers at google-chrome think otherwise\n')
('google-chrome', 'bigger', 'firefox', '4899792', 'i built a site and the problem is google-chrome display font-size 1px bigger than firefox\n')
('firefox', 'wider', 'google-chrome', '35241820', 'the same word in firefox look wider than in google-chrome\n')
('firefox', 'more padding', 'google-chrome', '2954659', 'in firefox the input button has more padding than in google-chrome\n')
('google-chrome', 'smaller', 'firefox', '30222783', 'it looks like google-chrome is smaller in your screenshot there so firefox could just not be at the defined break-point yet\n')
('google-chrome', 'larger', 'firefox', '15382071', 'arabic default font in google-chrome is larger than it is in firefox\n')
('firefox', 'reproducible more often', 'google-chrome', '25065194', 'this does not seem to occur in safari or ie and a similar permission error occurs sometimes in firefox but is reproducible more often than not in google-chrome\n')
('firefox', 'less width', 'google-chrome', '19814480', 'firefox has like 40px less width than google-chrome in columns which is causing problems\n')
('google-chrome', 'bigger', 'firefox', '11782208', 'in google-chrome the green div is bigger than in firefox i really don t know what is the problem i think in firefox it displays as it should but in google-chrome and ie9 it displays different\n')
('firefox', 'greater', 'google-chrome', '13198764', 'i ve ran into out of memory errors on firefox with canvas heights greater than 8000 google-chrome seems to handle much higher at least to 32000\n')
('firefox', 'larger', 'google-chrome', '24077137', 'i ve found that the font-size in firefox is a bit larger than in google-chrome\n')
('firefox', 'lower', 'google-chrome', '11021028', 'firefox text is 1px lower than in google-chrome and ie\n')
('firefox', 'bolder', 'google-chrome', '16221732', 'font-face bold in firefox is bolder than in google-chrome\n')
('firefox', 'smaller', 'google-chrome', '8850307', 'if i remove this code the width of green image in firefox becomes smaller but it s still bigger than necessary about 100px the google-chrome images keeps unchanged\n')
('google-chrome', 'higher', 'firefox', '2512461', 'so i wonder the benchmark is also influenced by the installed extensions or google-chrome is really so much higher than firefox in performance\n')
('google-chrome', 'higher', 'firefox', '11208545', 'on linux google-chrome displays text about one pixel higher than firefox and opera\n')
('firefox', 'always higher', 'google-chrome', '7676281', 'the position of the list in firefox is always higher than that of google-chrome no matter how i padding or margin the list\n')
('google-chrome', 'higher', 'firefox', '7012987', 'in google-chrome it is appearing higher than the original in firefox\n')
('google-chrome', 'more', 'firefox', '14686908', 'the issue that i encountered was that google-chrome was giving me height about 300px more than the firefox ie\n')
('google-chrome', 'smaller', 'firefox', '11778005', 'in google-chrome the font appears to be 1px smaller than firefox and ie and i cannot see why\n')
('google-chrome', 'thinner', 'firefox', '12303054', 'even then google-chrome s fonts look thinner than in firefox or ie\n')
('firefox', 'lower', 'google-chrome', '25118060', 'it seems that in firefox ie the line-through style is a bit lower than google-chrome i am not sure if this is because of the implementation of different browsers or something\n')
('firefox', 'larger', 'google-chrome', '19429156', 'for example if you have a text size of 15px well firefox makes a larger 15px than google-chrome does\n')
('firefox', 'higher', 'google-chrome', '14882752', 'for my website i noticed that tooltip delay in firefox was much higher than in google-chrome\n')
('firefox', 'smaller', 'google-chrome', '17458265', 'firefox thumbnail 4 times smaller than on google-chrome\n')
('google-chrome', 'larger heights', 'firefox', '34256894', 'suffice to say ie and google-chrome start having problems at larger heights than does firefox\n')
('firefox', 'bigger height', 'google-chrome', '23845903', 'but in firefox the left-collumn gets a much bigger height than in google-chrome\n')
('firefox', 'wider', 'google-chrome', '46178781', 'even if you give the inputs a attribute firefox renders them wider than google-chrome\n')
('firefox', 'lower', 'google-chrome', '15483083', 'in firefox it seems that this is 1px lower than in google-chrome and safari\n')
('google-chrome', 'larger', 'firefox', '8840940', 'i am checking it in firefox and google-chrome and see that in google-chrome spacing between letter is larger than in firefox\n')
('firefox', 'higher', 'google-chrome', '35735824', 'what firefox displays is about 5 inches higher than what google-chrome displays\n')
('firefox', 'higher security', 'google-chrome', '28196310', 'found that the issue stemmed from using the firefox webdriver which apparently has much higher security than its google-chrome counterpart\n')
('google-chrome', 'wider', 'firefox', '19297982', 'in google-chrome the button is wider than in firefox\n')
('firefox', 'taller element', 'google-chrome', '18185150', 'the reason this is happening is because firefox renders the select box as a taller element than google-chrome and the container of the blue text is getting caught on the select s container element because it s now sticking out lower than the others\n')
('google-chrome', 'bigger', 'firefox', '8817800', 'that happens because pixels size in google-chrome is bigger than in firefox\n')
('google-chrome', 'taller', 'firefox', '4134107', 'currently with the 10px top padding the cells in google-chrome look taller than in firefox\n')
('firefox', 'smaller left', 'google-chrome', '25310350', 'why in firefox text smaller left than in google-chrome and opera right\n')

faster slower browser
('google-chrome', 'faster', 'firefox', '19044179', 'the funny thing is that for abc_def property google-chrome is actually much faster than firefox and ie as i expected\n')
('firefox', 'smoother', 'google-chrome', '15058125', 'i m on a mac os x 10.8.2 running firefox 18.0.2 - it actually runs the game faster and smoother than my google-chrome 25.0.1364.99\n')
('google-chrome', 'slower', 'firefox', '40715077', 'google-chrome is extremely slow for your code path but grep seems to be 50 faster than array.filter here making it 900 slower than the firefox run\n')
('firefox', 'worse', 'google-chrome', '6817093', 'google-chrome is lightning fast when you use the dom api but vastly slower using the .innerhtml operator by a magnitude 1000-fold slower however firefox is worse than google-chrome in some areas for instance the append test is much slower than google-chrome but the innerhtml test runs much faster than google-chrome\n')
('firefox', 'slower', 'google-chrome', '24708649', 'update just tried it on firefox 30 and it did not experience the same slowdown in a worker thread but it was slower than google-chrome when run in the main thread\n')
('firefox', 'faster', 'google-chrome', '6774018', 'it s just a matter of preferences and browser implementation eg firefox works faster with brackets while google-chrome works faster with the dots\n')
('google-chrome', 'slower', 'firefox', '22182454', 'also google-chrome s map function is up to 2x slower than firefox on my machine\n')
('google-chrome', 'worse', 'firefox', '23770379', 'though from a design perspective it may be easier to simply add the extra 5px to the width designing for the worst case browser to prevent wrapping in google-chrome which is worse than extra space in firefox ie\n')
('google-chrome', 'slower', 'firefox', '9050531', 'use firefox rather than google-chrome - google-chrome with dev mode is much slower than firefox\n')
('google-chrome', 'more details', 'firefox', '17608767', 'i usually use google-chrome s developer mode which imho already gives even more details than firefox\n')
('firefox', 'faster', 'google-chrome', '30830253', 'here is a simple performance test showing that in google-chrome filling is faster than clearing i am not sure what goes on with google-chrome and canvas nowadays but in firefox clearing is many times faster than filling both significantly faster than google-chrome\n')
('google-chrome', 'faster', 'firefox', '18351894', 'in my experience google-chrome will be a lot faster than firefox to debug huge js files\n')
('google-chrome', 'slower', 'firefox', '23311171', 'do you have any idea why google-chrome loads javascript function much slower than firefox\n')
('google-chrome', 'typeof slower', 'firefox', '20680334', 'in google-chrome typeof is slower than the other two but in firefox it is the fastest\n')
('firefox', 'slower', 'google-chrome', '8382400', 'it depends on the browser its definitely true for ie and firefox but seems slower on google-chrome\n')
('google-chrome', 'longer', 'firefox', '17238511', 'i want to set my own time limit rather than use the browser s default i believe google-chrome s is much longer than firefox s\n')
('google-chrome', 'faster', 'firefox', '35114347', 'as you said google-chrome is faster than firefox so the webdriver is trying to interact with the dom before when elements are not yet visible exist\n')
('firefox', 'faster', 'google-chrome', '35612869', 'that means firefox is more than 7x faster than google-chrome here\n')
('firefox', 'slower', 'google-chrome', '16188505', 'svg performance in firefox is slower than in webkit google-chrome and ie10\n')
('firefox', 'faster', 'google-chrome', '41419724', 'this makes firefox 50x faster than google-chrome and 70x faster than safari is there any known reason for that\n')
('google-chrome', 'faster', 'firefox', '36034808', 'and of course the results - if they are reproducible - might suggest that google-chrome is faster than firefox or that firefox just prioritises timeouts over dom events\n')
('google-chrome', 'faster', 'firefox', '27318095', 'for example using renatoargh s test google-chrome is faster with option 2 firefox with option 1\n')
('firefox', 'slower', 'google-chrome', '11577677', 'in google-chrome it seems .prototype is faster firefox shows no difference between the two although generally performs slower than google-chrome\n')
('firefox', 'even slower', 'google-chrome', '11057475', 'firefox is even slower that google-chrome\n')
('firefox', 'slower', 'google-chrome', '18308946', 'firefox - good a bit slower than google-chrome\n')
('google-chrome', 'faster', 'firefox', '4213247', 'right now google-chrome is faster than firefox sunspider tests so your statement it loads faster in firefox is not really correct\n')
('firefox', 'worse', 'google-chrome', '39862190', 'firefox gsap performance is still much worse than in google-chrome but google-chrome gsap does still lag every few repeats or so while in google-chrome the css animations do not\n')
('firefox', 'slower', 'google-chrome', '12150212', 'i ve tested the sample on firefox and it s a bit slower than google-chrome but usable\n')
('google-chrome', 'much slower', 'firefox', '8838478', 'because of how google-chrome s plugin system works development mode in google-chrome is much slower than in firefox or safari see here for more details\n')
('firefox', 'slower', 'google-chrome', '16481858', 'using firefox even it s slower than google-chrome it s still more respectful of privacy\n')
('firefox', 'faster', 'google-chrome', '23763890', 'i am not concerned about the fact that firefox runs faster as browser js implementations will vary so much as the wide spread of results encountered in google-chrome that makes getting an accurate result impossible\n')
('google-chrome', 'faster', 'firefox', '5746611', 'i use google-chrome for development as i find it runs faster than firefox and ie so it is a bore to guess where the icons are\n')
('firefox', 'slower', 'google-chrome', '16639931', 'why is firefox so much slower than google-chrome on my laptop\n')
('google-chrome', 'actually load', 'firefox', '31841419', 'based on what you have provided i cannot tell if google-chrome actually does load faster than firefox\n')
('firefox', 'slower', 'google-chrome', '3156866', 'firefox is slower than google-chrome in javascript\n')
('firefox', 'greatly faster', 'google-chrome', '19769556', 'i ve found that firefox is greatly faster with imacros than google-chrome\n')
('firefox', 'slower', 'google-chrome', '10706070', 'and also does anyone know why is firefox so much slower than google-chrome in 3d rendering\n')
('firefox', 'slower', 'google-chrome', '1233693', 'firefox is slower than google-chrome which boats one of the highest javascript engines a modified version of webkit\n')
('firefox', 'slower', 'google-chrome', '20740967', 'spidermonkey firefox is slower 50 of google-chrome max speed but the speed is consistent\n')
('google-chrome', 'faster', 'firefox', '7057368', 'as google-chrome s v8 is dramatically faster than firefox s spidermonkey at the moment these things are constantly in flux pick the forward loop as it s faster on the slower engine\n')
('google-chrome', 'faster', 'firefox', '20655397', 'now when clicking a time less than 1 millisecond will be displayed however it obviously takes nearly a second on my computer until the changed color actually is displayed where btw. google-chrome seems to be faster than firefox\n')
('google-chrome', 'faster', 'firefox', '5299127', 'but i guess google-chrome i have version 10 should be much faster than firefox 3.6\n')
('google-chrome', 'slower', 'firefox', '24051882', 'i have been working with linear parsers lately and noticed the performance in google-chrome v37 was much slower than in firefox v30\n')
('google-chrome', 'less', 'firefox', '8120047', 'the idea is that if they are using ie then they must install google-chrome frame and if they are using less than firefox 4 or opera 11.5 then they must upgrade their browser not not sure if the way i am doing that is correct\n')
('firefox', 'slower', 'google-chrome', '4398883', 'as you can see ie 8 is about 5 times slower than firefox 3.6 and almost 20 times slower than google-chrome 9 at least when using sunspider tests\n')
('firefox', 'faster', 'google-chrome', '5150147', 'the results varied from a browser to another firefox 4.0b12 is faster using but google-chrome webkit and opera is faster when using\n')
('firefox', 'just stricter', 'google-chrome', '19391406', 'it is also proper browser behavior firefox is just stricter about it than google-chrome is\n')
('google-chrome', 'faster', 'firefox', '1238849', 'the trouble is choosing a good value for x since for this particular page google-chrome is so very much faster than firefox which is faster than ie\n')
('google-chrome', 'faster', 'firefox', '44011008', 'maybe google-chrome is working faster than firefox try adding a wait with expected conditions\n')
('firefox', 'faster', 'google-chrome', '3164817', 'also firefox 4 has hardware accelerated canvas that is marginally faster than ie9 and a lot faster than google-chrome\n')
('google-chrome', 'significantly faster', 'firefox', '7221963', 'on google-chrome it s significantly faster to do this using 1 0 but on firefox it s slightly faster to do this using bool\n')
('google-chrome', 'less', 'firefox', '36332132', 'i need to do the same condition but for less than google-chrome version 46 and for less than firefox version 44\n')
('google-chrome', 'older', 'firefox', '40642495', 'i would like this function to work in firefox ie google-chrome etc but at the moment it only works in google-chrome and older than firefox version 49\n')
('google-chrome', 'even faster', 'firefox', '4952787', 'in ie8 and google-chrome it runs even faster than firefox in general and this slow down never happens\n')
('google-chrome', 'slower', 'firefox', '12583588', 'the reason google-chrome is slower than firefox is that the devmode plugin runs in a sandbox so calls and data have to cross the sandbox boundaries\n')
('firefox', 'faster', 'google-chrome', '37896235', 'however if thats the case does this mean firefox is faster in execution than google-chrome\n')
('firefox', 'filter slightly faster', 'google-chrome', '42412501', 'tldr in firefox filter is slightly faster in google-chrome that s the opposite\n')
('google-chrome', 'faster', 'firefox', '12829930', 'google-chrome is just faster than firefox which just faster than ie at bit-wise operations\n')
('google-chrome', 'faster', 'firefox', '11881265', 'rendering without buffering on google-chrome is faster than firefox so i m actually not sure why google-chrome is having such a problem with drawimage\n')

better time browser
('firefox', 'better', 'google-chrome', '3341954', 'they use iframes in firefox which seems better but in google-chrome they do this by putting manually defined span and font tags\n')
('firefox', 'version better', 'google-chrome', '15244665', 'install firebug firefox version is better then a google-chrome one\n')
('google-chrome', 'better', 'firefox', '32425205', 'it seems google-chrome applies some formatting to render better than firefox\n')
('firefox', 'objects better', 'google-chrome', '39372828', 'performance is browser and device dependent for example firefox handles objects better than arrays while google-chrome prefers arrays\n')
('firefox', 'more sluggish', 'google-chrome', '14176911', 'firefox on nexus 7 is a bit better at producing reasonable sample rate readings but the updating of the display is even more sluggish than google-chrome\n')
('firefox', 'more', 'google-chrome', '18528300', 'my firefox adds more chopping to video playing itself google-chrome plays the video much better\n')
('google-chrome', 'better javascript', 'firefox', '5204325', 'in my experience google-chrome has better javascript performance than firefox\n')
('google-chrome', 'situation better', 'firefox', '43033977', 'ps i ve noticed that in google-chrome situation is better than in firefox but new line still starts beneath tag\n')
('google-chrome', 'better', 'firefox', '12899440', 'transparency is also an issue however google-chrome seems to handle all three better than firefox\n')
('firefox', 'lower', 'google-chrome', '18394282', 'phantomjs achieves a better accuracy than firefox slightly lower than google-chrome but in around half the time of firefox\n')
('google-chrome', 'better', 'firefox', '19931969', 'in firefox the render of new tiles and the panning is laggy this is not the case when using maps.google.com so it s not an issue of google-chrome being better than firefox\n')
('google-chrome', 'more', 'firefox', '25982053', 'my guess is google-chrome is caching more agressively and thats why you are seeing worse load time on firefox\n')
('google-chrome', 'better', 'firefox', '11662302', 'when i ran the test individually with a timer google-chrome actually performed better than firefox hope this helps\n')
('google-chrome', 'better', 'firefox', '14895327', 'google-chrome handles these better than compared to firefox\n')
('firefox', 'nicer', 'google-chrome', '21204517', 'in firefox this might be handled a little nicer than google-chrome but rather than completely redraw an element you should try to append only what you need\n')
('firefox', 'better', 'google-chrome', '12542302', 'firefox handles this better than google-chrome does but neither exactly the way i want\n')
('firefox', 'better', 'google-chrome', '45403936', 'firefox works a bit better than google-chrome but the settimeout just seems to delay the final result being shown rather than delaying each step\n')
('google-chrome', 'less conveniently', 'firefox', '28388530', 'what s up with google-chrome that the debugger behaves less conveniently than firefox\n')
('google-chrome', 'bigger time', 'firefox', '21867035', 'google-chrome has a bigger time difference yet firefox is the one with the gap in the animation\n')
('google-chrome', 'more restrictive', 'firefox', '5020686', 'no and there won t be any time soon because google-chrome s add-on api is more restrictive than firefox\n')
('firefox', 'much better', 'google-chrome', '8519584', 'ie8 is the same and firefox is much better but i ve migrated away to google-chrome now so would like to stick with the one browser if possible\n')
('firefox', 'better browser', 'google-chrome', '30843036', 'although firefox is a better browser for developers than google-chrome cause it gives you more tools to work with\n')
('firefox', 'more complete', 'google-chrome', '32095422', 'pd note that firefox s developer tools are better and more complete than google-chrome developer tools but in essence are for the same purpose\n')
('google-chrome', 'chromium much better', 'firefox', '15934117', 'also for animations google-chrome chromium behaves much better that is why i use it for development but do my general browsing in firefox\n')
('google-chrome', 'easier', 'firefox', '4472205', 'another alternative for javascript ajax is writing a google-chrome add-on easier than firefox or embeding a web browser within your application\n')
('google-chrome', 'better', 'firefox', '25067464', 'google-chrome shows it better than firefox firebug\n')
('firefox', 'quicker even', 'google-chrome', '18477622', 'the most interesting thing i noted is that certain test combos in firefox are much quicker than even google-chrome\n')
('firefox', 'much better', 'google-chrome', '26699714', 'in firefox it s much better than google-chrome but still not as black as ie\n')
('firefox', 'better', 'google-chrome', '45031412', 'also ie and firefox seems to work better than google-chrome\n')
('firefox', 'better', 'google-chrome', '25605880', 'i have tried firefox and it better than google-chrome crash issue is not always happen but not solved this issue\n')
('firefox', 'slower', 'google-chrome', '2284148', 'better use google-chrome even thought firefox is not slower than google-chrome for once probably the tracing for the image comparison pays off yay\n')
('google-chrome', 'much better', 'firefox', '3136004', 'is it because google-chrome has much better javascript support than firefox\n')
('google-chrome', 'better', 'firefox', '25699066', 'google-chrome dev tools are by far better than firefox ie whatever imho\n')
('firefox', 'consistently better', 'google-chrome', '25606508', 'also it does appear that firefox consistently handles this better than ie or google-chrome\n')
('firefox', 'better performance', 'google-chrome', '39681968', 'of late firefox has had much better performance than google-chrome\n')
('google-chrome', 'better', 'firefox', '17510122', 'bad buffering can also be a result of a slow computer because statistics show that google-chrome is better for a normal-fast computer and firefox works best on slow computers\n')
('google-chrome', 'best less so', 'firefox', '12215314', 'the performance in google-chrome is best less so in firefox and ie\n')
('firefox', 'better', 'google-chrome', '34924977', 'also why does firefox perform way better than google-chrome on this benchmark\n')
('firefox', 'better', 'google-chrome', '42863498', 'so firefox is better than google-chrome - but both suck in that regard\n')
('google-chrome', 'better', 'firefox', '7876912', 'the google-chrome apis are currently experimental hence these tools are likely to be better developed under firefox\n')
('firefox', 'lesser extent', 'google-chrome', '6583582', 'this is sporadic and i see it happening most of the time with firefox 4.0.1 and 5.0 and to a lesser extent with google-chrome\n')
('google-chrome', 'better', 'firefox', '25318564', 'and additionally the algorithm that google-chrome uses is better than the one in firefox at least for handling the resizing of text\n')
('firefox', 'better', 'google-chrome', '27272144', 'it s not the first time that the plugin for firefox works better for me than the one for google-chrome\n')
('firefox', 'much better', 'google-chrome', '29925542', 'on my computer firefox performs much better than google-chrome on these tests using jsperf\n')
('google-chrome', 'better', 'firefox', '19165746', 'if you are able to enforce browser usage i find that google-chrome on android preserves line breaks when copying and pasting much better than firefox\n')
('google-chrome', 'better imo', 'firefox', '23245240', 'google-chrome sends back and html collection that is longer really better imo than firefox ie or chromium\n')
('firefox', 'better', 'google-chrome', '30315914', 'my knowledge of firefox is better than google-chrome so my apologies if i missed something\n')
('firefox', 'better', 'google-chrome', '41484342', 'firefox is easier and better than google-chrome in finding the element from the webpage\n')
('firefox', 'better', 'google-chrome', '36229848', 'the logs only seem to work with a google-chrome browser which is a laugh as usually firefox is better at running google apps than google-chrome\n')
('firefox', 'better', 'google-chrome', '37640574', 'evidently firefox debugger firebug is better than google-chrome debugger\n')

console first information
('google-chrome', 'more', 'firefox', '23064942', 'in google-chrome it seems more or less ok but in firefox when i first tried it it should give me not logged in my console\n')
('google-chrome', 'more information', 'firefox', '21147622', 'the google-chrome console gives more information than the firefox console\n')

forgiving work extension
('firefox', 'more', 'google-chrome', '38256817', '2 install the firefox extension there s also one for google-chrome but the firefox one is more reliable -- so if you re a google-chrome addict like i am then use both\n')
('firefox', 'more', 'google-chrome', '20262398', 'i m taking a quite educated guess here that firefox is more forgiving with the irregular syntax than google-chrome\n')
('firefox', 'less', 'google-chrome', '42775173', 'also about firefox i know still less than google-chrome and i m not sure about how it innerly manage resources among threads and if it is even possible to achieve what i want but if possible i d need to do the same work with firefox threads\n')
('google-chrome', 'more forgiving', 'firefox', '12391385', 'i guess google-chrome is a bit more forgiving than firefox\n')
('firefox', 'less forgiving', 'google-chrome', '27507680', 'actually your code doesn t work on firefox because he is less forgiving than google-chrome about errors\n')
('firefox', 'more forgiving', 'google-chrome', '3008645', 'most likely your post value has one or more characters in it that are breaking the html of the page and ie firefox are being a bit more forgiving than google-chrome is\n')
('google-chrome', 'older', 'firefox', '6070609', 'i believe the error might be how firefox and google-chrome handles these multiple times included jquerys and it might be that google-chrome uses the older and firefox newer version\n')
('firefox', 'more standards-compliant', 'google-chrome', '33759931', 'firefox which is more standards-compliant than google-chrome doesn t allow this\n')
('google-chrome', 'more', 'firefox', '26973643', 'google-chrome is more forgiving or you could call it less compliant firefox less so\n')
('google-chrome', 'more detailed', 'firefox', '22889989', 'google-chrome provides more detailed information about the ajax errors even when firefox doesn t say anything\n')
('google-chrome', 'just more forgiving', 'firefox', '20167596', 'google-chrome is just more forgiving for some mistakes then firefox\n')
('firefox', 'longer', 'google-chrome', '3591151', 'this is due to the simple fact that firefox has been in the extension business longer than google-chrome or ie\n')
('firefox', 'older versions', 'google-chrome', '44939382', 'on stable versions of google-chrome the permissions show allow and it still won t connect even with firefox works older versions of google-chrome work\n')
('google-chrome', 'more finnicky', 'firefox', '43724970', 'in general i have found google-chrome to be more finnicky than firefox\n')
('firefox', 'sometimes more', 'google-chrome', '12488412', 'in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n')
('firefox', 'more advanced', 'google-chrome', '6916614', 'firefox has a more advanced plugin than the google-chrome extension but both work\n')

characters picky uris
('firefox', 'more', 'google-chrome', '39847666', 'firefox is more picky about characters that are set in uris than google-chrome\n')
('google-chrome', 'more lenient', 'firefox', '5375848', 'maybe google-chrome is more lenient when it comes to illegal characters in the url than firefox or something like that\n')

ram memory
('google-chrome', 'more ram', 'firefox', '36921492', 'we use google-chrome though which i believe uses more ram than firefox\n')
('firefox', 'more', 'google-chrome', '7159127', 'firefox allocates lots of memory during that preloading up to 20-30 times more than google-chrome or safari do and even twice as much as ie\n')

extensions browsers tool
('firefox', 'wider', 'google-chrome', '12569898', 'after looking into the issue with the inspection tools of both browsers it seems that firefox is making the #main_nav_bar ul 10px wider than google-chrome\n')
('firefox', 'larger', 'google-chrome', '5780924', 'this is because in ie and firefox the footer link text is larger than in google-chrome and safari therefore the margins that i ve set up for the icons do not work\n')
('firefox', 'brighter', 'google-chrome', '32877975', 'in firefox and other browsers the background is much whiter and brighter than in google-chrome\n')
('google-chrome', 'quicker', 'firefox', '19350398', 'also google-chrome has a great tool that allows you to edit css on the fly which i find more useful and quicker than using firefox s extensions\n')
('firefox', 'more handy', 'google-chrome', '16682516', 'first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n')
('firefox', 'more power', 'google-chrome', '3417323', 'firefox extensions have much more power than google-chrome and have wider access to browser s internal api\n')
('google-chrome', 'more smoothly', 'firefox', '43524743', 'notably this doesn t happen in all browsers google-chrome renders more smoothly than ie and firefox for instance but is there any way i can make those white lines stop appearing when the user zooms in\n')
('firefox', 'smaller', 'google-chrome', '10007704', 'while the rest of the browsers report the correct width of the document firefox reports a smaller one example at screen resolution of 1920x1080 ie google-chrome and safari reports 1920 while firefox reports 1903\n')
('firefox', 'lower', 'google-chrome', '46124506', 'open up the fiddle in both firefox google-chrome to see what i m talking about - in firefox the positioning of the background image is much lower than in google-chrome safari\n')
('google-chrome', 'easier', 'firefox', '7366195', 'i found programming google-chrome extensions easier than firefox but i couldn t come across something similar to xpcom in google-chrome\n')
('google-chrome', 'more limited', 'firefox', '27465781', 'google-chrome extensions are considerably more limited than firefox extensions â â they can only hook the behavior of the browser in certain predefined ways\n')
('firefox', 'larger', 'google-chrome', '20738370', 'safari and opera work with the google-chrome setting but firefox and ie display the iframed page larger than google-chrome causing part of the text to be cut off\n')

strict commas restrictions
('firefox', 'more', 'google-chrome', '18223158', 'it works in firefox because firefox is more lax about this security restriction and google-chrome happens to be more strict on mixed-content errors\n')
('firefox', 'much more', 'google-chrome', '24072476', 'apple s safari applies almost no cross domain restrictions to files opened locally but firefox is much more strict about what it permits with google-chrome somewhere in the middle\n')
('google-chrome', 'more strict', 'firefox', '2821210', 'google-chrome s parsing may be more strict than firefox is at having things like trailing commas as specified by the standard at as stated in danilo celic s answer\n')

easier easy apk
('firefox', 'easier', 'google-chrome', '17298652', 'firefox is probably easier than google-chrome these days\n')
('firefox', 'easier', 'google-chrome', '14747312', 'with firefox it was very easy i just grabbed the apk from their ftp server run the adb install command one would think it should be even easier with google-chrome but it s really not\n')
('firefox', 'easier', 'google-chrome', '41742075', 'i have been trying to do this in firefox webextensions but if it s easier with google-chrome i will try it that way instead.\n')

data stricter local
('firefox', 'stricter', 'google-chrome', '43785589', 'i d say that firefox is correct in being stricter than google-chrome here even though i m not entirely sure the base uri has changed and this new uri should be used for the relative uri #symboltype1 too\n')
('google-chrome', 'less', 'firefox', '640303', 'using the same data google-chrome does in less than 5 seconds what took ie and firefox 10 to 15 seconds to accomplish\n')
('google-chrome', 'stricter', 'firefox', '44613029', 'google-chrome is stricter than firefox when it comes to loading data from your local filesystem\n')

similar issue scrolling
('google-chrome', 'older issue', 'firefox', '32256754', 'i have encounter a problem with google-chrome that is similar to an older issue with firefox at this url scrolling blocks javascript execution in firefox\n')
('google-chrome', 'lower', 'firefox', '18068582', 'i m seeing a strange issue on windows in google-chrome the framerate is almost 2 times lower than in firefox on mac google-chrome and firefox have similar framerates\n')

slower duration 1s
('firefox', 'quicker', 'google-chrome', '34985268', 'firefox seems to animate the element quicker than google-chrome does and so while a duration of 1s is enough for the animation in google-chrome firefox needs it to be 2s to be slower and show the effect\n')
('google-chrome', 'slower', 'firefox', '18452965', 'this is trickier to work around and you should file a google-chrome bug describing the situation and where it s slower than firefox but you could potentially reduce the amount of buffer uploads by looking into instancing or using uniform arrays instead of updating vertexes for positions textures\n')

pickier more-so
('firefox', 'more-so', 'google-chrome', '35630482', 'it looks like it shows for firefox more-so than google-chrome but it might help\n')
('google-chrome', 'pickier', 'firefox', '28008564', 'apparently google-chrome is pickier than firefox\n')

strict
('google-chrome', 'more strict', 'firefox', '5697000', 'google-chrome is a bit more strict than firefox here\n')
('firefox', 'more strict', 'google-chrome', '35358677', 'is this due to firefox being more strict than google-chrome\n')

parsley	robotlegs---------------------------------------------------

requestfactory	gwt---------------------------------------------------

better counterpart db4o
('requestfactory', 'slower', 'gwt', '14364885', 'gwt requestfactory by design is slower than gwt rpc and gwt json etc\n')
('requestfactory', 'better counterpart', 'gwt', '9420697', 'from gwt 2.1 requestfactory is better counterpart than gwt rpc when you use db4o together\n')

profiler	gprof---------------------------------------------------

many-to-one	one-to-many---------------------------------------------------

boolean	int---------------------------------------------------

memory heap space
('int', 'more memory', 'boolean', '18152578', 'int occupy more memory than boolean so the heap got corrupted\n')
('boolean', 'less space', 'int', '22715785', 'a boolean takes less space than an int\n')

type numeric better
('int', 'better', 'boolean', '35052403', 'perhaps using int type if values are all numeric would work better than boolean for a and b\n')
('boolean', 'array more', 'int', '42517950', 'but counting the number of trues in a boolean array is more difficult since the accumulated type int differs from the source type bool\n')

value efficient existence
('boolean', 'more efficient', 'int', '7221963', 'i always assumed that boolean were more efficient than int at storing an on off value - considering that s their reason for existence\n')
('int', 'less space', 'boolean', '23069431', 'it is saying this because using the int to store the value 32 bits is going to use less space than a boolean 256 as each allocated boolean will take up 8 bits 8 256 2048\n')
('boolean', 'more space', 'int', '18429507', 'would a boolean array of size 32 take more space than an int variable for example\n')

time a.length consuming
('boolean', 'more time', 'int', '35320435', 'since the logic is the same i thought evaluating boolean objects takes more time than int equivalence true 1 and false 0 therefore i came up with the following benchmark and it turns out that i was correct\n')
('boolean', 'more', 'int', '21107085', 'however the second loop causes the additional task of casting each of the values between a.length and 0 to a boolean which is more time consuming than int comparison\n')

rythm	velocity---------------------------------------------------

high pure strong
('rythm', 'faster', 'velocity', '9596890', 'the benchmark shows rythm is 2 to 3 times faster than velocity on a normal page\n')
('rythm', 'faster', 'velocity', '13906189', 'rythm is a strong typed java template engine using razor like syntax with high performance 2 to 3 times faster than velocity and fm\n')
('rythm', 'faster', 'velocity', '9926106', 'rythm is a high performance 2 to 3 times faster than velocity pure java template which use razor like syntax\n')

filewriter	printwriter---------------------------------------------------

pypy	cpython---------------------------------------------------

numerix faster possible
('pypy', 'faster', 'cpython', '17483632', 'however consider that pypy might do the linear search 100 times faster than cpython then a few times might be dozens\n')
('pypy', 'faster', 'cpython', '25363585', 'unfortunately as martijn pieters noted there are no accepted solution for python 3.x and only one for python 2.x and according to the amount of memory spent for solving it numerix could have used psyco the library on which pypy is based much faster than cpython\n')
('pypy', 'more complex', 'cpython', '43456211', 'the pypy jit for python is also much more complex than cpython but also typically much faster â increased complexity is a fairly typical cost for speed. the four levels of disassembly for julia code give you access to the representation of a julia method implementation for particular argument types at different stages of the transformation from source code to machine code\n')
('pypy', 'faster', 'cpython', '6726347', 'you could try running it in pypy - for some cases it can be significantly faster than cpython\n')
('pypy', 'faster', 'cpython', '45490403', 'in the competing programming a lot of problems are never meant to be solved with cpython but with pypy which has a faster integer-arithmetic and a git-compiler but otherwise a python interpreter just as cpython\n')
('pypy', 'faster', 'cpython', '14294643', 'pypy is supposedly faster than cpython while gevent is based on co-routines and greenlets which supposedly makes for a faster web server\n')
('pypy', 'slower', 'cpython', '26515134', 'i haven t tried comparing the two but this pypy bug seems to suggest that multiprocessing in pypy is slower than in cpython\n')
('pypy', 'faster', 'cpython', '8797731', 'so how is it possible for pypy to be faster than cpython also becomes fairly obvious\n')
('pypy', 'faster', 'cpython', '18949049', 'that site does not claim pypy is 6.3 times faster than cpython\n')
('pypy', 'faster', 'cpython', '34837400', 'pypy which in general is much faster than cpython is considerably slower for this use case\n')
('pypy', 'currently more', 'cpython', '9934528', 'pypy is currently more than 5x faster than cpython on average\n')
('pypy', 'faster', 'cpython', '6636272', 'pypy compiled with jit is almost always faster than cpython frequently by a large margin\n')
('pypy', 'faster', 'cpython', '619544', 'part of the compiler toolchain includes an experimental jit generator now in its fifth incarnation and starting to work really well - the goal is for a jited pypy to run much faster than cpython\n')
('pypy', 'generally faster', 'cpython', '7529473', 'i saw that pypy is generally faster than cpython\n')
('pypy', 'faster', 'cpython', '8452592', 'pypy is now faster than cpython in most cases\n')
('pypy', 'slower', 'cpython', '31826941', 'the answer is simple here - pickle on pypy is slower because it s implemeneted in pure python as opposed to c in cpython\n')
('pypy', 'faster', 'cpython', '37192125', 'some people may argue with me on this one but i find pypy to be faster than cpython\n')
('pypy', 'faster', 'cpython', '10727166', 'you might want to try running your trainer under pypy if you aren t already -- it s significantly faster than cpython for some workloads\n')
('pypy', 'faster', 'cpython', '11125957', 'i finally ran it through pypy and was delighted to discover that when the lists got really deep pypy was running significantly faster than cpython\n')
('pypy', 'slower', 'cpython', '29966745', 'jython is more unpredictableâ sometimes almost as fast as pypy sometimes much slower than cpython\n')
('pypy', 'faster', 'cpython', '14024189', 'if that isn t sufficient a lot of standard python code can be run on the pypy implementation which generally faster than the cpython implementation\n')
('pypy', 'faster', 'cpython', '7991345', 'i presume it s why is pypy faster than cpython some of the time\n')
('cpython', 'faster', 'pypy', '5843950', 'cpython is faster than pypy on the two tests slowspitfire and waf\n')
('pypy', 'faster', 'cpython', '5843950', 'judging from the benchmarks posted on the pypy speed center it appears as if pypy is faster than cpython for all but two of the tests presented\n')
('cpython', 'slower', 'pypy', '26457906', 'as gnibbler pointed out cpython is slower in the simple implementation but pypy is jit compiled for much faster code when you need it\n')
('pypy', 'slower', 'cpython', '32777213', 'this is why pypy may be slower than cpython sometimes it needs a warm-up phase in which it can actually optimize repeated operations\n')
('cpython', 'faster', 'pypy', '30679809', 'under cpython tests run 4 times faster than under pypy\n')
('pypy', 'faster', 'cpython', '40708984', 'pypy is faster than cpython s sum intrinsic because it can figure out that all the elements of the array are numeric and slice out a bunch of per-element overhead\n')
('pypy', 'faster', 'cpython', '3163538', 'for python there is a pypy project which it includes jit making possible the code to run faster than in cpython in many cases\n')
('pypy', 'faster', 'cpython', '28404279', 'can someone please help to how use that script using the pypy as i heard it is much faster than cpython\n')
('pypy', 'faster', 'cpython', '25713282', 'note that there are plenty of python implementations other than cpython out there - for loopy code pypy tends to be much faster than cpython\n')
('pypy', 'faster', 'cpython', '2703428', 'just keep in mind most of the time c is faster than python but then again most of the time pypy is faster than cpython\n')
('pypy', 'faster', 'cpython', '18047406', 'i ve tried using pypy because i ve heard its faster than the cpython interpreter but still no good\n')
('pypy', 'faster', 'cpython', '5318157', 'pypy s jit can make python code execute much faster than cpython\n')

major part data
('pypy', 'less memory', 'cpython', '8675877', 'if the dominant memory usage is program data structures then i wouldn t be at all surprised to find pypy using significantly less memory than cpython whether or not the jit was enabled\n')
('pypy', 'less memory', 'cpython', '5495318', 'when people talk about pypy using less memory than cpython this is a major part of what they re talking about\n')

ieee	decimal---------------------------------------------------

representable value binary32
('ieee', 'less', 'decimal', '26032849', 'the maximum representable value with ieee 754-2008 binary32 is so the base 2 log of a number stored in binary 32 is less than decimal 128\n')
('ieee', 'less', 'decimal', '5729100', 'the third line displays the data with the maximum useful precision - an ieee 754 64bit floating-point number has slightly less than 16 decimal digits of precision so all those digits of the literal in math.h are pointless perhaps they can be seen as future-proofing against a possible future redefinition in a format with more precision\n')

codeigniter	cakephp---------------------------------------------------

concave	convex---------------------------------------------------

quicksort	mergesort---------------------------------------------------

algorithm comparisons specific
('mergesort', 'slower', 'quicksort', '5608850', 'mergesort is slightly slower than quicksort but it does not have quicksort s susceptibility to pathological cases\n')
('quicksort', 'faster', 'mergesort', '30014574', 'to be specific the quicksort runs faster than mergesort in the first test case and loses badly in the following 9 tests\n')
('quicksort', 'faster', 'mergesort', '4292700', 'quicksort is implemented well it is typically 2-3 times faster than mergesort or\n')
('quicksort', 'faster', 'mergesort', '4819185', 'from what i ve read i was expecting quicksort to be faster than mergesort but on my code it is not so i assume there must be a problem with my quicksort algorithm\n')
('quicksort', 'faster', 'mergesort', '90477', 'as many people have noted the average case performance for quicksort is faster than mergesort\n')
('quicksort', 'faster', 'mergesort', '16308408', 'normally quicksort is faster than mergesort which is faster than heapsort\n')
('mergesort', 'less comparisons', 'quicksort', '29243439', 'mergesort uses about 30 less comparisons than quicksort\n')
('quicksort', 'worse', 'mergesort', '29218500', 'scenarios when quicksort is worse than mergesort\n')
('quicksort', 'slower', 'mergesort', '23501734', 'however on smaller int sizes quicksort gets slower and mergesort gets faster\n')
('quicksort', 'generally faster', 'mergesort', '70440', 'it s because that quicksort is generally faster that people use it instead of mergesort\n')
('quicksort', 'better', 'mergesort', '77945', 'quicksort is not better than mergesort\n')
('quicksort', 'simpler', 'mergesort', '33319313', 'i would say that the quicksort is simpler for parallelizing than the mergesort\n')
('quicksort', 'algorithm faster', 'mergesort', '20811630', 'the quicksort algorithm is faster than mergesort which is what sorted will get you when called on a sequence of objects via java.util.arrays.sort\n')
('quicksort', 'faster', 'mergesort', '8535540', 'i have read that quicksort is much faster than mergesort in practise and the reason for this is the hidden constant\n')
('quicksort', 'consistently less', 'mergesort', '42183380', 'quicksort consistently has less recursive calls than mergesort\n')
('mergesort', 'consistently faster', 'quicksort', '35189561', 'mergesort - in general mergesort is consistently faster than quicksort however quicksort is done in place and doesn t require allocating memory unlike mergesort\n')
('quicksort', 'better', 'mergesort', '497819', 'previously discussed on so why is quicksort better than mergesort\n')
('quicksort', 'more', 'mergesort', '14349085', 'interestingly quicksort performs more comparisons on average than mergesort - 1.44 n lg n expected for quicksort versus n lg n for mergesort\n')
('quicksort', 'better', 'mergesort', '1527161', 'why is quicksort better than mergesort\n')
('quicksort', 'better locality', 'mergesort', '29218730', 'quicksort has better locality of reference than mergesort which means that the accesses performed in quicksort are usually faster than the corresponding accesses in mergesort\n')
('quicksort', 'better', 'mergesort', '13096603', 'i ve looked at the question at why is quicksort better than mergesort\n')
('quicksort', 'faster', 'mergesort', '961662', 'in most cases quicksort will run faster than mergesort even though the worst-case execution time is longer\n')
('quicksort', 'better', 'mergesort', '19853740', 'is quicksort always better than mergesort\n')
('quicksort', 'faster', 'mergesort', '29218730', 'it might be helpful to see why quicksort is usually faster than mergesort since if you understand the reasons you can pretty quickly find some cases where mergesort is a clear winner\n')
('mergesort', 'more efficient', 'quicksort', '13096603', 'purely in terms of the number of comparisons performed is mergesort always more efficient than quicksort\n')
('quicksort', 'faster', 'mergesort', '30014574', 'for the 10 tests on the same list the results should be quite the same at least all showing that quicksort is faster than mergesort or vice vesa\n')
('quicksort', 'faster', 'mergesort', '7818843', 'you can also see that for smaller collections quicksort is faster but then mergesort takes the lead but all of this is case specific so take your time to study all 4 algorithms\n')
('quicksort', 'faster', 'mergesort', '70440', 'quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster\n')
('quicksort', 'quicker', 'mergesort', '42183380', 'that way quicksort can reach recursive base case more quicker than mergesort\n')
('quicksort', 'better', 'mergesort', '29218730', 'quicksort usually is better than mergesort for two reasons\n')
('quicksort', 'faster', 'mergesort', '13096603', 'depending on where i look people say quicksort is faster than mergesort due to its locality of reference cache hits etc\n')
('quicksort', 'slower', 'mergesort', '24290704', 'i have been testing the practicality of openmp gnu parallel sort algorithms in the c++ standard library and have found the parallel quicksort algorithm to be significantly slower than the mergesort algorithm\n')
('quicksort', 'generally faster', 'mergesort', '5070199', 'quicksort generally runs faster than mergesort but under some circumstances it can degrade to quadratic running time\n')
('mergesort', 'simpler', 'quicksort', '10955685', 'parallelizing mergesort is simpler than quicksort in-place\n')
('quicksort', 'faster', 'mergesort', '42767458', 'quicksort is approximately 40 faster than mergesort on random data because of fewer data movements\n')

worst complexity stable
('mergesort', 'more space', 'quicksort', '5784610', 'mergesort may use more space than quicksort i m not entirely sure and merge may be better for linkedlists\n')
('mergesort', 'worse', 'quicksort', '487454', 'given that it is possible to vastly reduce the likelihood of the worst case of quicksort s time complexity via random selection of the pivot for example i think one could argue that mergesort is worse in all but the pathological case of quicksort\n')
('mergesort', 'better', 'quicksort', '9023456', 'for instance quicksort can outperform mergesort although mergesort is provably better than quicksort in the worst case\n')
('mergesort', 'better', 'quicksort', '36054413', 'i know mergesort is better since it is stable and doesn t have n 2 as worst case but i required to implement quicksort\n')
('mergesort', 'better time-behavior', 'quicksort', '4819756', 'technically mergesort has a better time-behavior î nlogn worst and average cases than quicksort î n 2 worst case î nlogn average case\n')
('quicksort', 'better', 'mergesort', '35228495', 'for example locality of references has influence on cache hits or misses which is the reason why quicksort performs better than mergesort\n')
('quicksort', 'better', 'mergesort', '16943949', 'an interesting answer about this can be found at why is quicksort better than mergesort\n')
('quicksort', 'worse', 'mergesort', '201171', 'quicksort is worse complexity than mergesort in the worst case.\n')
('quicksort', 'not better', 'mergesort', '70627', 'quicksort is not better it is well suited for a different kind of application than mergesort\n')

implementation callback function
('quicksort', 'slower', 'mergesort', '39156435', 'when comparison function is a callback function like in quicksort libc implementation quicksort is slower than mergesort by 15 on random input and 30 for already sorted array for 64 bit integers\n')
('quicksort', 'consistently faster', 'mergesort', '23501734', 'when comparing my quicksort implementation with std sort on my compiler and my implementation of mergesort i noticed an odd pattern on large data sets when operating on 64 bit integers quicksort is consistently faster than mergesort\n')

altitude	distance---------------------------------------------------

memcmp	strcmp---------------------------------------------------

simpler places lengths
('memcmp', 'simpler', 'strcmp', '41420603', 'memcmp is simpler than strcmp and can be implemented even more efficiently in places where the strings are known to be properly aligned\n')
('memcmp', 'faster', 'strcmp', '1128221', 'if you always keep track of the lengths of your strings you can compare lengths and use memcmp which is faster than strcmp\n')

aes	tripledes---------------------------------------------------

repeater	gridview---------------------------------------------------

difference big understanding
('repeater', 'faster', 'gridview', '38065946', 'in my understanding repeater is most suitable since it faster than gridview\n')
('repeater', 'faster', 'gridview', '21944601', 'the repeater is still faster than the gridview but the difference shouldn t be big if you code it right\n')

memcpy	strcpy---------------------------------------------------

performance difference efficient
('memcpy', 'more efficient', 'strcpy', '41749210', 'performance difference memcpy is usually more efficient than strcpy which must scan the data it copies\n')
('strcpy', 'more time', 'memcpy', '30186543', 'memset behaves like strcpy but the difference is that memcpy copied the data as it is byte but strcpy copies the formatted string as well so takes more time than memcpy to execute\n')

variable faster check
('memcpy', 'faster', 'strcpy', '9760567', 'but sometimes memcpy performs faster than strcpy because it moves blocks of memory at a time which allows it to perform some optimization i will not go into details here\n')
('memcpy', 'slower', 'strcpy', '24967980', 'for example for small amounts of data an memcpy optimised for large amounts of data may be significantly slower than a strcpy that wasn t optimised for large amounts of data\n')
('memcpy', 'faster', 'strcpy', '15176895', 'we keep track of what cmd s length ought to be in a variable and copy the string with memcpy which is slightly faster than strcpy and does neither check string length nor copy the extra zero at end of string\n')
('memcpy', 'slightly faster', 'strcpy', '23762261', 'because of the above replace strdup with strlen malloc memcpy memcpy is slightly faster than strcpy\n')
('memcpy', 'usually faster', 'strcpy', '3942421', 'memcpy is usually faster than strcpy for longer strings\n')
('memcpy', 'rarely slower', 'strcpy', '23201978', 'memcpy is rarely slower than strcpy or strncpy and often significantly faster\n')
('memcpy', 'faster', 'strcpy', '24966693', 'is memcpy usually faster than strcpy on most real platforms\n')
('memcpy', 'faster', 'strcpy', '39286524', 'information - use memcpy as it s faster than strcpy and we know\n')
('memcpy', 'faster', 'strcpy', '24966865', 'on almost any platform memcpy is going to be faster than strcpy when copying the same number of bytes\n')
('memcpy', 'faster', 'strcpy', '25242721', 'memcpy is faster than strcpy and also enforces you to specify a buffer size\n')
('memcpy', 'faster', 'strcpy', '33590309', 'notice that memcpy is faster than strcpy unless the source string is much smaller than the buffer s size which is rarely the case with ip addesses.\n')
('memcpy', 'faster', 'strcpy', '24966693', 'so i feel that on x86 memcpy is faster than strcpy\n')

range	max---------------------------------------------------

valid walk lower
('range', 'less', 'max', '13264779', 'if max z1 z2 range is less than or equal to table2 max value2 where table1.type table2.type\n')
('range', 'lower', 'max', '8013367', 'i have this grid each coordinate in the grid can be either closed or open i m tying to using an open coordinate find all the open coordinates around the first that are valid and the walk range between then is equal or lower than the max walk range\n')

larger greater value
('range', 'larger', 'max', '29827603', 'in general you want to have a range slightly larger than x max - x min and then divide the range into the desired number of bins\n')
('range', 'higher', 'max', '30607810', 'i am trying to create a figure in which the colorbar will extend beyond the data range go higher than the max value of data\n')
('range', 'greater', 'max', '27101914', 'avoiding variables and functions cross join the table against some other table s to generate a range of rows where the range is greater than the max value of quantity\n')
('range', 'greater', 'max', '20943998', 'i want to validate a number as decimal up to two decimal and minimum range is greater than 0.00 and max range is up to 99.99\n')
('range', 'larger', 'max', '2022693', 'basically if you know that your events are never larger than a given duration you can search for a bounded range that s larger than the max duration then add restrictions to get rid of the extra stuff that matched\n')
('max', 'smaller', 'range', '21562035', 'to create equal bins you can simply first define a min and max value which is slightly smaller than both range\n')
('range', 'greater', 'max', '17885817', 'an automatically adjusted range will always be the next power of 10 greater than max value\n')
('range', 'greater', 'max', '43950275', 'third you initialised end to len lis2 this will give indexerror list index out of range if you are trying to search for an element which is not present in the list and is greater than the max element in the list say 23\n')
('range', 'greater', 'max', '35075746', 'i ve got a constant defined data_out range and cnt is incremented on clock and never reaches value greater than max range of data_out\n')
('range', 'larger', 'max', '17068322', 'if you date range is larger than the two years displayed just drag the formulas down to expand the max range\n')
('range', 'greater', 'max', '43411471', 'it works like range so i need to pass it a number one greater than the max number in the current index\n')
('range', 'higher', 'max', '39502592', 'if you disable elastic axis and make sure you specify a range that is higher than the max value you can select the point\n')
('range', 'greater int', 'max', '41511932', 'the problem is it is overflowing therefore it works fine when the result returned is in int_max range 10 9 but negative value is show in case of value returned from function is greater than int max range\n')
('range', 'not greater', 'max', '45418162', '2 that the min range is not greater or equal to the max range.\n')
('range', 'greater', 'max', '20007371', 'keep in mind that the cast int d will not throw an exception if the value of d is outside the range of an int - if which is greater than the max value of an int the resultant cast will be -2147483648\n')
('range', 'larger', 'max', '47389759', 'but with this the last range is larger than the max value\n')
('max', 'larger', 'range', '18854408', 'i ll leave the rest up to you ov checking for error conditions such as more than 1 column passed in the range or range of unequal size or a max # of items returned being larger than the range size\n')
('range', 'smaller', 'max', '28482152', 'if you want to exlude a number 4 that means the range is smaller by 1 so use r.nextint 5 and if the result is the excluded number then return the max allowed which is 5 because it will never be generated because you used max - 1\n')
('range', 'greater', 'max', '28488349', 'the question i have is i would like the calendar to only display the min and max date range for the from date and to date any thing greater than the max and anything less than the min should be greyed out\n')
('range', 'larger', 'max', '3567637', 'so if you re getting a step exceeds the specified range error i d guess that the default step value 1 is larger than the max of the range the result of .\n')
('range', 'greater', 'max', '38423673', 'a larger range means a greater max value and a smaller min value than decimal\n')

jtable	jlist---------------------------------------------------

jcomponents tablecelleditor example
('jtable', 'better jcomponents', 'jlist', '6823252', 'i think jtable would be better jcomponents as jlist because there you can implements tablecelleditor maybe example with similair output here\n')
('jtable', 'better', 'jlist', '18589264', 'i don t really think that jtable will help you here anyhow better than jlist - it has the same rendering strategy\n')

putimagedata	drawimage---------------------------------------------------

faster function slower
('putimagedata', 'slower', 'drawimage', '7380496', 'right now putimagedata is much slower than drawimage as you can see here\n')
('drawimage', 'much faster', 'putimagedata', '7722892', 'as of right now drawimage is much faster than putimagedata\n')
('drawimage', 'faster', 'putimagedata', '41723100', 'using drawimage canvas is much faster than using putimagedata\n')
('drawimage', 'faster', 'putimagedata', '13668442', 'drawimage seems to be much faster than putimagedata\n')
('drawimage', 'function really faster', 'putimagedata', '14511199', 'i have seen that the drawimage function is really faster than the putimagedata\n')

earlier year old
('putimagedata', 'slower', 'drawimage', '7074620', 'that beeing said putimagedata is much slower than drawimage at least when i tested them earlier this year\n')
('drawimage', 'slower', 'putimagedata', '17406346', 'the only problem that as far as i know using drawimage is slower than using putimagedata and it was required in old browser versions like firefox 2 or such\n')

bellman-ford	dijkstra---------------------------------------------------

circumstances situation approach
('bellman-ford', 'better', 'dijkstra', '19482317', 'but under what circumstances is the bellman-ford algorithm better than the dijkstra algorithm\n')
('dijkstra', 'better choice', 'bellman-ford', '40843559', 'however if g is guaranteed to have only non-negative weights g is non-positive weights then dijkstra s algorithm could be better choice over bellman-ford\n')
('bellman-ford', 'approach better', 'dijkstra', '19482317', 'surely there is some situation in which the bellman-ford approach is better than the dijkstra approach\n')

server-side	client-side---------------------------------------------------

validation faster place
('client-side', 'validation faster', 'server-side', '24450617', 'client-side validation is faster than server-side because the validation takes place on client side on browser and the networking time from client to server is saved\n')
('server-side', 'slower', 'client-side', '9306245', 'since you don t want to repeat yourself it s very tempting to put all your validation on one side or the other but there are tradeoffs either way and it is true that server-side validation is going to be slower than client-side\n')

visitor browser script
('client-side', 'script more', 'server-side', '9866616', 'i am curious to know if detecting the visitor browser with client-side script is more reliable than server-side script\n')
('client-side', 'script way less secure', 'server-side', '16814826', 'ps again i am aware that relying on client-side script is way less secure compared with handling all execution from within the server-side\n')

subtraction	add---------------------------------------------------

eventlet	gevent---------------------------------------------------

build.gradle	gradlew---------------------------------------------------

serializable	deserialization---------------------------------------------------

opera	firefox---------------------------------------------------

framerates faster worse
('firefox', 'even worse', 'opera', '1451062', 'the problem with this code is that it doesn t quite work on firefox and works even worse on opera\n')
('firefox', 'significantly faster', 'opera', '17023332', 'it seems to be slower in google-chrome and firefox but is significantly faster in opera\n')
('opera', 'slower', 'firefox', '1278273', 'for example i ve read that opera and ie will fix framerates slower than firefox\n')

subtract	multiplying---------------------------------------------------

miglayout	gridbaglayout---------------------------------------------------

feed	rss---------------------------------------------------

keyboard	mouse---------------------------------------------------

slower faster
('keyboard', 'faster', 'mouse', '414289', 'the keyboard is almost always faster than the mouse\n')
('mouse', 'much more', 'keyboard', '45399198', 'doing it with mouse is much more slower than it can be done with keyboard\n')

division	modulo---------------------------------------------------

wise operations slow
('modulo', 'much faster', 'division', '20258656', 'since bit wise operations can be done very fast and division operations are relatively slow this type of modulo is much faster than doing a division\n')
('modulo', 'faster', 'division', '27589182', 'if you compute modulo a power of two using bitwise and is simpler and generally faster than performing division\n')

number bits harder
('modulo', 'better straight', 'division', '29476678', 'modulo gives you a remainder which is why it s better than straight division in situations where you re number of elements can change\n')
('modulo', 'much harder', 'division', '12786755', 'programmers like to use this property to speed up programs because it s easy to chop off some number of bits but performing a modulo is much harder it s about as hard as doing a division\n')

diagram	entity-relationship---------------------------------------------------

pom.xml	maven---------------------------------------------------

sublimetext	vim---------------------------------------------------

orientdb	neo4j---------------------------------------------------

ti faster depth
('orientdb', 'slower', 'neo4j', '14565718', 'i found that orientdb is too slow at least much slower than neo4j even on relatively small 150k datasets when searching records by text pattern despite the presence of indices\n')
('orientdb', 'faster', 'neo4j', '45860902', 'using orientdb that is supposed ti be faster than neo4j for depth i m seeing a slow performance\n')

h.264	mp4---------------------------------------------------

free alternative platforms
('h.264', 'better', 'mp4', '9734251', '- you can also consider using webm which is a free alternative to h.264 and has better support on some platforms than fragmented mp4\n')
('mp4', 'format better', 'h.264', '16599515', 'it doesn t support avi at the moment but imho mp4 format is better suited for h.264 anyway\n')

jsonb	hstore---------------------------------------------------

acid	consistency---------------------------------------------------

lodash	underscore.js---------------------------------------------------

latest compatibility stable
('lodash', 'more frequently', 'underscore.js', '13898916', 'because lodash is updated more frequently than underscore.js a lodash underscore.js build is provided to ensure compatibility with the latest stable version of underscore.js\n')
('lodash', 'even more features', 'underscore.js', '28931507', 'the easiest solution is to just replace underscore.js with lodash which has even more features than the latest underscore.js\n')

faster stunned simple
('lodash', 'faster', 'underscore.js', '21148491', 'if i remember correctly lodash argued they were faster than underscore.js because the use non-native functions for key operations\n')
('lodash', 'faster', 'underscore.js', '18300039', 'i am stunned right now seeing a lodash performing 100-150 faster than underscore.js in even simple native functions such as array.every in chrome\n')

better comment likely
('lodash', 'better solution', 'underscore.js', '32372660', 'edit as pointed out in the comment lodash is likely to be a better solution than underscore.js\n')
('lodash', 'better version', 'underscore.js', '43641416', 'if you re open to using lodash which is a better version of underscore.js imo this can be expressed fairly simply using flattendeep on each element of your multi-dimensional array\n')

debian	linux---------------------------------------------------

move	drag---------------------------------------------------

press release order
('move', 'bigger parent', 'drag', '29649620', 'i reimplemented the mouse move press and release events for the inner widget in order to be able to move it inside its bigger parent with drag drop\n')
('drag', 'smaller', 'move', '24920106', 'it ends up in a state of confusion...you basically cannot release the drag of the table it keeps getting bigger and smaller as you move your mouse - but you can never let go and release it to get the size you want\n')

kerberos	ldap---------------------------------------------------

pandas	seaborn---------------------------------------------------

memcached	apc---------------------------------------------------

faster in-memory slower
('memcached', 'slower', 'apc', '17295791', 'memcached is in-memory too and a bit slower than apc\n')
('apc', 'much more faster', 'memcached', '11584538', 'as you know apc is much more faster than memcached if we re fetching keys from a single server\n')
('apc', 'faster', 'memcached', '9884780', 'in my case apc is 59 times faster than memcached\n')
('memcached', 'more functionality', 'apc', '1803139', 'memcached has more functionality but is intended for distributed environments while apc works on single servers only\n')
('apc', 'faster', 'memcached', '17118318', 'apc is faster on a single server - but memcached is distributed\n')
('apc', 'faster', 'memcached', '1825484', 'my experience say that apc is nearly 7-8 times faster than memcached\n')
('memcached', 'slower', 'apc', '1808814', 'memcached around 4-5 times slower than apc but run as a single process that can be touched everywhere in my environment\n')
('apc', 'faster', 'memcached', '13751524', 'it s slower than apc but it s faster than memcached redis etc\n')
('apc', 'faster', 'memcached', '2353190', 'apc access is a bit faster something like 5 times faster than memcached if i remember correctly as it s only local -- no network involved\n')

caching database performance
('apc', 'more', 'memcached', '4999069', 'apc is more an opcode caching system than a key value memory database like memcached altough it can be greatly used for both purposes\n')
('memcached', 'more', 'apc', '15117742', 'memcached is more for caching database queries and improving performance in that regard while apc is more for improving performance of php code\n')

dsa	rsa---------------------------------------------------

verification 10x testing
('dsa', 'slower', 'rsa', '7911156', 'however dsa verification expect verification calls to be 100x issue is about 10x slower than rsa verification\n')
('rsa', 'slower', 'dsa', '12594809', 'i have made some testing and it came out that rsa is lot slower than dsa\n')
('rsa', 'slower', 'dsa', '24689036', 'this is why rsa is much slower than dsa\n')

trackpad	mouse---------------------------------------------------

width	margin---------------------------------------------------

css height directives
('width', 'less', 'margin', '38602970', 'i notice that when the arrow block is rendered when width is less than 296 px inside the carousal there is some space between the left border of the carousal and the arrow block even though i did not add padding or margin\n')
('width', 'nicer', 'margin', '604314', 'edit someone else suggested css and i believe that using the height and width directives from css will give you the same result as using the same attributes of the tag but doesn t limit you strictly to images and a will play nicer with any margin or padding directives you might use\n')

greater div bigger
('margin', 'auto better', 'width', '28907018', 'first one margin auto is better if you can know width of container list and you don t want centre content of this container\n')
('margin', 'greater', 'width', '42291487', 'on release the drawer should slide open if its margin is greater than half its width and should close if its less\n')
('margin', 'larger', 'width', '10486251', 'by giving the middle indicators div a left and right margin slightly larger than the width of the left and right button divs you allow it to float up between the two and take up as much space as possible\n')
('margin', 'greater', 'width', '5494802', 'the title goes in a h1 for example and the text in a p or div so set these two elements to have a left margin greater than the width of image a\n')
('margin', 'more', 'width', '13059986', 'you re negative margin is more than half the viewport width of an iphone therefore it is dragging it out of view\n')
('margin', 'greater', 'width', '39685256', 'i just made the left margin of div2 greater than the width of div1 and it worked for me\n')
('margin', 'greater', 'width', '5555847', 'a common solution is to float your fixed-width column left or right and give the other column a margin equal or greater than the width of the fixed-width column\n')
('width', 'bigger', 'margin', '28122212', 'but in general this wouldn t work because of the specified width is bigger than the real one and exceed it so there s no margin to auto it and center the content which found in div\n')
('margin', 'greater', 'width', '1567157', 'give the sample text div a right margin greater than the width of the right-floated element\n')
('width', 'less', 'margin', '37293218', 'but if the screen width is less than 200 then it will be from left view edge margin to right view edge margin.\n')
('width', 'more div', 'margin', '17188618', 'how to place 2 div side by side one div is of 75 width and the other is 25 width.one more div with margin 0 auto\n')
('margin', 'bigger', 'width', '33567403', 'what i do not understand is why the size of the point and the text is not the same and why the margin can be bigger than the width of the figure\n')
('width', 'less', 'margin', '29478000', 'if the content leads to a width that is less than 100 of the table s containing block then setting the left right margin to auto will center the table within the containing block\n')
('width', 'less', 'margin', '35299571', 'the elements are sized relative to the entire viewport but the body width is less than this because of the default margin on body\n')
('margin', 'more', 'width', '31236608', 'adding margin adds more width making the total width of the two elements and their margin greater than 100 pushing the elements onto separate lines\n')
('margin', 'bigger', 'width', '36665967', 'the reason why your website is x-scrollable on all devices is that you forgot to add to and the row inside it has 100 +15px left margin +15px right margin which is bigger than window width\n')
('width', 'larger', 'margin', '28288003', 'when the screen width becomes larger than 500px the contents of the media query are ignored and the margin becomes 20\n')
('margin', 'wider', 'width', '16430191', 'another option is not to float the main content column but instead assuming it s the right column to give it a large left margin that is slightly wider than the width of the left column\n')
('margin', 'bigger', 'width', '26513621', 'when i launch it with firefox or internet explorer the box gets immediately to a huge distance from the margin much bigger than the width of the screen and now i noticed that if i run it with stackoverflow s snippet function the box does not move\n')
('margin', 'greater', 'width', '18518651', 'you can try giving an id to each one of the divs or style them for margin that is greater than or equal to the image width.assuming you image width is 50px this code shall work\n')
('margin', 'greater', 'width', '39193574', 'you have given width of 50 with additional margin of 5 to each of the element which is greater than 100 width\n')
('margin', 'lesser', 'width', '27755071', 'one way of doing this is checking if left margin of the inner div is lesser than the width of sidebar and then only add class adjust\n')
('margin', 'larger', 'width', '30945014', 'the the main content div needs to have left margin larger than the width of your sidebar\n')
('margin', 'bigger', 'width', '6746105', 'the box is never too small infact the margin of the adjacent div is bigger than the width of ul div\n')
('margin', 'less', 'width', '31763862', 'you have to take into consideration that borders take up width and that the margin of 1 of either side of the large container means that it can only be less than 100 width\n')
('margin', 'higher', 'width', '41787489', 'now if the div with has margin 660px from the left it should be hidden because it s margin is higher than the maximum width of the main container\n')
('margin', 'bigger', 'width', '9126839', 'anyway i just set the margin to a value a little bigger than the width of the image and overlap is eliminated only in the very specific case we want\n')
('margin', 'greater', 'width', '17308362', 'once the negative margin is equal or greater than the width of that element further negative margin has no effect\n')
('margin', 'bigger', 'width', '40405403', 'aside of the left floated div i have another div article with a margin a little bigger than the width of the floating div just usual for a two column layout\n')

border next object
('margin', 'more', 'width', '25428575', 'and if they aren t next to eachother that means your padding and margin is more than the 5 width of total width so reduce them\n')
('margin', 'less', 'width', '17646403', 'this means they won t float next to one another unless you set the width of each so that the combined width + margin + border + padding of both blocks is equal to or less than the width of the container\n')
('margin', 'less', 'width', '19968815', 'just so you know you want the total width object width + padding + margin + border of both columns to be less than the width of the container\n')

orika	dozer---------------------------------------------------

close manual slower
('orika', 'faster', 'dozer', '23957375', 'orika is way faster than dozer and quite close to manual mapping\n')
('orika', 'slower', 'dozer', '22939629', 'i tested orika and it was a lot faster but was slower than dozer with small collections\n')

hash	md5---------------------------------------------------

sha1 sha256 algorithm
('md5', 'larger', 'hash', '19874443', 'the difference between crc32 and md5 is that md5 generates a larger hash that s harder to predict\n')
('hash', 'slower sha1', 'md5', '25440325', 'also the hash algorithm itself is much slower than sha1 md5 sha1 md5 are made for speed - not a useful property when storing passwords\n')
('hash', 'less likely', 'md5', '8822558', 'other hash functions such as sha-1 also have hash collisions although it is much less likely than md5\n')
('hash', 'function more complex', 'md5', '3153718', 'if the hash function is more complex and cryptographically strong md5 or sha1 then it is theoretically not possible\n')
('hash', 'faster', 'md5', '3737518', 'this generally uses a hash algorithm that is much faster than md5\n')
('hash', 'stronger', 'md5', '3759576', 'valid choices for hashing include sha1 or md5 although sha1 is preferable because it produces a larger hash and is considered cryptographically stronger than md5\n')
('hash', 'better', 'md5', '6046512', 'however if you want to use the sha256 hash alogorithm which is better than the md5 then here s a code sample\n')
('md5', 'larger', 'hash', '43414199', 'any hash function like md5 sha1 sha256 etc obviously cannot be 100 unique - because they have a fixed length and due to the there must necessarily be non-unique results for input content that is larger than the hash\n')
('hash', 'faster other', 'md5', '4025516', 'in that case some hash functions are somewhat faster than other md5 being one of the fast functions but md4 is faster and it is simple enough that its code can be included in any application without much hassle\n')
('hash', 'longer', 'md5', '9572031', 'because sha256 hash are much longer than md5 hash you can detect the hash algorithm by looking at the length of the hash\n')
('hash', 'bigger', 'md5', '12615409', 'it s like complaining that a sha256 hash is bigger than an md5 hash - yep it is but only one of them might slow the attacker down for a while\n')
('hash', 'safer', 'md5', '9935465', 'finally sha1 hash are safer than md5 i tell you that because you used the md5 tag in your post\n')
('hash', 'stronger', 'md5', '6879159', 'use hash and choose hashing algorithm that suits you well if possible something stronger than md5 but don t go all the way to sha512 either\n')
('hash', 'more robust', 'md5', '10798653', 'all hash functions have that problem but some are more robust than md5\n')

secure value clear
('md5', 'much more secure', 'hash', '2329664', 'with a salt md5 is much more secure than without but you re better off using one of the sha hash such as sha256managed\n')
('hash', 'slower', 'md5', '12183240', 'the fact that bcrypt produces hash slower than md5 because of security reasons is also clear for me\n')
('md5', 'implementation significantly more secure', 'hash', '10934748', 'the wrapper uses these in such a way that even the md5 implementation is significantly more secure than a simple hash\n')
('md5', 'much more', 'hash', '2718168', 'obviously md5 is much more difficult to reverse even in this anything that will hash to the right value sense then a simplistic algorithm like take the last two digits\n')
('md5', 'much more', 'hash', '134346', 'using a non-reversible hash such as md5 is much more secure and you can store the hash value as clear text\n')

proven breakable worse
('hash', 'more reliable', 'md5', '116739', 'sha-256 uses 64 characters in the database but with an index on the column that isn t a problem and it is a proven hash and more reliable than md5 and sha-1\n')
('hash', 'worse', 'md5', '32569597', 'mac os x llvm gcc based crypt fuction is borked junk hardwired to only use des a proven breakable hash worse than md5\n')

debugging	profiling---------------------------------------------------

tinyint	varchar---------------------------------------------------

png	bmp---------------------------------------------------

slower faster
('bmp', 'faster', 'png', '32483365', 'i have a sample wpf app here and wondering why bmp is loading faster than png\n')
('png', 'slower', 'bmp', '20219087', 'jpg png is slower to draw than a bmp\n')

isotope	masonry---------------------------------------------------

better media-queried resizes
('isotope', 'more complete', 'masonry', '17770459', 'they do this using a jquery plugin called isotope which is a more complete version of masonry you pay for\n')
('isotope', 'better', 'masonry', '12500664', 'according to this answer the isotope plugin might work better than masonry for media-queried resizes\n')

pexpect	telnetlib---------------------------------------------------

grouping	sorting---------------------------------------------------

application simpler fields
('grouping', 'simpler', 'sorting', '10211855', 'instead knowing that we want to grouping by these columns we can make the application code to do so simpler by sorting by these fields\n')
('grouping', 'better', 'sorting', '40069452', 'this way only a single int column needs to be sorted grouping which performs much better than sorting two text columns\n')

vba	vb6---------------------------------------------------

unicorn	puma---------------------------------------------------

http	spdy---------------------------------------------------

yum	rpm---------------------------------------------------

free	malloc---------------------------------------------------

char p bytes
('free', 'earlier', 'malloc', '8518769', 'how does free know how much memory to be free d which was earlier allocated by malloc or calloc\n')
('malloc', 'more memory', 'free', '42588652', 'one interesting experiment you can try is to try and malloc more memory after you free d that pointer\n')
('free', 'more', 'malloc', '1111015', 'now if you free some values on the heap and allocate more with malloc you may be given back some of that dirtied memory that you scribbed on earlier\n')
('malloc', 'n more', 'free', '2336345', 'suppose char p malloc n assigns more than n say n bytes of memory are allocated and free p is used to free the memory allocated to p\n')

strtol	atoi---------------------------------------------------

errno handling sscanf
('strtol', 'better error', 'atoi', '2428697', 'i would recommend strtol which provides better error handling than atoi or sscanf\n')
('strtol', 'better', 'atoi', '41887116', 'you can also look into strtol which is better than using atoi in terms of error checking\n')
('strtol', 'better', 'atoi', '12420547', 'strtol is better than atoi with better error handling\n')
('strtol', 'better', 'atoi', '46208863', 'if you want to accept a number rather than a digit and only a number strtol works much better than atoi as it allows you to check for failures\n')
('strtol', 'better', 'atoi', '10380364', 'use strtol it does better error reporting than atoi\n')
('strtol', 'better', 'atoi', '2461383', 'all have more or less cumbersome and non-obvious error checking involving errno strtol is way much better than atoi in any case so avoid using atoi\n')
('strtol', 'better', 'atoi', '36374418', 'for instance strtol is better than atoi and you should be checking each time whether strtok returns null\n')
('strtol', 'better', 'atoi', '31982135', 'you need to error check strtol and ensure there are as many passed before using them -- strtol is better than atoi as helps detect errors\n')
('strtol', 'better option', 'atoi', '13328049', 'besides strtol is a better option than atoi as strtol can handle failures better\n')
('strtol', 'much better', 'atoi', '2238063', 'the c function strtol is much better make it a habit to prefer that one to atoi\n')

multiplication	multiplying---------------------------------------------------

mistake compiler optimization
('multiplying', 'faster', 'multiplication', '12021618', 'mathematically left shifting is the same as multiplying a number by a power of 2 but as the operation is done only by shifting it is much faster than doing multiplication\n')
('multiplication', 'easier', 'multiplying', '9815550', 'multiplication is the easier of the tasks just remember to multiplying each block of one number with the other and carry the zeros\n')
('multiplication', 'easier', 'multiplying', '27922709', 'implementing multiplication is easier if you remember an shl operation performs the same operation as multiplying the specified operand by two\n')
('multiplication', 'longer', 'multiplying', '9519571', 'if i make a mistake and multiplying a number by 1.0 instead of 1 and i do not use any compiler optimization then my multiplication will last much longer than multiplying a number by 1\n')

boost	allocator---------------------------------------------------

xslt	xquery---------------------------------------------------

kind processing expressive
('xslt', 'more expressive', 'xquery', '7610958', 'this kind of processing is most easily done with xslt which is more expressive than xquery\n')
('xslt', 'significantly more appropriate', 'xquery', '5849881', 'xslt is significantly more appropriate to use than xquery for such kind of tasks\n')

class problems dimitre
('xslt', 'much better', 'xquery', '25684670', 'i hate to answer a request for a solution in language a by suggesting a solution in language b but what you are doing here falls into the class of problems which xslt handles much better than xquery\n')
('xslt', 'better', 'xquery', '1907942', 'as for whether to use xslt or xquery the proof is in the pudding xslt is better at transforms and xquery is better at queries\n')
('xslt', 'much better', 'xquery', '5165338', 'as dimitre says xslt is much better at this class of problem than xquery\n')

amenable static analysis
('xquery', 'better', 'xslt', '18728322', 'xquery works better than xslt for this because it s more amenable to static analysis as it lacks the polymorphism of xslt s template rules\n')
('xquery', 'more amenable', 'xslt', '40861476', 'xquery is more amenable to static analysis than xslt because it lacks the very dynamic template despatch mechanism\n')

cpu	processors---------------------------------------------------

data ram cache
('cpu', 'cache physically closer', 'processors', '42436018', 'the point of this cache is to store data that the cpu is using quite regularly to speed up transfer time since the cpu cache is physically closer to the processors then ram is\n')
('processors', 'far more', 'cpu', '10332847', 'having data structures that start on 4 byte word alignment on cpus with 4 byte buses and processors is far more efficient when moving data around memory and between ram and the cpu\n')

cores different contention
('cpu', 'more tasks', 'processors', '23300674', 'given that you re seeing extra tasks causing a slowdown you likely either have resource contention via locking or your tasks are cpu bound and having more tasks than processors cores will cause slowdowns\n')
('processors', 'more', 'cpu', '22638062', 'if that processors has more than one cpu can the interrupts run on different cpu cores at the same time\n')

computer logical core
('processors', 'more', 'cpu', '23935539', 'multicore refers to a computer or processors that has more than one logical cpu core and that can execute multiple instructions at the same time.\n')
('processors', 'more', 'cpu', '11835474', 'multicore refers to a computer or processors that has more than one logical cpu core and that can physically execute multiple instructions at the same time\n')

system resources process
('processors', 'much more effective', 'cpu', '2443473', 'as soon as you go beyond single processors it s much more effective to add another cpu or two to system than to struggle with gpu calculations\n')
('cpu', 'more', 'processors', '5924309', 'the operating system will give your program all the resources it needs the reason your process is not consuming all the cpu is probably because it s waiting for the io sub system more than the processors\n')

richfaces	primefaces---------------------------------------------------

ant	maven---------------------------------------------------

number ground sophisticated
('ant', 'older', 'maven', '28907043', 'ant is older and while it is still used in a number of projects it is rapidly losing ground to maven\n')
('maven', 'more sophisticated', 'ant', '22056239', 'a hood technique is to tag milestone releases of your projects giving then a version number and then manage dependencies with maven or a similar tool a bit more sophisticated than ant\n')

simpler default project
('maven', 'more', 'ant', '4970153', 'also maven projects come with a different directory structure and seems to be doing much more than what ant does in the spring source tutorial\n')
('ant', 'simpler', 'maven', '13443342', 'so i suggest you build a p2 repository can be done in ant but seems simpler in maven tycho and split the projects to several repositories\n')
('ant', 'simpler', 'maven', '31721251', 'ant is simpler and older and the default just called a java project maven is newer more powerful and flexible\n')

better dependencies system
('maven', 'better alternative', 'ant', '47381263', 'maven is a better alternative as build system compared to ant\n')
('maven', 'earlier', 'ant', '23112507', 'can maven examine and resolve internal dependencies of non-mavenized jar library defined earlier by ant\n')
('ant', 'better', 'maven', '1347793', 'this question is similar in nature to whether ant is better than maven or c# better than java\n')
('maven', 'better', 'ant', '29234035', 'maven is definitely better than ant and well used for big projects\n')
('ant', 'more', 'maven', '24474576', 'ant pre-dates more modern tools like maven and gradle that have this feature baked in\n')
('ant', 'better', 'maven', '13922438', 'i also find ant with ivy to be better documented than maven although that s not too difficult\n')
('maven', 'jar bigger then', 'ant', '18609318', 'the size of maven jar is bigger then ant jar i don t know why help me please\n')
('maven', 'better', 'ant', '20756425', 'maven is better for managing dependencies but ant is ok with them too if you use ant+ivy and build artefacts\n')
('ant', 'better', 'maven', '13064741', 'if you want to stick to lower level basic file operations ant is better bet than maven\n')
('maven', 'definitely better', 'ant', '8742257', 'maven definitely has better integration with flex than ant\n')
('maven', 'better', 'ant', '1190551', 'while i personally think maven is a better tool than ant in the long run our experience will make maven3 a better tool than maven2\n')
('maven', 'pretty easier', 'ant', '16960689', 'i think updating dependencies with maven is pretty easier than dealing with ant but of course you could select the other way if you feel more conifrtable\n')
('maven', 'better', 'ant', '13496917', 'trust me i did this before for another job where the system architect decided that maven was better than ant and all of our projects must be converted from ant to maven\n')
('maven', 'easier', 'ant', '20756425', 'you can take a look on gradle which for me could provide more freedom than maven but is easier to use than ant\n')
('maven', 'better solution', 'ant', '18851107', 'while you can munge together a solution with ant maven is a better solution for managing dependencies than ant\n')
('maven', 'really better job', 'ant', '599070', 'and it turns out maven really does a better job of managing dependencies for ant build.xml files than does ivy\n')
('ant', 'better', 'maven', '304069', 'however some things ant handles better than maven and if there s not a maven plugin for it it may be difficult to handle in maven\n')

complex powerful
('ant', 'more complex', 'maven', '2435935', 'does this make ant more complex than maven\n')
('maven', 'more powerful', 'ant', '31543494', 'i know maven is more powerful than ant\n')

repo preferred respects
('ant', 'more powerful', 'maven', '2850172', 'ant is much more powerful than maven in many respects but maven excels in dependency management and ease of deployment\n')
('maven', 'more', 'ant', '4970153', 'but as i checked-out some example apps from spring source repo and it seems that maven is more preferred and powerful than ant\n')

script class files
('maven', 'more', 'ant', '6989690', 'maven can t be compared with ant as in maven vs ant maven is more than a build script than ant is\n')
('ant', 'script more .class', 'maven', '28597911', '1 - why ant script generates more .class files than maven\n')

add	subtract---------------------------------------------------

string int value
('add', 'greater', 'subtract', '36934027', 'provided a string i want to convert the chars from the string to an int add a value from another method getkey to this number and if the result is greater than 26 subtract 26\n')
('subtract', 'less', 'add', '34110561', 'i need some help though i need each number in that list to be subtract from 27 then if the result is less than 33 add 94 then print the numbers as they were just with that sum completed how do i do this\n')

racket	scheme---------------------------------------------------

ntlm	kerberos---------------------------------------------------

performance ways better
('kerberos', 'better option', 'ntlm', '34309390', 'kerberos could be considered as a better option than ntlm\n')
('kerberos', 'better', 'ntlm', '5244202', 'i understand that kerberos has better performance than ntlm\n')
('ntlm', 'better', 'kerberos', '453751', 'in fact in some ways ntlm is better than kerberos\n')

ram	disk---------------------------------------------------

faster slower memory
('disk', 'slower', 'ram', '13921423', 'as disk is 1000s of times slower than ram this problem can grind the machine down to a practical halt\n')
('ram', 'faster', 'disk', '31332082', 'ram is a lot faster than disk\n')
('disk', 'much slower then', 'ram', '10243816', 'only one disk read - since the disk is much slower then ram -\n')
('disk', 'slower', 'ram', '10949313', 'disk access is much slower than ram\n')
('disk', 'slower', 'ram', '30478460', 'disk is 100x slower than ram\n')
('ram', 'faster', 'disk', '16427006', 'ram is always faster than disk\n')
('disk', 'slower', 'ram', '6282736', 'that means that without caching a hit against disk will be 200 times slower than accessing ram\n')
('ram', 'much faster', 'disk', '7548458', 'ram is much faster then disk io\n')
('ram', 'faster', 'disk', '46452799', 'i understand that ram is typically thousands of times faster than disk but i o speed is not the only code running\n')
('disk', 'slower', 'ram', '24217960', 'ssd disk are good but they are still much slower than ram\n')
('disk', 'slower', 'ram', '17869058', 'run the following to sort the data on disk this is slower than pulling it into ram sorting and then writing to disk\n')
('disk', 'slower', 'ram', '15467085', 'this is relatively slow since reading from the hard disk is slower than reading from ram\n')
('disk', 'io way slower', 'ram', '21040937', 'but you should consider that disk io is way slower than ram\n')
('ram', 'faster', 'disk', '30961271', '1 yes there is a obvious benefit reading from ram is faster than reading from disk\n')
('disk', 'much slower', 'ram', '42893433', 'as you run queries it has to fetch data from disk which is much slower than ram\n')
('ram', 'faster', 'disk', '3520281', 'no trivial support for cache accessing ram is faster than accessing disk\n')
('ram', 'faster', 'disk', '25408923', 'for this reason it seemed natural to me to initially load the file into memory and interpret it later at my leisure since reading from ram is supposed to be much faster than from disk\n')
('ram', 'faster', 'disk', '10429777', 'ram is 100 thousand times faster than disk for database access from\n')
('disk', 'slower', 'ram', '16312981', 'disk i o is about 100 000 times slower than ram\n')
('disk', 'slower', 'ram', '8741427', 'remember disk is 1000s of times slower than ram\n')
('disk', 'slower', 'ram', '41349090', 'disk even ssd are orders of magnitude slower than ram\n')
('disk', 'slower', 'ram', '47603770', 'which will lead to performance issue all programs will be work slower because read info from disk is slower than from ram\n')
('disk', 'much slower', 'ram', '23316098', 'changing it will require a reboot. that will slow things down a bit as the swap file on disk is much slower than ram\n')
('ram', 'faster', 'disk', '472333', 'ram is much faster than disk\n')
('disk', 'slower', 'ram', '14571358', 'i think it is because the disk is slower than ram\n')
('disk', 'slower', 'ram', '8741427', 'as disk is 1000s of times slower than ram as the memory usage increases your machine grinds more and more closer to a halt\n')
('ram', 'much faster', 'disk', '21918245', 'obviously reading a block from cache is much more efficient than reading it off the disk since ram is much faster than disk\n')
('ram', 'much faster', 'disk', '26475024', 'the ram is much faster than the hard disk\n')
('disk', 'slower', 'ram', '9163426', 'so even ignoring practical considerations like disk is slower than ram it will be slower\n')
('disk', 'slower', 'ram', '42698909', 'anyway you will have a huge performance loss due to the fact that your disk is way slower than your ram\n')
('ram', 'faster', 'disk', '1204121', 'loosely speaking ram is 1000 or more times faster than disk and cpu is faster still\n')
('disk', 'slower', 'ram', '9456024', 'if the worker processes do other things than just calulations read from or write to disk they will have to wait a lot since a disk is a lot slower than ram\n')
('disk', 'slower', 'ram', '1706506', 'disk io - even ssd - is many orders of magnitude slower than the ram that the hashing is going though\n')
('disk', 'slower', 'ram', '20095562', 'disk io will be slower than ram\n')
('disk', 'slower', 'ram', '11832363', 'the initial read has to access the disk which is a lot slower than accessing ram\n')
('disk', 'slower', 'ram', '40588290', 'if too much memory is consumed it might swap to disk which is slower than ram\n')

cheaper storage persistence
('disk', 'space cheaper', 'ram', '16308547', 'this approach will radically reduce heap space usage - disk space is cheaper then ram too\n')
('disk', 'storage cheaper', 'ram', '18718208', 'always favor disk persistence disk storage is cheaper than ram\n')
('disk', 'cheaper', 'ram', '516941', 'disk space is probably always going to be cheaper than ram\n')
('ram', 'more', 'disk', '5049314', 'basically ram is more expensive than the disk storage\n')

faster seek nanoseconds
('disk', 'slower', 'ram', '21370836', 'a disk seek takes about 10 000 000 nanoseconds of course some disk are faster but the best of them are still thousands of times slower than ram\n')
('disk', 'read slower', 'ram', '44453468', 'pros of objects faster disk read is slower than ram lesser dependencies of the system s state\n')

data machine expensive
('ram', 'more', 'disk', '44453468', 'you lose two benefits of data base consistency data persists after a crash and you need more ram which is more expensive and scarce than disk flash\n')
('ram', 'more expensive', 'disk', '21370836', 'but ram is volatile the data in ram is erased when the computer loses power and ram is far more expensive than disk per unit of storage\n')
('disk', 'much slower', 'ram', '14873969', 'reloading pages data or program code from disk which is much slower does not usually happen very often as long as the program is actually running and as long as the machine is not desperately low on ram\n')
('disk', 'more important', 'ram', '18394009', 'if the hot data won t fit in ram on either machine then disk i o performance becomes more important than ram mostly random read i o and the fsync flush rate\n')

available larger varnish
('disk', 'larger available', 'ram', '14280134', 'it is needed for a lookup of repetitions in disk files much larger than available ram\n')
('disk', 'larger', 'ram', '8654903', 'so while the writes my be sequential on disk for datasets larger than ram these random reads will quickly become the bottle neck\n')
('disk', 'larger available', 'ram', '7314774', 'alternatively you can use an ssd with file storage in varnish to reduce disk io bottlenecks when using an object cache larger than available ram\n')
('disk', 'not larger', 'ram', '1896687', 'edit true the file on disk is not larger than ram but the in-memory representation can easily become much larger than available ram\n')
('disk', 'larger available', 'ram', '969709', 'in future these lists may be read from disk and larger than available ram\n')

swap processes fragmentation
('disk', 'larger', 'ram', '24240326', 'it uses swap space on disk to allow for processes much larger than ram\n')
('disk', 'more memory available', 'ram', '28231912', 'the os heap uses the cpu s virtual memory hardware and is free from fragmentation issues and can even effectively use the disk s swap space allowing you to allocate more memory than available ram\n')

access
('ram', 'access much more fast', 'disk', '41195702', 'and ram access is much more fast than disk access\n')
('ram', 'less', 'disk', '2465473', 'more ram means less disk access\n')

smaller time table
('ram', 'smaller', 'disk', '21370836', 'so even if your ram is much smaller than your disk you could assume you can read data that s already in ram 90 of the time or more\n')
('disk', 'bigger', 'ram', '26281309', 'the table on disk is bigger than your ram\n')
('disk', 'larger', 'ram', '38472387', 'this is well within disk space but far larger than ram\n')

system page operating
('disk', 'slower', 'ram', '28817103', 'this is slow because your hard disk is significantly slower than ram and at 7gb there will be a lot of data being read from your hard disk put into ram then moved back to your page file the file on disk your operating system uses to store data that has been copied out of ram\n')
('disk', 'slower system', 'ram', '10350034', 'there exist battery-backed packages of ram modules which can act as an ultra-fast hdd substitute but if they attach via sata scsi or other typical disk interface the still are slower than system ram\n')

4gb enough jboss
('ram', 'more enough', 'disk', '45343069', 'for this reason i deployed a 2 cores 4gb ram and more than enough disk to run through the getting started example of the enterprise integrator\n')
('ram', 'more enough', 'disk', '7201179', 'this particular jboss runs in a vm with 4gb of ram and 2 cpu s and more than enough disk space it has never has less than 5gb free at any time\n')

system mb potential
('disk', 'slower', 'ram', '18457435', 'once you re out of ram and the system starts swapping - disk access is thousands times slower than ram so any potential benefits of 64-bit code are flying out of window\n')
('disk', 'slower', 'ram', '7504168', 'in other words the operating system is using some of your hard disk space to satisfy your 13 mb allocation request at great expense of speed since the hard disk is much much slower than ram\n')

ssd alot subsequent
('disk', 'slower', 'ram', '1356125', 'another option is to spend a bit of cash on a 15000 rpm disk or a ssd solid state disk although that ll be slower than a ram disk\n')
('disk', 'slower', 'ram', '30592276', 'the first load involves reading alot from the hard disk which is slow even ssd is slower than ram subsequent loads should be faster though 3 seconds on the ssd seem to be odd\n')

mvp	presenter---------------------------------------------------

division	multiplying---------------------------------------------------

decimal number single
('division', 'slower', 'multiplying', '38342154', 'according to agner s instruction tables a single fp division is slower than a single reciprocal op and a single multiplying op\n')
('division', 'slower', 'multiplying', '15712237', 'i presume that you know that using a division is a lot slower than multiplying by decimal number 5 is always slower than 0.2\n')

note dshin faster
('division', 'slower', 'multiplying', '4301621', 'sure that s probably compiled or jit d away but you should avoid division in performance critical code it s far slower than multiplying\n')
('multiplying', 'faster', 'division', '35264675', 'note that i ve incorporated dshin s comment that multiplying is faster than division however the performance improvement is about 90 removing the binary search 10 multiplication vs\n')

pdfbox	itext---------------------------------------------------

elixir	erlang---------------------------------------------------

enumerate	xrange---------------------------------------------------

angular	ionic---------------------------------------------------

svn	perforce---------------------------------------------------

network checkout faster
('svn', 'much better', 'perforce', '2794083', 'svn works much better when disconnected from the network - with perforce you have to tell the server when you ve done a checkout\n')
('perforce', 'better', 'svn', '44752', 'make sure you re using a source control system that supports branching and merging i ve had experience with perforce and svn and while perforce is better svn is free\n')
('perforce', 'faster', 'svn', '2794083', 'perforce is soooo much faster than svn because all the check-outs are stored on the server so it doesn t have to check every file on an update\n')

boost	stl---------------------------------------------------

libraries mature standard
('stl', 'much richer', 'boost', '4778449', 'as for not reinventing the wheel like many have said already make sure to first explore the possibilities in the standard template library stl which is much richer than you might think and then look at boost www.boost.org which has libraries for a lot of diverse purposes and they are extremely high quality and some are just works of art like spirit proto lambda and mpl\n')
('boost', 'less standard', 'stl', '548827', 'boost libraries are generally less mature and less standard than stl\n')

project better exceptions
('stl', 'better', 'boost', '8231535', 'c++ s stl is getting better and better yet it s not nearly as huge as boost and is not intended to\n')
('boost', 'better', 'stl', '277306', 'i ve used both for the same project boost is better integrated with the stl and especially c++ exceptions\n')
('stl', 'better', 'boost', '548848', 'once you re past the basics with c++ learning how to use parts of stl and then how it works will be better than tackling boost\n')

pascal	delphi---------------------------------------------------

redmine	mantis---------------------------------------------------

gyroscope	accelerometer---------------------------------------------------

function sensor accurate
('gyroscope', 'sensor more accurate', 'accelerometer', '16760584', 'so after googling this i found that using gyroscope sensor is more accurate than the accelerometer\n')
('gyroscope', 'more accurate', 'accelerometer', '16772950', 'also i have tried the accelerometer sensor and it worked but i m asking to check whether the gyroscope is more accurate to this function or the accelerometer\n')

lemmatization	stemming---------------------------------------------------

sctp	tcp---------------------------------------------------

different better
('sctp', 'better', 'tcp', '32986662', 'how sctp is better then tcp\n')
('sctp', 'better', 'tcp', '32988229', 'sctp is not better than tcp in any way but it does something different\n')

cappuccino	sproutcore---------------------------------------------------

use bindings data
('sproutcore', 'better data', 'cappuccino', '4289512', 'sproutcore has a better data store api than the one cappuccino has\n')
('sproutcore', 'better', 'cappuccino', '4289512', 'sproutcore makes use of bindings better than cappuccino currently does\n')

integer	floating-point---------------------------------------------------

today units combinations
('integer', 'coarser', 'floating-point', '44682117', 'you re performing integer division which is coarser than floating-point division\n')
('floating-point', 'slower', 'integer', '18883825', 'as a rule of thumb floating-point is about 2x slower than integer on\n')
('floating-point', 'more complicated', 'integer', '12982942', 'floating-point arithmetics is by far more complicated than integer arithmetics\n')
('floating-point', 'division typically faster', 'integer', '25024535', 'floating-point division is typically faster than integer division on the cpu\n')
('floating-point', 'faster', 'integer', '1900794', 'depending on context floating-point code may be as fast as or faster than integer code or it may be four times slower\n')
('integer', 'math faster', 'floating-point', '5069628', 'generally integer math is faster than floating-point math\n')
('floating-point', 'slower', 'integer', '26227821', 'historically floating-point could be much slower than integer\n')
('integer', 'faster', 'floating-point', '30311819', 'there are lots of cpu gpu combinations where a 32b integer multiply is faster than a 32b floating-point multiply on cpu and vice-versa on gpu\n')
('integer', 'simpler', 'floating-point', '141340', 'but integer arithmetic arguably is inherently simpler than floating-point\n')
('floating-point', 'math slower', 'integer', '514184', 'they take up more space and floating-point math is slower than integer math\n')
('floating-point', 'divide faster', 'integer', '2149859', 'floating-point divide is faster than integer fewer bits to divide assuming your cpu has floating-point unit\n')
('integer', 'faster', 'floating-point', '25898877', 'integer math is often much faster than floating-point so such a function could be a major performance win\n')
('integer', 'faster', 'floating-point', '38034768', 'it s even possible that you could implement pong using only integer arithmetic which is likely to be faster than floating-point -- but the difference is unlikely to be critical\n')
('integer', 'faster', 'floating-point', '9236157', 'but another added benefit of this approach is that it could make your program run faster since fixed-point integer arithmetic is much faster than floating-point arithmetic\n')
('floating-point', 'slower', 'integer', '26227821', 'floating-point may be somewhat slower than integer but it s generally\n')
('floating-point', 'faster', 'integer', '3042066', 'today s floating-point units are pretty fast and may actually divide faster than an integer unit\n')
('integer', 'faster', 'floating-point', '288727', 'which uses all integer arithmetic is usually faster than its floating-point equivalent likely significantly faster in the case of a floating-point type equivalent to t-sql s decimal type\n')
('floating-point', 'slower', 'integer', '5069643', 'historically floating-point could be much slower than integer arithmetic\n')

splinter	selenium---------------------------------------------------

easier simpler
('splinter', 'easier', 'selenium', '37666683', 'splinter makes it easier to use selenium plus\n')
('splinter', 'simpler', 'selenium', '38908865', 'splinter simpler than selenium\n')

random	prng---------------------------------------------------

non-random behaviour reflection
('random', 'behaviour more', 'prng', '41412930', 'the non-random random behaviour is more a reflection on the quality of the rand prng â it is often not very good\n')
('random', 'less', 'prng', '7480271', 'then you use it as seed in random which is less good that one is a non-cryptographic prng and its output may exhibit some structure which will not register in a statistical measurement tool but might be exploited by an intelligent attacker\n')

fgetc	fread---------------------------------------------------

libav	ffmpeg---------------------------------------------------

spi	i2c---------------------------------------------------

research last control
('i2c', 'bus slower', 'spi', '42818805', 'on top of that the i2c bus is slower than spi because there are control data exchanged\n')
('spi', 'faster', 'i2c', '46550567', 'i have done some research about them and it seems to be that spi is faster than i2c but the last one ensures more control and error detection over the first one\n')

post faster
('spi', 'faster', 'i2c', '21848629', 'i wanted to know that what makes spi faster than i2c\n')
('spi', 'faster', 'i2c', '43422643', 'post explaining why spi is faster than i2c\n')

nunit	mbunit---------------------------------------------------

imageview	textview---------------------------------------------------

bottom taller subtitle
('imageview', 'taller', 'textview', '6869485', 'the imageview is bit taller than the textview and so what i do is add padding margins to the bottom of textview to get it align and look like the imageview and textview horizontal centers are aligned\n')
('textview', 'taller', 'imageview', '44232501', 'i have a button that is bottom constrained to the bottom of the imageview however should be top constrained to the bottom of the subtitle textview if subtitletextview is taller than imageview\n')

smaller larger bigger
('textview', 'smaller', 'imageview', '44346113', 'i also tried to do spacing from imageview to textview but then if the textview is smaller than the imageview the spacing will be wrong again\n')
('imageview', 'bigger', 'textview', '7799656', 'i have an imageview that is bigger than a textview and i want to center the textview on top of the imageview both vertically and horizontally\n')
('imageview', 'greater', 'textview', '32205371', 'for api 18 and earlier the margin is being applied after the alignment so if the margin in the imageview is greater than 0 you will get your textview moved\n')
('textview', 'smaller height', 'imageview', '44346113', 'in the image the square represents a fixed size imageview the rectangle is a textview which can 1 line smaller height than imageview or multiline height is larger than imageview\n')
('textview', 'higher', 'imageview', '44346113', 'i tried constraints spacing each imageview with xdp it is ok if all textview are not higher than the imageview but if a textview is higher than a imageview it will overlap\n')
('imageview', 'smaller', 'textview', '21051095', 'however the imageview has a smaller width than the textview\n')
('imageview', 'bigger', 'textview', '24720677', 'assuming the imageview is always bigger than the textview it ll drive the parent height\n')
('imageview', 'higher', 'textview', '29874834', 'i want to set imageview and textview on same line in linearlayout but the imageview is always higher than the textview\n')
('imageview', 'larger', 'textview', '27327422', 'this should work as long as the imageview is larger than the textview in all dimensions\n')

lower higher
('imageview', 'higher', 'textview', '37540133', 'i try to align my imageview and my textview but the imageview is higher than my textview\n')
('textview', 'lower', 'imageview', '34694309', 'make textview lower than imageview\n')

postgresql	mysql---------------------------------------------------

better large reputation
('postgresql', 'more tricks', 'mysql', '957655', 'in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with\n')
('postgresql', 'much more', 'mysql', '1338597', 'postgresql is much more complete and solid and will much better support complex queries and their optimization while mysql may shine in terms of retrieval speed for extremely simple queries\n')
('postgresql', 'faster', 'mysql', '30113392', 'according to my own experience postgresql run much faster than mysql especially handling big tables 1.4 gb lineitem table in my case\n')
('mysql', 'faster', 'postgresql', '953814', 'mysql s version is apparently marginally faster than postgresql but lacks some of the more advanced spatial features therefore it s pretty much limited to finding records that match a certain range of coordinates\n')
('postgresql', 'more', 'mysql', '13155314', 'the query optimizer in postgresql is more advanced than in mysql and copes with complicated statements much better especially when it comes to sub-selects\n')
('postgresql', 'better', 'mysql', '2324076', 'given postgresql s reputation for doing things better than mysql or at least as good as i daresay that postgresql would demonstrate similar performance if properly used\n')
('postgresql', 'fulltext 10-100x faster', 'mysql', '5926886', 'i did some benchmarking 3 years ago may be stale... which showed that on large datasets basically postgresql fulltext is 10-100x faster than mysql and xapian 10-100x faster than postgresql but not integrated\n')
('postgresql', 'better', 'mysql', '7587624', 'if you want to use sql i strongly reccommend postgresql it seems to deal with large databases and frequent writes a lot better than mysql\n')
('mysql', 'better db', 'postgresql', '26232186', 'anyways mysql is bad and on longterm especially if you are enough good for java i suggest you to use some better db with postgresql you were really satisfied i think\n')
('postgresql', 'slower', 'mysql', '30010645', 'for these ultra simple queries postgresql can be slower than mysql - postgresql has richer planner that works better on more complex queries but on trivial queries is slower\n')
('postgresql', 'fewer', 'mysql', '1374694', 'and postgresql has fewer experienced administrators than the big databases and mysql which i believe contributes to the reputation\n')

slower select tuning
('postgresql', 'slower', 'mysql', '2797107', 'do you find rails with postgresql is slower than mysql knowing that it produce more query on the background\n')
('postgresql', 'slower', 'mysql', '36927941', 'unfortunately in postgresql select count is often slower than mysql to which it often get s compared to\n')
('postgresql', 'pickier', 'mysql', '9759899', 'postgresql is picky pickier than mysql -- all fields in the select list when using distinct must be present in the order_by and group_by clauses\n')
('mysql', 'slower', 'postgresql', '34148481', 'in my personal openion mysql is slower than postgresql and mongo db\n')
('postgresql', 'slower', 'mysql', '27443', 'in most regards postgresql is slower than mysql especially when it comes to fine tuning in the end\n')
('mysql', 'faster', 'postgresql', '30008388', 'mysql run 4x faster than postgresql\n')
('postgresql', 'more', 'mysql', '1162378', 'postgresql requires more tuning than mysql to achieve optimal performance\n')
('postgresql', 'slower', 'mysql', '1162395', 'postgresql is already slower than mysql up to a certain point it is actually faster when you have a ridiculously large database\n')
('postgresql', 'slower', 'mysql', '30008388', 'i did a simple performance test and i noticed postgresql is slower than mysql\n')
('postgresql', 'slower', 'mysql', '1841772', 'i ve found that postgresql is in my expirience is slower as mysql\n')
('mysql', 'faster', 'postgresql', '205364', 'mysql i am told can be optimized to do faster reads than postgresql but both are pretty ridiculously fast in terms of # transactions sec they support and it doesn t sound like that s your problem\n')

popular web instagram
('mysql', 'more popular', 'postgresql', '4394406', 'though mysql is more popular than postgresql but instagram is using postgresql maybe due to these reasons\n')
('postgresql', 'more popular', 'mysql', '11642511', 'it s a shame postgresql isn t more popular than mysql since it supports exactly this feature out-of-the-box you d only have to share one sequence object between tables.\n')
('postgresql', 'less', 'mysql', '14197739', 'while postgresql is less popular than mysql most of the serious web hosting supports it\n')

better data unicode
('postgresql', 'better', 'mysql', '4394406', 'postgresql is better than mysql in many ways\n')
('postgresql', 'better', 'mysql', '8137020', 'and a wiki for why postgresql is better than mysql\n')
('postgresql', 'much better performance', 'mysql', '201950', 'postgresql gets much better performance and this is coming from a former mysql partisan\n')
('postgresql', 'better', 'mysql', '8749161', 'there are workloads where postgresql is better and there are workloads where mysql is better\n')
('postgresql', 'better', 'mysql', '74931', 'with correct locking for safety reasons and heavy concurrent use postgresql performed better than mysql\n')
('postgresql', 'better', 'mysql', '9879578', 'i really like postgresql s indexes which are far better than mysql s\n')
('postgresql', 'generally better', 'mysql', '1795117', 'now i m not sure if i d say postgresql is generally better than mysql -- there are certainly things that mysql does much better and so it certainly has its uses -- but these are a few things i absolutely love about it\n')
('postgresql', 'better', 'mysql', '1467079', 'if you need spatial data capabilities postgis with postgresql is better than mysql\n')
('postgresql', 'better', 'mysql', '21215884', 'what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n')
('postgresql', 'much better', 'mysql', '13155314', 'then postgresql is much better than mysql\n')
('postgresql', 'better choice', 'mysql', '33402831', 'i was told that postgresql is a better choice than mysql for displaying hierarchical data so i installed postgresql and i m ready to go\n')
('postgresql', 'more', 'mysql', '8928034', 'i am using postgresql btw which can do more than mysql incase that changes things\n')
('mysql', 'more famous', 'postgresql', '46270070', 'while mysql is more famous for serious enterprise-quality database where preserving your data is critical i recommend postgresql\n')
('mysql', 'easier', 'postgresql', '2193943', 'mysql is easier than postgresql but it doesn t really matter either way\n')
('postgresql', 'better', 'mysql', '1373566', 'some people were saying that postgresql is better for security purposes whereas mysql is becoming more feature rich.\n')
('mysql', 'worse', 'postgresql', '2694299', 'in other words is mysql better or worse than postgresql to handle unicode etc\n')
('mysql', 'much better', 'postgresql', '14322003', 'some say mysql is much better for bigger projects while others think just go with postgresql\n')
('postgresql', 'better', 'mysql', '2447484', 'is postgresql better than mysql for such purpose\n')
('postgresql', 'better', 'mysql', '2000205', 'also you might take the time to compare postgresql and see if there is something about it that meets your needs as well or better than mysql\n')
('mysql', 'better', 'postgresql', '21073787', 'an efficiently configured mysql is better than a badly configured postgresql and vice-versa\n')
('postgresql', 'better', 'mysql', '14759864', 'i just recently switched databases to postgresql which has given me a slew of problems although i must admit i like it a lot better than mysql\n')
('postgresql', 'much better', 'mysql', '11365372', 'the only reason i was considering postgresql was that some research suggested postgresql has much better support for changing schemas along the way than mysql\n')
('postgresql', 'better', 'mysql', '2756807', 'in my cases postgresql was better than mysql mysql do not completely support unicode\n')
('postgresql', 'better capabilities', 'mysql', '26188200', 'i found that postgresql 9.3 has better capabilities for json than the mysql versions i am using\n')
('postgresql', 'harder', 'mysql', '25197871', 'does this affect postgresql harder than mysql\n')
('postgresql', 'better', 'mysql', '8748476', 'postgresql has better support but the support by mysql depends on the used storage engine\n')
('postgresql', 'better option', 'mysql', '8262827', 'is postgresql a better option than mysql for partitioning tables by date\n')
('postgresql', 'better', 'mysql', '4394622', 'generally speaking i find postgresql lends itself to 24 7 operations better than mysql\n')
('postgresql', 'better', 'mysql', '1016512', 'honestly though postgresql scales much better than mysql\n')
('postgresql', 'better option', 'mysql', '34851450', 'in your case postgresql may be a better option than mysql because your query is going to likely be against secondary indexes\n')
('postgresql', 'easier', 'mysql', '3162419', 'postgresql supports recursive queries in the form of recursive common table expressions which make querying heirarchical data easier than in mysql and also give better performance\n')
('postgresql', 'better imo', 'mysql', '4916041', 'postgresql is also a lot better imo than mysql and is the recommended database to use with django according to a lot of the people close to django\n')
('postgresql', 'more proven', 'mysql', '32023224', 'either postgresql more proven than mysql for such huge data\n')
('postgresql', 'better', 'mysql', '47067702', 'postgresql seem to better than mysql in terms of speed\n')
('postgresql', 'better', 'mysql', '21216225', 'the other question is that what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n')
('postgresql', 'much better', 'mysql', '45528333', 'postgresql is much better suited for data warehousing compared to mysql\n')
('postgresql', 'faster', 'mysql', '1373625', 'postgresql is faster than mysql s innodb\n')
('postgresql', 'better', 'mysql', '7997125', 'i would need a scalable database so probably postgresql would be better than mysql\n')
('postgresql', 'better', 'mysql', '7999353', 'postgresql is way better than mysql in nearly every respect\n')
('postgresql', 'better', 'mysql', '16679371', 'i d also recommend postgresql over mysql if you are going to have nested comments as postgresql does hierarchical querying better than mysql\n')

stricter error sql
('mysql', 'more permissive', 'postgresql', '10775695', 'mysql is more permissive and allows the non-standard use of distinct but postgresql throws an error\n')
('mysql', 'more resistant', 'postgresql', '2221787', 'the question is is mysql somehow more resistant than postgresql to sql injection attack under the perl dbi and why might this be the case\n')
('postgresql', 'stricter', 'mysql', '4078839', 'postgresql is stricter to the sql standard than mysql is\n')
('postgresql', 'stricter', 'mysql', '3512286', 'i am aware that postgresql interpretation of the sql standard is stricter than mysql and that consequently this type of query won t work...and have read a number of posts on stackoverflow and elsewhere on the subject - but none of them seem to be the definitive answer on this subject\n')
('postgresql', 'more correct', 'mysql', '27439', 'from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster\n')
('postgresql', 'stricter', 'mysql', '22927557', 'postgresql is stricter about conversions than mysql is and generally will throw an error rather than try to convert a string to an integer if it doesn t look like one\n')
('mysql', 'implementation less', 'postgresql', '8373087', 'i totally understand the error and assume that the mysql implementation is less sql conform than the postgresql implementation\n')
('postgresql', 'stricter', 'mysql', '7214433', 'but in mysql it is ok and in postgresql it is wrong and ask for the other fields besides site_id either in a group by clause or in a aggregation function i know that postgresql is stricter on sql than mysql so i must select the site_id in the query object of msg_published but in pure sqlalchemy i can do like this\n')

fewer security issues
('postgresql', 'fewer surprises', 'mysql', '4074875', 'i would recommend postgresql for a beginner as it has far fewer surprises than mysql\n')
('postgresql', 'fewer security', 'mysql', '1270393', 'traditionally postgresql has had fewer security issues than mysql but they are both doing very well on that\n')
('postgresql', 'more', 'mysql', '6475228', 'i d have said that postgresql is more security aware than mysql supporting roles more authentication methods ... but that the database itself has generally a very limited impact on the security of an application\n')

compliant comfortable looks
('postgresql', 'more', 'mysql', '1769414', 'postgresql is more sql compliant than mysql\n')
('postgresql', 'more compliant', 'mysql', '259460', 'postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that\n')
('postgresql', 'more compliant', 'mysql', '6751367', 'looks like postgresql is a little more compliant than mysql so try this instead\n')

easier features tendency
('postgresql', 'more advanced', 'mysql', '8749161', 'however postgresql s sql features are far more advanced than mysql s and mysql has a tendency to silently ignore things you tell it to do - especially in a default installation and if you rely on a foreign key to be created that might be a very unpleasant surprise\n')
('mysql', 'more', 'postgresql', '1311750', 'mysql is more widely supported and a little easier to use but postgresql has some very cool features and functionality that s worth taking a gander at\n')
('postgresql', 'cleaner', 'mysql', '3485121', 'however people often argue that postgresql is cleaner and easier to use that mysql\n')
('postgresql', 'specifically easier', 'mysql', '36525504', 'postgresql specifically has gotten easier to manage while mysql has lost some of the simplicity that gave it an advantage without picking up enough features that really matter\n')
('postgresql', 'more capable', 'mysql', '12873077', 'i suggest postgresql it s more capable has more features and better support for complex queries and datatypes than mysql and has a lot of tuning options\n')
('postgresql', 'more logical', 'mysql', '3553940', 'you might look at postgresql as i find it a bit easier to manage and maintain as i feel some aspects are more logical than mysql\n')

robust powerful free
('mysql', 'probably more', 'postgresql', '13557296', 'mysql is probably more often offered by shared hosting providers postgresql is probably a little more powerful\n')
('postgresql', 'much more mature', 'mysql', '4394406', 'i feel postgresql is much more mature and robust than mysql\n')
('postgresql', 'more powerful', 'mysql', '259517', 'i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql\n')
('postgresql', 'more robust', 'mysql', '3563373', 'there is also postgresql its a bit more robust than mysql and is free just the same\n')
('postgresql', 'more restrictive', 'mysql', '1717152', 'postgresql is a bit more restrictive than mysql\n')
('postgresql', 'far more powerful', 'mysql', '8052193', 'postgresql is far more powerful and scalable and doesn t have mysql s silly limitations and gotchas\n')
('postgresql', 'more robust', 'mysql', '4135236', 'i hear postgresql is more robust and doesn t crash like mysql does in these situations\n')
('postgresql', 'more mature', 'mysql', '2452926', 'postgresql will always be a little bit more mature than mysql\n')

table ancedotal servers
('postgresql', 'more flexible indexing', 'mysql', '12495775', 'not only does postgresql have a far more flexible indexing than mysql but the table approaches are very different also meaning the appropriate indexing strategies are as different as the tactics are\n')
('postgresql', 'less troublesome', 'mysql', '4394396', 'this is ancedotal but the postgresql servers i ve managed have always been much less troublesome than mysql which likes to randomly crash once in a while occasionally corrupting a table on the way down\n')

worse timings mariadb
('mysql', 'mariadb slightly worse', 'postgresql', '40083672', 'mysql mariadb is slightly worse than postgresql\n')
('mysql', 'worse', 'postgresql', '52179', 'i just checked the timings using mysql 5 and they are slightly worse than postgresql\n')

button	checkbox---------------------------------------------------

page status error
('button', 'more', 'checkbox', '31329662', 'i have an asp page where the status of a list is approved by selecting checkbox and then pressing approve button however when i select more than one checkbox it throws the error index was out of range\n')
('button', 'more', 'checkbox', '4808581', 'how to restrict user to select not more than 10 asp.net checkbox on button click event if user select more than 10 checkbox then alert box will pop up that you can not select more than 10 checkbox\n')

radio better uncheck
('checkbox', 'better radio', 'button', '42163991', 'using checkbox to check uncheck is better than radio button\n')
('button', 'more', 'checkbox', '40849763', 'one more thing i also want select only one radio button when i have selected more than 2 checkbox\n')
('button', 'more suitable rather', 'checkbox', '15388986', 'if you want the users to select only one option perhaps a dropdown or radio button list is more suitable rather than checkbox\n')
('button', 'better idea', 'checkbox', '21157659', 'if it s only one colour you want selecting you can use a radio button instead which would be a better idea than a checkbox\n')
('button', 'better', 'checkbox', '14786816', 'actually i found out why using two radio button with same names and different values true and false is better than checkbox\n')
('button', 'more', 'checkbox', '11662905', 'unlike radio button the user can select more than one checkbox at once or select none of them at all\n')

custom hidden field
('checkbox', 'better choice', 'button', '42560476', 'so i think a custom checkbox is the better choice here but if you really want to use a button i would use a hidden checkbox field and apply onclick functions to the button to change the value of a hidden checkbox field\n')
('button', 'better', 'checkbox', '30116307', 'you ll want to have multiple radio button each with it s own value to set some property to although this is weird for a yes no you are better off with a checkbox but if you had multiple values this is how radio button work\n')

able next disable
('button', 'more', 'checkbox', '45560870', 'as image shows below i want to make next button enabled only if more than one checkbox get checked\n')
('checkbox', 'more column', 'button', '23243749', 'currently i am able to generate checkbox in column what i need is one more column with button same as checkbox in each row\n')
('button', 'disabled.after', 'checkbox', '42948202', 'initially the value of button is disable because value of button is true so the button is disabled.after selecting the checkbox now the button should be able to click\n')
('button', 'more', 'checkbox', '3591491', 'i can verify that by unchecking the checkbox it does flip the value because i enable disable the next button depending on the myproperty value - i have more than one checkbox btw\n')

war	jar---------------------------------------------------

486

3des	aes---------------------------------------------------

faster slower
('aes', 'faster', '3des', '3938726', 'should be as fast as 3des aes turned out to be much faster than 3des in software typically 5 to 10 times faster\n')
('3des', 'much slower', 'aes', '23658313', 'furthermore 3des is much slower than aes\n')

jqplot	flot---------------------------------------------------

directory	folder---------------------------------------------------

ftp ls head
('directory', 'more', 'folder', '6048084', 'i would recommend placing the common files in the same directory as the solution file or no more than 1 folder deep\n')
('directory', 'less', 'folder', '15032819', 'i have tested on mp3 files in different directory it takes less than one second with over 6000 files stored in different folder\n')
('directory', 'target', 'folder', '34044187', 'file must be in the same or higher directory as target folder\n')
('folder', 'way more', 'directory', '26279419', 'this folder has way more than 1 directory and has a bunch of files so apparently it snot reading something correctly\n')
('directory', 'lower', 'folder', '47611724', 'i created a php file which deals with file deleting and uploading but i this file is one directory lower than the folder for files\n')
('directory', 'also faster', 'folder', '23086696', 'rm -rf directory also works faster for billion of files in one folder\n')
('directory', 'more', 'folder', '11553430', 'i am using the bash ftp command to ftp files however i have a problem where i try to create a directory that is more than 2 folder deep\n')
('directory', 'faster ls', 'folder', '32341733', 'if i run ls folder | head in a directory with a lot of files the execution time is about 50 times faster than ls folder | tail\n')

nfa	dfa---------------------------------------------------

faster compact powerful
('nfa', 'slower', 'dfa', '9192904', 'regex is a nfa and is as such in most cases slower than a dfa or hand-written parser\n')
('nfa', 'slower', 'dfa', '36630254', 'perl uses nfa which is slower yet more powerful than the dfa engine sed has\n')
('dfa', 'faster', 'nfa', '37892171', 'generally speaking dfa is faster but nfa is more compact\n')

awt	swing---------------------------------------------------

functionality advanced better
('swing', 'far better', 'awt', '9996090', 'swing is far better than the obsolete awt library\n')
('swing', 'much better performance', 'awt', '16289744', 'consider using swing which has much better performance over the old heavyweight awt\n')
('swing', 'richer', 'awt', '2044311', 'well swing is richer in terms of out-of-the-box components than awt\n')
('swing', 'newer', 'awt', '36696741', 'yes swing has newer and better api s than awt\n')
('swing', 'more', 'awt', '43499648', 'it has functionality the same as a canvas but swing is more advanced and has better features than awt\n')
('awt', 'faster', 'swing', '12145525', 'its was said that awt is faster than swing as it uses the platform component but due the arrival of faster processor etc ..\n')
('swing', 'more', 'awt', '2377467', 'in swing has more features than the awt components\n')
('swing', 'better', 'awt', '29239458', 'swing or javafx would be better than awt\n')
('swing', 'newer', 'awt', '21279086', 'you can read all over the web that awt is old and deprecated and swing is old but newer than awt and should be preferred over awt whenever possible\n')
('swing', 'newer', 'awt', '33978735', 'swing has newer and better api s than awt\n')
('swing', 'far better then', 'awt', '21215282', 'swing is far better then awt and should be educated to people who is writing gui-based java for the first time\n')
('swing', 'better', 'awt', '9009156', 'swing is better and few people remember how to use awt components\n')

useful
('awt', 'more useful', 'swing', '1090158', 'as far as when awt may be more useful than swing -\n')
('awt', 'more', 'swing', '408820', 'are there any cases where awt is more useful advised to use than swing or vice-versa\n')

mp4	webm---------------------------------------------------

geocode	geocoding---------------------------------------------------

qplaintextedit	qtextedit---------------------------------------------------

double	int---------------------------------------------------

precision general precise
('double', 'more', 'int', '3878773', 'a double is a more precise type than an int in a general manner of speaking\n')
('double', 'less', 'int', '36164348', 'further the precision of double may be less than int introducing other problems\n')
('int', 'more precsion', 'double', '38865387', 'this is important because if the int needs more precsion than 52-bits the precision is too low for a double\n')
('double', 'more precision', 'int', '35525303', 'double can hold more precision than int\n')
('double', 'more general type', 'int', '19823940', 'double can in a way be seen as a more general type than int\n')
('int', 'less precise', 'double', '36801182', 'since int is less precise than double i thought i needed to cast it when parsing it into a method\n')
('double', 'more', 'int', '25924215', 'you used the double to calculate an int result the double is more precise than the int so you lost precision\n')
('double', 'more', 'int', '15770825', 'but this isn t true because double is more general than int and therefore int is the most-specific option in this case\n')
('double', 'better', 'int', '21886861', 'double is better than int though as it will help you keep precision\n')
('double', 'more precision', 'int', '29687757', 'double doesn t have infinite precision and you can t gain more precision than a double has by converting a double to a bigdecimal like you can t gain more precision with an int when you do which is 0.0 because it widens an int to a double\n')
('int', 'much less', 'double', '45266203', 'indeed fact is limited by the range of type unsigned int which is much less than the precision of type long double\n')

space memory outofmemory
('double', 'more space ints-an', 'int', '1935145', 'you re getting the outofmemory because if you declare int 1000 the memory is allocated immediately additionally double take up more space than ints-an int representation will also save you space\n')
('int', 'less space', 'double', '14674829', 'int would take up less space than a double\n')
('int', 'less memory', 'double', '21528753', 'int needs less memory comparing to double numbers\n')
('int', 'less space', 'double', '17383440', 'i don t understand how an int 63823 takes up less space than a double 1.0\n')
('int', 'less', 'double', '14638096', 'int takes less space than double on ram\n')

larger range bigger
('double', 'wider range', 'int', '5694078', 'also given that double has a wider range what would one return for those out of range int values\n')
('int', 'larger', 'double', '43662319', 'for platforms where int is larger than double it s obviously false\n')
('int', 'range much smaller', 'double', '27334337', '1 int range is much smaller than double and for pow 2 100 that fails\n')
('double', 'larger', 'int', '35973092', 'if you are not storing infinity nowhere and use it just for comparison you can use double infinity which is larger than int and long max value\n')
('int', 'smaller', 'double', '45198135', '4 + 4 since int is smaller size compared to double padding of double size is done\n')
('int', 'much smaller', 'double', '4181954', 'don t forget that the range of int is much smaller than the range of double\n')
('double', 'far greater', 'int', '605547', 'another reason is that the range of double is far greater than that of int\n')
('double', 'larger', 'int', '34400483', 'because a double is larger than an int this accesses the 4 bytes of the original int and an extra 4 bytes on the stack\n')
('double', 'bigger', 'int', '18580095', 'you could try using double which is bigger than a long and use only the int part\n')
('double', 'larger', 'int', '12015986', 'double is larger than an int hence the overflow\n')
('double', 'more', 'int', '30079823', 'operations on float and especially double cost more than on int\n')
('double', 'bigger', 'int', '2386794', 'the double has a bigger mantissa the int bits of the real number\n')
('double', 'value also larger', 'int', '511928', 'the largest double value is also larger than the largest int so it would have to be a long\n')
('double', 'bigger', 'int', '20354046', 'you can convert your object into double and then into int but you should take care as double value is much bigger than int\n')
('double', 'smaller values', 'int', '32946829', 'another option would be to add a cast not recommended due to the same loss of information the error warns you about - the fractional part will simply be removed from the value and double can hold way larger and smaller values than int\n')
('int', 'smaller', 'double', '28683183', 'extra arguments to variatic functions with types smaller than int are promoted to int and passed as such and floating point types smaller than double are promoted to double and passed as such\n')
('double', 'larger 64-bit', 'int', '21071959', 'typically a double is 64-bit ieee floating point with roughly 52 bits precision and with range much larger than 64-bit int so magnitude is no problem\n')
('double', 'larger numbers', 'int', '5693480', 'because double can contain larger numbers than int or long\n')
('double', 'smaller', 'int', '38606192', 'that means a float will be a double and anything smaller than an int will be an int\n')
('double', 'greater', 'int', '526070', 'today i noticed that when i cast a double that is greater than the maximum possible int to an int i get -2147483648\n')
('double', 'larger', 'int', '20181170', 'many processors and or compilers implement long double types larger than any int type regardless of name and there are processors with 32 byte pointers\n')
('double', 'less', 'int', '15949536', 'you really might need to up cast everything into a double and then check to see if the result is greater than or less than an int\n')
('double', 'larger', 'int', '20732505', 'a double is 1 typically larger than an int and 2 has some internal structure\n')
('double', 'bigger', 'int', '26690571', 'a double is bigger than an int\n')
('int', 'smaller range', 'double', '1696724', 'int can hold a smaller range than double\n')
('double', 'smaller', 'int', '5772391', 'these conversions promote float to double and anything smaller than int to int or unsigned int\n')
('double', 'larger', 'int', '29017088', 'when the result of math.pow i j a double is larger than integer.max_value and you cast to an int then the result is integer.max_value\n')
('double', 'much wider', 'int', '1348958', 'the range of double is much wider than the range of int or long\n')
('double', 'greater', 'int', '41806502', 'a double has a range that can be greater than any int type\n')
('double', 'larger values', 'int', '8424026', 'a double variable can hold larger values than an int and is able to store an approximation of the value 4000000000\n')
('int', 'smaller range', 'double', '42537385', 'int or int32 has a much smaller range than double\n')
('int', 'greater', 'double', '32134782', 'what i need to do it iterate over a list find the first int which is greater than 3 and is even then just double it and return it\n')
('double', 'greater', 'int', '12314984', 'since double is greater that int and long int and long will be turned into double in double long and int double\n')
('double', 'array less', 'int', '43258026', 'if a value in the double array is less than the int value at the same position of the two dimensional array then in that part of the boolean array the value would is true\n')
('int', 'greater', 'double', '6297636', 'you should be using math.ceiling which will return the smallest int value that is greater than the double passed in\n')
('double', 'larger type', 'int', '12931816', 'the math.round double a method returns a long which is a larger type than int\n')
('double', 'bigger', 'int', '32663774', 'if you tell it the top of the stack has a double and double is bigger than int you ve now just told it to take extra bytes off of the stack which is terrible\n')
('double', 'smaller', 'int', '10789396', 'you could try to add some value to the double to make sure it s bigger or smaller than an int can be\n')
('double', 'higher', 'int', '2625948', 'because a double is higher it will merge the int into the 0.0\n')
('double', 'larger', 'int', '27064252', 'you do explicit type casting to get your result in int because double is a larger data-type than int\n')
('double', 'larger range', 'int', '39937154', 'if one of the operands is a double the result of the multiplication would be a double which allows for a much larger range than an int\n')
('double', 'wider', 'int', '26209492', 'the range of double is wider than int\n')
('int', 'smaller', 'double', '8103414', 'in vararg functions such as printf int smaller than int are promoted to int and floats smaller than double are promoted to double\n')
('double', 'smaller', 'int', '24119742', 'this imply that result of pow x y converted to int will be truncated because of double arithmetic and exponentiation that will return double value slightly smaller than int\n')
('double', 'way greater', 'int', '605544', 'the range of double is way greater than the range of 32 or 64 bit int which is why std floor returns a double\n')
('double', 'higher', 'int', '40734664', 'and if the value of your double is higher than the range of an int then this can produce undefined behavior\n')
('double', 'not bigger', 'int', '16268270', 'this will work as long as the double is not bigger than what can fit in an int\n')
('double', 'higher', 'int', '43723712', 'if your resulting double has higher int value then simple int math sometimes stops working\n')
('int', 'type larger', 'double', '12323870', 'you need to use 2 even if the number of bits in your int type is larger than the precision of a double since the number of used bits in the most significant value might only be 1\n')
('double', 'greater value', 'int', '5693478', 'double has a greater value range than int\n')
('double', 'bigger maximum', 'int', '37956224', 'so if i try to convert a double number bigger than maximum int it crashes instead of returning nil\n')
('int', 'larger', 'double', '4391609', 'your upccode int is larger than the long data type so i tried it with double which is a float but works\n')
('double', 'bigger numbers', 'int', '25060840', 'clearly calling int x on a double is asking for trouble since double can store bigger numbers than int\n')
('int', 'smaller', 'double', '13032415', 'and since float is typically promoted to double with varargs calls if your int is smaller than your double this will break\n')
('double', 'bigger maximum', 'int', '37956224', 'i know that there s another way to check if a double number is bigger than maximum int value but i m curious as why it s happening this way\n')
('double', 'value bigger', 'int', '37956224', 'i wanted to check if a double value is bigger than maximum int value but because converting function does not return an optional value i am not be able to check by using optional binding\n')
('double', 'shorter', 'int', '43554894', 'note that when float values are passed to printf they are automatically converted to double just as numeric types shorter than int are promoted to int\n')
('int', 'smaller sizeof', 'double', '24146146', 'since sizeof int is very probably smaller than sizeof double this is going to lead to horror\n')
('int', 'better', 'double', '35717845', 'it would really depend on the processor and the range of the int which is better and using double would resolve most of the range issues\n')
('double', 'smaller', 'int', '32021034', 'in the third case double precision loss is much smaller than the int and you get something like\n')
('int', 'range wider', 'double', '41360457', 'can be false when int range is wider than double uncommon and dx is a rounded value whose next higher representable value to 2 greater\n')
('double', 'bigger', 'int', '39108379', 'double is much bigger than int\n')
('double', 'greater precision', 'int', '25636405', 'and the second calculation 33 5.0 the result is actually promoted to double which has greater precision than int and resulted to decimal\n')
('double', 'bigger', 'int', '10951622', 'one of long long and double is bigger than 3 int and a multiple of 8\n')
('double', 'larger', 'int', '30706940', 'because a double which f expects probably is larger than an int on your platform\n')
('double', 'bigger', 'int', '10556878', 'a double is also probably bigger than an int\n')

parameter sizeof greater
('int', 'smaller', 'double', '23953851', 'it doesn t matter if second member would be int short or whatever - as long as it is smaller than double sizeof struct will be 16\n')
('double', 'greater', 'int', '38741563', 'this causes a referencing to a memory area that was not completely initialized with value passed as parameter to the printf because double size memory buffer area is greater than int size\n')
('double', 'larger', 'int', '44542353', 'the undefined behaviour as identified in other answers is explained on my intel platform with vc as that the f format specifier expects a double on the stack which is larger than an int so when it retrieves the value it retrieves more bytes than of an int and now assumes the next parameter at a diferent position on the stack causing z to be printed wrong it is not z that is printed\n')
('double', 'greater sizeof', 'int', '11321381', 'alternatively if fieldsize is equal to sizeof double and sizeof double is greater than sizeof int then you are writing off the end of d_buffer and then something is corrupting your data\n')

precision bits actual
('double', 'range more', 'int', '2582032', 'double has range more than a 64-bit int but its precision is less dues to its representation since double is 64-bit as well it can t fit more actual values\n')
('int', 'smaller', 'double', '31627536', 'since an int is representing by a non-decimal number 1 and a double is represented by a decimal-number with precision 32 bytes more than that of a float 1.0 we can say that int s are less than or smaller than double s and by that logic int s can be promoted to double s and double s can be demoted to int s\n')
('double', 'precision less bits', 'int', '38489471', 'however if you have large enough number the limit checking does not work because 64bit double precision has less bits usually 54 but this is not defined in standard for the fractions part than a 64bit int\n')
('int', 'greater', 'double', '22740584', 'if a 64-bit long is written as an int and is greater than 2 53 ieee double has a 52-bit mantissa then reading it as a double will lose precision\n')
('int', 'more bits', 'double', '14313668', 'you can work around this issue if you ll advance to big int floating point numbers that store more bits than a double precision number\n')
('int', 'more', 'double', '9447869', 'as soon as the int needs more than 29 bits the atom is changed by the vm into a number type which is really represented as a 29 bit pointer to the actual 64 bit double precision float\n')

specific void first
('int', 'more', 'double', '2521374', 'by contrast void doitagain int is more specific than void doitagain double because int is a subtype of double according the the jls\n')
('double', 'less specific', 'int', '42050694', 'so overloadedsingleparam double a is less specific than void overloadedsingleparam int a when an int value is passed as argument\n')
('int', 'indeed more', 'double', '42046449', 'an implicit conversion from byte to int is indeed more specific than an implicit conversion from byte to double according to widening primitive conversions rules\n')
('int', 'more specific', 'double', '42046449', 'we could check that void mymethod int i is more specific than void mymethod double a if any invocation handled by the first method can be passed on to the other one without a compile-time type error\n')
('int', 'more specific', 'double', '32293611', 'this behaviour is due to the fact that int is more specific than double while there is no such comparison between int and boolean\n')
('int', 'more specific', 'double', '19436196', 'i thought when i pass 1 as the argument java would have picked the first argument because int is more specific than double\n')
('int', 'less specific', 'double', '25924211', 'this is java detecting what you are doing and thinking it may be a mistake on your part - int s are less specific than double s\n')

length value
('double', 'more', 'int', '22203178', 'double s length is way more than int that s why you should be checking int first\n')
('int', 'less', 'double', '35931486', 'or a value for int a that is 6 less than double c\n')

narrower type positive
('int', 'narrower', 'double', '19591563', 'i believe the following works as a sort comparison function for positive int provided the int type used is substantially narrower than the double type 32-bit int and 64-bit double and the log10 routine used returns exactly correct results for exact powers of 10 which a good implementation does\n')
('int', 'type substantially narrower', 'double', '19591563', 'the int portions of the logarithms of 31 and 310 use different numbers of bits so there are different numbers of bits left for the significand so they end up being rounded to slightly different values. as long as the int type is substantially narrower than the double type the calculated limit will be much larger than the error in log10\n')

likely overruns bear
('double', 'larger', 'int', '33913731', 'bear in mind that if the double returned is larger or smaller than that which can be held in an int then the program behaviour is undefined\n')
('double', 'bigger', 'int', '11001264', 'with the cast that bad stuff is undefined behavior most likely double is bigger than int and it overruns the memory for i\n')

faster slower machine
('int', 'slower', 'double', '10107000', 'even dividing int is slower than multiplying floats or double in some cases\n')
('double', 'slower manipulations', 'int', '41633258', 'also after the first coercion from a side effect of a benchmark as noted above r will operate on double s and that contains slower manipulations than on int s\n')
('int', 'slower', 'double', '7896213', 'with it is nub on and comparing big int is slower than comparing double\n')
('int', 'faster', 'double', '37742530', 'maybe division between double and int is faster than it between double\n')
('int', 'math faster', 'double', '31346703', 'often using int math is faster than double\n')
('int', 'faster pow', 'double', '25354205', 'this can t help performance either since pow double int is significantly faster than pow double double in general\n')
('double', 'faster', 'int', '12443760', 'on my machine the double swap loop completes 11 times faster than the int swap loop\n')
('double', 'faster', 'int', '594466', 'so i asked myself can a double be faster than a int\n')
('double', 'much slower', 'int', '15298409', 'double is much slower than int\n')
('double', 'less', 'int', '526070', 'similarly when i cast a double that is less than the minimum possible int i also get -2147483648\n')
('int', 'faster', 'double', '24159693', 'int subtractions are 2.5 times faster than double subtractions on my machine\n')
('double', 'little less', 'int', '35802753', 'you will get 24 if pow 10 2 returns a double that is little less than 100 99.9999999998765 which when cast to int would be truncated resulting in 99 and thus you get\n')
('int', 'faster', 'double', '24159693', 'int multiplications however are only 1.5 times faster than double multiplications\n')
('double', 'slower', 'int', '16741312', 'incrementing the value might be a special case but it s possible that on your machine incrementing double is slower than incrementing int\n')

solution small fractions
('double', 'bigger', 'int', '2551657', 'edit actually my solution does not work because double can be very big much bigger than int and also very small like fractions\n')
('int', 'quicker float', 'double', '11286328', 'a solution using int only calculations should be quicker than float double calculations is\n')

performance better version
('int', 'faster', 'double', '45876593', 'the versions using diff are especially impacted ave_diff with int constants is about 2.5 times faster than the double contants version\n')
('int', 'better', 'double', '29631941', 'byte takes less memory than double and int and provides better performance than bigger datatypes especially better than double\n')
('int', 'better performance', 'double', '3676567', 'i m writing a c# class to perform 2d separable convolution using int to obtain better performance than double counterpart\n')
('int', 'better', 'double', '36965719', 'well in multithread the performance of the int version is 2.6 times better than the double precision\n')
('int', 'better', 'double', '14285655', 'note how i cast the result to int which is better suited for years than the double precision returned by extract\n')

closest math.ceil math.floor
('int', 'less', 'double', '7472356', 'you can also use math.floor double to get the closest int that is less than the double\n')
('int', 'more', 'double', '7472356', 'or math.ceil double which returns the closest int that is more than the double\n')

largest form equal
('int', 'less', 'double', '3027395', 'it implicitly converts an int to a double gets the double form of largest int that is less or equal to that double and converts that back to an int\n')
('int', 'less memory', 'double', '13566079', 'typically an int will use less memory than a double that is why one doesn t just use the largest possible datatype\n')

aware inexactness inexact
('double', 'less', 'int', '23666565', 'as far as i m aware so long as the spacing between two double is less than 2 then int values stored as double should be exact - and though 10 14 is pushing it this should be an exact int since 10 14 2 46.507 2 53\n')
('double', 'more inexact', 'int', '14701685', 'about the inexactness problem you should be aware that double can be more inexact than int\n')

64-bit instructions equivalent
('double', 'less', 'int', '3481367', 'that wouldn t work on platforms where a double is less than 64 bits but it would work on many platforms without 64-bit int\n')
('int', 'types more instructions', 'double', '6385312', 'on a 32-bit machine doing addition and comparison on 64-bit int types takes more instructions than doing the equivalent on double s\n')

type lower rank
('int', 'smaller rank', 'double', '25343540', 'for historical reasons you can not pass an int argument of smaller rank than int or a floating type of smaller rank than double to a variadic function\n')
('double', 'higher values', 'int', '17379031', 'to prevent the code from overflowing the int value space you should could change the type of res to double long anything that can hold higher values than int\n')
('int', 'lower', 'double', '18709820', 'num is a of type const int which is of lower rank when compared to the type of z which is double\n')
('int', 'lower', 'double', '13589067', 'so no arguments after the 1st one get automatically converted except as defined by default argument conversions basically any int type with a rank lower than int to int and any floating-point type with a rank lower than double to double thank you pascal cuoq\n')
('double', 'lower ranges', 'int', '25831721', 'if we use float data type in java we have to add f at the end of floating point literal as java assumes it to be double data type and gives an error why not do the same for short and byte as both have lower ranges than int\n')
('double', 'higher precision', 'int', '19565419', 'you can assign the int s returned from integer.parseint string s to your double variables because double s are higher precision than int s and so type conversion happens automatically without the need for an explicit cast\n')

better match overload
('int', 'better', 'double', '28466553', 'with gcc 4.9 it prints error because the second overload isn t discarded and int is a better match than double\n')
('int', 'better', 'double', '27318100', 'is simply a hard error because f int is a better match than f double even though the f int overload causes a hard error further on\n')
('double', 'better fit', 'int', '38239419', 'so your compiler picks the double constructor as a better fit than the int one\n')
('int', 'better results', 'double', '5787578', 'if you use int between -128 and 127 you will get much better results than double from -128 to 127 because the former uses caches values the later does not\n')
('double', 'better', 'int', '17306689', 'except that double is much better than int for storing the join_angle in radians\n')
('int', 'better', 'double', '22307506', 'imho int looks better than double in your task\n')

difference clock cycles
('int', 'faster', 'double', '16298551', 'the difference is that int are still faster than double because it takes very few clock cycles to do arithmetic operations on int\n')
('int', 'slower code', 'double', '2242618', 'using and at the same time to check equality on a int results in slower code because it takes two comparisons instead of one taking the double amount of time\n')

arithmetic complex modern
('int', 'more efficient', 'double', '7998350', 'if you want the modulus use as it gives an int and would be more efficient than double arithmetic\n')
('double', 'precision much more complex', 'int', '3632503', 'as for the last question floating point arithmetic particularly double precision is much more complex than int arithmetic so on a reasonably modern pipelined processor each instruction will take longer to execute\n')

uicollectionview	uitableview---------------------------------------------------

pagespeed	yslow---------------------------------------------------

nexus	artifactory---------------------------------------------------

cin	cout---------------------------------------------------

little preferable situations
('cin', 'more practical', 'cout', '14757282', 'there are obviously situations where in c++ scanf is preferable to cin i was wondering if there are any situations where printf is more practical than cout\n')
('cin', 'printf faster', 'cout', '780111', 'scanf is faster than cin printf is faster than cout etc\n')
('cout', 'faster', 'cin', '22112628', 'using printf isn t faster than cout but scanf is a little faster than cin 0.04s + - 0.05\n')

macports	fink---------------------------------------------------

stable top access
('fink', 'reputedly more stable', 'macports', '4527378', 'because fink is reputedly more stable than macports and has many more packages\n')
('fink', 'more packages', 'macports', '3822232', 'fink has more packages than macports\n')
('fink', 'more packages', 'macports', '4396834', 'on top of that fink gives you access to more packages than macports\n')

cudnn	theano---------------------------------------------------

landscape	portrait---------------------------------------------------

screen mode smaller
('landscape', 'mode lower then', 'portrait', '45437891', 'you have this issue because height in landscape mode is lower then in portrait\n')
('portrait', 'choppier', 'landscape', '11651304', 'if you switch between portrait and landscape when viewing this on an ipad3 you ll need to refresh the browser window between switches you can see that portrait mode is choppier than landscape\n')
('landscape', 'more', 'portrait', '40165509', 'in landscape it has more buttons in addition to what is there in portrait mode\n')
('portrait', 'more', 'landscape', '29184666', 'then you can write separate css for width less than 650px portrait more than 650 landscape\n')
('landscape', 'bigger', 'portrait', '35218575', 'you are using the screen size to generate your placeholder image and the width of the screen in landscape is bigger than portrait\n')
('landscape', 'smaller', 'portrait', '7752076', 'because in landscape your height is smaller than in portrait you need to have a value smaller than 1.0\n')
('portrait', 'mode less', 'landscape', '15405098', 'now my doubt is when i rotate it to portrait mode from landscape mode since the width of the textblocks present inside the itemtemplate of listbox is already defined when i rotate the it to portrait i am not able to see all the data present it cuts off since the width of the portrait mode is less when compared to landscape mode\n')
('landscape', 'smaller', 'portrait', '39829397', 'your imageview in landscape is smaller than portrait\n')
('portrait', 'lower', 'landscape', '3222095', 'without more detail it s hard to say why your approach doesn t work but my guess is that you are seeing the sprite positioning you describe as a result of the fact that if you don t change orientation the lower left in portrait is the lower right in landscape when rotated left it s the same point in gl space 0 0\n')
('portrait', 'mode greater', 'landscape', '19364430', 'the amount of spacing to the right of the uiview when in portrait mode is greater than i want for landscape mode and the distance from the bottom is less than i want for landscape mode\n')
('landscape', 'larger', 'portrait', '38283302', 'i had an outlet of a viewgraph which was a subclass of uiview in which i drew some graphics.in landscape mode the size of the viewgraph is larger than in portrait mode\n')
('landscape', 'bigger', 'portrait', '25076470', 'my problem with this is that the calculation works fine in the portrait mode but as soon as i switch to landscape mode the distance between bottom and button is bigger than in portrait mode\n')
('portrait', 'bigger topbar', 'landscape', '29092300', 'topbar portrait height is bigger than topbar landscape height everywhere except iphone 6 plus\n')
('portrait', 'mode more', 'landscape', '32246796', 'its because the height of the screen in portrait mode is more when compared to height of the screen in landscape mode\n')
('landscape', 'more space', 'portrait', '32267160', 'in portrait the spacing is decent but in landscape mode i feel like the graphs should be bigger and take up more space than in portrait mode which is simply not possible with the tab bar and navigation bar\n')
('landscape', 'less', 'portrait', '43578371', 'on an iphone compact in landscape mode the status bar is hidden and the navigation bar height is less than in portrait\n')
('portrait', 'smaller', 'landscape', '13646497', 'obviously i want in portrait view the content area of this iframe to be smaller than in landscape\n')
('portrait', 'more rows', 'landscape', '15130794', 'portrait mode can display more rows than in landscape mode\n')

css nothing images
('portrait', 'layout more', 'landscape', '34962474', 'i guess you are able to see the complete layout in portrait just because portrait layout is having more space and your complete layout is fitting well but landscape is having lesser space\n')
('landscape', 'more horizontal space', 'portrait', '45057795', 'i want all of the images to fit inside the width of the text area which will change dynamically with the window size and i want them all to be the same height meaning of course that landscape images take up more horizontal space than portrait ones etc\n')
('landscape', 'lesser space', 'portrait', '34962474', 'as landscape has lesser space than portrait you are able to view only top scrollview so only that portion would be scrollable\n')
('landscape', 'wider', 'portrait', '19877662', 'as long as landscape means wider than taller and portrait viceversa it means to read the image into memory and check width and height\n')
('landscape', 'cell much wider', 'portrait', '28429494', 'the difference between a min and max dimension can be very large as the given area covered by a landscape cell is much wider and shorter than a portrait cell\n')
('portrait', 'taller', 'landscape', '29357275', 'portrait is taller landscape is wider\n')
('portrait', 'taller', 'landscape', '34425898', 'i am trying to make all a row of 4 images all have the same height size i already tried to play around with the width and height using css but nothing seems to work the portrait images always end up taller than the landscape ones here s the code\n')
('landscape', 'narrower', 'portrait', '25353972', 'as you can see the bottom two photos landscape so have been rotated are narrower than the portrait ones at the top\n')

compareto	equals---------------------------------------------------

bigger lesser numbers
('compareto', 'greater', 'equals', '11146653', 'i am using the compareto method in java to try and check if a certain date is greater than or equals than 24 hours after another date\n')
('compareto', 'less', 'equals', '35256125', 'the compareto method returns one of -1 0 1 depending on whether or not the argument is less than equals to or greater than respectively\n')
('compareto', 'less', 'equals', '2045608', 'in the compareto method you can then write the code which will call the getters for the year month and so on until it figures out whether the current object is less than equals to or greater than the object o being passed into the compareto method\n')
('compareto', 'less', 'equals', '14918703', 'compareto return a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '30146917', 'is a generic type at compile time java will require that an instance provide an implementation of int compareto t o which from the javadoc returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '43117226', 'according to javadoc compareto needs to return a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'bigger', 'equals', '40578389', 'we can call its compareto method to decide whether it is bigger than equals to or less than any int\n')
('compareto', 'less', 'equals', '1168889', 'compareto compares values and returns an int which tells if the values compare less than equals or greater than\n')
('compareto', 'less', 'equals', '22751028', 'with this rather than needing to implement a comparator all you need to implement is the int compareto class o method in the class which returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object.\n')
('compareto', 'greater less', 'equals', '27367410', 'the only significance of a compareto return value is if it is greater less than or equals to zero\n')
('compareto', 'less', 'equals', '20005392', 'i know that in java there is a compareto method that you can write in a class that will compare two variables and return a value -1 1 or 0 signifing greater than less than and equals to operations\n')
('compareto', 'less', 'equals', '27008416', 'in the compareto method you can decide which fields are used for the comparison greater less than or equals\n')
('compareto', 'greater', 'equals', '22186019', 'the compareto method returns 1 0 or -1 depending on whether value a is respectively greater than equals to or lesser than value b\n')
('compareto', 'less', 'equals', '8528899', 'or is it compareto returns negative numbers 0 and positive numbers respectively indicating whether the calling object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '13620180', 'this interface defines the method compareto t which will return a negative number zero or a positive number if the first object is less than equals to or greater than the other one respectively\n')
('compareto', 'less', 'equals', '17790456', 'compareto returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '2504816', 'the interface defines one method compareto that must return a negative integer zero or a positive integer if this object is less than equals to or greater than the other object respectively\n')
('compareto', 'greater', 'equals', '21615168', 'you need to call the compareto method which will indicate the result of the comparison by returning an integer less than greater than or equals to 0\n')
('compareto', 'less', 'equals', '26910623', 'you should be using compareto method for less than or equals or greater than\n')
('compareto', 'less', 'equals', '8694958', 'icomparable declares the compareto method which returns an integer that specifies a less than equals to or greater than relationship between two objects of the same type\n')
('compareto', 'less', 'equals', '13719521', 'compareto method returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')

localization	translation---------------------------------------------------

short	base---------------------------------------------------

namedtuple	dictionary---------------------------------------------------

use lists lower
('dictionary', 'better', 'namedtuple', '30406083', 'depending on your use case a dictionary might fit better than a namedtuple\n')
('namedtuple', 'lower overhead', 'dictionary', '9072260', 'namedtuple have a lower overhead than dictionary since the duplicate keys don t have to be stored per item but have the convenience of named access\n')
('namedtuple', 'less overhead', 'dictionary', '36613126', 'namedtuple should perform better less overhead than dictionary if the lists are long\n')

polygons	distance---------------------------------------------------

httphandler	httpmodule---------------------------------------------------

swift	objective-c---------------------------------------------------

faster slower compiler
('swift', 'more', 'objective-c', '27570223', 'swift s compiler is also doing a lot more than objective-c s compiler considering swift is more strongly typed and does not required specifying imports among other things\n')
('objective-c', 'faster', 'swift', '24078665', 'my view is that if in some cases objective-c is faster than swift it doesn t mean that all over performance of swift is slower\n')
('swift', 'more faster', 'objective-c', '24078665', 'and also apple does might not confidently announce that swift is more faster than objective-c in all the cases\n')
('swift', 'faster', 'objective-c', '24019229', 'as craig revealed within the announcement of swift it is said to be faster than objective-c by far\n')
('swift', 'newer', 'objective-c', '42119927', 'the swift compiler is doing a lot more and is quite a bit newer than the objective-c compiler so it unlikely it will be as stable fast for quite some time\n')
('swift', 'faster pure', 'objective-c', '28699167', 'it is possible for swift to be faster than pure objective-c in things that you would traditionally use c or c++ for anyway\n')
('swift', 'dramatically slower then', 'objective-c', '26990394', 'the swift one is dramatically slower then objective-c implementation\n')
('swift', 'faster', 'objective-c', '28162623', 'bottom line i would personally hesitate to draw any simple conclusions of swift is faster than objective-c or vice versa\n')
('swift', 'faster', 'objective-c', '34341377', 'most importantly for your image processing app the compiler will optimize swift code to run faster than objective-c\n')
('swift', 'slower', 'objective-c', '37892309', 'wouldn t swift be slower than objective-c in this case since it is layered on top of it\n')
('swift', 'faster', 'objective-c', '38899257', 'the perf hit will be ridiculous i know apple say swift execute faster than objective-c but this is low level so it will be harmless\n')
('swift', 'code slower', 'objective-c', '26991969', 'there are multiple reasons why the swift code is slower than the objective-c code\n')
('swift', 'faster', 'objective-c', '24765759', 'i don t think that as of today you can run these tests and determine with any certainty whether swift 1.0 is faster or slower than objective-c\n')

familiar apps unfamiliar
('objective-c', 'more familiar', 'swift', '30496890', 'this article seems to suggest that this is possible by swizzling a fake location into apple s cllocationmanager class to be used by other apps but i am unfamiliar with the objective-c code more familiar with swift\n')
('swift', 'less familiar', 'objective-c', '32918935', 'i m learning swift and much less familiar with objective-c but for the life of me i can t figure out how they are trying to achieve the goal stated as build list of encodings sorted and including only those with human readable names.\n')

syntax new wise
('swift', 'more', 'objective-c', '38606180', 'im new to swift but i like it more than objective-c as it looks a bit like java does to me from syntax wise compared to objective-c\n')
('objective-c', 'more comfortable', 'swift', '38241771', 'however i read that swift was the successor of objective-c and i would feel more comfortable with swift syntax\n')

class easier method
('swift', 'easier', 'objective-c', '4850967', 'download xcode free and learn objective-c or swift swift is easier to learn than objective-c\n')
('swift', 'easier', 'objective-c', '30210640', 'on the other hand swift is easier to learn especially if you have objective-c background so it can be adopted during the time slowly and paralelly with using objective-c\n')
('swift', 'easier', 'objective-c', '45696488', 'early this month i started learning swift as i found it fun and easier than objective-c\n')
('swift', 'much easier', 'objective-c', '38170278', 'as you can see defining a singleton class in swift is much easier than in objective-c\n')
('objective-c', 'much more free', 'swift', '37682771', 'objective-c is much more free and easy with types and compilation checks where swift isn t\n')
('swift', 'better', 'objective-c', '29049334', 'swift also prevents us i believe from overriding a parent class s property but also still lets us observe changes to that property--this is much better than objective-c s approach\n')
('swift', 'more static', 'objective-c', '24050500', 'we ve seen that swift uses a more static method dispatch than objective-c which unless a class dervices from foundation nsobject prevents the style of swizzling based on remapping method implementations at runtime\n')
('swift', 'lot smarter', 'objective-c', '33758594', 'swift is lot smarter than objective-c about singleton class\n')
('swift', 'cleaner', 'objective-c', '33330810', 'usually i find swift s method naming to be cleaner than objective-c s but init methods can be an exception\n')

application fine unit
('swift', 'application harder', 'objective-c', '28549095', 'injecting code in a swift application is harder than it was for an objective-c application but it s still possible\n')
('swift', 'application much bigger', 'objective-c', '28741895', 'executable size of swift application is much bigger than size of objective-c application\n')
('objective-c', 'more comfortable', 'swift', '27609828', 'i have a objective-c application working fine and smooth to be more comfortable with swift i decided to write the unit tests for this app in swift\n')

readable print
('objective-c', 'print more', 'swift', '42978589', 'objective-c print is more readable compared to swift\n')
('swift', 'more readable', 'objective-c', '36220153', 'with swift the code is much more readable than with objective-c\n')

use
('objective-c', 'more', 'swift', '33544254', 'i use objective-c more than swift\n')
('objective-c', 'more', 'swift', '33706305', 'also note that i use objective-c more than swift\n')

better safer safe
('swift', 'better', 'objective-c', '24049884', 'so i ve started learning swift because it looks way better than objective-c\n')
('swift', 'better', 'objective-c', '27468779', 'better if you have a code swift is better but is not problem objective-c\n')
('swift', 'easier', 'objective-c', '28699167', 'swift is neither easier to read nor understand than objective-c\n')
('swift', 'less safe', 'objective-c', '41691607', 'swift in that case would not be safer but less safe than objective-c\n')

applications older programming
('objective-c', 'older', 'swift', '39811417', 'as objective-c is the older programming language for ios or macos applications swift allows you to use those classes structs in your code\n')
('swift', 'more', 'objective-c', '32190188', 'writing swift 2.0 in my professional work my personal opinion is that it s indeed ready for enterprise applications -- maybe even more than objective-c ever were\n')

piston	tastypie---------------------------------------------------

query similar luck
('piston', 'better luck', 'tastypie', '2397232', '- similar to piston but i ve had better luck with tastypie\n')
('tastypie', 'better', 'piston', '15662815', 'edit i found out that piston was proposing query throttling but everywhere people say that tastypie is better than piston\n')

ini	config---------------------------------------------------

sudo	passwd---------------------------------------------------

datamapper	activerecord---------------------------------------------------

complex easier domain
('datamapper', 'potentially more', 'activerecord', '94070', 'datamapper is potentially more complex then activerecord but it s a lot easier to develop your domain model and database asynchronous then with activerecord\n')
('datamapper', 'model much easier', 'activerecord', '4338143', 'from my point of view the datamapper model is much easier to grasp but since activerecord is the defacto standard it feels weird to change the orm just for this little problem\n')

smarter newer better
('datamapper', 'newer', 'activerecord', '3828562', 'datamapper is newer than activerecord\n')
('datamapper', 'newer', 'activerecord', '3828265', 'so a question for those who know better is datamapper newer than activerecord\n')
('datamapper', 'much smarter', 'activerecord', '5351338', 'datamapper is much smarter then activerecord\n')

ienumerable	iqueryable---------------------------------------------------

calls quicker place
('iqueryable', 'way quicker', 'ienumerable', '17920394', 'with really basic calls to the database iqueryable is way quicker but when do i need to think about using an ienumerable in its place\n')
('iqueryable', 'more suitable', 'ienumerable', '13622131', 'i d say iqueryable is more suitable for interaction with a database than ienumerable is\n')

better query linq
('iqueryable', 'better', 'ienumerable', '7791066', 'i have read about ienumerable and iqueryable i have read that iqueryable is better with linq because when you use where clauses it creates the exact query it needs but with ienumerable it retrieves all rows from database and then filters on memory\n')
('iqueryable', 'better', 'ienumerable', '36964658', 'what i know is using iqueryable is better than ienumerable if another query is going to be performed\n')

generic instances
('ienumerable', 'more', 'iqueryable', '23475916', 'ienumerable is more generic than iqueryable though all\n')
('ienumerable', 'more generic', 'iqueryable', '20529312', 'ienumerable is more generic than iqueryable though all instances of iqueryable implement ienumerable and only defines\n')

elasticsearch	kibana---------------------------------------------------

opera	google-chrome---------------------------------------------------

addition	multiplying---------------------------------------------------

boilerplate operation complex
('multiplying', 'more complex', 'addition', '28311068', 'however multiplying is a more complex operation than addition or shifting\n')
('multiplying', 'more complex', 'addition', '23188645', 'the boilerplate code would multiplying rapidly when the express get more complex than addition of two terms\n')

stateful	stateless---------------------------------------------------

kinds transactions faster
('stateless', 'faster', 'stateful', '5497077', 'for certain kinds of transactions a stateless session may perform slightly faster than a stateful session\n')
('stateless', 'better', 'stateful', '17227882', 'in ejb3 there is no such thing as stateless is better than stateful session beans\n')
('stateless', 'lighter', 'stateful', '40551515', 'service to build drools knowledge and get session i prepared a stateless engine lighter than the stateful one\n')

implements	extends---------------------------------------------------

runnable better thread
('implements', 'runnable more preferrable', 'extends', '22595284', 'they say that implements runnable is more preferrable than extends thread\n')
('implements', 'runnable better', 'extends', '21962174', 'implements runnable is better because you can extends other classes\n')
('implements', 'better option', 'extends', '2782744', 'why is implements runnable a better option than extends from thread class\n')
('implements', 'better', 'extends', '17311842', 'i also know implements runable is better than extends thread\n')
('implements', 'runnable better', 'extends', '28491250', 'i have read that implements runnable is better than extends thread but i have no idea of how\n')
('implements', 'better system', 'extends', '3311788', 'i have not found a lot of times when implements an interface would be a better system than extends a superclass\n')

note mouseadapter easier
('extends', 'easier', 'implements', '18354161', 'second in order to add or update the value of listview in general extends arrayadapter is much easier than implements baseadapter because of arrayadapter support add remove insert method by itself\n')
('extends', 'mouseadapter easier', 'implements', '42584044', 'note extends mouseadapter is easier since you only need to implements the methods you want to handle\n')

ubuntu	centos---------------------------------------------------

xapian	whoosh---------------------------------------------------

outputstream	inputstream---------------------------------------------------

vmware	virtualbox---------------------------------------------------

better slower server
('virtualbox', 'slower', 'vmware', '46375001', 'virtualbox is slower than vmware\n')
('vmware', 'faster', 'virtualbox', '12349097', 'from my experience vmware 5 is faster than virtualbox 4.2 rc3 and has better smp performance\n')
('vmware', 'better', 'virtualbox', '5763931', 'i am not sure if vmware server will be much better than virtualbox\n')
('virtualbox', 'better', 'vmware', '3791405', 'fwiw i have never gotten freebsd to work properly under virtualbox perhaps if you need that you would be better off with vmware which does\n')
('vmware', 'faster', 'virtualbox', '630233', 'in my experience i ve found that vmware seems to be faster than virtualbox although i don t have any hard data to back it up\n')

good free powerfull
('virtualbox', 'less powerfull', 'vmware', '8107257', 'virtualbox free but less powerfull than vmware\n')
('vmware', 'faster', 'virtualbox', '630233', 'even though vmware has been faster for me i still use virtualbox because it s good enough and is free and im cheap\n')

listview	gridview---------------------------------------------------

easier better
('gridview', 'better', 'listview', '37560070', 'i think using a gridview is better for your case than a listview\n')
('listview', 'easier', 'gridview', '36362028', 'you may also consider using a listview which is easier to customize than the gridview\n')

situation dataview clean
('listview', 'better', 'gridview', '16225337', 'i think the listview is better than gridview in this situation\n')
('listview', 'better', 'gridview', '10809', 'listview much better than the gridview dataview in that they let you write out clean html\n')

control article fit
('gridview', 'much finer', 'listview', '31765196', 'i believe gridview allows much finer grained control of display than does listview\n')
('listview', 'better fit', 'gridview', '13209588', 'here s another article that describes the listview control and why it s probably a better fit than the gridview\n')

mayavi	matplotlib---------------------------------------------------

stuff past performance
('mayavi', 'better', 'matplotlib', '46457858', 'personally i ve used mayavi in the past and found the performance much better than matplotlib for 3d scatter plotting though the python bindings are somewhat in question moving forward i think\n')
('mayavi', 'way better', 'matplotlib', '20386398', 'anyway if you re willing to do advanced 3d stuff mayavi is way better than matplotlib\n')

google-chrome	firefox---------------------------------------------------

higher smaller bigger
('google-chrome', 'smaller', 'firefox', '5699024', 'if we remove the font-size it appears properly in google-chrome but shows up smaller in firefox\n')
('google-chrome', 'smaller', 'firefox', '12990034', 'google-chrome renders passwords smaller than firefox\n')
('firefox', 'less width', 'google-chrome', '19814480', 'firefox has like 40px less width than google-chrome in columns which is causing problems\n')
('google-chrome', 'higher', 'firefox', '11208545', 'on linux google-chrome displays text about one pixel higher than firefox and opera\n')
('firefox', 'higher', 'google-chrome', '14882752', 'for my website i noticed that tooltip delay in firefox was much higher than in google-chrome\n')
('firefox', 'perhaps more right', 'google-chrome', '20625114', 'thus i think firefox is perhaps more right but other developers at google-chrome think otherwise\n')
('google-chrome', 'smaller', 'firefox', '23072956', 'my question is similar the same page in my pc renders fine firefox google-chrome but the same one on a server rendered smaller by firefox google-chrome ok\n')
('firefox', 'more padding', 'google-chrome', '38729442', 'firefox s default textbox includes more padding than ie google-chrome\n')
('firefox', 'larger', 'google-chrome', '19429156', 'for example if you have a text size of 15px well firefox makes a larger 15px than google-chrome does\n')
('firefox', 'larger', 'google-chrome', '24077137', 'i ve found that the font-size in firefox is a bit larger than in google-chrome\n')
('firefox', 'smaller', 'google-chrome', '8850307', 'if i remove this code the width of green image in firefox becomes smaller but it s still bigger than necessary about 100px the google-chrome images keeps unchanged\n')
('firefox', 'greater', 'google-chrome', '13198764', 'i ve ran into out of memory errors on firefox with canvas heights greater than 8000 google-chrome seems to handle much higher at least to 32000\n')
('google-chrome', 'higher', 'firefox', '2512461', 'so i wonder the benchmark is also influenced by the installed extensions or google-chrome is really so much higher than firefox in performance\n')
('firefox', 'bolder', 'google-chrome', '16221732', 'font-face bold in firefox is bolder than in google-chrome\n')
('google-chrome', 'higher', 'firefox', '7012987', 'in google-chrome it is appearing higher than the original in firefox\n')
('google-chrome', 'thinner', 'firefox', '12303054', 'even then google-chrome s fonts look thinner than in firefox or ie\n')
('firefox', 'wider', 'google-chrome', '35241820', 'the same word in firefox look wider than in google-chrome\n')
('google-chrome', 'longer input', 'firefox', '30248543', 'google-chrome renders longer input fields than firefox and ie\n')
('firefox', 'lower', 'google-chrome', '11021028', 'firefox text is 1px lower than in google-chrome and ie\n')
('firefox', 'lower', 'google-chrome', '15483083', 'in firefox it seems that this is 1px lower than in google-chrome and safari\n')
('google-chrome', 'wider', 'firefox', '19297982', 'in google-chrome the button is wider than in firefox\n')
('firefox', 'higher security', 'google-chrome', '28196310', 'found that the issue stemmed from using the firefox webdriver which apparently has much higher security than its google-chrome counterpart\n')
('firefox', 'smaller left', 'google-chrome', '25310350', 'why in firefox text smaller left than in google-chrome and opera right\n')
('firefox', 'higher', 'google-chrome', '11648488', 'i know different engines render fonts differently and but the issue i m having is that firefox renders the font higher than google-chrome - at the size i am displaying the font this is very noticeable 3 or 4 px - which on a button means they re totally misaligned\n')
('google-chrome', 'larger heights', 'firefox', '34256894', 'suffice to say ie and google-chrome start having problems at larger heights than does firefox\n')
('firefox', 'bigger', 'google-chrome', '11542460', 'here the working header request with firefox bigger than google-chrome request\n')
('firefox', 'taller', 'google-chrome', '6557784', 'by highlighting the shape of the two elements you can see that in firefox left the button is 2px taller than in google-chrome right\n')
('google-chrome', 'more spacing', 'firefox', '3702732', 'any ideas why google-chrome is apply more spacing than firefox ie\n')
('google-chrome', 'more', 'firefox', '14686908', 'the issue that i encountered was that google-chrome was giving me height about 300px more than the firefox ie\n')
('google-chrome', 'bigger', 'firefox', '11782208', 'in google-chrome the green div is bigger than in firefox i really don t know what is the problem i think in firefox it displays as it should but in google-chrome and ie9 it displays different\n')
('firefox', 'smaller', 'google-chrome', '17458265', 'firefox thumbnail 4 times smaller than on google-chrome\n')
('google-chrome', 'larger', 'firefox', '8840940', 'i am checking it in firefox and google-chrome and see that in google-chrome spacing between letter is larger than in firefox\n')
('google-chrome', 'smaller', 'firefox', '11605875', 'in google-chrome the button should be a tad smaller than in firefox\n')
('google-chrome', 'bigger', 'firefox', '7229568', 'why height in google-chrome is bigger than firefox of input\n')
('google-chrome', 'more', 'firefox', '16420086', 'when i run my http web server on google google-chrome it gives more 324 error than in firefox\n')
('google-chrome', 'smaller', 'firefox', '11778005', 'in google-chrome the font appears to be 1px smaller than firefox and ie and i cannot see why\n')
('google-chrome', 'bigger', 'firefox', '4899792', 'i built a site and the problem is google-chrome display font-size 1px bigger than firefox\n')
('firefox', 'wider', 'google-chrome', '46178781', 'even if you give the inputs a attribute firefox renders them wider than google-chrome\n')
('google-chrome', 'bigger', 'firefox', '8817800', 'that happens because pixels size in google-chrome is bigger than in firefox\n')
('firefox', 'taller element', 'google-chrome', '18185150', 'the reason this is happening is because firefox renders the select box as a taller element than google-chrome and the container of the blue text is getting caught on the select s container element because it s now sticking out lower than the others\n')
('firefox', 'bigger height', 'google-chrome', '23845903', 'but in firefox the left-collumn gets a much bigger height than in google-chrome\n')
('google-chrome', 'higher however', 'firefox', '16534059', 'i just found out that if you re using google-chrome you trigger antialiasing at 49px or higher however with firefox it s set at 257px or higher\n')
('firefox', 'higher baseline', 'google-chrome', '14870041', 'ie firefox higher than baseline google-chrome on baseline\n')
('google-chrome', 'larger', 'firefox', '15382071', 'arabic default font in google-chrome is larger than it is in firefox\n')
('firefox', 'reproducible more often', 'google-chrome', '25065194', 'this does not seem to occur in safari or ie and a similar permission error occurs sometimes in firefox but is reproducible more often than not in google-chrome\n')
('firefox', 'bigger', 'google-chrome', '30802594', 'i have too problem with text in the firefox is bigger maybe bolder as in google-chrome .\n')
('google-chrome', 'smaller', 'firefox', '30222783', 'it looks like google-chrome is smaller in your screenshot there so firefox could just not be at the defined break-point yet\n')
('firefox', 'more padding', 'google-chrome', '2954659', 'in firefox the input button has more padding than in google-chrome\n')
('firefox', 'higher', 'google-chrome', '35735824', 'what firefox displays is about 5 inches higher than what google-chrome displays\n')
('firefox', 'smaller', 'google-chrome', '13139755', 'my menu links seem in google-chrome correctly but in firefox my menu links are 1 px smaller than google-chrome\n')
('firefox', 'always higher', 'google-chrome', '7676281', 'the position of the list in firefox is always higher than that of google-chrome no matter how i padding or margin the list\n')
('firefox', 'lower', 'google-chrome', '25118060', 'it seems that in firefox ie the line-through style is a bit lower than google-chrome i am not sure if this is because of the implementation of different browsers or something\n')
('google-chrome', 'taller', 'firefox', '4134107', 'currently with the 10px top padding the cells in google-chrome look taller than in firefox\n')

faster slower browser
('firefox', 'faster', 'google-chrome', '3164817', 'also firefox 4 has hardware accelerated canvas that is marginally faster than ie9 and a lot faster than google-chrome\n')
('google-chrome', 'actually load', 'firefox', '31841419', 'based on what you have provided i cannot tell if google-chrome actually does load faster than firefox\n')
('google-chrome', 'faster', 'firefox', '44011008', 'maybe google-chrome is working faster than firefox try adding a wait with expected conditions\n')
('google-chrome', 'much slower', 'firefox', '8838478', 'because of how google-chrome s plugin system works development mode in google-chrome is much slower than in firefox or safari see here for more details\n')
('google-chrome', 'worse', 'firefox', '23770379', 'though from a design perspective it may be easier to simply add the extra 5px to the width designing for the worst case browser to prevent wrapping in google-chrome which is worse than extra space in firefox ie\n')
('firefox', 'slower', 'google-chrome', '16481858', 'using firefox even it s slower than google-chrome it s still more respectful of privacy\n')
('google-chrome', 'faster', 'firefox', '5746611', 'i use google-chrome for development as i find it runs faster than firefox and ie so it is a bore to guess where the icons are\n')
('google-chrome', 'faster', 'firefox', '1238849', 'the trouble is choosing a good value for x since for this particular page google-chrome is so very much faster than firefox which is faster than ie\n')
('google-chrome', 'faster', 'firefox', '18351894', 'in my experience google-chrome will be a lot faster than firefox to debug huge js files\n')
('google-chrome', 'more details', 'firefox', '17608767', 'i usually use google-chrome s developer mode which imho already gives even more details than firefox\n')
('firefox', 'faster', 'google-chrome', '6774018', 'it s just a matter of preferences and browser implementation eg firefox works faster with brackets while google-chrome works faster with the dots\n')
('firefox', 'slower', 'google-chrome', '24708649', 'update just tried it on firefox 30 and it did not experience the same slowdown in a worker thread but it was slower than google-chrome when run in the main thread\n')
('firefox', 'faster', 'google-chrome', '30830253', 'here is a simple performance test showing that in google-chrome filling is faster than clearing i am not sure what goes on with google-chrome and canvas nowadays but in firefox clearing is many times faster than filling both significantly faster than google-chrome\n')
('google-chrome', 'slower', 'firefox', '22182454', 'also google-chrome s map function is up to 2x slower than firefox on my machine\n')
('firefox', 'worse', 'google-chrome', '6817093', 'google-chrome is lightning fast when you use the dom api but vastly slower using the .innerhtml operator by a magnitude 1000-fold slower however firefox is worse than google-chrome in some areas for instance the append test is much slower than google-chrome but the innerhtml test runs much faster than google-chrome\n')
('google-chrome', 'less', 'firefox', '36332132', 'i need to do the same condition but for less than google-chrome version 46 and for less than firefox version 44\n')
('firefox', 'faster', 'google-chrome', '41419724', 'this makes firefox 50x faster than google-chrome and 70x faster than safari is there any known reason for that\n')
('google-chrome', 'slower', 'firefox', '9050531', 'use firefox rather than google-chrome - google-chrome with dev mode is much slower than firefox\n')
('google-chrome', 'significantly faster', 'firefox', '7221963', 'on google-chrome it s significantly faster to do this using 1 0 but on firefox it s slightly faster to do this using bool\n')
('google-chrome', 'slower', 'firefox', '12583588', 'the reason google-chrome is slower than firefox is that the devmode plugin runs in a sandbox so calls and data have to cross the sandbox boundaries\n')
('google-chrome', 'slower', 'firefox', '40715077', 'google-chrome is extremely slow for your code path but grep seems to be 50 faster than array.filter here making it 900 slower than the firefox run\n')
('google-chrome', 'faster', 'firefox', '35114347', 'as you said google-chrome is faster than firefox so the webdriver is trying to interact with the dom before when elements are not yet visible exist\n')
('firefox', 'slower', 'google-chrome', '3156866', 'firefox is slower than google-chrome in javascript\n')
('google-chrome', 'older', 'firefox', '40642495', 'i would like this function to work in firefox ie google-chrome etc but at the moment it only works in google-chrome and older than firefox version 49\n')
('firefox', 'slower', 'google-chrome', '16188505', 'svg performance in firefox is slower than in webkit google-chrome and ie10\n')
('firefox', 'slower', 'google-chrome', '18308946', 'firefox - good a bit slower than google-chrome\n')
('google-chrome', 'slower', 'firefox', '24051882', 'i have been working with linear parsers lately and noticed the performance in google-chrome v37 was much slower than in firefox v30\n')
('google-chrome', 'faster', 'firefox', '12829930', 'google-chrome is just faster than firefox which just faster than ie at bit-wise operations\n')
('firefox', 'worse', 'google-chrome', '39862190', 'firefox gsap performance is still much worse than in google-chrome but google-chrome gsap does still lag every few repeats or so while in google-chrome the css animations do not\n')
('firefox', 'slower', 'google-chrome', '1233693', 'firefox is slower than google-chrome which boats one of the highest javascript engines a modified version of webkit\n')
('firefox', 'slower', 'google-chrome', '10706070', 'and also does anyone know why is firefox so much slower than google-chrome in 3d rendering\n')
('google-chrome', 'faster', 'firefox', '36034808', 'and of course the results - if they are reproducible - might suggest that google-chrome is faster than firefox or that firefox just prioritises timeouts over dom events\n')
('firefox', 'filter slightly faster', 'google-chrome', '42412501', 'tldr in firefox filter is slightly faster in google-chrome that s the opposite\n')
('google-chrome', 'slower', 'firefox', '23311171', 'do you have any idea why google-chrome loads javascript function much slower than firefox\n')
('google-chrome', 'faster', 'firefox', '11881265', 'rendering without buffering on google-chrome is faster than firefox so i m actually not sure why google-chrome is having such a problem with drawimage\n')
('google-chrome', 'faster', 'firefox', '5299127', 'but i guess google-chrome i have version 10 should be much faster than firefox 3.6\n')
('firefox', 'just stricter', 'google-chrome', '19391406', 'it is also proper browser behavior firefox is just stricter about it than google-chrome is\n')
('firefox', 'slower', 'google-chrome', '11577677', 'in google-chrome it seems .prototype is faster firefox shows no difference between the two although generally performs slower than google-chrome\n')
('firefox', 'greatly faster', 'google-chrome', '19769556', 'i ve found that firefox is greatly faster with imacros than google-chrome\n')
('firefox', 'slower', 'google-chrome', '20740967', 'spidermonkey firefox is slower 50 of google-chrome max speed but the speed is consistent\n')
('firefox', 'slower', 'google-chrome', '16639931', 'why is firefox so much slower than google-chrome on my laptop\n')
('firefox', 'faster', 'google-chrome', '37896235', 'however if thats the case does this mean firefox is faster in execution than google-chrome\n')
('firefox', 'faster', 'google-chrome', '5150147', 'the results varied from a browser to another firefox 4.0b12 is faster using but google-chrome webkit and opera is faster when using\n')
('google-chrome', 'typeof slower', 'firefox', '20680334', 'in google-chrome typeof is slower than the other two but in firefox it is the fastest\n')
('google-chrome', 'even faster', 'firefox', '4952787', 'in ie8 and google-chrome it runs even faster than firefox in general and this slow down never happens\n')
('google-chrome', 'faster', 'firefox', '4213247', 'right now google-chrome is faster than firefox sunspider tests so your statement it loads faster in firefox is not really correct\n')
('firefox', 'slower', 'google-chrome', '12150212', 'i ve tested the sample on firefox and it s a bit slower than google-chrome but usable\n')
('firefox', 'even slower', 'google-chrome', '11057475', 'firefox is even slower that google-chrome\n')
('google-chrome', 'faster', 'firefox', '20655397', 'now when clicking a time less than 1 millisecond will be displayed however it obviously takes nearly a second on my computer until the changed color actually is displayed where btw. google-chrome seems to be faster than firefox\n')
('firefox', 'faster', 'google-chrome', '35612869', 'that means firefox is more than 7x faster than google-chrome here\n')
('firefox', 'smoother', 'google-chrome', '15058125', 'i m on a mac os x 10.8.2 running firefox 18.0.2 - it actually runs the game faster and smoother than my google-chrome 25.0.1364.99\n')
('firefox', 'faster', 'google-chrome', '23763890', 'i am not concerned about the fact that firefox runs faster as browser js implementations will vary so much as the wide spread of results encountered in google-chrome that makes getting an accurate result impossible\n')
('google-chrome', 'less', 'firefox', '8120047', 'the idea is that if they are using ie then they must install google-chrome frame and if they are using less than firefox 4 or opera 11.5 then they must upgrade their browser not not sure if the way i am doing that is correct\n')
('google-chrome', 'longer', 'firefox', '17238511', 'i want to set my own time limit rather than use the browser s default i believe google-chrome s is much longer than firefox s\n')
('google-chrome', 'faster', 'firefox', '19044179', 'the funny thing is that for abc_def property google-chrome is actually much faster than firefox and ie as i expected\n')
('firefox', 'slower', 'google-chrome', '8382400', 'it depends on the browser its definitely true for ie and firefox but seems slower on google-chrome\n')
('google-chrome', 'faster', 'firefox', '7057368', 'as google-chrome s v8 is dramatically faster than firefox s spidermonkey at the moment these things are constantly in flux pick the forward loop as it s faster on the slower engine\n')
('firefox', 'slower', 'google-chrome', '4398883', 'as you can see ie 8 is about 5 times slower than firefox 3.6 and almost 20 times slower than google-chrome 9 at least when using sunspider tests\n')
('google-chrome', 'faster', 'firefox', '27318095', 'for example using renatoargh s test google-chrome is faster with option 2 firefox with option 1\n')

better time browser
('firefox', 'objects better', 'google-chrome', '39372828', 'performance is browser and device dependent for example firefox handles objects better than arrays while google-chrome prefers arrays\n')
('firefox', 'better', 'google-chrome', '12542302', 'firefox handles this better than google-chrome does but neither exactly the way i want\n')
('firefox', 'nicer', 'google-chrome', '21204517', 'in firefox this might be handled a little nicer than google-chrome but rather than completely redraw an element you should try to append only what you need\n')
('google-chrome', 'better', 'firefox', '14895327', 'google-chrome handles these better than compared to firefox\n')
('google-chrome', 'more', 'firefox', '25982053', 'my guess is google-chrome is caching more agressively and thats why you are seeing worse load time on firefox\n')
('firefox', 'much better', 'google-chrome', '29925542', 'on my computer firefox performs much better than google-chrome on these tests using jsperf\n')
('google-chrome', 'better', 'firefox', '19931969', 'in firefox the render of new tiles and the panning is laggy this is not the case when using maps.google.com so it s not an issue of google-chrome being better than firefox\n')
('firefox', 'more sluggish', 'google-chrome', '14176911', 'firefox on nexus 7 is a bit better at producing reasonable sample rate readings but the updating of the display is even more sluggish than google-chrome\n')
('google-chrome', 'chromium much better', 'firefox', '15934117', 'also for animations google-chrome chromium behaves much better that is why i use it for development but do my general browsing in firefox\n')
('firefox', 'better', 'google-chrome', '36229848', 'the logs only seem to work with a google-chrome browser which is a laugh as usually firefox is better at running google apps than google-chrome\n')
('firefox', 'better', 'google-chrome', '30315914', 'my knowledge of firefox is better than google-chrome so my apologies if i missed something\n')
('google-chrome', 'best less so', 'firefox', '12215314', 'the performance in google-chrome is best less so in firefox and ie\n')
('google-chrome', 'better', 'firefox', '11662302', 'when i ran the test individually with a timer google-chrome actually performed better than firefox hope this helps\n')
('firefox', 'much better', 'google-chrome', '8519584', 'ie8 is the same and firefox is much better but i ve migrated away to google-chrome now so would like to stick with the one browser if possible\n')
('google-chrome', 'less conveniently', 'firefox', '28388530', 'what s up with google-chrome that the debugger behaves less conveniently than firefox\n')
('firefox', 'better', 'google-chrome', '25605880', 'i have tried firefox and it better than google-chrome crash issue is not always happen but not solved this issue\n')
('google-chrome', 'better', 'firefox', '17510122', 'bad buffering can also be a result of a slow computer because statistics show that google-chrome is better for a normal-fast computer and firefox works best on slow computers\n')
('firefox', 'quicker even', 'google-chrome', '18477622', 'the most interesting thing i noted is that certain test combos in firefox are much quicker than even google-chrome\n')
('google-chrome', 'better', 'firefox', '7876912', 'the google-chrome apis are currently experimental hence these tools are likely to be better developed under firefox\n')
('firefox', 'better', 'google-chrome', '37640574', 'evidently firefox debugger firebug is better than google-chrome debugger\n')
('google-chrome', 'more restrictive', 'firefox', '5020686', 'no and there won t be any time soon because google-chrome s add-on api is more restrictive than firefox\n')
('firefox', 'much better', 'google-chrome', '26699714', 'in firefox it s much better than google-chrome but still not as black as ie\n')
('firefox', 'more complete', 'google-chrome', '32095422', 'pd note that firefox s developer tools are better and more complete than google-chrome developer tools but in essence are for the same purpose\n')
('google-chrome', 'better', 'firefox', '32425205', 'it seems google-chrome applies some formatting to render better than firefox\n')
('google-chrome', 'better', 'firefox', '25699066', 'google-chrome dev tools are by far better than firefox ie whatever imho\n')
('firefox', 'better', 'google-chrome', '27272144', 'it s not the first time that the plugin for firefox works better for me than the one for google-chrome\n')
('firefox', 'better performance', 'google-chrome', '39681968', 'of late firefox has had much better performance than google-chrome\n')
('google-chrome', 'better', 'firefox', '25318564', 'and additionally the algorithm that google-chrome uses is better than the one in firefox at least for handling the resizing of text\n')
('google-chrome', 'better', 'firefox', '19165746', 'if you are able to enforce browser usage i find that google-chrome on android preserves line breaks when copying and pasting much better than firefox\n')
('firefox', 'better', 'google-chrome', '34924977', 'also why does firefox perform way better than google-chrome on this benchmark\n')
('firefox', 'more', 'google-chrome', '18528300', 'my firefox adds more chopping to video playing itself google-chrome plays the video much better\n')
('google-chrome', 'much better', 'firefox', '3136004', 'is it because google-chrome has much better javascript support than firefox\n')
('google-chrome', 'easier', 'firefox', '4472205', 'another alternative for javascript ajax is writing a google-chrome add-on easier than firefox or embeding a web browser within your application\n')
('google-chrome', 'bigger time', 'firefox', '21867035', 'google-chrome has a bigger time difference yet firefox is the one with the gap in the animation\n')
('google-chrome', 'better', 'firefox', '12899440', 'transparency is also an issue however google-chrome seems to handle all three better than firefox\n')
('google-chrome', 'better imo', 'firefox', '23245240', 'google-chrome sends back and html collection that is longer really better imo than firefox ie or chromium\n')
('firefox', 'better', 'google-chrome', '45403936', 'firefox works a bit better than google-chrome but the settimeout just seems to delay the final result being shown rather than delaying each step\n')
('firefox', 'better browser', 'google-chrome', '30843036', 'although firefox is a better browser for developers than google-chrome cause it gives you more tools to work with\n')
('firefox', 'better', 'google-chrome', '42863498', 'so firefox is better than google-chrome - but both suck in that regard\n')
('firefox', 'better', 'google-chrome', '41484342', 'firefox is easier and better than google-chrome in finding the element from the webpage\n')
('google-chrome', 'situation better', 'firefox', '43033977', 'ps i ve noticed that in google-chrome situation is better than in firefox but new line still starts beneath tag\n')
('firefox', 'lesser extent', 'google-chrome', '6583582', 'this is sporadic and i see it happening most of the time with firefox 4.0.1 and 5.0 and to a lesser extent with google-chrome\n')
('firefox', 'slower', 'google-chrome', '2284148', 'better use google-chrome even thought firefox is not slower than google-chrome for once probably the tracing for the image comparison pays off yay\n')
('firefox', 'consistently better', 'google-chrome', '25606508', 'also it does appear that firefox consistently handles this better than ie or google-chrome\n')
('firefox', 'version better', 'google-chrome', '15244665', 'install firebug firefox version is better then a google-chrome one\n')
('google-chrome', 'better javascript', 'firefox', '5204325', 'in my experience google-chrome has better javascript performance than firefox\n')
('firefox', 'better', 'google-chrome', '45031412', 'also ie and firefox seems to work better than google-chrome\n')
('google-chrome', 'better', 'firefox', '25067464', 'google-chrome shows it better than firefox firebug\n')
('firefox', 'lower', 'google-chrome', '18394282', 'phantomjs achieves a better accuracy than firefox slightly lower than google-chrome but in around half the time of firefox\n')
('firefox', 'better', 'google-chrome', '3341954', 'they use iframes in firefox which seems better but in google-chrome they do this by putting manually defined span and font tags\n')

console first information
('google-chrome', 'more information', 'firefox', '21147622', 'the google-chrome console gives more information than the firefox console\n')
('google-chrome', 'more', 'firefox', '23064942', 'in google-chrome it seems more or less ok but in firefox when i first tried it it should give me not logged in my console\n')

forgiving work extension
('google-chrome', 'just more forgiving', 'firefox', '20167596', 'google-chrome is just more forgiving for some mistakes then firefox\n')
('google-chrome', 'more forgiving', 'firefox', '12391385', 'i guess google-chrome is a bit more forgiving than firefox\n')
('firefox', 'more', 'google-chrome', '20262398', 'i m taking a quite educated guess here that firefox is more forgiving with the irregular syntax than google-chrome\n')
('firefox', 'more standards-compliant', 'google-chrome', '33759931', 'firefox which is more standards-compliant than google-chrome doesn t allow this\n')
('firefox', 'sometimes more', 'google-chrome', '12488412', 'in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n')
('firefox', 'less', 'google-chrome', '42775173', 'also about firefox i know still less than google-chrome and i m not sure about how it innerly manage resources among threads and if it is even possible to achieve what i want but if possible i d need to do the same work with firefox threads\n')
('google-chrome', 'more detailed', 'firefox', '22889989', 'google-chrome provides more detailed information about the ajax errors even when firefox doesn t say anything\n')
('google-chrome', 'older', 'firefox', '6070609', 'i believe the error might be how firefox and google-chrome handles these multiple times included jquerys and it might be that google-chrome uses the older and firefox newer version\n')
('google-chrome', 'more finnicky', 'firefox', '43724970', 'in general i have found google-chrome to be more finnicky than firefox\n')
('firefox', 'more', 'google-chrome', '38256817', '2 install the firefox extension there s also one for google-chrome but the firefox one is more reliable -- so if you re a google-chrome addict like i am then use both\n')
('firefox', 'longer', 'google-chrome', '3591151', 'this is due to the simple fact that firefox has been in the extension business longer than google-chrome or ie\n')
('firefox', 'more forgiving', 'google-chrome', '3008645', 'most likely your post value has one or more characters in it that are breaking the html of the page and ie firefox are being a bit more forgiving than google-chrome is\n')
('firefox', 'more advanced', 'google-chrome', '6916614', 'firefox has a more advanced plugin than the google-chrome extension but both work\n')
('firefox', 'older versions', 'google-chrome', '44939382', 'on stable versions of google-chrome the permissions show allow and it still won t connect even with firefox works older versions of google-chrome work\n')
('firefox', 'less forgiving', 'google-chrome', '27507680', 'actually your code doesn t work on firefox because he is less forgiving than google-chrome about errors\n')
('google-chrome', 'more', 'firefox', '26973643', 'google-chrome is more forgiving or you could call it less compliant firefox less so\n')

characters picky uris
('firefox', 'more', 'google-chrome', '39847666', 'firefox is more picky about characters that are set in uris than google-chrome\n')
('google-chrome', 'more lenient', 'firefox', '5375848', 'maybe google-chrome is more lenient when it comes to illegal characters in the url than firefox or something like that\n')

ram memory
('firefox', 'more', 'google-chrome', '7159127', 'firefox allocates lots of memory during that preloading up to 20-30 times more than google-chrome or safari do and even twice as much as ie\n')
('google-chrome', 'more ram', 'firefox', '36921492', 'we use google-chrome though which i believe uses more ram than firefox\n')

extensions browsers tool
('firefox', 'wider', 'google-chrome', '12569898', 'after looking into the issue with the inspection tools of both browsers it seems that firefox is making the #main_nav_bar ul 10px wider than google-chrome\n')
('firefox', 'more handy', 'google-chrome', '16682516', 'first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n')
('google-chrome', 'quicker', 'firefox', '19350398', 'also google-chrome has a great tool that allows you to edit css on the fly which i find more useful and quicker than using firefox s extensions\n')
('firefox', 'larger', 'google-chrome', '20738370', 'safari and opera work with the google-chrome setting but firefox and ie display the iframed page larger than google-chrome causing part of the text to be cut off\n')
('firefox', 'larger', 'google-chrome', '5780924', 'this is because in ie and firefox the footer link text is larger than in google-chrome and safari therefore the margins that i ve set up for the icons do not work\n')
('firefox', 'smaller', 'google-chrome', '10007704', 'while the rest of the browsers report the correct width of the document firefox reports a smaller one example at screen resolution of 1920x1080 ie google-chrome and safari reports 1920 while firefox reports 1903\n')
('firefox', 'lower', 'google-chrome', '46124506', 'open up the fiddle in both firefox google-chrome to see what i m talking about - in firefox the positioning of the background image is much lower than in google-chrome safari\n')
('google-chrome', 'more smoothly', 'firefox', '43524743', 'notably this doesn t happen in all browsers google-chrome renders more smoothly than ie and firefox for instance but is there any way i can make those white lines stop appearing when the user zooms in\n')
('google-chrome', 'easier', 'firefox', '7366195', 'i found programming google-chrome extensions easier than firefox but i couldn t come across something similar to xpcom in google-chrome\n')
('google-chrome', 'more limited', 'firefox', '27465781', 'google-chrome extensions are considerably more limited than firefox extensions â â they can only hook the behavior of the browser in certain predefined ways\n')
('firefox', 'brighter', 'google-chrome', '32877975', 'in firefox and other browsers the background is much whiter and brighter than in google-chrome\n')
('firefox', 'more power', 'google-chrome', '3417323', 'firefox extensions have much more power than google-chrome and have wider access to browser s internal api\n')

strict commas restrictions
('firefox', 'much more', 'google-chrome', '24072476', 'apple s safari applies almost no cross domain restrictions to files opened locally but firefox is much more strict about what it permits with google-chrome somewhere in the middle\n')
('google-chrome', 'more strict', 'firefox', '2821210', 'google-chrome s parsing may be more strict than firefox is at having things like trailing commas as specified by the standard at as stated in danilo celic s answer\n')
('firefox', 'more', 'google-chrome', '18223158', 'it works in firefox because firefox is more lax about this security restriction and google-chrome happens to be more strict on mixed-content errors\n')

easier easy apk
('firefox', 'easier', 'google-chrome', '17298652', 'firefox is probably easier than google-chrome these days\n')
('firefox', 'easier', 'google-chrome', '41742075', 'i have been trying to do this in firefox webextensions but if it s easier with google-chrome i will try it that way instead.\n')
('firefox', 'easier', 'google-chrome', '14747312', 'with firefox it was very easy i just grabbed the apk from their ftp server run the adb install command one would think it should be even easier with google-chrome but it s really not\n')

data stricter local
('firefox', 'stricter', 'google-chrome', '43785589', 'i d say that firefox is correct in being stricter than google-chrome here even though i m not entirely sure the base uri has changed and this new uri should be used for the relative uri #symboltype1 too\n')
('google-chrome', 'less', 'firefox', '640303', 'using the same data google-chrome does in less than 5 seconds what took ie and firefox 10 to 15 seconds to accomplish\n')
('google-chrome', 'stricter', 'firefox', '44613029', 'google-chrome is stricter than firefox when it comes to loading data from your local filesystem\n')

similar issue scrolling
('google-chrome', 'lower', 'firefox', '18068582', 'i m seeing a strange issue on windows in google-chrome the framerate is almost 2 times lower than in firefox on mac google-chrome and firefox have similar framerates\n')
('google-chrome', 'older issue', 'firefox', '32256754', 'i have encounter a problem with google-chrome that is similar to an older issue with firefox at this url scrolling blocks javascript execution in firefox\n')

slower duration 1s
('firefox', 'quicker', 'google-chrome', '34985268', 'firefox seems to animate the element quicker than google-chrome does and so while a duration of 1s is enough for the animation in google-chrome firefox needs it to be 2s to be slower and show the effect\n')
('google-chrome', 'slower', 'firefox', '18452965', 'this is trickier to work around and you should file a google-chrome bug describing the situation and where it s slower than firefox but you could potentially reduce the amount of buffer uploads by looking into instancing or using uniform arrays instead of updating vertexes for positions textures\n')

pickier more-so
('google-chrome', 'pickier', 'firefox', '28008564', 'apparently google-chrome is pickier than firefox\n')
('firefox', 'more-so', 'google-chrome', '35630482', 'it looks like it shows for firefox more-so than google-chrome but it might help\n')

strict
('firefox', 'more strict', 'google-chrome', '35358677', 'is this due to firefox being more strict than google-chrome\n')
('google-chrome', 'more strict', 'firefox', '5697000', 'google-chrome is a bit more strict than firefox here\n')

parsley	robotlegs---------------------------------------------------

requestfactory	gwt---------------------------------------------------

better counterpart db4o
('requestfactory', 'slower', 'gwt', '14364885', 'gwt requestfactory by design is slower than gwt rpc and gwt json etc\n')
('requestfactory', 'better counterpart', 'gwt', '9420697', 'from gwt 2.1 requestfactory is better counterpart than gwt rpc when you use db4o together\n')

profiler	gprof---------------------------------------------------

many-to-one	one-to-many---------------------------------------------------

boolean	int---------------------------------------------------

memory heap space
('boolean', 'less space', 'int', '22715785', 'a boolean takes less space than an int\n')
('int', 'more memory', 'boolean', '18152578', 'int occupy more memory than boolean so the heap got corrupted\n')

type numeric better
('boolean', 'array more', 'int', '42517950', 'but counting the number of trues in a boolean array is more difficult since the accumulated type int differs from the source type bool\n')
('int', 'better', 'boolean', '35052403', 'perhaps using int type if values are all numeric would work better than boolean for a and b\n')

value efficient existence
('boolean', 'more efficient', 'int', '7221963', 'i always assumed that boolean were more efficient than int at storing an on off value - considering that s their reason for existence\n')
('boolean', 'more space', 'int', '18429507', 'would a boolean array of size 32 take more space than an int variable for example\n')
('int', 'less space', 'boolean', '23069431', 'it is saying this because using the int to store the value 32 bits is going to use less space than a boolean 256 as each allocated boolean will take up 8 bits 8 256 2048\n')

time a.length consuming
('boolean', 'more', 'int', '21107085', 'however the second loop causes the additional task of casting each of the values between a.length and 0 to a boolean which is more time consuming than int comparison\n')
('boolean', 'more time', 'int', '35320435', 'since the logic is the same i thought evaluating boolean objects takes more time than int equivalence true 1 and false 0 therefore i came up with the following benchmark and it turns out that i was correct\n')

rythm	velocity---------------------------------------------------

high pure strong
('rythm', 'faster', 'velocity', '9926106', 'rythm is a high performance 2 to 3 times faster than velocity pure java template which use razor like syntax\n')
('rythm', 'faster', 'velocity', '13906189', 'rythm is a strong typed java template engine using razor like syntax with high performance 2 to 3 times faster than velocity and fm\n')
('rythm', 'faster', 'velocity', '9596890', 'the benchmark shows rythm is 2 to 3 times faster than velocity on a normal page\n')

filewriter	printwriter---------------------------------------------------

pypy	cpython---------------------------------------------------

numerix faster possible
('pypy', 'faster', 'cpython', '25363585', 'unfortunately as martijn pieters noted there are no accepted solution for python 3.x and only one for python 2.x and according to the amount of memory spent for solving it numerix could have used psyco the library on which pypy is based much faster than cpython\n')
('pypy', 'faster', 'cpython', '8797731', 'so how is it possible for pypy to be faster than cpython also becomes fairly obvious\n')
('pypy', 'faster', 'cpython', '6726347', 'you could try running it in pypy - for some cases it can be significantly faster than cpython\n')
('pypy', 'faster', 'cpython', '14294643', 'pypy is supposedly faster than cpython while gevent is based on co-routines and greenlets which supposedly makes for a faster web server\n')
('pypy', 'generally faster', 'cpython', '7529473', 'i saw that pypy is generally faster than cpython\n')
('pypy', 'faster', 'cpython', '5843950', 'judging from the benchmarks posted on the pypy speed center it appears as if pypy is faster than cpython for all but two of the tests presented\n')
('pypy', 'slower', 'cpython', '31826941', 'the answer is simple here - pickle on pypy is slower because it s implemeneted in pure python as opposed to c in cpython\n')
('cpython', 'faster', 'pypy', '30679809', 'under cpython tests run 4 times faster than under pypy\n')
('pypy', 'faster', 'cpython', '17483632', 'however consider that pypy might do the linear search 100 times faster than cpython then a few times might be dozens\n')
('pypy', 'faster', 'cpython', '18949049', 'that site does not claim pypy is 6.3 times faster than cpython\n')
('pypy', 'faster', 'cpython', '45490403', 'in the competing programming a lot of problems are never meant to be solved with cpython but with pypy which has a faster integer-arithmetic and a git-compiler but otherwise a python interpreter just as cpython\n')
('pypy', 'faster', 'cpython', '6636272', 'pypy compiled with jit is almost always faster than cpython frequently by a large margin\n')
('pypy', 'faster', 'cpython', '37192125', 'some people may argue with me on this one but i find pypy to be faster than cpython\n')
('pypy', 'faster', 'cpython', '14024189', 'if that isn t sufficient a lot of standard python code can be run on the pypy implementation which generally faster than the cpython implementation\n')
('cpython', 'faster', 'pypy', '5843950', 'cpython is faster than pypy on the two tests slowspitfire and waf\n')
('pypy', 'faster', 'cpython', '619544', 'part of the compiler toolchain includes an experimental jit generator now in its fifth incarnation and starting to work really well - the goal is for a jited pypy to run much faster than cpython\n')
('pypy', 'slower', 'cpython', '29966745', 'jython is more unpredictableâ sometimes almost as fast as pypy sometimes much slower than cpython\n')
('pypy', 'faster', 'cpython', '5318157', 'pypy s jit can make python code execute much faster than cpython\n')
('pypy', 'faster', 'cpython', '28404279', 'can someone please help to how use that script using the pypy as i heard it is much faster than cpython\n')
('pypy', 'faster', 'cpython', '7991345', 'i presume it s why is pypy faster than cpython some of the time\n')
('cpython', 'slower', 'pypy', '26457906', 'as gnibbler pointed out cpython is slower in the simple implementation but pypy is jit compiled for much faster code when you need it\n')
('pypy', 'faster', 'cpython', '10727166', 'you might want to try running your trainer under pypy if you aren t already -- it s significantly faster than cpython for some workloads\n')
('pypy', 'faster', 'cpython', '40708984', 'pypy is faster than cpython s sum intrinsic because it can figure out that all the elements of the array are numeric and slice out a bunch of per-element overhead\n')
('pypy', 'faster', 'cpython', '11125957', 'i finally ran it through pypy and was delighted to discover that when the lists got really deep pypy was running significantly faster than cpython\n')
('pypy', 'faster', 'cpython', '34837400', 'pypy which in general is much faster than cpython is considerably slower for this use case\n')
('pypy', 'more complex', 'cpython', '43456211', 'the pypy jit for python is also much more complex than cpython but also typically much faster â increased complexity is a fairly typical cost for speed. the four levels of disassembly for julia code give you access to the representation of a julia method implementation for particular argument types at different stages of the transformation from source code to machine code\n')
('pypy', 'faster', 'cpython', '18047406', 'i ve tried using pypy because i ve heard its faster than the cpython interpreter but still no good\n')
('pypy', 'faster', 'cpython', '2703428', 'just keep in mind most of the time c is faster than python but then again most of the time pypy is faster than cpython\n')
('pypy', 'faster', 'cpython', '25713282', 'note that there are plenty of python implementations other than cpython out there - for loopy code pypy tends to be much faster than cpython\n')
('pypy', 'faster', 'cpython', '3163538', 'for python there is a pypy project which it includes jit making possible the code to run faster than in cpython in many cases\n')
('pypy', 'slower', 'cpython', '32777213', 'this is why pypy may be slower than cpython sometimes it needs a warm-up phase in which it can actually optimize repeated operations\n')
('pypy', 'currently more', 'cpython', '9934528', 'pypy is currently more than 5x faster than cpython on average\n')
('pypy', 'faster', 'cpython', '8452592', 'pypy is now faster than cpython in most cases\n')
('pypy', 'slower', 'cpython', '26515134', 'i haven t tried comparing the two but this pypy bug seems to suggest that multiprocessing in pypy is slower than in cpython\n')

major part data
('pypy', 'less memory', 'cpython', '8675877', 'if the dominant memory usage is program data structures then i wouldn t be at all surprised to find pypy using significantly less memory than cpython whether or not the jit was enabled\n')
('pypy', 'less memory', 'cpython', '5495318', 'when people talk about pypy using less memory than cpython this is a major part of what they re talking about\n')

ieee	decimal---------------------------------------------------

representable value binary32
('ieee', 'less', 'decimal', '26032849', 'the maximum representable value with ieee 754-2008 binary32 is so the base 2 log of a number stored in binary 32 is less than decimal 128\n')
('ieee', 'less', 'decimal', '5729100', 'the third line displays the data with the maximum useful precision - an ieee 754 64bit floating-point number has slightly less than 16 decimal digits of precision so all those digits of the literal in math.h are pointless perhaps they can be seen as future-proofing against a possible future redefinition in a format with more precision\n')

codeigniter	cakephp---------------------------------------------------

concave	convex---------------------------------------------------

quicksort	mergesort---------------------------------------------------

algorithm comparisons specific
('quicksort', 'faster', 'mergesort', '8535540', 'i have read that quicksort is much faster than mergesort in practise and the reason for this is the hidden constant\n')
('quicksort', 'better', 'mergesort', '497819', 'previously discussed on so why is quicksort better than mergesort\n')
('mergesort', 'simpler', 'quicksort', '10955685', 'parallelizing mergesort is simpler than quicksort in-place\n')
('quicksort', 'generally faster', 'mergesort', '5070199', 'quicksort generally runs faster than mergesort but under some circumstances it can degrade to quadratic running time\n')
('quicksort', 'faster', 'mergesort', '16308408', 'normally quicksort is faster than mergesort which is faster than heapsort\n')
('quicksort', 'slower', 'mergesort', '24290704', 'i have been testing the practicality of openmp gnu parallel sort algorithms in the c++ standard library and have found the parallel quicksort algorithm to be significantly slower than the mergesort algorithm\n')
('quicksort', 'better', 'mergesort', '13096603', 'i ve looked at the question at why is quicksort better than mergesort\n')
('quicksort', 'better', 'mergesort', '1527161', 'why is quicksort better than mergesort\n')
('quicksort', 'better', 'mergesort', '19853740', 'is quicksort always better than mergesort\n')
('mergesort', 'less comparisons', 'quicksort', '29243439', 'mergesort uses about 30 less comparisons than quicksort\n')
('quicksort', 'better', 'mergesort', '29218730', 'quicksort usually is better than mergesort for two reasons\n')
('mergesort', 'consistently faster', 'quicksort', '35189561', 'mergesort - in general mergesort is consistently faster than quicksort however quicksort is done in place and doesn t require allocating memory unlike mergesort\n')
('quicksort', 'simpler', 'mergesort', '33319313', 'i would say that the quicksort is simpler for parallelizing than the mergesort\n')
('quicksort', 'quicker', 'mergesort', '42183380', 'that way quicksort can reach recursive base case more quicker than mergesort\n')
('quicksort', 'faster', 'mergesort', '30014574', 'to be specific the quicksort runs faster than mergesort in the first test case and loses badly in the following 9 tests\n')
('quicksort', 'generally faster', 'mergesort', '70440', 'it s because that quicksort is generally faster that people use it instead of mergesort\n')
('quicksort', 'faster', 'mergesort', '7818843', 'you can also see that for smaller collections quicksort is faster but then mergesort takes the lead but all of this is case specific so take your time to study all 4 algorithms\n')
('quicksort', 'faster', 'mergesort', '70440', 'quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster\n')
('quicksort', 'faster', 'mergesort', '30014574', 'for the 10 tests on the same list the results should be quite the same at least all showing that quicksort is faster than mergesort or vice vesa\n')
('quicksort', 'consistently less', 'mergesort', '42183380', 'quicksort consistently has less recursive calls than mergesort\n')
('quicksort', 'faster', 'mergesort', '13096603', 'depending on where i look people say quicksort is faster than mergesort due to its locality of reference cache hits etc\n')
('quicksort', 'worse', 'mergesort', '29218500', 'scenarios when quicksort is worse than mergesort\n')
('quicksort', 'faster', 'mergesort', '90477', 'as many people have noted the average case performance for quicksort is faster than mergesort\n')
('quicksort', 'better', 'mergesort', '77945', 'quicksort is not better than mergesort\n')
('quicksort', 'slower', 'mergesort', '23501734', 'however on smaller int sizes quicksort gets slower and mergesort gets faster\n')
('quicksort', 'more', 'mergesort', '14349085', 'interestingly quicksort performs more comparisons on average than mergesort - 1.44 n lg n expected for quicksort versus n lg n for mergesort\n')
('quicksort', 'algorithm faster', 'mergesort', '20811630', 'the quicksort algorithm is faster than mergesort which is what sorted will get you when called on a sequence of objects via java.util.arrays.sort\n')
('mergesort', 'more efficient', 'quicksort', '13096603', 'purely in terms of the number of comparisons performed is mergesort always more efficient than quicksort\n')
('quicksort', 'faster', 'mergesort', '961662', 'in most cases quicksort will run faster than mergesort even though the worst-case execution time is longer\n')
('quicksort', 'faster', 'mergesort', '42767458', 'quicksort is approximately 40 faster than mergesort on random data because of fewer data movements\n')
('mergesort', 'slower', 'quicksort', '5608850', 'mergesort is slightly slower than quicksort but it does not have quicksort s susceptibility to pathological cases\n')
('quicksort', 'faster', 'mergesort', '29218730', 'it might be helpful to see why quicksort is usually faster than mergesort since if you understand the reasons you can pretty quickly find some cases where mergesort is a clear winner\n')
('quicksort', 'faster', 'mergesort', '4292700', 'quicksort is implemented well it is typically 2-3 times faster than mergesort or\n')
('quicksort', 'faster', 'mergesort', '4819185', 'from what i ve read i was expecting quicksort to be faster than mergesort but on my code it is not so i assume there must be a problem with my quicksort algorithm\n')
('quicksort', 'better locality', 'mergesort', '29218730', 'quicksort has better locality of reference than mergesort which means that the accesses performed in quicksort are usually faster than the corresponding accesses in mergesort\n')

worst complexity stable
('mergesort', 'more space', 'quicksort', '5784610', 'mergesort may use more space than quicksort i m not entirely sure and merge may be better for linkedlists\n')
('mergesort', 'worse', 'quicksort', '487454', 'given that it is possible to vastly reduce the likelihood of the worst case of quicksort s time complexity via random selection of the pivot for example i think one could argue that mergesort is worse in all but the pathological case of quicksort\n')
('mergesort', 'better', 'quicksort', '9023456', 'for instance quicksort can outperform mergesort although mergesort is provably better than quicksort in the worst case\n')
('quicksort', 'worse', 'mergesort', '201171', 'quicksort is worse complexity than mergesort in the worst case.\n')
('quicksort', 'better', 'mergesort', '35228495', 'for example locality of references has influence on cache hits or misses which is the reason why quicksort performs better than mergesort\n')
('quicksort', 'not better', 'mergesort', '70627', 'quicksort is not better it is well suited for a different kind of application than mergesort\n')
('mergesort', 'better', 'quicksort', '36054413', 'i know mergesort is better since it is stable and doesn t have n 2 as worst case but i required to implement quicksort\n')
('mergesort', 'better time-behavior', 'quicksort', '4819756', 'technically mergesort has a better time-behavior î nlogn worst and average cases than quicksort î n 2 worst case î nlogn average case\n')
('quicksort', 'better', 'mergesort', '16943949', 'an interesting answer about this can be found at why is quicksort better than mergesort\n')

implementation callback function
('quicksort', 'consistently faster', 'mergesort', '23501734', 'when comparing my quicksort implementation with std sort on my compiler and my implementation of mergesort i noticed an odd pattern on large data sets when operating on 64 bit integers quicksort is consistently faster than mergesort\n')
('quicksort', 'slower', 'mergesort', '39156435', 'when comparison function is a callback function like in quicksort libc implementation quicksort is slower than mergesort by 15 on random input and 30 for already sorted array for 64 bit integers\n')

altitude	distance---------------------------------------------------

memcmp	strcmp---------------------------------------------------

simpler places lengths
('memcmp', 'simpler', 'strcmp', '41420603', 'memcmp is simpler than strcmp and can be implemented even more efficiently in places where the strings are known to be properly aligned\n')
('memcmp', 'faster', 'strcmp', '1128221', 'if you always keep track of the lengths of your strings you can compare lengths and use memcmp which is faster than strcmp\n')

aes	tripledes---------------------------------------------------

repeater	gridview---------------------------------------------------

difference big understanding
('repeater', 'faster', 'gridview', '21944601', 'the repeater is still faster than the gridview but the difference shouldn t be big if you code it right\n')
('repeater', 'faster', 'gridview', '38065946', 'in my understanding repeater is most suitable since it faster than gridview\n')

memcpy	strcpy---------------------------------------------------

performance difference efficient
('memcpy', 'more efficient', 'strcpy', '41749210', 'performance difference memcpy is usually more efficient than strcpy which must scan the data it copies\n')
('strcpy', 'more time', 'memcpy', '30186543', 'memset behaves like strcpy but the difference is that memcpy copied the data as it is byte but strcpy copies the formatted string as well so takes more time than memcpy to execute\n')

variable faster check
('memcpy', 'faster', 'strcpy', '25242721', 'memcpy is faster than strcpy and also enforces you to specify a buffer size\n')
('memcpy', 'faster', 'strcpy', '33590309', 'notice that memcpy is faster than strcpy unless the source string is much smaller than the buffer s size which is rarely the case with ip addesses.\n')
('memcpy', 'slightly faster', 'strcpy', '23762261', 'because of the above replace strdup with strlen malloc memcpy memcpy is slightly faster than strcpy\n')
('memcpy', 'usually faster', 'strcpy', '3942421', 'memcpy is usually faster than strcpy for longer strings\n')
('memcpy', 'faster', 'strcpy', '24966693', 'so i feel that on x86 memcpy is faster than strcpy\n')
('memcpy', 'faster', 'strcpy', '39286524', 'information - use memcpy as it s faster than strcpy and we know\n')
('memcpy', 'slower', 'strcpy', '24967980', 'for example for small amounts of data an memcpy optimised for large amounts of data may be significantly slower than a strcpy that wasn t optimised for large amounts of data\n')
('memcpy', 'faster', 'strcpy', '9760567', 'but sometimes memcpy performs faster than strcpy because it moves blocks of memory at a time which allows it to perform some optimization i will not go into details here\n')
('memcpy', 'faster', 'strcpy', '15176895', 'we keep track of what cmd s length ought to be in a variable and copy the string with memcpy which is slightly faster than strcpy and does neither check string length nor copy the extra zero at end of string\n')
('memcpy', 'faster', 'strcpy', '24966865', 'on almost any platform memcpy is going to be faster than strcpy when copying the same number of bytes\n')
('memcpy', 'faster', 'strcpy', '24966693', 'is memcpy usually faster than strcpy on most real platforms\n')
('memcpy', 'rarely slower', 'strcpy', '23201978', 'memcpy is rarely slower than strcpy or strncpy and often significantly faster\n')

range	max---------------------------------------------------

valid walk lower
('range', 'lower', 'max', '8013367', 'i have this grid each coordinate in the grid can be either closed or open i m tying to using an open coordinate find all the open coordinates around the first that are valid and the walk range between then is equal or lower than the max walk range\n')
('range', 'less', 'max', '13264779', 'if max z1 z2 range is less than or equal to table2 max value2 where table1.type table2.type\n')

larger greater value
('range', 'greater', 'max', '20007371', 'keep in mind that the cast int d will not throw an exception if the value of d is outside the range of an int - if which is greater than the max value of an int the resultant cast will be -2147483648\n')
('range', 'smaller', 'max', '28482152', 'if you want to exlude a number 4 that means the range is smaller by 1 so use r.nextint 5 and if the result is the excluded number then return the max allowed which is 5 because it will never be generated because you used max - 1\n')
('range', 'larger', 'max', '17068322', 'if you date range is larger than the two years displayed just drag the formulas down to expand the max range\n')
('range', 'greater', 'max', '38423673', 'a larger range means a greater max value and a smaller min value than decimal\n')
('max', 'smaller', 'range', '21562035', 'to create equal bins you can simply first define a min and max value which is slightly smaller than both range\n')
('range', 'greater', 'max', '35075746', 'i ve got a constant defined data_out range and cnt is incremented on clock and never reaches value greater than max range of data_out\n')
('range', 'higher', 'max', '39502592', 'if you disable elastic axis and make sure you specify a range that is higher than the max value you can select the point\n')
('range', 'greater', 'max', '27101914', 'avoiding variables and functions cross join the table against some other table s to generate a range of rows where the range is greater than the max value of quantity\n')
('max', 'larger', 'range', '18854408', 'i ll leave the rest up to you ov checking for error conditions such as more than 1 column passed in the range or range of unequal size or a max # of items returned being larger than the range size\n')
('range', 'greater', 'max', '17885817', 'an automatically adjusted range will always be the next power of 10 greater than max value\n')
('range', 'greater', 'max', '43950275', 'third you initialised end to len lis2 this will give indexerror list index out of range if you are trying to search for an element which is not present in the list and is greater than the max element in the list say 23\n')
('range', 'greater int', 'max', '41511932', 'the problem is it is overflowing therefore it works fine when the result returned is in int_max range 10 9 but negative value is show in case of value returned from function is greater than int max range\n')
('range', 'higher', 'max', '30607810', 'i am trying to create a figure in which the colorbar will extend beyond the data range go higher than the max value of data\n')
('range', 'greater', 'max', '28488349', 'the question i have is i would like the calendar to only display the min and max date range for the from date and to date any thing greater than the max and anything less than the min should be greyed out\n')
('range', 'larger', 'max', '3567637', 'so if you re getting a step exceeds the specified range error i d guess that the default step value 1 is larger than the max of the range the result of .\n')
('range', 'greater', 'max', '20943998', 'i want to validate a number as decimal up to two decimal and minimum range is greater than 0.00 and max range is up to 99.99\n')
('range', 'larger', 'max', '47389759', 'but with this the last range is larger than the max value\n')
('range', 'greater', 'max', '43411471', 'it works like range so i need to pass it a number one greater than the max number in the current index\n')
('range', 'not greater', 'max', '45418162', '2 that the min range is not greater or equal to the max range.\n')
('range', 'larger', 'max', '29827603', 'in general you want to have a range slightly larger than x max - x min and then divide the range into the desired number of bins\n')
('range', 'larger', 'max', '2022693', 'basically if you know that your events are never larger than a given duration you can search for a bounded range that s larger than the max duration then add restrictions to get rid of the extra stuff that matched\n')

jtable	jlist---------------------------------------------------

jcomponents tablecelleditor example
('jtable', 'better jcomponents', 'jlist', '6823252', 'i think jtable would be better jcomponents as jlist because there you can implements tablecelleditor maybe example with similair output here\n')
('jtable', 'better', 'jlist', '18589264', 'i don t really think that jtable will help you here anyhow better than jlist - it has the same rendering strategy\n')

putimagedata	drawimage---------------------------------------------------

faster function slower
('drawimage', 'function really faster', 'putimagedata', '14511199', 'i have seen that the drawimage function is really faster than the putimagedata\n')
('drawimage', 'faster', 'putimagedata', '41723100', 'using drawimage canvas is much faster than using putimagedata\n')
('putimagedata', 'slower', 'drawimage', '7380496', 'right now putimagedata is much slower than drawimage as you can see here\n')
('drawimage', 'faster', 'putimagedata', '13668442', 'drawimage seems to be much faster than putimagedata\n')
('drawimage', 'much faster', 'putimagedata', '7722892', 'as of right now drawimage is much faster than putimagedata\n')

earlier year old
('drawimage', 'slower', 'putimagedata', '17406346', 'the only problem that as far as i know using drawimage is slower than using putimagedata and it was required in old browser versions like firefox 2 or such\n')
('putimagedata', 'slower', 'drawimage', '7074620', 'that beeing said putimagedata is much slower than drawimage at least when i tested them earlier this year\n')

bellman-ford	dijkstra---------------------------------------------------

circumstances situation approach
('bellman-ford', 'approach better', 'dijkstra', '19482317', 'surely there is some situation in which the bellman-ford approach is better than the dijkstra approach\n')
('dijkstra', 'better choice', 'bellman-ford', '40843559', 'however if g is guaranteed to have only non-negative weights g is non-positive weights then dijkstra s algorithm could be better choice over bellman-ford\n')
('bellman-ford', 'better', 'dijkstra', '19482317', 'but under what circumstances is the bellman-ford algorithm better than the dijkstra algorithm\n')

server-side	client-side---------------------------------------------------

validation faster place
('server-side', 'slower', 'client-side', '9306245', 'since you don t want to repeat yourself it s very tempting to put all your validation on one side or the other but there are tradeoffs either way and it is true that server-side validation is going to be slower than client-side\n')
('client-side', 'validation faster', 'server-side', '24450617', 'client-side validation is faster than server-side because the validation takes place on client side on browser and the networking time from client to server is saved\n')

visitor browser script
('client-side', 'script way less secure', 'server-side', '16814826', 'ps again i am aware that relying on client-side script is way less secure compared with handling all execution from within the server-side\n')
('client-side', 'script more', 'server-side', '9866616', 'i am curious to know if detecting the visitor browser with client-side script is more reliable than server-side script\n')

subtraction	add---------------------------------------------------

eventlet	gevent---------------------------------------------------

build.gradle	gradlew---------------------------------------------------

serializable	deserialization---------------------------------------------------

opera	firefox---------------------------------------------------

framerates faster worse
('opera', 'slower', 'firefox', '1278273', 'for example i ve read that opera and ie will fix framerates slower than firefox\n')
('firefox', 'significantly faster', 'opera', '17023332', 'it seems to be slower in google-chrome and firefox but is significantly faster in opera\n')
('firefox', 'even worse', 'opera', '1451062', 'the problem with this code is that it doesn t quite work on firefox and works even worse on opera\n')

subtract	multiplying---------------------------------------------------

miglayout	gridbaglayout---------------------------------------------------

feed	rss---------------------------------------------------

keyboard	mouse---------------------------------------------------

slower faster
('mouse', 'much more', 'keyboard', '45399198', 'doing it with mouse is much more slower than it can be done with keyboard\n')
('keyboard', 'faster', 'mouse', '414289', 'the keyboard is almost always faster than the mouse\n')

division	modulo---------------------------------------------------

wise operations slow
('modulo', 'faster', 'division', '27589182', 'if you compute modulo a power of two using bitwise and is simpler and generally faster than performing division\n')
('modulo', 'much faster', 'division', '20258656', 'since bit wise operations can be done very fast and division operations are relatively slow this type of modulo is much faster than doing a division\n')

number bits harder
('modulo', 'much harder', 'division', '12786755', 'programmers like to use this property to speed up programs because it s easy to chop off some number of bits but performing a modulo is much harder it s about as hard as doing a division\n')
('modulo', 'better straight', 'division', '29476678', 'modulo gives you a remainder which is why it s better than straight division in situations where you re number of elements can change\n')

diagram	entity-relationship---------------------------------------------------

pom.xml	maven---------------------------------------------------

sublimetext	vim---------------------------------------------------

orientdb	neo4j---------------------------------------------------

ti faster depth
('orientdb', 'slower', 'neo4j', '14565718', 'i found that orientdb is too slow at least much slower than neo4j even on relatively small 150k datasets when searching records by text pattern despite the presence of indices\n')
('orientdb', 'faster', 'neo4j', '45860902', 'using orientdb that is supposed ti be faster than neo4j for depth i m seeing a slow performance\n')

h.264	mp4---------------------------------------------------

free alternative platforms
('h.264', 'better', 'mp4', '9734251', '- you can also consider using webm which is a free alternative to h.264 and has better support on some platforms than fragmented mp4\n')
('mp4', 'format better', 'h.264', '16599515', 'it doesn t support avi at the moment but imho mp4 format is better suited for h.264 anyway\n')

jsonb	hstore---------------------------------------------------

acid	consistency---------------------------------------------------

lodash	underscore.js---------------------------------------------------

latest compatibility stable
('lodash', 'even more features', 'underscore.js', '28931507', 'the easiest solution is to just replace underscore.js with lodash which has even more features than the latest underscore.js\n')
('lodash', 'more frequently', 'underscore.js', '13898916', 'because lodash is updated more frequently than underscore.js a lodash underscore.js build is provided to ensure compatibility with the latest stable version of underscore.js\n')

faster stunned simple
('lodash', 'faster', 'underscore.js', '18300039', 'i am stunned right now seeing a lodash performing 100-150 faster than underscore.js in even simple native functions such as array.every in chrome\n')
('lodash', 'faster', 'underscore.js', '21148491', 'if i remember correctly lodash argued they were faster than underscore.js because the use non-native functions for key operations\n')

better comment likely
('lodash', 'better solution', 'underscore.js', '32372660', 'edit as pointed out in the comment lodash is likely to be a better solution than underscore.js\n')
('lodash', 'better version', 'underscore.js', '43641416', 'if you re open to using lodash which is a better version of underscore.js imo this can be expressed fairly simply using flattendeep on each element of your multi-dimensional array\n')

debian	linux---------------------------------------------------

move	drag---------------------------------------------------

press release order
('move', 'bigger parent', 'drag', '29649620', 'i reimplemented the mouse move press and release events for the inner widget in order to be able to move it inside its bigger parent with drag drop\n')
('drag', 'smaller', 'move', '24920106', 'it ends up in a state of confusion...you basically cannot release the drag of the table it keeps getting bigger and smaller as you move your mouse - but you can never let go and release it to get the size you want\n')

kerberos	ldap---------------------------------------------------

pandas	seaborn---------------------------------------------------

memcached	apc---------------------------------------------------

faster in-memory slower
('apc', 'faster', 'memcached', '17118318', 'apc is faster on a single server - but memcached is distributed\n')
('apc', 'faster', 'memcached', '1825484', 'my experience say that apc is nearly 7-8 times faster than memcached\n')
('apc', 'faster', 'memcached', '13751524', 'it s slower than apc but it s faster than memcached redis etc\n')
('apc', 'faster', 'memcached', '9884780', 'in my case apc is 59 times faster than memcached\n')
('apc', 'faster', 'memcached', '2353190', 'apc access is a bit faster something like 5 times faster than memcached if i remember correctly as it s only local -- no network involved\n')
('apc', 'much more faster', 'memcached', '11584538', 'as you know apc is much more faster than memcached if we re fetching keys from a single server\n')
('memcached', 'more functionality', 'apc', '1803139', 'memcached has more functionality but is intended for distributed environments while apc works on single servers only\n')
('memcached', 'slower', 'apc', '1808814', 'memcached around 4-5 times slower than apc but run as a single process that can be touched everywhere in my environment\n')
('memcached', 'slower', 'apc', '17295791', 'memcached is in-memory too and a bit slower than apc\n')

caching database performance
('apc', 'more', 'memcached', '4999069', 'apc is more an opcode caching system than a key value memory database like memcached altough it can be greatly used for both purposes\n')
('memcached', 'more', 'apc', '15117742', 'memcached is more for caching database queries and improving performance in that regard while apc is more for improving performance of php code\n')

dsa	rsa---------------------------------------------------

verification 10x testing
('rsa', 'slower', 'dsa', '24689036', 'this is why rsa is much slower than dsa\n')
('dsa', 'slower', 'rsa', '7911156', 'however dsa verification expect verification calls to be 100x issue is about 10x slower than rsa verification\n')
('rsa', 'slower', 'dsa', '12594809', 'i have made some testing and it came out that rsa is lot slower than dsa\n')

trackpad	mouse---------------------------------------------------

width	margin---------------------------------------------------

css height directives
('width', 'nicer', 'margin', '604314', 'edit someone else suggested css and i believe that using the height and width directives from css will give you the same result as using the same attributes of the tag but doesn t limit you strictly to images and a will play nicer with any margin or padding directives you might use\n')
('width', 'less', 'margin', '38602970', 'i notice that when the arrow block is rendered when width is less than 296 px inside the carousal there is some space between the left border of the carousal and the arrow block even though i did not add padding or margin\n')

greater div bigger
('margin', 'greater', 'width', '42291487', 'on release the drawer should slide open if its margin is greater than half its width and should close if its less\n')
('margin', 'more', 'width', '13059986', 'you re negative margin is more than half the viewport width of an iphone therefore it is dragging it out of view\n')
('margin', 'auto better', 'width', '28907018', 'first one margin auto is better if you can know width of container list and you don t want centre content of this container\n')
('width', 'bigger', 'margin', '28122212', 'but in general this wouldn t work because of the specified width is bigger than the real one and exceed it so there s no margin to auto it and center the content which found in div\n')
('width', 'less', 'margin', '29478000', 'if the content leads to a width that is less than 100 of the table s containing block then setting the left right margin to auto will center the table within the containing block\n')
('margin', 'bigger', 'width', '6746105', 'the box is never too small infact the margin of the adjacent div is bigger than the width of ul div\n')
('margin', 'bigger', 'width', '33567403', 'what i do not understand is why the size of the point and the text is not the same and why the margin can be bigger than the width of the figure\n')
('margin', 'bigger', 'width', '9126839', 'anyway i just set the margin to a value a little bigger than the width of the image and overlap is eliminated only in the very specific case we want\n')
('margin', 'bigger', 'width', '26513621', 'when i launch it with firefox or internet explorer the box gets immediately to a huge distance from the margin much bigger than the width of the screen and now i noticed that if i run it with stackoverflow s snippet function the box does not move\n')
('margin', 'higher', 'width', '41787489', 'now if the div with has margin 660px from the left it should be hidden because it s margin is higher than the maximum width of the main container\n')
('margin', 'greater', 'width', '5494802', 'the title goes in a h1 for example and the text in a p or div so set these two elements to have a left margin greater than the width of image a\n')
('margin', 'greater', 'width', '1567157', 'give the sample text div a right margin greater than the width of the right-floated element\n')
('margin', 'lesser', 'width', '27755071', 'one way of doing this is checking if left margin of the inner div is lesser than the width of sidebar and then only add class adjust\n')
('width', 'less', 'margin', '35299571', 'the elements are sized relative to the entire viewport but the body width is less than this because of the default margin on body\n')
('margin', 'greater', 'width', '17308362', 'once the negative margin is equal or greater than the width of that element further negative margin has no effect\n')
('width', 'less', 'margin', '37293218', 'but if the screen width is less than 200 then it will be from left view edge margin to right view edge margin.\n')
('width', 'larger', 'margin', '28288003', 'when the screen width becomes larger than 500px the contents of the media query are ignored and the margin becomes 20\n')
('width', 'more div', 'margin', '17188618', 'how to place 2 div side by side one div is of 75 width and the other is 25 width.one more div with margin 0 auto\n')
('margin', 'wider', 'width', '16430191', 'another option is not to float the main content column but instead assuming it s the right column to give it a large left margin that is slightly wider than the width of the left column\n')
('margin', 'less', 'width', '31763862', 'you have to take into consideration that borders take up width and that the margin of 1 of either side of the large container means that it can only be less than 100 width\n')
('margin', 'greater', 'width', '5555847', 'a common solution is to float your fixed-width column left or right and give the other column a margin equal or greater than the width of the fixed-width column\n')
('margin', 'larger', 'width', '30945014', 'the the main content div needs to have left margin larger than the width of your sidebar\n')
('margin', 'bigger', 'width', '40405403', 'aside of the left floated div i have another div article with a margin a little bigger than the width of the floating div just usual for a two column layout\n')
('margin', 'larger', 'width', '10486251', 'by giving the middle indicators div a left and right margin slightly larger than the width of the left and right button divs you allow it to float up between the two and take up as much space as possible\n')
('margin', 'greater', 'width', '39193574', 'you have given width of 50 with additional margin of 5 to each of the element which is greater than 100 width\n')
('margin', 'greater', 'width', '18518651', 'you can try giving an id to each one of the divs or style them for margin that is greater than or equal to the image width.assuming you image width is 50px this code shall work\n')
('margin', 'more', 'width', '31236608', 'adding margin adds more width making the total width of the two elements and their margin greater than 100 pushing the elements onto separate lines\n')
('margin', 'bigger', 'width', '36665967', 'the reason why your website is x-scrollable on all devices is that you forgot to add to and the row inside it has 100 +15px left margin +15px right margin which is bigger than window width\n')
('margin', 'greater', 'width', '39685256', 'i just made the left margin of div2 greater than the width of div1 and it worked for me\n')

border next object
('margin', 'more', 'width', '25428575', 'and if they aren t next to eachother that means your padding and margin is more than the 5 width of total width so reduce them\n')
('margin', 'less', 'width', '19968815', 'just so you know you want the total width object width + padding + margin + border of both columns to be less than the width of the container\n')
('margin', 'less', 'width', '17646403', 'this means they won t float next to one another unless you set the width of each so that the combined width + margin + border + padding of both blocks is equal to or less than the width of the container\n')

orika	dozer---------------------------------------------------

close manual slower
('orika', 'faster', 'dozer', '23957375', 'orika is way faster than dozer and quite close to manual mapping\n')
('orika', 'slower', 'dozer', '22939629', 'i tested orika and it was a lot faster but was slower than dozer with small collections\n')

hash	md5---------------------------------------------------

sha1 sha256 algorithm
('hash', 'longer', 'md5', '9572031', 'because sha256 hash are much longer than md5 hash you can detect the hash algorithm by looking at the length of the hash\n')
('hash', 'less likely', 'md5', '8822558', 'other hash functions such as sha-1 also have hash collisions although it is much less likely than md5\n')
('hash', 'more robust', 'md5', '10798653', 'all hash functions have that problem but some are more robust than md5\n')
('hash', 'faster other', 'md5', '4025516', 'in that case some hash functions are somewhat faster than other md5 being one of the fast functions but md4 is faster and it is simple enough that its code can be included in any application without much hassle\n')
('hash', 'slower sha1', 'md5', '25440325', 'also the hash algorithm itself is much slower than sha1 md5 sha1 md5 are made for speed - not a useful property when storing passwords\n')
('hash', 'stronger', 'md5', '3759576', 'valid choices for hashing include sha1 or md5 although sha1 is preferable because it produces a larger hash and is considered cryptographically stronger than md5\n')
('hash', 'better', 'md5', '6046512', 'however if you want to use the sha256 hash alogorithm which is better than the md5 then here s a code sample\n')
('hash', 'safer', 'md5', '9935465', 'finally sha1 hash are safer than md5 i tell you that because you used the md5 tag in your post\n')
('hash', 'stronger', 'md5', '6879159', 'use hash and choose hashing algorithm that suits you well if possible something stronger than md5 but don t go all the way to sha512 either\n')
('md5', 'larger', 'hash', '19874443', 'the difference between crc32 and md5 is that md5 generates a larger hash that s harder to predict\n')
('md5', 'larger', 'hash', '43414199', 'any hash function like md5 sha1 sha256 etc obviously cannot be 100 unique - because they have a fixed length and due to the there must necessarily be non-unique results for input content that is larger than the hash\n')
('hash', 'faster', 'md5', '3737518', 'this generally uses a hash algorithm that is much faster than md5\n')
('hash', 'function more complex', 'md5', '3153718', 'if the hash function is more complex and cryptographically strong md5 or sha1 then it is theoretically not possible\n')
('hash', 'bigger', 'md5', '12615409', 'it s like complaining that a sha256 hash is bigger than an md5 hash - yep it is but only one of them might slow the attacker down for a while\n')

secure value clear
('md5', 'implementation significantly more secure', 'hash', '10934748', 'the wrapper uses these in such a way that even the md5 implementation is significantly more secure than a simple hash\n')
('md5', 'much more', 'hash', '134346', 'using a non-reversible hash such as md5 is much more secure and you can store the hash value as clear text\n')
('hash', 'slower', 'md5', '12183240', 'the fact that bcrypt produces hash slower than md5 because of security reasons is also clear for me\n')
('md5', 'much more secure', 'hash', '2329664', 'with a salt md5 is much more secure than without but you re better off using one of the sha hash such as sha256managed\n')
('md5', 'much more', 'hash', '2718168', 'obviously md5 is much more difficult to reverse even in this anything that will hash to the right value sense then a simplistic algorithm like take the last two digits\n')

proven breakable worse
('hash', 'more reliable', 'md5', '116739', 'sha-256 uses 64 characters in the database but with an index on the column that isn t a problem and it is a proven hash and more reliable than md5 and sha-1\n')
('hash', 'worse', 'md5', '32569597', 'mac os x llvm gcc based crypt fuction is borked junk hardwired to only use des a proven breakable hash worse than md5\n')

debugging	profiling---------------------------------------------------

tinyint	varchar---------------------------------------------------

png	bmp---------------------------------------------------

slower faster
('bmp', 'faster', 'png', '32483365', 'i have a sample wpf app here and wondering why bmp is loading faster than png\n')
('png', 'slower', 'bmp', '20219087', 'jpg png is slower to draw than a bmp\n')

isotope	masonry---------------------------------------------------

better media-queried resizes
('isotope', 'more complete', 'masonry', '17770459', 'they do this using a jquery plugin called isotope which is a more complete version of masonry you pay for\n')
('isotope', 'better', 'masonry', '12500664', 'according to this answer the isotope plugin might work better than masonry for media-queried resizes\n')

pexpect	telnetlib---------------------------------------------------

grouping	sorting---------------------------------------------------

application simpler fields
('grouping', 'better', 'sorting', '40069452', 'this way only a single int column needs to be sorted grouping which performs much better than sorting two text columns\n')
('grouping', 'simpler', 'sorting', '10211855', 'instead knowing that we want to grouping by these columns we can make the application code to do so simpler by sorting by these fields\n')

vba	vb6---------------------------------------------------

unicorn	puma---------------------------------------------------

http	spdy---------------------------------------------------

yum	rpm---------------------------------------------------

free	malloc---------------------------------------------------

char p bytes
('malloc', 'n more', 'free', '2336345', 'suppose char p malloc n assigns more than n say n bytes of memory are allocated and free p is used to free the memory allocated to p\n')
('malloc', 'more memory', 'free', '42588652', 'one interesting experiment you can try is to try and malloc more memory after you free d that pointer\n')
('free', 'more', 'malloc', '1111015', 'now if you free some values on the heap and allocate more with malloc you may be given back some of that dirtied memory that you scribbed on earlier\n')
('free', 'earlier', 'malloc', '8518769', 'how does free know how much memory to be free d which was earlier allocated by malloc or calloc\n')

strtol	atoi---------------------------------------------------

errno handling sscanf
('strtol', 'better', 'atoi', '31982135', 'you need to error check strtol and ensure there are as many passed before using them -- strtol is better than atoi as helps detect errors\n')
('strtol', 'better', 'atoi', '2461383', 'all have more or less cumbersome and non-obvious error checking involving errno strtol is way much better than atoi in any case so avoid using atoi\n')
('strtol', 'better', 'atoi', '46208863', 'if you want to accept a number rather than a digit and only a number strtol works much better than atoi as it allows you to check for failures\n')
('strtol', 'better', 'atoi', '41887116', 'you can also look into strtol which is better than using atoi in terms of error checking\n')
('strtol', 'better error', 'atoi', '2428697', 'i would recommend strtol which provides better error handling than atoi or sscanf\n')
('strtol', 'much better', 'atoi', '2238063', 'the c function strtol is much better make it a habit to prefer that one to atoi\n')
('strtol', 'better', 'atoi', '10380364', 'use strtol it does better error reporting than atoi\n')
('strtol', 'better option', 'atoi', '13328049', 'besides strtol is a better option than atoi as strtol can handle failures better\n')
('strtol', 'better', 'atoi', '36374418', 'for instance strtol is better than atoi and you should be checking each time whether strtok returns null\n')
('strtol', 'better', 'atoi', '12420547', 'strtol is better than atoi with better error handling\n')

multiplication	multiplying---------------------------------------------------

mistake compiler optimization
('multiplication', 'easier', 'multiplying', '27922709', 'implementing multiplication is easier if you remember an shl operation performs the same operation as multiplying the specified operand by two\n')
('multiplication', 'longer', 'multiplying', '9519571', 'if i make a mistake and multiplying a number by 1.0 instead of 1 and i do not use any compiler optimization then my multiplication will last much longer than multiplying a number by 1\n')
('multiplication', 'easier', 'multiplying', '9815550', 'multiplication is the easier of the tasks just remember to multiplying each block of one number with the other and carry the zeros\n')
('multiplying', 'faster', 'multiplication', '12021618', 'mathematically left shifting is the same as multiplying a number by a power of 2 but as the operation is done only by shifting it is much faster than doing multiplication\n')

boost	allocator---------------------------------------------------

xslt	xquery---------------------------------------------------

kind processing expressive
('xslt', 'more expressive', 'xquery', '7610958', 'this kind of processing is most easily done with xslt which is more expressive than xquery\n')
('xslt', 'significantly more appropriate', 'xquery', '5849881', 'xslt is significantly more appropriate to use than xquery for such kind of tasks\n')

class problems dimitre
('xslt', 'much better', 'xquery', '5165338', 'as dimitre says xslt is much better at this class of problem than xquery\n')
('xslt', 'better', 'xquery', '1907942', 'as for whether to use xslt or xquery the proof is in the pudding xslt is better at transforms and xquery is better at queries\n')
('xslt', 'much better', 'xquery', '25684670', 'i hate to answer a request for a solution in language a by suggesting a solution in language b but what you are doing here falls into the class of problems which xslt handles much better than xquery\n')

amenable static analysis
('xquery', 'better', 'xslt', '18728322', 'xquery works better than xslt for this because it s more amenable to static analysis as it lacks the polymorphism of xslt s template rules\n')
('xquery', 'more amenable', 'xslt', '40861476', 'xquery is more amenable to static analysis than xslt because it lacks the very dynamic template despatch mechanism\n')

cpu	processors---------------------------------------------------

data ram cache
('cpu', 'cache physically closer', 'processors', '42436018', 'the point of this cache is to store data that the cpu is using quite regularly to speed up transfer time since the cpu cache is physically closer to the processors then ram is\n')
('processors', 'far more', 'cpu', '10332847', 'having data structures that start on 4 byte word alignment on cpus with 4 byte buses and processors is far more efficient when moving data around memory and between ram and the cpu\n')

cores different contention
('cpu', 'more tasks', 'processors', '23300674', 'given that you re seeing extra tasks causing a slowdown you likely either have resource contention via locking or your tasks are cpu bound and having more tasks than processors cores will cause slowdowns\n')
('processors', 'more', 'cpu', '22638062', 'if that processors has more than one cpu can the interrupts run on different cpu cores at the same time\n')

computer logical core
('processors', 'more', 'cpu', '11835474', 'multicore refers to a computer or processors that has more than one logical cpu core and that can physically execute multiple instructions at the same time\n')
('processors', 'more', 'cpu', '23935539', 'multicore refers to a computer or processors that has more than one logical cpu core and that can execute multiple instructions at the same time.\n')

system resources process
('cpu', 'more', 'processors', '5924309', 'the operating system will give your program all the resources it needs the reason your process is not consuming all the cpu is probably because it s waiting for the io sub system more than the processors\n')
('processors', 'much more effective', 'cpu', '2443473', 'as soon as you go beyond single processors it s much more effective to add another cpu or two to system than to struggle with gpu calculations\n')

richfaces	primefaces---------------------------------------------------

ant	maven---------------------------------------------------

number ground sophisticated
('maven', 'more sophisticated', 'ant', '22056239', 'a hood technique is to tag milestone releases of your projects giving then a version number and then manage dependencies with maven or a similar tool a bit more sophisticated than ant\n')
('ant', 'older', 'maven', '28907043', 'ant is older and while it is still used in a number of projects it is rapidly losing ground to maven\n')

simpler default project
('maven', 'more', 'ant', '4970153', 'also maven projects come with a different directory structure and seems to be doing much more than what ant does in the spring source tutorial\n')
('ant', 'simpler', 'maven', '31721251', 'ant is simpler and older and the default just called a java project maven is newer more powerful and flexible\n')
('ant', 'simpler', 'maven', '13443342', 'so i suggest you build a p2 repository can be done in ant but seems simpler in maven tycho and split the projects to several repositories\n')

better dependencies system
('maven', 'better', 'ant', '29234035', 'maven is definitely better than ant and well used for big projects\n')
('maven', 'better', 'ant', '20756425', 'maven is better for managing dependencies but ant is ok with them too if you use ant+ivy and build artefacts\n')
('ant', 'better', 'maven', '304069', 'however some things ant handles better than maven and if there s not a maven plugin for it it may be difficult to handle in maven\n')
('ant', 'better', 'maven', '13922438', 'i also find ant with ivy to be better documented than maven although that s not too difficult\n')
('maven', 'jar bigger then', 'ant', '18609318', 'the size of maven jar is bigger then ant jar i don t know why help me please\n')
('ant', 'better', 'maven', '13064741', 'if you want to stick to lower level basic file operations ant is better bet than maven\n')
('maven', 'better', 'ant', '1190551', 'while i personally think maven is a better tool than ant in the long run our experience will make maven3 a better tool than maven2\n')
('maven', 'definitely better', 'ant', '8742257', 'maven definitely has better integration with flex than ant\n')
('ant', 'better', 'maven', '1347793', 'this question is similar in nature to whether ant is better than maven or c# better than java\n')
('maven', 'better alternative', 'ant', '47381263', 'maven is a better alternative as build system compared to ant\n')
('maven', 'pretty easier', 'ant', '16960689', 'i think updating dependencies with maven is pretty easier than dealing with ant but of course you could select the other way if you feel more conifrtable\n')
('ant', 'more', 'maven', '24474576', 'ant pre-dates more modern tools like maven and gradle that have this feature baked in\n')
('maven', 'easier', 'ant', '20756425', 'you can take a look on gradle which for me could provide more freedom than maven but is easier to use than ant\n')
('maven', 'better solution', 'ant', '18851107', 'while you can munge together a solution with ant maven is a better solution for managing dependencies than ant\n')
('maven', 'earlier', 'ant', '23112507', 'can maven examine and resolve internal dependencies of non-mavenized jar library defined earlier by ant\n')
('maven', 'really better job', 'ant', '599070', 'and it turns out maven really does a better job of managing dependencies for ant build.xml files than does ivy\n')
('maven', 'better', 'ant', '13496917', 'trust me i did this before for another job where the system architect decided that maven was better than ant and all of our projects must be converted from ant to maven\n')

complex powerful
('ant', 'more complex', 'maven', '2435935', 'does this make ant more complex than maven\n')
('maven', 'more powerful', 'ant', '31543494', 'i know maven is more powerful than ant\n')

repo preferred respects
('ant', 'more powerful', 'maven', '2850172', 'ant is much more powerful than maven in many respects but maven excels in dependency management and ease of deployment\n')
('maven', 'more', 'ant', '4970153', 'but as i checked-out some example apps from spring source repo and it seems that maven is more preferred and powerful than ant\n')

script class files
('maven', 'more', 'ant', '6989690', 'maven can t be compared with ant as in maven vs ant maven is more than a build script than ant is\n')
('ant', 'script more .class', 'maven', '28597911', '1 - why ant script generates more .class files than maven\n')

add	subtract---------------------------------------------------

string int value
('add', 'greater', 'subtract', '36934027', 'provided a string i want to convert the chars from the string to an int add a value from another method getkey to this number and if the result is greater than 26 subtract 26\n')
('subtract', 'less', 'add', '34110561', 'i need some help though i need each number in that list to be subtract from 27 then if the result is less than 33 add 94 then print the numbers as they were just with that sum completed how do i do this\n')

racket	scheme---------------------------------------------------

ntlm	kerberos---------------------------------------------------

performance ways better
('kerberos', 'better', 'ntlm', '5244202', 'i understand that kerberos has better performance than ntlm\n')
('ntlm', 'better', 'kerberos', '453751', 'in fact in some ways ntlm is better than kerberos\n')
('kerberos', 'better option', 'ntlm', '34309390', 'kerberos could be considered as a better option than ntlm\n')

ram	disk---------------------------------------------------

faster slower memory
('ram', 'faster', 'disk', '31332082', 'ram is a lot faster than disk\n')
('disk', 'io way slower', 'ram', '21040937', 'but you should consider that disk io is way slower than ram\n')
('disk', 'slower', 'ram', '42698909', 'anyway you will have a huge performance loss due to the fact that your disk is way slower than your ram\n')
('disk', 'much slower', 'ram', '42893433', 'as you run queries it has to fetch data from disk which is much slower than ram\n')
('disk', 'slower', 'ram', '15467085', 'this is relatively slow since reading from the hard disk is slower than reading from ram\n')
('disk', 'slower', 'ram', '13921423', 'as disk is 1000s of times slower than ram this problem can grind the machine down to a practical halt\n')
('disk', 'slower', 'ram', '24217960', 'ssd disk are good but they are still much slower than ram\n')
('disk', 'slower', 'ram', '9456024', 'if the worker processes do other things than just calulations read from or write to disk they will have to wait a lot since a disk is a lot slower than ram\n')
('disk', 'slower', 'ram', '8741427', 'as disk is 1000s of times slower than ram as the memory usage increases your machine grinds more and more closer to a halt\n')
('ram', 'much faster', 'disk', '21918245', 'obviously reading a block from cache is much more efficient than reading it off the disk since ram is much faster than disk\n')
('ram', 'faster', 'disk', '10429777', 'ram is 100 thousand times faster than disk for database access from\n')
('ram', 'faster', 'disk', '3520281', 'no trivial support for cache accessing ram is faster than accessing disk\n')
('ram', 'faster', 'disk', '46452799', 'i understand that ram is typically thousands of times faster than disk but i o speed is not the only code running\n')
('ram', 'much faster', 'disk', '26475024', 'the ram is much faster than the hard disk\n')
('disk', 'slower', 'ram', '8741427', 'remember disk is 1000s of times slower than ram\n')
('disk', 'slower', 'ram', '9163426', 'so even ignoring practical considerations like disk is slower than ram it will be slower\n')
('ram', 'faster', 'disk', '25408923', 'for this reason it seemed natural to me to initially load the file into memory and interpret it later at my leisure since reading from ram is supposed to be much faster than from disk\n')
('disk', 'much slower', 'ram', '23316098', 'changing it will require a reboot. that will slow things down a bit as the swap file on disk is much slower than ram\n')
('ram', 'faster', 'disk', '472333', 'ram is much faster than disk\n')
('disk', 'slower', 'ram', '11832363', 'the initial read has to access the disk which is a lot slower than accessing ram\n')
('disk', 'slower', 'ram', '14571358', 'i think it is because the disk is slower than ram\n')
('disk', 'slower', 'ram', '41349090', 'disk even ssd are orders of magnitude slower than ram\n')
('ram', 'faster', 'disk', '30961271', '1 yes there is a obvious benefit reading from ram is faster than reading from disk\n')
('disk', 'slower', 'ram', '16312981', 'disk i o is about 100 000 times slower than ram\n')
('disk', 'slower', 'ram', '40588290', 'if too much memory is consumed it might swap to disk which is slower than ram\n')
('ram', 'faster', 'disk', '16427006', 'ram is always faster than disk\n')
('disk', 'slower', 'ram', '10949313', 'disk access is much slower than ram\n')
('disk', 'slower', 'ram', '6282736', 'that means that without caching a hit against disk will be 200 times slower than accessing ram\n')
('disk', 'slower', 'ram', '17869058', 'run the following to sort the data on disk this is slower than pulling it into ram sorting and then writing to disk\n')
('disk', 'slower', 'ram', '1706506', 'disk io - even ssd - is many orders of magnitude slower than the ram that the hashing is going though\n')
('ram', 'much faster', 'disk', '7548458', 'ram is much faster then disk io\n')
('disk', 'slower', 'ram', '20095562', 'disk io will be slower than ram\n')
('ram', 'faster', 'disk', '1204121', 'loosely speaking ram is 1000 or more times faster than disk and cpu is faster still\n')
('disk', 'much slower then', 'ram', '10243816', 'only one disk read - since the disk is much slower then ram -\n')
('disk', 'slower', 'ram', '30478460', 'disk is 100x slower than ram\n')
('disk', 'slower', 'ram', '47603770', 'which will lead to performance issue all programs will be work slower because read info from disk is slower than from ram\n')

cheaper storage persistence
('disk', 'storage cheaper', 'ram', '18718208', 'always favor disk persistence disk storage is cheaper than ram\n')
('ram', 'more', 'disk', '5049314', 'basically ram is more expensive than the disk storage\n')
('disk', 'cheaper', 'ram', '516941', 'disk space is probably always going to be cheaper than ram\n')
('disk', 'space cheaper', 'ram', '16308547', 'this approach will radically reduce heap space usage - disk space is cheaper then ram too\n')

faster seek nanoseconds
('disk', 'read slower', 'ram', '44453468', 'pros of objects faster disk read is slower than ram lesser dependencies of the system s state\n')
('disk', 'slower', 'ram', '21370836', 'a disk seek takes about 10 000 000 nanoseconds of course some disk are faster but the best of them are still thousands of times slower than ram\n')

data machine expensive
('ram', 'more', 'disk', '44453468', 'you lose two benefits of data base consistency data persists after a crash and you need more ram which is more expensive and scarce than disk flash\n')
('disk', 'much slower', 'ram', '14873969', 'reloading pages data or program code from disk which is much slower does not usually happen very often as long as the program is actually running and as long as the machine is not desperately low on ram\n')
('ram', 'more expensive', 'disk', '21370836', 'but ram is volatile the data in ram is erased when the computer loses power and ram is far more expensive than disk per unit of storage\n')
('disk', 'more important', 'ram', '18394009', 'if the hot data won t fit in ram on either machine then disk i o performance becomes more important than ram mostly random read i o and the fsync flush rate\n')

available larger varnish
('disk', 'larger', 'ram', '8654903', 'so while the writes my be sequential on disk for datasets larger than ram these random reads will quickly become the bottle neck\n')
('disk', 'not larger', 'ram', '1896687', 'edit true the file on disk is not larger than ram but the in-memory representation can easily become much larger than available ram\n')
('disk', 'larger available', 'ram', '7314774', 'alternatively you can use an ssd with file storage in varnish to reduce disk io bottlenecks when using an object cache larger than available ram\n')
('disk', 'larger available', 'ram', '969709', 'in future these lists may be read from disk and larger than available ram\n')
('disk', 'larger available', 'ram', '14280134', 'it is needed for a lookup of repetitions in disk files much larger than available ram\n')

swap processes fragmentation
('disk', 'larger', 'ram', '24240326', 'it uses swap space on disk to allow for processes much larger than ram\n')
('disk', 'more memory available', 'ram', '28231912', 'the os heap uses the cpu s virtual memory hardware and is free from fragmentation issues and can even effectively use the disk s swap space allowing you to allocate more memory than available ram\n')

access
('ram', 'less', 'disk', '2465473', 'more ram means less disk access\n')
('ram', 'access much more fast', 'disk', '41195702', 'and ram access is much more fast than disk access\n')

smaller time table
('ram', 'smaller', 'disk', '21370836', 'so even if your ram is much smaller than your disk you could assume you can read data that s already in ram 90 of the time or more\n')
('disk', 'bigger', 'ram', '26281309', 'the table on disk is bigger than your ram\n')
('disk', 'larger', 'ram', '38472387', 'this is well within disk space but far larger than ram\n')

system page operating
('disk', 'slower system', 'ram', '10350034', 'there exist battery-backed packages of ram modules which can act as an ultra-fast hdd substitute but if they attach via sata scsi or other typical disk interface the still are slower than system ram\n')
('disk', 'slower', 'ram', '28817103', 'this is slow because your hard disk is significantly slower than ram and at 7gb there will be a lot of data being read from your hard disk put into ram then moved back to your page file the file on disk your operating system uses to store data that has been copied out of ram\n')

4gb enough jboss
('ram', 'more enough', 'disk', '7201179', 'this particular jboss runs in a vm with 4gb of ram and 2 cpu s and more than enough disk space it has never has less than 5gb free at any time\n')
('ram', 'more enough', 'disk', '45343069', 'for this reason i deployed a 2 cores 4gb ram and more than enough disk to run through the getting started example of the enterprise integrator\n')

system mb potential
('disk', 'slower', 'ram', '18457435', 'once you re out of ram and the system starts swapping - disk access is thousands times slower than ram so any potential benefits of 64-bit code are flying out of window\n')
('disk', 'slower', 'ram', '7504168', 'in other words the operating system is using some of your hard disk space to satisfy your 13 mb allocation request at great expense of speed since the hard disk is much much slower than ram\n')

ssd alot subsequent
('disk', 'slower', 'ram', '1356125', 'another option is to spend a bit of cash on a 15000 rpm disk or a ssd solid state disk although that ll be slower than a ram disk\n')
('disk', 'slower', 'ram', '30592276', 'the first load involves reading alot from the hard disk which is slow even ssd is slower than ram subsequent loads should be faster though 3 seconds on the ssd seem to be odd\n')

mvp	presenter---------------------------------------------------

division	multiplying---------------------------------------------------

decimal number single
('division', 'slower', 'multiplying', '15712237', 'i presume that you know that using a division is a lot slower than multiplying by decimal number 5 is always slower than 0.2\n')
('division', 'slower', 'multiplying', '38342154', 'according to agner s instruction tables a single fp division is slower than a single reciprocal op and a single multiplying op\n')

note dshin faster
('division', 'slower', 'multiplying', '4301621', 'sure that s probably compiled or jit d away but you should avoid division in performance critical code it s far slower than multiplying\n')
('multiplying', 'faster', 'division', '35264675', 'note that i ve incorporated dshin s comment that multiplying is faster than division however the performance improvement is about 90 removing the binary search 10 multiplication vs\n')

pdfbox	itext---------------------------------------------------

elixir	erlang---------------------------------------------------

enumerate	xrange---------------------------------------------------

angular	ionic---------------------------------------------------

svn	perforce---------------------------------------------------

network checkout faster
('perforce', 'faster', 'svn', '2794083', 'perforce is soooo much faster than svn because all the check-outs are stored on the server so it doesn t have to check every file on an update\n')
('svn', 'much better', 'perforce', '2794083', 'svn works much better when disconnected from the network - with perforce you have to tell the server when you ve done a checkout\n')
('perforce', 'better', 'svn', '44752', 'make sure you re using a source control system that supports branching and merging i ve had experience with perforce and svn and while perforce is better svn is free\n')

boost	stl---------------------------------------------------

libraries mature standard
('boost', 'less standard', 'stl', '548827', 'boost libraries are generally less mature and less standard than stl\n')
('stl', 'much richer', 'boost', '4778449', 'as for not reinventing the wheel like many have said already make sure to first explore the possibilities in the standard template library stl which is much richer than you might think and then look at boost www.boost.org which has libraries for a lot of diverse purposes and they are extremely high quality and some are just works of art like spirit proto lambda and mpl\n')

project better exceptions
('boost', 'better', 'stl', '277306', 'i ve used both for the same project boost is better integrated with the stl and especially c++ exceptions\n')
('stl', 'better', 'boost', '8231535', 'c++ s stl is getting better and better yet it s not nearly as huge as boost and is not intended to\n')
('stl', 'better', 'boost', '548848', 'once you re past the basics with c++ learning how to use parts of stl and then how it works will be better than tackling boost\n')

pascal	delphi---------------------------------------------------

redmine	mantis---------------------------------------------------

gyroscope	accelerometer---------------------------------------------------

function sensor accurate
('gyroscope', 'more accurate', 'accelerometer', '16772950', 'also i have tried the accelerometer sensor and it worked but i m asking to check whether the gyroscope is more accurate to this function or the accelerometer\n')
('gyroscope', 'sensor more accurate', 'accelerometer', '16760584', 'so after googling this i found that using gyroscope sensor is more accurate than the accelerometer\n')

lemmatization	stemming---------------------------------------------------

sctp	tcp---------------------------------------------------

different better
('sctp', 'better', 'tcp', '32988229', 'sctp is not better than tcp in any way but it does something different\n')
('sctp', 'better', 'tcp', '32986662', 'how sctp is better then tcp\n')

cappuccino	sproutcore---------------------------------------------------

use bindings data
('sproutcore', 'better', 'cappuccino', '4289512', 'sproutcore makes use of bindings better than cappuccino currently does\n')
('sproutcore', 'better data', 'cappuccino', '4289512', 'sproutcore has a better data store api than the one cappuccino has\n')

integer	floating-point---------------------------------------------------

today units combinations
('floating-point', 'slower', 'integer', '26227821', 'historically floating-point could be much slower than integer\n')
('floating-point', 'faster', 'integer', '1900794', 'depending on context floating-point code may be as fast as or faster than integer code or it may be four times slower\n')
('floating-point', 'slower', 'integer', '26227821', 'floating-point may be somewhat slower than integer but it s generally\n')
('integer', 'faster', 'floating-point', '25898877', 'integer math is often much faster than floating-point so such a function could be a major performance win\n')
('integer', 'math faster', 'floating-point', '5069628', 'generally integer math is faster than floating-point math\n')
('floating-point', 'slower', 'integer', '5069643', 'historically floating-point could be much slower than integer arithmetic\n')
('integer', 'faster', 'floating-point', '288727', 'which uses all integer arithmetic is usually faster than its floating-point equivalent likely significantly faster in the case of a floating-point type equivalent to t-sql s decimal type\n')
('floating-point', 'divide faster', 'integer', '2149859', 'floating-point divide is faster than integer fewer bits to divide assuming your cpu has floating-point unit\n')
('integer', 'faster', 'floating-point', '38034768', 'it s even possible that you could implement pong using only integer arithmetic which is likely to be faster than floating-point -- but the difference is unlikely to be critical\n')
('floating-point', 'slower', 'integer', '18883825', 'as a rule of thumb floating-point is about 2x slower than integer on\n')
('floating-point', 'math slower', 'integer', '514184', 'they take up more space and floating-point math is slower than integer math\n')
('integer', 'coarser', 'floating-point', '44682117', 'you re performing integer division which is coarser than floating-point division\n')
('integer', 'faster', 'floating-point', '30311819', 'there are lots of cpu gpu combinations where a 32b integer multiply is faster than a 32b floating-point multiply on cpu and vice-versa on gpu\n')
('integer', 'faster', 'floating-point', '9236157', 'but another added benefit of this approach is that it could make your program run faster since fixed-point integer arithmetic is much faster than floating-point arithmetic\n')
('floating-point', 'more complicated', 'integer', '12982942', 'floating-point arithmetics is by far more complicated than integer arithmetics\n')
('floating-point', 'faster', 'integer', '3042066', 'today s floating-point units are pretty fast and may actually divide faster than an integer unit\n')
('floating-point', 'division typically faster', 'integer', '25024535', 'floating-point division is typically faster than integer division on the cpu\n')
('integer', 'simpler', 'floating-point', '141340', 'but integer arithmetic arguably is inherently simpler than floating-point\n')

splinter	selenium---------------------------------------------------

easier simpler
('splinter', 'simpler', 'selenium', '38908865', 'splinter simpler than selenium\n')
('splinter', 'easier', 'selenium', '37666683', 'splinter makes it easier to use selenium plus\n')

random	prng---------------------------------------------------

non-random behaviour reflection
('random', 'less', 'prng', '7480271', 'then you use it as seed in random which is less good that one is a non-cryptographic prng and its output may exhibit some structure which will not register in a statistical measurement tool but might be exploited by an intelligent attacker\n')
('random', 'behaviour more', 'prng', '41412930', 'the non-random random behaviour is more a reflection on the quality of the rand prng â it is often not very good\n')

fgetc	fread---------------------------------------------------

libav	ffmpeg---------------------------------------------------

spi	i2c---------------------------------------------------

research last control
('i2c', 'bus slower', 'spi', '42818805', 'on top of that the i2c bus is slower than spi because there are control data exchanged\n')
('spi', 'faster', 'i2c', '46550567', 'i have done some research about them and it seems to be that spi is faster than i2c but the last one ensures more control and error detection over the first one\n')

post faster
('spi', 'faster', 'i2c', '43422643', 'post explaining why spi is faster than i2c\n')
('spi', 'faster', 'i2c', '21848629', 'i wanted to know that what makes spi faster than i2c\n')

nunit	mbunit---------------------------------------------------

imageview	textview---------------------------------------------------

bottom taller subtitle
('imageview', 'taller', 'textview', '6869485', 'the imageview is bit taller than the textview and so what i do is add padding margins to the bottom of textview to get it align and look like the imageview and textview horizontal centers are aligned\n')
('textview', 'taller', 'imageview', '44232501', 'i have a button that is bottom constrained to the bottom of the imageview however should be top constrained to the bottom of the subtitle textview if subtitletextview is taller than imageview\n')

smaller larger bigger
('textview', 'smaller height', 'imageview', '44346113', 'in the image the square represents a fixed size imageview the rectangle is a textview which can 1 line smaller height than imageview or multiline height is larger than imageview\n')
('imageview', 'smaller', 'textview', '21051095', 'however the imageview has a smaller width than the textview\n')
('textview', 'smaller', 'imageview', '44346113', 'i also tried to do spacing from imageview to textview but then if the textview is smaller than the imageview the spacing will be wrong again\n')
('imageview', 'bigger', 'textview', '24720677', 'assuming the imageview is always bigger than the textview it ll drive the parent height\n')
('imageview', 'larger', 'textview', '27327422', 'this should work as long as the imageview is larger than the textview in all dimensions\n')
('imageview', 'greater', 'textview', '32205371', 'for api 18 and earlier the margin is being applied after the alignment so if the margin in the imageview is greater than 0 you will get your textview moved\n')
('imageview', 'higher', 'textview', '29874834', 'i want to set imageview and textview on same line in linearlayout but the imageview is always higher than the textview\n')
('imageview', 'bigger', 'textview', '7799656', 'i have an imageview that is bigger than a textview and i want to center the textview on top of the imageview both vertically and horizontally\n')
('textview', 'higher', 'imageview', '44346113', 'i tried constraints spacing each imageview with xdp it is ok if all textview are not higher than the imageview but if a textview is higher than a imageview it will overlap\n')

lower higher
('imageview', 'higher', 'textview', '37540133', 'i try to align my imageview and my textview but the imageview is higher than my textview\n')
('textview', 'lower', 'imageview', '34694309', 'make textview lower than imageview\n')

postgresql	mysql---------------------------------------------------

better large reputation
('postgresql', 'fewer', 'mysql', '1374694', 'and postgresql has fewer experienced administrators than the big databases and mysql which i believe contributes to the reputation\n')
('mysql', 'better db', 'postgresql', '26232186', 'anyways mysql is bad and on longterm especially if you are enough good for java i suggest you to use some better db with postgresql you were really satisfied i think\n')
('postgresql', 'fulltext 10-100x faster', 'mysql', '5926886', 'i did some benchmarking 3 years ago may be stale... which showed that on large datasets basically postgresql fulltext is 10-100x faster than mysql and xapian 10-100x faster than postgresql but not integrated\n')
('postgresql', 'slower', 'mysql', '30010645', 'for these ultra simple queries postgresql can be slower than mysql - postgresql has richer planner that works better on more complex queries but on trivial queries is slower\n')
('postgresql', 'more tricks', 'mysql', '957655', 'in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with\n')
('postgresql', 'much more', 'mysql', '1338597', 'postgresql is much more complete and solid and will much better support complex queries and their optimization while mysql may shine in terms of retrieval speed for extremely simple queries\n')
('postgresql', 'more', 'mysql', '13155314', 'the query optimizer in postgresql is more advanced than in mysql and copes with complicated statements much better especially when it comes to sub-selects\n')
('postgresql', 'better', 'mysql', '7587624', 'if you want to use sql i strongly reccommend postgresql it seems to deal with large databases and frequent writes a lot better than mysql\n')
('mysql', 'faster', 'postgresql', '953814', 'mysql s version is apparently marginally faster than postgresql but lacks some of the more advanced spatial features therefore it s pretty much limited to finding records that match a certain range of coordinates\n')
('postgresql', 'better', 'mysql', '2324076', 'given postgresql s reputation for doing things better than mysql or at least as good as i daresay that postgresql would demonstrate similar performance if properly used\n')
('postgresql', 'faster', 'mysql', '30113392', 'according to my own experience postgresql run much faster than mysql especially handling big tables 1.4 gb lineitem table in my case\n')

slower select tuning
('postgresql', 'pickier', 'mysql', '9759899', 'postgresql is picky pickier than mysql -- all fields in the select list when using distinct must be present in the order_by and group_by clauses\n')
('mysql', 'faster', 'postgresql', '30008388', 'mysql run 4x faster than postgresql\n')
('mysql', 'slower', 'postgresql', '34148481', 'in my personal openion mysql is slower than postgresql and mongo db\n')
('postgresql', 'slower', 'mysql', '27443', 'in most regards postgresql is slower than mysql especially when it comes to fine tuning in the end\n')
('mysql', 'faster', 'postgresql', '205364', 'mysql i am told can be optimized to do faster reads than postgresql but both are pretty ridiculously fast in terms of # transactions sec they support and it doesn t sound like that s your problem\n')
('postgresql', 'slower', 'mysql', '1162395', 'postgresql is already slower than mysql up to a certain point it is actually faster when you have a ridiculously large database\n')
('postgresql', 'slower', 'mysql', '1841772', 'i ve found that postgresql is in my expirience is slower as mysql\n')
('postgresql', 'slower', 'mysql', '36927941', 'unfortunately in postgresql select count is often slower than mysql to which it often get s compared to\n')
('postgresql', 'slower', 'mysql', '2797107', 'do you find rails with postgresql is slower than mysql knowing that it produce more query on the background\n')
('postgresql', 'slower', 'mysql', '30008388', 'i did a simple performance test and i noticed postgresql is slower than mysql\n')
('postgresql', 'more', 'mysql', '1162378', 'postgresql requires more tuning than mysql to achieve optimal performance\n')

popular web instagram
('postgresql', 'more popular', 'mysql', '11642511', 'it s a shame postgresql isn t more popular than mysql since it supports exactly this feature out-of-the-box you d only have to share one sequence object between tables.\n')
('mysql', 'more popular', 'postgresql', '4394406', 'though mysql is more popular than postgresql but instagram is using postgresql maybe due to these reasons\n')
('postgresql', 'less', 'mysql', '14197739', 'while postgresql is less popular than mysql most of the serious web hosting supports it\n')

better data unicode
('postgresql', 'more proven', 'mysql', '32023224', 'either postgresql more proven than mysql for such huge data\n')
('postgresql', 'much better', 'mysql', '45528333', 'postgresql is much better suited for data warehousing compared to mysql\n')
('postgresql', 'faster', 'mysql', '1373625', 'postgresql is faster than mysql s innodb\n')
('mysql', 'better', 'postgresql', '21073787', 'an efficiently configured mysql is better than a badly configured postgresql and vice-versa\n')
('postgresql', 'better', 'mysql', '1016512', 'honestly though postgresql scales much better than mysql\n')
('postgresql', 'better', 'mysql', '21215884', 'what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n')
('postgresql', 'better', 'mysql', '8137020', 'and a wiki for why postgresql is better than mysql\n')
('postgresql', 'better imo', 'mysql', '4916041', 'postgresql is also a lot better imo than mysql and is the recommended database to use with django according to a lot of the people close to django\n')
('mysql', 'worse', 'postgresql', '2694299', 'in other words is mysql better or worse than postgresql to handle unicode etc\n')
('postgresql', 'better choice', 'mysql', '33402831', 'i was told that postgresql is a better choice than mysql for displaying hierarchical data so i installed postgresql and i m ready to go\n')
('postgresql', 'better', 'mysql', '21216225', 'the other question is that what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n')
('postgresql', 'much better', 'mysql', '11365372', 'the only reason i was considering postgresql was that some research suggested postgresql has much better support for changing schemas along the way than mysql\n')
('postgresql', 'much better', 'mysql', '13155314', 'then postgresql is much better than mysql\n')
('postgresql', 'better option', 'mysql', '34851450', 'in your case postgresql may be a better option than mysql because your query is going to likely be against secondary indexes\n')
('postgresql', 'better', 'mysql', '9879578', 'i really like postgresql s indexes which are far better than mysql s\n')
('postgresql', 'better capabilities', 'mysql', '26188200', 'i found that postgresql 9.3 has better capabilities for json than the mysql versions i am using\n')
('postgresql', 'more', 'mysql', '8928034', 'i am using postgresql btw which can do more than mysql incase that changes things\n')
('postgresql', 'better', 'mysql', '1467079', 'if you need spatial data capabilities postgis with postgresql is better than mysql\n')
('postgresql', 'better', 'mysql', '1373566', 'some people were saying that postgresql is better for security purposes whereas mysql is becoming more feature rich.\n')
('postgresql', 'better option', 'mysql', '8262827', 'is postgresql a better option than mysql for partitioning tables by date\n')
('postgresql', 'harder', 'mysql', '25197871', 'does this affect postgresql harder than mysql\n')
('postgresql', 'better', 'mysql', '74931', 'with correct locking for safety reasons and heavy concurrent use postgresql performed better than mysql\n')
('postgresql', 'much better performance', 'mysql', '201950', 'postgresql gets much better performance and this is coming from a former mysql partisan\n')
('postgresql', 'better', 'mysql', '14759864', 'i just recently switched databases to postgresql which has given me a slew of problems although i must admit i like it a lot better than mysql\n')
('postgresql', 'better', 'mysql', '8748476', 'postgresql has better support but the support by mysql depends on the used storage engine\n')
('postgresql', 'better', 'mysql', '4394622', 'generally speaking i find postgresql lends itself to 24 7 operations better than mysql\n')
('postgresql', 'better', 'mysql', '2756807', 'in my cases postgresql was better than mysql mysql do not completely support unicode\n')
('postgresql', 'better', 'mysql', '7997125', 'i would need a scalable database so probably postgresql would be better than mysql\n')
('postgresql', 'easier', 'mysql', '3162419', 'postgresql supports recursive queries in the form of recursive common table expressions which make querying heirarchical data easier than in mysql and also give better performance\n')
('postgresql', 'better', 'mysql', '4394406', 'postgresql is better than mysql in many ways\n')
('postgresql', 'better', 'mysql', '16679371', 'i d also recommend postgresql over mysql if you are going to have nested comments as postgresql does hierarchical querying better than mysql\n')
('postgresql', 'better', 'mysql', '8749161', 'there are workloads where postgresql is better and there are workloads where mysql is better\n')
('postgresql', 'better', 'mysql', '2447484', 'is postgresql better than mysql for such purpose\n')
('postgresql', 'better', 'mysql', '47067702', 'postgresql seem to better than mysql in terms of speed\n')
('mysql', 'easier', 'postgresql', '2193943', 'mysql is easier than postgresql but it doesn t really matter either way\n')
('mysql', 'more famous', 'postgresql', '46270070', 'while mysql is more famous for serious enterprise-quality database where preserving your data is critical i recommend postgresql\n')
('mysql', 'much better', 'postgresql', '14322003', 'some say mysql is much better for bigger projects while others think just go with postgresql\n')
('postgresql', 'better', 'mysql', '2000205', 'also you might take the time to compare postgresql and see if there is something about it that meets your needs as well or better than mysql\n')
('postgresql', 'generally better', 'mysql', '1795117', 'now i m not sure if i d say postgresql is generally better than mysql -- there are certainly things that mysql does much better and so it certainly has its uses -- but these are a few things i absolutely love about it\n')
('postgresql', 'better', 'mysql', '7999353', 'postgresql is way better than mysql in nearly every respect\n')

stricter error sql
('postgresql', 'stricter', 'mysql', '7214433', 'but in mysql it is ok and in postgresql it is wrong and ask for the other fields besides site_id either in a group by clause or in a aggregation function i know that postgresql is stricter on sql than mysql so i must select the site_id in the query object of msg_published but in pure sqlalchemy i can do like this\n')
('postgresql', 'stricter', 'mysql', '3512286', 'i am aware that postgresql interpretation of the sql standard is stricter than mysql and that consequently this type of query won t work...and have read a number of posts on stackoverflow and elsewhere on the subject - but none of them seem to be the definitive answer on this subject\n')
('postgresql', 'stricter', 'mysql', '4078839', 'postgresql is stricter to the sql standard than mysql is\n')
('postgresql', 'more correct', 'mysql', '27439', 'from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster\n')
('mysql', 'more permissive', 'postgresql', '10775695', 'mysql is more permissive and allows the non-standard use of distinct but postgresql throws an error\n')
('mysql', 'more resistant', 'postgresql', '2221787', 'the question is is mysql somehow more resistant than postgresql to sql injection attack under the perl dbi and why might this be the case\n')
('postgresql', 'stricter', 'mysql', '22927557', 'postgresql is stricter about conversions than mysql is and generally will throw an error rather than try to convert a string to an integer if it doesn t look like one\n')
('mysql', 'implementation less', 'postgresql', '8373087', 'i totally understand the error and assume that the mysql implementation is less sql conform than the postgresql implementation\n')

fewer security issues
('postgresql', 'fewer surprises', 'mysql', '4074875', 'i would recommend postgresql for a beginner as it has far fewer surprises than mysql\n')
('postgresql', 'more', 'mysql', '6475228', 'i d have said that postgresql is more security aware than mysql supporting roles more authentication methods ... but that the database itself has generally a very limited impact on the security of an application\n')
('postgresql', 'fewer security', 'mysql', '1270393', 'traditionally postgresql has had fewer security issues than mysql but they are both doing very well on that\n')

compliant comfortable looks
('postgresql', 'more', 'mysql', '1769414', 'postgresql is more sql compliant than mysql\n')
('postgresql', 'more compliant', 'mysql', '6751367', 'looks like postgresql is a little more compliant than mysql so try this instead\n')
('postgresql', 'more compliant', 'mysql', '259460', 'postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that\n')

easier features tendency
('postgresql', 'more logical', 'mysql', '3553940', 'you might look at postgresql as i find it a bit easier to manage and maintain as i feel some aspects are more logical than mysql\n')
('mysql', 'more', 'postgresql', '1311750', 'mysql is more widely supported and a little easier to use but postgresql has some very cool features and functionality that s worth taking a gander at\n')
('postgresql', 'more advanced', 'mysql', '8749161', 'however postgresql s sql features are far more advanced than mysql s and mysql has a tendency to silently ignore things you tell it to do - especially in a default installation and if you rely on a foreign key to be created that might be a very unpleasant surprise\n')
('postgresql', 'cleaner', 'mysql', '3485121', 'however people often argue that postgresql is cleaner and easier to use that mysql\n')
('postgresql', 'more capable', 'mysql', '12873077', 'i suggest postgresql it s more capable has more features and better support for complex queries and datatypes than mysql and has a lot of tuning options\n')
('postgresql', 'specifically easier', 'mysql', '36525504', 'postgresql specifically has gotten easier to manage while mysql has lost some of the simplicity that gave it an advantage without picking up enough features that really matter\n')

robust powerful free
('postgresql', 'more robust', 'mysql', '4135236', 'i hear postgresql is more robust and doesn t crash like mysql does in these situations\n')
('postgresql', 'more mature', 'mysql', '2452926', 'postgresql will always be a little bit more mature than mysql\n')
('mysql', 'probably more', 'postgresql', '13557296', 'mysql is probably more often offered by shared hosting providers postgresql is probably a little more powerful\n')
('postgresql', 'more robust', 'mysql', '3563373', 'there is also postgresql its a bit more robust than mysql and is free just the same\n')
('postgresql', 'much more mature', 'mysql', '4394406', 'i feel postgresql is much more mature and robust than mysql\n')
('postgresql', 'far more powerful', 'mysql', '8052193', 'postgresql is far more powerful and scalable and doesn t have mysql s silly limitations and gotchas\n')
('postgresql', 'more powerful', 'mysql', '259517', 'i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql\n')
('postgresql', 'more restrictive', 'mysql', '1717152', 'postgresql is a bit more restrictive than mysql\n')

table ancedotal servers
('postgresql', 'more flexible indexing', 'mysql', '12495775', 'not only does postgresql have a far more flexible indexing than mysql but the table approaches are very different also meaning the appropriate indexing strategies are as different as the tactics are\n')
('postgresql', 'less troublesome', 'mysql', '4394396', 'this is ancedotal but the postgresql servers i ve managed have always been much less troublesome than mysql which likes to randomly crash once in a while occasionally corrupting a table on the way down\n')

worse timings mariadb
('mysql', 'worse', 'postgresql', '52179', 'i just checked the timings using mysql 5 and they are slightly worse than postgresql\n')
('mysql', 'mariadb slightly worse', 'postgresql', '40083672', 'mysql mariadb is slightly worse than postgresql\n')

button	checkbox---------------------------------------------------

page status error
('button', 'more', 'checkbox', '4808581', 'how to restrict user to select not more than 10 asp.net checkbox on button click event if user select more than 10 checkbox then alert box will pop up that you can not select more than 10 checkbox\n')
('button', 'more', 'checkbox', '31329662', 'i have an asp page where the status of a list is approved by selecting checkbox and then pressing approve button however when i select more than one checkbox it throws the error index was out of range\n')

radio better uncheck
('button', 'better idea', 'checkbox', '21157659', 'if it s only one colour you want selecting you can use a radio button instead which would be a better idea than a checkbox\n')
('checkbox', 'better radio', 'button', '42163991', 'using checkbox to check uncheck is better than radio button\n')
('button', 'more', 'checkbox', '11662905', 'unlike radio button the user can select more than one checkbox at once or select none of them at all\n')
('button', 'more', 'checkbox', '40849763', 'one more thing i also want select only one radio button when i have selected more than 2 checkbox\n')
('button', 'more suitable rather', 'checkbox', '15388986', 'if you want the users to select only one option perhaps a dropdown or radio button list is more suitable rather than checkbox\n')
('button', 'better', 'checkbox', '14786816', 'actually i found out why using two radio button with same names and different values true and false is better than checkbox\n')

custom hidden field
('button', 'better', 'checkbox', '30116307', 'you ll want to have multiple radio button each with it s own value to set some property to although this is weird for a yes no you are better off with a checkbox but if you had multiple values this is how radio button work\n')
('checkbox', 'better choice', 'button', '42560476', 'so i think a custom checkbox is the better choice here but if you really want to use a button i would use a hidden checkbox field and apply onclick functions to the button to change the value of a hidden checkbox field\n')

able next disable
('button', 'more', 'checkbox', '45560870', 'as image shows below i want to make next button enabled only if more than one checkbox get checked\n')
('button', 'more', 'checkbox', '3591491', 'i can verify that by unchecking the checkbox it does flip the value because i enable disable the next button depending on the myproperty value - i have more than one checkbox btw\n')
('button', 'disabled.after', 'checkbox', '42948202', 'initially the value of button is disable because value of button is true so the button is disabled.after selecting the checkbox now the button should be able to click\n')
('checkbox', 'more column', 'button', '23243749', 'currently i am able to generate checkbox in column what i need is one more column with button same as checkbox in each row\n')

war	jar---------------------------------------------------

multiplying	modulo---------------------------------------------------

webkit	gecko---------------------------------------------------

spdy	ssl---------------------------------------------------

auto	decltype---------------------------------------------------

laravel	yii---------------------------------------------------

jxtable	jtable---------------------------------------------------

coalesce	isnull---------------------------------------------------

null value quicker
('coalesce', 'more values', 'isnull', '41830025', 'i tend to use coalesce only when i need to get the first non-null value from a set of 3 or more values as isnull only supports two parameters\n')
('coalesce', 'more portable code', 'isnull', '30082807', 'coalesce will go through the listed values and choose the first one that isn t null it s more portable code than isnull or ivnl etc\n')
('isnull', 'quicker', 'coalesce', '2287642', 'i understand the difference between these functions but my question is when checking for a single null value would isnull be any quicker than using coalesce\n')

faster lesser implementation
('isnull', 'faster', 'coalesce', '6152611', 'isnull is marginally faster than coalesce\n')
('isnull', 'faster', 'coalesce', '13174599', 'in some circumstances isnull is faster than case or coalesce\n')
('isnull', 'faster', 'coalesce', '25415130', 'this is pretty much the ifloop answer but isnull is slightly faster than coalesce\n')
('isnull', 'better option', 'coalesce', '44962212', 'edit based on the tests done by multiple people and by theory isnull seems to be a better option over coalesce\n')
('coalesce', 'better', 'isnull', '35307117', 'but depending on the answers to those questions i m guessing that coalesce might do the trick for you better than isnull\n')
('isnull', 'better', 'coalesce', '40413888', 'isnull performs better than the generic coalesce and better than having another and\n')
('isnull', 'comparatively faster', 'coalesce', '18085646', 'you can use isnull also in place of coalesce as isnull is comparatively faster than coalesce\n')
('isnull', 'better', 'coalesce', '29170770', 'in most cases it has reviled indexes that needed to be add and in most cases the indexes improved the queries the most but after thet have been added the isnull and dynamic still perform better than the coalesce\n')
('coalesce', 'better', 'isnull', '46306155', 'is the performance of coalesce field constant better than isnull\n')
('isnull', 'faster', 'coalesce', '18828697', 'isnull can only have one input however it s been shown to be slightly faster than coalesce\n')
('isnull', 'faster', 'coalesce', '2287656', 'isnull will be faster i think because it has lesser function code implementation for itself making it faster than coalesce\n')
('coalesce', 'better', 'isnull', '39027665', 'an example of why coalesce is better than isnull\n')
('isnull', 'better then', 'coalesce', '6186100', 'isnull is better then coalesce because of how datatypes are handled\n')
('coalesce', 'better', 'isnull', '31327603', 'you will find that coalesce works better than isnull here\n')
('isnull', 'faster', 'coalesce', '18828904', 'isnull is faster than coalesce\n')

show	hide---------------------------------------------------

status level functionality
('hide', 'higher', 'show', '34135102', 'to hide action bar invoke hide method using getsupportactionbar getactionbar in case of minsdkversion is 11 or higher as show below\n')
('show', 'higher', 'hide', '28936603', 'you can hide show the status bar on android 4.1 api level 16 and higher by using hide show functionality\n')

dir	folder---------------------------------------------------

treemap	linkedhashmap---------------------------------------------------

submit	submission---------------------------------------------------

alarmmanager	timertask---------------------------------------------------

uiviewcontroller	uinavigationcontroller---------------------------------------------------

nginx	lighttpd---------------------------------------------------

cos	sin---------------------------------------------------

performance std slower
('cos', 'slower', 'sin', '6977614', 'after reading a question related with the performance of sin cos why is std sin and std cos slower than sin and cos\n')
('sin', 'faster', 'cos', '18602020', 'or maybe flip them on my machine sin seems faster than cos\n')

pow	sqrt---------------------------------------------------

fast implementation accurate
('sqrt', 'more accurate', 'pow', '16882012', 'first of all sqrt x should be faster and more accurate than pow x 0.5 why do you think it s in the library\n')
('pow', 'faster fast', 'sqrt', '11810686', 'my question is is fast implementation of pow x 0.5f faster than fast sqrt x\n')

sorcery	devise---------------------------------------------------

emacs	vim---------------------------------------------------

external editors editing
('emacs', 'better', 'vim', '1020038', 'it is worth learning both because emacs is better than vim at editing certain languages and doing certain tasks and vice versa\n')
('emacs', 'better', 'vim', '11520215', 'there are definitely some advantages using external editors however emacs is ten million times better than vim\n')

subtraction	multiplication---------------------------------------------------

unary priority lower
('multiplication', 'higher', 'subtraction', '23612128', 'since multiplication has a higher precedence than subtraction you should subtract 0 to your digit character before multiplying it\n')
('subtraction', 'higher precedence', 'multiplication', '29579783', 'this subtraction operator occurs within the second brackets and so has a higher precedence than the multiplication\n')
('subtraction', 'lower', 'multiplication', '30191894', 'in t-sql unary minus is made to be the same priority as subtraction which is lower than multiplication\n')

operations addition harder
('multiplication', 'faster', 'subtraction', '46505901', 'as in title why is multiplication much faster than subtraction in this example\n')
('subtraction', 'harder', 'multiplication', '9714461', 'for floating point operations addition and subtraction are harder than multiplication and division so they may be slower or not again it depends on how much transistor real estate there is dedicated to the fpu\n')
('subtraction', 'faster', 'multiplication', '15668718', 'subtraction operations and usually significantly faster than multiplication and division\n')
('subtraction', 'more', 'multiplication', '44479506', 'the addition and subtraction are much more than multiplication and division\n')

wordpress	joomla---------------------------------------------------

menu better
('wordpress', 'better', 'joomla', '2350402', 'imho wordpress is better do work and customize than joomla\n')
('wordpress', 'menu better', 'joomla', '15242168', 'if that will solved later than wordpress menu is better than joomla\n')

calloc	malloc---------------------------------------------------

speed likely page
('calloc', 'better', 'malloc', '28882237', 'it takes a page off of the free_page_list updates mem_map zeroes the page and returns the physical address of the page. here s another post that explains it well and also explains why using calloc is better than malloc + memset\n')
('calloc', 'faster', 'malloc', '2688522', 'this is an enormous amount of extra work and explains why calloc is faster than malloc and memset\n')
('calloc', 'faster', 'malloc', '3393412', 'calloc is faster than malloc + memset because calloc knows that the mmap d pages are pre-zeroed and memset forces the allocation of physical ram\n')
('malloc', 'alone faster', 'calloc', '28882355', 'and is as far as i know faster than the combination of malloc and memset on the other hand malloc alone is faster than calloc\n')
('calloc', 'slower', 'malloc', '9213578', 'also calloc is slower than malloc from operating system memory allocation perspective\n')
('calloc', 'still faster', 'malloc', '2688522', 'if end up using the memory anyway calloc is still faster than malloc and memset but the difference is not quite so ridiculous\n')
('calloc', 'slower', 'malloc', '3449169', 'calloc itself is slower than malloc because you have to spend some time to clear the contents of allocated memory\n')
('calloc', 'faster', 'malloc', '32919551', 'this means calloc can potentially be faster than calling malloc followed by memset since it can skip the memset if it knows it will already by zeroed\n')
('malloc', 'faster', 'calloc', '3449073', 'malloc is faster since calloc initializes the allocated memory to contain all zeros\n')
('calloc', 'longer', 'malloc', '2076025', 'calloc does take longer than malloc because it has to zero out all the memory you asked for before giving it to you\n')
('calloc', 'slower', 'malloc', '27354796', 'i remember somewhere i have read that calloc is slower than malloc because calloc performs initialization to zero after performing memory allocation\n')
('calloc', 'faster', 'malloc', '10696511', 'in terms of speed calloc is likely to be faster than malloc + memset if memory needs to be zeroed out\n')
('malloc', 'faster', 'calloc', '45860610', 'it would be better to use malloc over calloc unless we want the zero-initialization because malloc is faster than calloc\n')
('calloc', 'faster', 'malloc', '37555852', 'it s conceivable that calloc could return address of memory location that is already pre-initialized with zeros thus it may be faster than malloc + memset combo\n')

clob	xmltype---------------------------------------------------

mdpi	hdpi---------------------------------------------------

computer monitor resources
('mdpi', 'less', 'hdpi', '30125058', 'as mdpi is less than hdpi so it will take the values from the folder which is least below it in you case it is values which is applicable to all\n')
('hdpi', 'larger', 'mdpi', '21759315', 'for example mdpi is basically 72dpi as your computer monitor hdpi resources should be around 1.5 times larger than mdpi resources and so forth\n')
('hdpi', 'larger', 'mdpi', '25173899', 'example if using dp unit hdpi device will have 1.5 240 160 times larger than mdpi\n')
('hdpi', 'bigger', 'mdpi', '7454181', 'ideally the hdpi version of your button should be 1.5 times bigger than the mdpi baseline version\n')
('hdpi', 'larger', 'mdpi', '24055780', 'and you know your image at hdpi folder so its 1.5 larger than the mdpi\n')

pixel sizes smaller
('mdpi', 'exponentially smaller', 'hdpi', '46668634', 'ldpi assets will look bad on high density screens but are exponentially smaller than mdpi which is exponentially smaller than hdpi etc\n')
('mdpi', 'smaller', 'hdpi', '29697132', 'layout-sw320dp-land will pick up drawable from hdpi folder whereas layout-sw720dp-land is mdpi device so it will pick up drawables from mdpi folder which will be smaller than hdpi\n')
('mdpi', 'smaller images', 'hdpi', '18303913', 'images in these different folders should have different physical pixel sizes mdpi has smaller images than hdpi but the images pixel densities aren t used\n')
('hdpi', 'smaller', 'mdpi', '7313024', 'when you put images into hdpi folder their appearance is smaller than from mdpi and ldpi\n')

onchange	onblur---------------------------------------------------

jedit	notepad++---------------------------------------------------

realloc	memcpy---------------------------------------------------

hide	fadeout---------------------------------------------------

paperclip	carrierwave---------------------------------------------------

actionscript	mxml---------------------------------------------------

convenient framework hood
('actionscript', 'less convenient', 'mxml', '10743806', 'so yes it can be used with flash or rather pure actionscript but it is a little less convenient than with mxml where everything is set up by the framework because it takes more under the hood configuration to be able to run all the necessary parts for remoting\n')
('actionscript', 'better', 'mxml', '814811', 'i would say pure actionscript is better for programming whether you use flash ide or flex ide is not that relevant and mxml is better for non-programmers to combine the components programmed in as\n')

wildfly	jboss---------------------------------------------------

ienumerable	icollection---------------------------------------------------

simple properties better
('ienumerable', 'more generic', 'icollection', '1268518', 'secondly i did not use ienumerable because it is more generic than icollection and does not even have simple properties like count\n')
('ienumerable', 'more generic', 'icollection', '34689546', 'a better way to do that instead is taking in an ienumerable which is more generic than icollection since icollection implements ienumerable and simply checking it for null and else returning any from linq s operators\n')

translation	transliteration---------------------------------------------------

openmpi	mpich---------------------------------------------------

mgcv	gam---------------------------------------------------

d3.js	raphael---------------------------------------------------

place fallback browsers
('raphael', 'older', 'd3.js', '17949657', 'raphael supports older versions of ie whereas d3.js is based on current web standards\n')
('raphael', 'older brother', 'd3.js', '22607139', 'this should be possible maybe be aware snap.svg isn t so compatible with older browsers in which case you could look at raphael which is snaps older brother d3.js is very well established as well\n')
('raphael', 'older versions', 'd3.js', '17030537', 'the only place where raphael defeats d3.js is fallback raphael supports older versions of ie where as d3.js is based on current web standards ie 9\n')

wicket	vaadin---------------------------------------------------

unsigned	integer---------------------------------------------------

bigger guarentee data
('integer', 'wider', 'unsigned', '23837701', 'it can only disappoint you if your compiler has an integer type wider than unsigned long long and you use it\n')
('unsigned', 'bigger', 'integer', '12572736', 'an implementation that has no such unsigned type say because pointers are bigger than any integer type won t provide it\n')
('integer', 'always bigger', 'unsigned', '41058221', 'i do have the guarentee that the signed integer is always bigger or equal than the unsigned integer in bytes so no data should be lost due to lack of space\n')

int larger promotions
('unsigned', 'int no better', 'integer', '2892573', 'as far as the compiler is concerned the conversion from integer 0 to unsigned int is no better than the conversion from integer 0 to pointer\n')
('unsigned', 'int apparently larger', 'integer', '40380083', 'on your system unsigned int is apparently larger than uint16_t int is a greater ranked integer type than short in the standard 6.3.1.1 even if they are of the same size\n')
('unsigned', 'larger', 'integer', '46960509', '1 as chux has noted in a comment if unsigned is larger than uint32_t arithmetic on uint32_t goes through the usual integer promotions and if not it stays as uint32_t\n')
('integer', 'constant larger', 'unsigned', '30336462', 'error integer constant is larger than the largest unsigned integer type\n')
('integer', 'wider int', 'unsigned', '41254784', 'pedantic note when printing integer types that might wider than int unsigned insure the final computed result matches the specifier\n')
('integer', 'smaller int', 'unsigned', '37356295', 'instead default argument promotions take place which means that any integer type smaller than int unsigned int gets converted to one of those -- that s not the only promotion but the only one relevant here -- and which also means that there is no automatic conversion to whatever type you specify with va_arg\n')
('integer', 'more', 'unsigned', '20982292', 'according the books the variations of type integer occupy more or less bytes of memory depending on the architecture however the type unsigned short values â â can get up to 65 535 since the type unsigned long 4 294 967 295\n')
('integer', 'constant larger', 'unsigned', '28358323', 'going too high gives the error integer constant is larger than the largest unsigned integer type\n')
('integer', 'rank less', 'unsigned', '19274392', 'an object with an integer type other than int and signed int whose integer rank is less than or equal to the rank of int and unsigned int a bit field of type _bool int signed int or unsigned int\n')

faster useful value
('integer', 'more useful', 'unsigned', '18604489', 'furthermore signed integer types just tend to be more useful than unsigned types\n')
('integer', 'faster', 'unsigned', '25778917', 'the idea here is threefold readability using operator functions with compatible left and right arguments as well as return value and the use of integer multiplying operators being faster than unsigned operators\n')
('integer', 'division much faster', 'unsigned', '4890490', 'in case of unsigned integer division this problem does not arise which is why generally integer division works much faster for unsigned types than for signed types\n')

haskell	scheme---------------------------------------------------

mergesort	heapsort---------------------------------------------------

quicksort assumption reason
('mergesort', 'slower', 'heapsort', '41665863', 'what baffles me is that my mergesort seems to be slower than heapsort in both of the languages\n')
('mergesort', 'slower', 'heapsort', '18386733', 'typically mergesort is slower than heapsort and quicksort but that s usually under the assumption that comparisons are fast\n')
('heapsort', 'slower', 'mergesort', '22386409', 'heapsort tends to be slower than mergesort for the same reason.\n')

bower	npm---------------------------------------------------

reading sense package
('bower', 'more sense', 'npm', '40594230', 'my codebase is front-end only so after doing a little reading i thought bower would make more sense than npm\n')
('npm', 'harder', 'bower', '44058348', 'using npm package is a little bit harder than using bower package\n')

qwindow	qwidget---------------------------------------------------

sinon	jasmine---------------------------------------------------

mouseout	mouseleave---------------------------------------------------

text better
('mouseout', 'better choice', 'mouseleave', '6667203', 'there can be times when mouseout is a better choice than mouseleave\n')
('mouseleave', 'better', 'mouseout', '14359122', 'also see i ve replaced mouseout with mouseleave which should work better than mouseout text will not jump up and down\n')

org.json	gson---------------------------------------------------

better jackson
('org.json', 'better', 'gson', '38062608', 'quick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gson\n')
('org.json', 'better such', 'gson', '33804715', 'or switch from org.json to something that performs better such as gson or jackson\n')

rtf	doc---------------------------------------------------

bazaar	git---------------------------------------------------

balling numbers 2-4x
('bazaar', 'slower', 'git', '706457', 'an incredibly rough eye balling of the numbers they posted showed bazaar to be 2-4x slower than either git or mercurial in the use cases tested\n')
('bazaar', 'slower', 'git', '897862', 'mercurial is significantly faster than bazaar it s slower than git though by a much smaller difference\n')

stuff articles mercurial
('bazaar', 'slower', 'git', '1372564', 'a lot of articles about bazaar will tell you it is a lot slower than git or mercurial\n')
('bazaar', 'slower', 'git', '706428', 'i hear all this stuff about bazaar being slower than git\n')

hmac	hash---------------------------------------------------

strncmp	strcmp---------------------------------------------------

strings words slower
('strncmp', 'safer', 'strcmp', '33513971', 'you should use strncmp to compare your strings it s safer than strcmp\n')
('strncmp', 'safer', 'strcmp', '30190966', 'in few words strncmp is safer then strcmp but it is slower too\n')
('strncmp', 'safer', 'strcmp', '29420623', 'note strncmp is safer than strcmp\n')
('strncmp', 'safer version', 'strcmp', '39110395', 'also have a look at strncmp which is safer version of strcmp\n')

unsigned	short---------------------------------------------------

char value bigger
('short', 'wider', 'unsigned', '34981236', 'so if you tell it to expect an unsigned short for example then it will actually expect either an int if int is wider than unsigned short or unsigned int if int and short are the same size\n')
('short', 'narrower', 'unsigned', '38251710', 'alignment may fail as unsigned short can be narrower than unsigned int\n')
('short', 'narrower', 'unsigned', '39964651', 'the rule for performing arithmetic operations in c c++ is that if the type such as short is narrower than int then it gets widened to int if all values can fit or unsigned int otherwise\n')
('unsigned', 'bigger', 'short', '4337684', 'an unsigned char is an unsigned value which is typically smaller than and is guaranteed not to be bigger than a short\n')
('short', 'smaller', 'unsigned', '19336046', 'as unsigned short int is in some implementations smaller than unsigned int\n')
('short', 'wider', 'unsigned', '26403076', 'if size_type is defined as unsigned short and int is wider than unsigned short the lhs of your addition will be converted to the rhs and you rely on the addition being performed in the lhs s type\n')

cufft	fftw---------------------------------------------------

experiments discussion batched
('cufft', 'slower', 'fftw', '18069017', 'however for a variety of fft problem sizes i ve found that cufft is slower than fftw with openmp\n')
('cufft', 'slower', 'fftw', '18069017', 'in the experiments and discussion below i find that cufft is slower than fftw for batched 2d ffts\n')

ironpython	ironruby---------------------------------------------------

yii	codeigniter---------------------------------------------------

svn2git	git-svn---------------------------------------------------

easier flexibility worse
('git-svn', 'worse', 'svn2git', '42090702', 'there are many reasons why git-svn is worse and the kde svn2git is superior\n')
('git-svn', 'easier', 'svn2git', '41875707', 'even though git-svn is easier to start with here are some further reasons why using the kde svn2git instead of git-svn is superior besides its flexibility\n')
('git-svn', 'worse', 'svn2git', '44700064', 'you see there are many reasons why git-svn is worse and the kde svn2git is superior\n')

google-chrome	safari---------------------------------------------------

slower ipad pc
('safari', 'slower', 'google-chrome', '42985566', 'if i try to do a google search for website loading slower in google-chrome than in safari i get a lot of results about how safari is slower than google-chrome\n')
('google-chrome', 'slower mobile', 'safari', '11364222', 'the one used by google-chrome and is slower than mobile safari s nitro javascript engine\n')
('safari', 'slower', 'google-chrome', '10400859', 'my ipad 1 safari js benchmarked 38 times slower than google-chrome on my pc\n')

smaller makes child
('safari', 'smaller', 'google-chrome', '4835787', 'safari will display fonts without a specified size significantly smaller than in google-chrome\n')
('safari', 'smaller', 'google-chrome', '24042145', 'safari 5.1.10 6534.59.10 middle handles a smaller viewport but in sort order with a smaller viewport computes new image sizes even smaller than google-chrome\n')
('safari', 'larger', 'google-chrome', '39526896', 'safari makes child block s height larger than google-chrome\n')

version webkit current
('google-chrome', 'also earlier', 'safari', '179520', 'google-chrome also uses an earlier version of webkit than the current safari so pages should be checked in both browsers\n')
('safari', 'still older version', 'google-chrome', '19180704', 'safari still uses the older version while google-chrome uses a more current one\n')
('google-chrome', 'older version', 'safari', '45875146', 'it also gets broken even more in ios google-chrome which is an older version of safari\n')
('google-chrome', 'newer version', 'safari', '8073648', 'it s not even a webkit issue unless google-chrome s got a newer version than safari\n')

api site error
('google-chrome', 'better job', 'safari', '35663133', 'google-chrome also is susceptible to this same issue although it does a significantly better job than safari at getting the realtime api re-connected\n')
('safari', 'faster', 'google-chrome', '6688552', 'this seems to me like a bandwidth error or something like that originally i ve got the error when i played with the html 5 audio api and if i loaded the audio file 10-15 times sequentially then i ve got the error but now i ve discovered that i get the error without the audio api too just by reloading the site a lots of times also safari gives me the error much faster than google-chrome wtf\n')

better huge numbers
('safari', 'better', 'google-chrome', '8173799', 'safari comes in at just under 41ms performing better than google-chrome but still not great\n')
('safari', 'better', 'google-chrome', '8566225', 'i guess firefox and safari handle huge numbers of elements better than google-chrome\n')
('safari', 'better', 'google-chrome', '7138980', 'i think safari renders the moves better than google-chrome\n')

android-emulator	bluestacks---------------------------------------------------

np-hard	np-complete---------------------------------------------------

switching	screens---------------------------------------------------

swipe right images
('switching', 'larger', 'screens', '14789361', 'i am using view flipper to show bunch on images like a slider where i implemented the functionality of swipe left and right to switching images now some of my images are larger than the screens size in terms of height are getting hidden\n')
('switching', 'larger', 'screens', '5442712', 'i ve already built a view that can take a drawable can use focused pinch-zoom and drag can auto-scale images can switching images dynamically and takes images larger than the screens\n')

mobile landscape desktop
('screens', 'smaller', 'switching', '9591286', 'but when the screens is smaller than 900px we switching from fixed to liquid via media query switching to a liquid width will allow our images to scale down our text to wrap and a whole bunch of other great things\n')
('switching', 'less', 'screens', '38781058', 'but then i noticed after changing a mobile to landscape it would switching back to the desktop mode due to the width of the media query being less than the screens landscape width\n')
('screens', 'smaller', 'switching', '31657992', 'the panels must be side by side for a large screens but they must be responsive and as the screens gets smaller and switching to vertical orientation\n')
('screens', 'size smaller i', 'switching', '47344039', 'when the screens size is smaller i have it switching flex-direction to column which works well except i cannot figure out how to make the 2nd row trending down start where the trending up stops where ever that may be\n')

llvm	clang---------------------------------------------------

scheme	lisp---------------------------------------------------

common uniform radical
('scheme', 'fewer batteries', 'lisp', '4587918', 'that said it is a scheme which has fewer batteries included as compared to common lisp\n')
('scheme', 'better common', 'lisp', '170948', 'here is a solution in scheme because i know that better than common lisp and have an interpreter for checking my work\n')
('scheme', 'smoother access', 'lisp', '4587918', 'however gambit scheme has smoother access to c c++ code libraries which far outnumber common lisp s libraries\n')
('scheme', 'older common', 'lisp', '13225458', 'scheme is older than common lisp\n')
('scheme', 'somewhat simpler not', 'lisp', '563472', 'it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp\n')
('lisp', 'more uniform', 'scheme', '5372482', 'overall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialect\n')
('scheme', 'intentionally more compact', 'lisp', '3041805', 'scheme is intentionally more compact than common lisp and you ll find that you can learn the language very quickly\n')
('lisp', 'more verbose', 'scheme', '19383232', 'common lisp has a separate namespace for functions which makes operation like this more verbose than with scheme\n')
('lisp', 'approach more conservative', 'scheme', '16651843', 'i ve noticed that the common lisp approach is more conservative than the approach scheme has\n')
('scheme', 'fewer libraries common', 'lisp', '4587918', 'scheme has fewer libraries than common lisp\n')
('scheme', 'simpler language common', 'lisp', '5691342', 'i don t see why sbcl should be so fast - scheme is a far simpler language than common lisp\n')
('lisp', 'many more characters', 'scheme', '11683143', 'i noted that while in languages like c variable identifiers can only be alphanumberics and underscores common lisp allows many more characters to be used like and at least scheme does\n')

ides user-friendly good
('scheme', 'more user-friendly', 'lisp', '2115070', 'i ve also found scheme ides much more user-friendly than lisp s plt scheme is a good one\n')
('scheme', 'smaller', 'lisp', '2973943', 'scheme is also a good language for that purpose and it is simpler smaller than lisp\n')

mongodb	bson---------------------------------------------------

document nesting documents
('mongodb', 'more', 'bson', '34703648', 'basically mongodb supports no more than 100 levels of nesting for bson documents\n')
('mongodb', 'more', 'bson', '19052828', 'mongodb supports no more than 100 levels of nesting for bson document.\n')
('mongodb', 'more', 'bson', '39535583', 'mongodb supports no more than 100 levels of nesting for bson documents\n')

qtoolbutton	qpushbutton---------------------------------------------------

geddy	connect---------------------------------------------------

unicorn	thin---------------------------------------------------

font-size	width---------------------------------------------------

value increment element
('font-size', 'wider', 'width', '8490195', 'i initialize the loop with this value and increment the font-size with 1 until the string is wider than the width of the containing element\n')
('width', 'wider', 'font-size', '9526369', 'from there on the width slowly increases again as the part of the string still on line 1 linearly gets wider as the font-size increases\n')

testng	junit---------------------------------------------------

better easier
('testng', 'better', 'junit', '6216983', 'isn t testng supposed to a better than junit\n')
('junit', 'easier', 'testng', '24033060', 'i know this can be achieved with junit but in my experience it is easier with testng\n')
('junit', 'easier', 'testng', '11842853', 'if you are familiar of using junit it is easier to switch into testng\n')

webclient	webrequest---------------------------------------------------

simpler easier
('webclient', 'simpler', 'webrequest', '449918', 'webclient is simpler to use than webrequest\n')
('webclient', 'sometimes easier', 'webrequest', '91317', 'webclient is sometimes easier to use than webrequest\n')
('webclient', 'easier', 'webrequest', '7779848', 'a webclient is much easier than a webrequest\n')

udp	tcp---------------------------------------------------

faster reliable slower
('udp', 'faster', 'tcp', '47127660', 'udp should be much faster than tcp because there are no acknowledge and congestion detection\n')
('tcp', 'more reliable', 'udp', '33455053', 'tcp - more reliable than udp but this comes with some overhead there is a distinct connection a better match for games which require less frequent data transmission such as turn based games as is your game\n')
('udp', 'faster', 'tcp', '4147351', 'udp protocol is unreliable but much much faster than tcp which is most commonly used for communication\n')
('udp', 'faster', 'tcp', '19019042', 'we propose to use udp over tcp since udp is faster than tcp\n')
('udp', 'quicker', 'tcp', '28679224', 'udp is quicker than tcp but if you re using quickfix you ll be using tcp\n')
('tcp', 'slower', 'udp', '11455687', 'tcp is slower than udp and you ll have to mitigate that in realtime multiplayer\n')
('udp', 'lower overhead', 'tcp', '24880258', 'one can say udp has a lower overhead than tcp because its packets have a smaller header and therefore take less bandwidth to send the payload the data\n')
('udp', 'faster', 'tcp', '35262131', 'udp is extremely faster than tcp which is suitable to stream a user s voice input\n')
('tcp', 'slower', 'udp', '4086350', 'with tcp its slightly slower than udp and has more features\n')
('udp', 'connection faster', 'tcp', '46038937', 'i know that in practice this would only happen with a great amount of connection given that processing time of an udp connection is faster than tcp but it could potentially happen\n')
('udp', 'easier structured', 'tcp', '8059790', 'udp packets are easier structured than tcp packets but sacrifice security for their size\n')
('udp', 'faster', 'tcp', '31398082', 'i m trying to avoid tcpclient because udp is faster but would this work in tcp since it s streamed\n')
('tcp', 'slower', 'udp', '32354639', 'the reason i asking this is because i read tcp is slower than udp because tcp ensures order of packets\n')
('udp', 'faster', 'tcp', '47079177', 'udp is faster and requires less bandwidth than tcp\n')
('udp', 'slower', 'tcp', '9300555', 'i assumend that the transmission using udp have to be much faster than using tcp but in fact my tests proved that the udp transmission is about 7 to 8 times slower than using tcp\n')
('tcp', 'slower', 'udp', '19081574', 'in doing so the tradefoff is that tcp becomes slower compared to udp\n')
('udp', 'faster', 'tcp', '33426807', 'udp is not always faster than tcp\n')
('udp', 'faster reliable communication', 'tcp', '4361953', 'http is an application layer protocol which could be encapsulated with a protocol that uses udp providing arguably faster reliable communication than tcp\n')
('udp', 'faster', 'tcp', '5594213', 'udp is faster than tcp because packets are sent without guarantee of delivery nor order\n')
('tcp', 'slower', 'udp', '42298194', 'tcp has to do a lot of error checking to ensure that your packets don t get dropped and so tcp is much slower than udp\n')
('udp', 'slower', 'tcp', '36317272', 'i suppose this is one of the reasons for the misconception that udp is slower than tcp\n')
('tcp', 'more reliable', 'udp', '5431991', 'tcp is certainly going to be more reliable than udp since udp doesn t guarantee packet delivery which is probably why you application is hanging on the receive\n')
('udp', 'faster', 'tcp', '13413608', 'this is the reason why udp is much faster than tcp\n')
('udp', 'more', 'tcp', '27344909', 'note that udp is more difficult to work with than tcp because packets are not always guaranteed to be delivered\n')
('tcp', 'more reliable', 'udp', '31179758', 'tcp ip is supposed to be more reliable than udp ip see this comparison\n')
('udp', 'less reliable', 'tcp', '4884364', 'and there are no handshakings required udp are pretty much faster but less reliable than tcp\n')
('udp', 'less overhead', 'tcp', '1099695', 'most importantly you can easily supplement udp with some reliable delivery hand-shaking that s less overhead than tcp\n')
('tcp', 'faster', 'udp', '16589674', 'i was expecting that udp would be faster but tcp is on average two times faster than udp\n')
('udp', 'faster', 'tcp', '12045089', 'don t think of it as udp is faster and tcp is slower because that s just wrong\n')
('udp', 'less overhead', 'tcp', '799142', 'udp has less overhead than tcp and is therefore faster\n')
('udp', 'faster', 'tcp', '7603776', 'from experience i can tell you udp is about 10-15 faster than tcp on dedicated and udp-tuned networks\n')
('tcp', 'faster', 'udp', '44746784', 'for example i read an experiment in which a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp\n')
('udp', 'slower', 'tcp', '9300555', 'maybe one of you guys already sees a problem in the code snippets or have any other suggestion or hint for me why my udp transmission is slower than tcp\n')
('udp', 'faster', 'tcp', '8947847', 'in that sense reliable udp cannot be faster than tcp\n')
('udp', 'faster', 'tcp', '28701982', 'i though that udp was faster than tcp but do you think that tcp will be faster due to the congestion\n')
('tcp', 'slower', 'udp', '9627280', 'because of tcp requires connection and provides security it is slower than udp and therefore it should not be preffered during a video streaming\n')
('udp', 'faster', 'tcp', '2280675', 'also see this other so answer about the misconception that udp is always faster than tcp\n')
('tcp', 'slower', 'udp', '9952101', 'that among other things is why tcp is considered more reliable but slower than udp\n')
('udp', 'faster', 'tcp', '27193974', 'tcp as you know udp is faster than tcp even if udp may miss some\n')
('tcp', 'more reliable protocol', 'udp', '31849345', 'tcp is a slower more reliable protocol than udp is\n')
('udp', 'generally faster', 'tcp', '5862704', 'udp is generally faster than tcp as it does not have to do the overhead checking of consistency that tcp must deal with\n')
('udp', 'simpler', 'tcp', '3424324', 'a udp stack is considerably simpler than a tcp stack\n')
('tcp', 'slower', 'udp', '41901995', '4 tcp is a slower than udp\n')
('tcp', 'more reliable', 'udp', '584131', 'tcp mounts are more reliable and you know you have a network problem much faster than with udp\n')
('tcp', 'slower', 'udp', '2290873', 'tcp is reliable but slower than udp while udp is not safe and i have to implement my own fault-handling codes\n')
('udp', 'less reliable', 'tcp', '17310250', 'udp is way lighter and faster but somewhat less reliable than tcp\n')
('udp', 'faster', 'tcp', '25350887', 'one often finds the argument that udp is faster then tcp\n')
('tcp', 'faster', 'udp', '33911237', 'i read in a case where a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp\n')
('tcp', 'faster', 'udp', '9552483', 'what s currently baffling me is in my results tcp finishes almost 2x faster than udp\n')
('tcp', 'slower', 'udp', '8813553', 'tcp is slower assures data arrival udp is faster data corruption may be possible\n')
('tcp', 'faster better throughput', 'udp', '44746784', 'in some applications tcp is faster better throughput than udp\n')
('tcp', 'slower', 'udp', '7287150', 'the problem with using tcp is obviously that it is a lot slower than udp\n')
('tcp', 'slower', 'udp', '21729285', 'try to increase timeout value tcp is slower than udp\n')
('udp', 'faster', 'tcp', '34408250', 'i know udp is faster than tcp for various reason\n')
('udp', 'faster', 'tcp', '18811601', 'because there is no confirmation on udp packets it s slightly faster than tcp\n')
('tcp', 'slower', 'udp', '11890330', 'tcp is much slower than udp but when the two machines are not on the same lan udp is not reliable\n')
('udp', 'faster', 'tcp', '5978352', 'the reason udp is faster than tcp is because there is no form of flow control or error correction\n')
('tcp', 'more reliable', 'udp', '1898944', 'what i have thought of so far is that tcp is going to be more reliable than udp and in rmi corba we want network reliability\n')
('udp', 'significantly faster', 'tcp', '3424324', 'udp is significantly faster than tcp and is why it is or was used for video and various things back in the day\n')
('udp', 'much faster', 'tcp', '28290012', 'udp is much faster then tcp but tcp has flow control and guaranteed delivery\n')
('udp', 'faster', 'tcp', '8110762', 'i don t think you should make the assumption that udp is faster than tcp\n')
('udp', 'faster', 'tcp', '39323928', 'if i d directly say that udp is faster comparatively than tcp that it is used for such applications\n')
('tcp', 'slower', 'udp', '8143223', 'tcp is a bit slower than udp but more failsafe\n')
('udp', 'faster', 'tcp', '24726976', 'only when packets can be discarded unordered can udp be faster than tcp\n')

high faster reliability
('udp', 'faster', 'tcp', '28675216', 'there is a perception that udp is faster than tcp but i think it depends on the situation - take a look at this discussion for some further discussion on speed reliability etc between udp and tcp go down through all the high scored answers\n')
('udp', 'absolutely faster', 'tcp', '21363292', 'if the network between the two point have a very high quality udp is absolutely faster than tcp but in some other case such as the gprs network tcp may been faster and more reliability than udp\n')

better specific surprising
('udp', 'better', 'tcp', '25287117', 'since loosing some packets doesn t matter but speed latency is crucial udp is much better than tcp\n')
('tcp', 'way better', 'udp', '14199053', 'tcp is way better then udp for that\n')
('udp', 'better', 'tcp', '16924212', '-- in which scenario configuration would i get udp to perform better than tcp\n')
('udp', 'better', 'tcp', '7329214', 'this was surprising for me as it is well known fact that udp performs better than tcp\n')
('udp', 'better', 'tcp', '14749840', 'i think udp will perform better than tcp gcdasyncsocket in your case video transfer\n')
('tcp', 'better', 'udp', '9235592', 'for this particular application sending simple data chunk to the client from an index given by the client tcp will not perform any better than udp\n')
('tcp', 'better', 'udp', '28819659', 'it is worth nothing that in a link where udp and tcp are sharing the bandwidth tcp is better behaved than udp in that it will try to limit itself to avoid congestion\n')
('tcp', 'better option', 'udp', '6104661', 'if you can t afford lost packets then tcp is probably a better option than udp since it provides that guarantee out of the box\n')
('tcp', 'better', 'udp', '16924212', 'i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp average 65 better\n')
('udp', 'better', 'tcp', '16924492', 'does udp always perform better than tcp\n')
('tcp', 'far better', 'udp', '3918611', 'tcp is far better at transferring large quantities of data but when the network fails it s more likely that udp will get through\n')
('udp', 'more', 'tcp', '7400055', 'udp is more popular in nat punching because provides much better results than tcp\n')
('tcp', 'better', 'udp', '2935622', 'in general the tcp protocol manages the available network bandwidth better than the udp protocol\n')
('udp', 'better', 'tcp', '3918611', 'udp is actually expected to work better than tcp in lossy networks or congested networks\n')
('udp', 'better', 'tcp', '16924492', 'or is there any specific scenario where udp is better than tcp\n')
('udp', 'better', 'tcp', '7329214', 'scenario where udp is better than tcp\n')
('tcp', 'much better', 'udp', '4416038', 'tcp is much better than udp in terms of reliability\n')
('udp', 'better', 'tcp', '16924212', '-- does udp always perform better than tcp\n')
('udp', 'better', 'tcp', '16924212', 'this was surprising for me as i expected udp to perform better than tcp\n')
('tcp', 'better', 'udp', '32270156', 'we know tcp is better suited for this but the hardware development decided it s got to be udp\n')
('udp', 'better', 'tcp', '11406148', 'udp scales better than tcp because of reduced states that need to be maintained in the operating system\n')
('tcp', 'better', 'udp', '7329214', 'but when i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp for 10mb of data\n')
('tcp', 'better', 'udp', '26325721', 'for some requirements tcp is better for some udp\n')
('udp', 'better', 'tcp', '35549074', 'if you care a lot about efficiency or really need tens of thousands of connections then implementing your specific protocol in udp will always be better than tcp\n')
('udp', 'better', 'tcp', '11338428', 'short answer if you can tolerance with any packet loss udp is better otherwise tcp\n')
('tcp', 'better', 'udp', '30156943', 'i know tcp is better to send file but i have a homework about sending file via udp protocol\n')
('udp', 'better performance', 'tcp', '16442504', 'udp will almost always provide better performance than tcp at the cost of reliability\n')
('udp', 'better choice', 'tcp', '8587512', 'the key question was related to what kind of situations would udp be the better choice over tcp\n')
('udp', 'significantly easier', 'tcp', '3568783', 'udp is significantly easier do you really need tcp btw\n')
('udp', 'much better just', 'tcp', '17652027', 'instead of implementing all these over udp it is much better just to switch to tcp\n')

simple faster set
('udp', 'faster', 'tcp', '12855045', 'in a native application i would use udp for the most data player position ... because it s way faster than tcp and it s uncritical when it is lost\n')
('tcp', 'slower', 'udp', '21942178', 'apart from that tcp packets by themselves are not slower than udp packets and data transfer with a simple tcp connection can be faster than with a simple udp connection because flow control and reliable transfer is already integrated and you don t have to reinvent everything again and often worse\n')
('udp', 'faster', 'tcp', '47929', 'udp is faster than tcp and the simple reason is because its nonexistent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculated by using the tcp window size and round-trip time rtt\n')
('udp', 'really faster', 'tcp', '12530442', 'udp is really faster than tcp and the simple reason is because it s non-existent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculatd by using the tcp window size and round-trip time rtt .\n')

work likely socket
('tcp', 'socket even more likely', 'udp', '6527310', 'tcp socket is even more likely than udp socket but both work\n')
('udp', 'also more', 'tcp', '2364616', 'udp is also more work than tcp if you need reliability which is built in to tcp\n')

overhead lower recipient
('tcp', 'more overhead', 'udp', '11428762', 'if they are connected over the internet you could try to use the examples for tcp but tcp has more overhead than udp\n')
('udp', 'lower overhead', 'tcp', '8783507', 'udp sockets have much lower overhead than tcp because packets are not acknowledged by the recipient\n')
('tcp', 'more overhead', 'udp', '5520735', 'certainly tcp has more overhead than udp\n')
('udp', 'communication much less', 'tcp', '12082396', 'udp communication requires much less overhead than tcp due to the number of messages exchanged\n')
('udp', 'less', 'tcp', '36116201', 'generally speaking udp has less overhead than tcp allowing you to receive more data but this is not a strict rule and is almost negligible in this context\n')
('udp', 'just smaller', 'tcp', '9409379', 'udp just has a smaller overhead than tcp but that comes at the cost of reliability\n')
('udp', 'less network', 'tcp', '39556790', 'while udp has less network overhead than tcp it generally relies on you the developer to come up with your own mechanisms for flow control fragmentation handling lost packets etc.\n')
('udp', 'lower overhead', 'tcp', '584128', 'udp has a much lower overhead than tcp\n')
('tcp', 'more', 'udp', '27732495', 'moreover tcp has more processing overhead than udp\n')

header connection size
('udp', 'connection less', 'tcp', '4533720', 'udp is connection less but at the same level as tcp\n')
('tcp', 'header more', 'udp', '45039592', 'you will notice that the tcp header has more fields than the udp header and many of those fields will be populated by information from the handshake\n')
('udp', 'communication connection less', 'tcp', '2896525', 'udp communication is connection less as compared to tcp which need a connection\n')
('udp', 'more', 'tcp', '19350736', 'udp is more of a fire and forget whereas tcp maintains a connection state\n')
('udp', 'less', 'tcp', '39079245', 'getting much more information is needed in the packet header for connection less like udp but why the header size of udp is less than tcp\n')
('udp', 'less', 'tcp', '39079959', 'why the header size of udp is less than tcp\n')

complex implementation instructions
('udp', 'less complex', 'tcp', '12082396', 'in my experience udp based code is generally less complex than tcp based code\n')
('tcp', 'much more', 'udp', '9235592', '+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed there\n')
('tcp', 'more', 'udp', '1100868', 'some protocols are more complex because what s needed are some but not all of the features of tcp but more than what udp provides\n')

simpler traversal nat
('udp', 'simpler', 'tcp', '14297743', 'also sending receiving data over udp is much simpler than over tcp and it does not require any connections\n')
('udp', 'less chatty', 'tcp', '29499218', 'in gaming especially fpss udp tends to be the chosen protocol because it s much less chatty than tcp\n')
('tcp', 'more generally', 'udp', '31235299', 'as far as tcp goes i think tcp is more generally used protocol for more data-centric requests like chat or things that require packet integrity udp tolerates packet loss to lower latency\n')
('udp', 'simpler', 'tcp', '4701184', 'you can use udp as well but if you are dealing with firewalls it is probably going to be simpler with tcp\n')
('udp', 'easier', 'tcp', '33116934', 'but with the udp protocol in particular this is easier than for tcp\n')
('udp', 'less', 'tcp', '39079959', 'the fact that udp s header size is less than tcp s is because is a simpler protocol that needs less header space that s all there is to it\n')
('udp', 'much easier', 'tcp', '20769240', 'as such traversing a nat through udp is much easier than tcp\n')
('udp', 'simpler', 'tcp', '45200423', 'first of udp s datagram is simpler than tcp s one\n')
('tcp', 'much more complicated', 'udp', '10861938', 'it was introduced since the nat traversal for tcp is much more complicated than udp\n')
('udp', 'simpler protocol', 'tcp', '2576102', 'udp is simpler protocol than tcp and you can still simulate features of tcp using udp\n')
('udp', 'easier', 'tcp', '7374426', 'keep in mind that implementing udp traversal is easier than tcp\n')
('tcp', 'simpler', 'udp', '4220469', 'you ve struck lucky with the requirements - because you re going from udp - tcp it s actually a lot simpler than doing udp - udp\n')
('tcp', 'harder', 'udp', '10491782', 'but it sounds like you want to do nat traversal over tcp which is a harder problem than udp\n')
('udp', 'simpler', 'tcp', '24559909', 'c++ is not my first language and this is small part of code i can t figure out i ve chosen udp because it is always much simpler than tcp\n')

higher subject latencies
('tcp', 'higher latencies', 'udp', '5423061', 'tcp is subject to higher latencies than udp as it requires the client to send back packet confirmations\n')
('udp', 'higher performance', 'tcp', '8796401', 'as an additional note my suspicion is that you d need to indulge yourself in some pretty sophisticated benchmarks before you could conclude that udp is actually going to have higher performance than tcp for web services\n')
('udp', 'higher', 'tcp', '5561668', 'so assess the situation the development cost of a udp transport is higher to significantly higher than tcp and to some degree you are re-inventing tcp\n')
('tcp', 'higher level', 'udp', '16388203', 'actually we could say that tcp is a higher level protocol compared to udp because tcp includes some advanced features which might be useful .\n')

faster packets connection
('tcp', 'more secure', 'udp', '22152967', 'the decision on yours the tcp protocol used for connection oriented network that is more secure than udp\n')
('udp', 'faster', 'tcp', '42887950', 'in a congested network yes udp will send its packets faster than tcp this is because tcp takes then congestion into account using a mechanism called congestion control\n')
('udp', 'faster', 'tcp', '18660445', 'use socket for tcp and datagram for udp its a lot faster than tcp but less connection oriented\n')
('tcp', 'faster', 'udp', '8930717', 'is sending packets via an established tcp connection after all hand shaking has been done a method to be faster than udp\n')
('udp', 'faster', 'tcp', '37632320', 'i am using udp because it is much faster than tcp but sometimes i need the know for sure if the packet reached to the other side in my program i can not use tcp at all so i am sending ack packets\n')
('tcp', 'faster', 'udp', '1581034', 'at my company we have found memory mapped files to be much faster than loopback tcp ip for communication on the same box so i m assuming it would be faster than udp too\n')
('tcp', 'slower', 'udp', '31891715', 'if the data is critical you should go for tcp which is slower as compared to udp which in fact doesn t guarantee the packets will arrive in order or even if they d arrive or not\n')
('udp', 'faster', 'tcp', '9286808', 'for instance zeromq can leverage udp multicast to run faster than any tcp protocol but the application programmer doesn t need to learn a new api\n')

bigger iot domain
('tcp', 'bigger payload', 'udp', '3156544', 'tcp sockets- guaranteed delivery bigger payload than udp cumbersome to setup for web based solutions\n')
('udp', 'more', 'tcp', '44773502', 'but there are some cases especially in iot domain udp is more popular than tcp for its bigger transport overheads\n')

bigger smaller issues
('tcp', 'bigger', 'udp', '10315535', 'i am confused why tcp throughput is bigger than udp\n')
('udp', 'smaller latency', 'tcp', '41563268', 'udp gives smaller latency with many many issues to discuss here of course tcp gives bigger latency\n')
('udp', 'smaller', 'tcp', '26496961', 'the package is bigger than udp s package but smaller than tcp s package\n')

harder sequence events
('tcp', 'socket much harder', 'udp', '6437427', 'when writing your server bear in mind that the sequence of events for a tcp socket is much harder than for a udp socket since as well as the normal socket and bind calls you also have to listen and accept\n')
('udp', 'harder', 'tcp', '5869634', 'udp port scanning is possible but it is harder than tcp scanning\n')

lighter
('udp', 'lighter', 'tcp', '38817314', 'if you can do everything with udp it is lighter than tcp\n')
('udp', 'lighter', 'tcp', '19535121', 'yes udp is much much lighter than tcp\n')

screens	tablet---------------------------------------------------

green background yellow
('screens', 'bigger', 'tablet', '18123310', 'if the screens is bigger than 1024px it should be green my tablet screens is but the background stays yellow\n')
('tablet', 'bigger', 'screens', '46184983', 'this tablet has a bigger screens yet is still showing only 2 child views in the row\n')

smaller mobile desktop
('tablet', 'higher', 'screens', '24642555', 'i know that obviously a tablet has a higher screens resolution than a phone because it has more pixels dots on the screens from what ive been reading tablet also have a higher dpi dots per inch than phones as well\n')
('screens', 'smaller', 'tablet', '40391766', 'inside the container i have a panel with the text set to left but when the screens gets smaller then a tablet to something like a phone i want the text in the panel to center\n')
('screens', 'wider', 'tablet', '33175892', 'when viewed on a screens wider than a tablet to be responsive according to the smaller screens size like this\n')
('screens', 'always smaller', 'tablet', '13551919', 'that hopefully explains why a typical 320dp phone screens is always smaller than a 720dp tablet screens although the smaller screens can have more pixel than the larger\n')
('tablet', 'more', 'screens', '40697207', 'i have been working on this page that works fine in desktop devices and tablet but not on phones because the width of the page is more than the screens width i need to make this width responsive to have the page with height-only scroll\n')
('screens', 'higher', 'tablet', '23728938', 'screens resolution i.e higher than tablet i.e col-md and col-lg in bootstrap language should only cover 11 grid with offset of 1\n')
('tablet', 'more centimeter', 'screens', '47318184', 'they are for example too big in a phone and too small in a tableth because the screens of tablet has more centimeter than the pone screens\n')
('screens', 'size smaller', 'tablet', '43424851', 'for example when the screens size becomes smaller to a tablet or mobile you could do this as an example\n')
('screens', 'smaller', 'tablet', '23130737', 'splitactionbar works only on phones because the screens size is much smaller than tablet and it takes space at the bottom for extra space for your action items\n')
('screens', 'smaller', 'tablet', '32098658', 'this only happens when the window is on a computer in full screens mode but when the screens is made smaller to a phone tablet size the divs function how they should\n')
('tablet', 'less', 'screens', '31435985', 'on a tablet or phone which may have less than 750px screens width it will go off the viewport\n')
('screens', 'wider', 'tablet', '33235334', 'you could make your css mobile-first meaning that all properties are optimized for mobile then as the screens gets wider you apply tablet and desktop optimized css for elements\n')
('screens', 'less', 'tablet', '41948896', 'the issue is that the phone screens height in landscape mode is likely much less than a tablet or pc\n')
('tablet', 'much smaller', 'screens', '28425758', 'however the number of people using these giant tablet is much smaller than the number of people with small screens laptops\n')
('screens', 'width larger', 'tablet', '46595075', 'in my actual code i ve set the display to none if the screens width is larger than tablet size because that s the only time i feel like i need the button\n')
('screens', 'much smaller', 'tablet', '24184394', 'the screens is much smaller so you can not present your app the same way as you can on a tablet\n')
('screens', 'bigger', 'tablet', '26487177', 'my aim is to use a bootstrap 3 dropdown to display links at mobile screens size and use a list to display the same links when the screens is bigger desktop and tablet size\n')
('screens', 'smaller', 'tablet', '24329917', 'twitter desktop accomodates screensizes from around 1048px wide when you are on a screens that is smaller then that you are probably on a tablet or smartphone and if you open twitter from a browser on your phone you are instantly redirected to and prompted to download the twitter app\n')
('screens', 'smaller', 'tablet', '17474847', 'what i would like to do is use css media queries to have the title be above the tabs when the screens gets smaller or on a tablet or iphone\n')
('tablet', 'often lower', 'screens', '18306525', 'this is because that tablet often has a lower density of screens pixels\n')
('screens', 'width smaller', 'tablet', '22564398', 'this will only be added if the screens width is smaller than 480px else the tablet version would show the mobile version\n')
('screens', 'smaller', 'tablet', '35498315', 'based on my understanding i hope that is because the size of the tablet screens which is smaller than the desktop that makes the strokes to get hidden inside the area that was not visible on the tablet however the area is visible in desktop\n')

size resolution contrast
('screens', 'higher resolution', 'tablet', '28366729', 'i can t use screens size because of devices like galaxy note with huge screens and some phones have higher resolution than some tablet same with dpi i think\n')
('screens', 'size reasonable bigger', 'tablet', '29104954', 'having different ones based upon screens size is reasonable bigger margins on tablet though the mix then would be something like res values dimens.xml and res values-sw720dp values.xml\n')
('screens', 'size smaller', 'tablet', '18287856', 'basically my layout has 1200px grid width but i figured that there will be a problem with 1024px screens resolution 20 of the population bla bla so i created media queries when the screens size is smaller than 1199px the grid to change its width to 960px and so on for tablet phones etc..\n')
('tablet', 'higher actual', 'screens', '14034137', 'by contrast a nexus 7 tablet has higher actual screens resolution than an ipad mini but it reports to your web page a smaller screens size\n')

available space fonts
('tablet', 'simply more', 'screens', '23608495', 'you will also notice that the fonts are not scaling as the 7 tablet simply has more screens space available vs the 4 phone\n')
('tablet', 'more', 'screens', '43912613', 'a tablet offers more screens space than a phone\n')
('tablet', 'more room', 'screens', '30422496', 'it simply comes down to the space available a tablet gives more room to developers thus allowing developers to put more on one screens\n')

html5lib	lxml---------------------------------------------------

better job html.parser
('lxml', 'parser generally faster', 'html5lib', '37933417', 'lxml parser is generally faster html5lib is the most lenient one - this kind of difference would be relevant if you have a broken or non-well-formed html to parse\n')
('html5lib', 'better job', 'lxml', '37009855', 'html5lib parser does a better job than lxml or html.parser handling the debate element in this case\n')

tostring	string.format---------------------------------------------------

web.py	django---------------------------------------------------

addition	exponent---------------------------------------------------

liblinear	libsvm---------------------------------------------------

ubuntu	linux---------------------------------------------------

salt	md5---------------------------------------------------

filtering	grouping---------------------------------------------------

acct result clause
('grouping', 'greater', 'filtering', '23948347', 'grouping that by acct to do the count by acct and when the result is greater than 1 filtering it using a having clause\n')
('grouping', 'greater', 'filtering', '43574945', 'i am using groupby on tickets then filtering my dataframe to those records where the count in that ticket grouping is greater than 1 using filtering\n')

aes	des---------------------------------------------------

triple size secure
('aes', 'encryption more secure', 'des', '11269211', 'i ve read that aes encryption is more secure than the triple des encryption ms is using in their example above\n')
('aes', 'larger', 'des', '13404970', 'note that the effective key size of aes is larger than triple des\n')
('aes', 'rijndael-128 more', 'des', '29881041', 'according to this analysis aes rijndael-128 is more than twice as fast as des 3des with a bigger key size more secure\n')

faster 3des default
('aes', 'faster', 'des', '9928310', 'if aes is negotiated it s faster than des and 3des used by default by older applications\n')
('des', 'faster', 'aes', '10282566', 'using des assuming it s a little faster than aes and requires a smaller key and\n')
('aes', 'faster', 'des', '29881041', 'aes can be even much faster than des or 3des when the cpu supports aes-ni\n')
('aes', 'faster', 'des', '25612825', 'this shows that the timings are sensitive to buffering and that aes is faster than des\n')
('aes', 'faster result', 'des', '9052760', 'aes will indeed yield a considerably faster result than des\n')

slower current requirements
('des', 'slower', 'aes', '7007053', 'des is usually substantially slower than aes on modern hardware and has keys that are far too short for modern use\n')
('des', 'slower', 'aes', '35037543', 'des turned out to be even slower than aes but for my current requirements a much simpler algorythm rc4 is sufficient\n')

qgraphicsscene	qgraphicsview---------------------------------------------------

default necessary scroll
('qgraphicsscene', 'larger', 'qgraphicsview', '8881046', 'by default when you scale a qgraphicsscene larger than the qgraphicsview in which it is displayed it will show the necessary scroll bars\n')
('qgraphicsscene', 'larger', 'qgraphicsview', '17923539', 'if i set a pixmap to a qgraphicsscene that is larger that the window it will add scrollbars so is it possible to get what is displayed in the qgraphicsview\n')

exponent	modulo---------------------------------------------------

rsa shorter operations
('exponent', 'always less', 'modulo', '26422542', 'when i generate rsa key pairs by openssl it seems like private key private exponent is always less than public key modulo\n')
('modulo', 'better', 'exponent', '15114205', 'so no choice of the public exponent for this modulo is better than 19 using the public exponent to decrypt will work for at least half of the messages when eâ² 9 16 and in many cases for almost all the messages when eâ² 1 16\n')
('exponent', 'shorter', 'modulo', '35015694', 'the rsa private exponent may actually be shorter than the modulo\n')
('exponent', 'longer', 'modulo', '7835481', 'the private exponent must not be longer than the modulo\n')
('exponent', 'smaller', 'modulo', '2927816', 'the private exponent is always smaller than the modulo so you should be able to encrypt it using the raw rsa operation if you make sure to remove the prepended zero\n')
('exponent', 'smaller', 'modulo', '2927816', 'edit as gregs points out in the comments you cannot be sure that the private exponent of the key you want to encrypt is smaller than the modulo of the key you want to use to encrypt with\n')
('exponent', 'smaller', 'modulo', '5377967', 'i must also add that designing the rsa key so that the private exponent is substantially shorter than the modulo to speed up operations is a security risk if the exponent is smaller than 29 of the modulo length then the key can be cracked\n')

bit large number
('exponent', 'smaller', 'modulo', '6662179', 'in rsa signing a message m means exponentiation with the private exponent d the result r is the smallest integer 0 and smaller than the modulo n so that\n')
('exponent', 'lower', 'modulo', '25461270', '1024 bit private exponent large number lower than the modulo\n')

uicontrol	uibutton---------------------------------------------------

cassini	iis---------------------------------------------------

integrated pipeline purpose
('iis', 'better', 'cassini', '11386063', 'iis express is a web server albeit better than cassini iis express is not your problem\n')
('cassini', 'slower', 'iis', '1082128', 'for my webapp the integrated visual studio server cassini ist much slower than iis\n')
('cassini', 'better', 'iis', '26091712', 'cassini was much better than iis express but doesn t properly support the integrated pipeline\n')
('iis', 'server better', 'cassini', '31310823', 'from this question i found out that iis server is better than cassini for my purpose but i don t know how to check the default server of my website\n')

macports	homebrew---------------------------------------------------

apache	lighttpd---------------------------------------------------

webserver fewer resources
('lighttpd', 'less ram', 'apache', '23856324', 'nginx or lighttpd in fastcgi mode use less ram than apache and they can handle more concurrent connections\n')
('lighttpd', 'fewer resources', 'apache', '3946868', 'since you ve switched to lighttpd the webserver itself is going to use fewer resources than apache would but apache is rarely the bottleneck unless you ve run out of ram or seriously misconfigured it\n')
('lighttpd', 'less', 'apache', '12411541', 'it may even use a different server software say nginx or lighttpd that has less overhead than the traditional apache setup\n')

uiview	subviews---------------------------------------------------

4px larger object
('uiview', '4px larger', 'subviews', '3357911', 'do i just create a new uiview that is 4px larger than the selected object and and make the selected view a subviews of it\n')
('uiview', 'bigger', 'subviews', '11452372', 'when using embed in - uiview the new view will be a bit bigger than the subviews\n')
('uiview', 'taller', 'subviews', '38314415', 'the uiview is taller than the screen so in ib i pulled it out of the scroll view so i could see it all but i never moved it back to being a subviews of the scroll view\n')
('uiview', 'smaller frame', 'subviews', '1361527', 'i want to add a uiview of smaller frame as subviews to parental view but i am not getting the needed\n')

uiview	calayer---------------------------------------------------

worse better performance
('calayer', 'better', 'uiview', '4882069', 'is calayer better than uiview in terms of performance\n')
('calayer', 'worse performance', 'uiview', '34019830', 'i noticed calayer had worse performance than uiview\n')

execute	prepare---------------------------------------------------

keras	tensorflow---------------------------------------------------

gpu memory equivalent
('keras', 'slower', 'tensorflow', '47484573', 'is keras faster slower than tensorflow during training\n')
('keras', 'faster', 'tensorflow', '46210187', 'more than this methodology i would suggest to you to do the training directly in keras as it claimed that keras optimizers are 5-10 times faster than tensorflow s optimizers\n')
('keras', 'more', 'tensorflow', '45092008', 'is keras consumes more gpu memory than equivalent tensorflow model training\n')

activemq	rabbitmq---------------------------------------------------

sense easy worse
('rabbitmq', 'worse', 'activemq', '7044157', 'what does rabbitmq do better or worse than activemq\n')
('activemq', 'better', 'rabbitmq', '23815467', 'it seems activemq is better than rabbitmq in the sense that it is easy to set up and maintenance for cluster\n')

128bit	64bit---------------------------------------------------

number prime factor
('128bit', 'larger', '64bit', '1434405', 'and i ll just add to previous comment if 128bit number has prime factor larger than 64bit then it certainly has a factor less than 64bit\n')
('128bit', 'larger', '64bit', '1433909', 'i ll just add that if the 128bit number is prime or has a prime factor larger than 64bit then there will be no solution to your problem\n')

transactions faster bit
('128bit', 'faster', '64bit', '27018111', '128bit transactions tend to be faster than 64bit which tend to be faster than 32 bit\n')
('128bit', 'faster', '64bit', '32549371', 'actually on intel sandybridge-family at least mul imul 64bit 64bit 128bit is faster than imul mul 32bit 32bit 64bit\n')

super	extends---------------------------------------------------

seam	jsf---------------------------------------------------

file uploads plain
('jsf', 'better', 'seam', '6377582', 'well for that you ll need jsf that is better integrated with seam and jsf does not handle file uploads that actually everyone use so you have to put also icefaces that actually are better managed by maven that you currenty are not using... neverending story\n')
('seam', 'certainly far better', 'jsf', '1253366', 'seam certainly is far better than using plain jsf refer the link posted by damo a couple of answers above\n')

tensorflow	theano---------------------------------------------------

long-time market computational
('tensorflow', 'better', 'theano', '44823584', 'tensorflow has better computational graph visualizations than theano and torch\n')
('tensorflow', 'better', 'theano', '44823584', 'tensorflow is better at marketing itself than long-time players of the open-source market like torch and theano\n')

subclassing	superclass---------------------------------------------------

smaller complex bigger
('subclassing', 'presumably more', 'superclass', '20343870', 'if new member fields are declared in the subclassing then yes a subclassing presumably uses more memory since it has all the fields declared in the superclass plus all the fields declared in the subclassing\n')
('superclass', 'smaller', 'subclassing', '8469968', '2 since superclass is smaller than subclassing one should use memory object carefully\n')
('superclass', 'always smaller less', 'subclassing', '839664', 'for my understanding the superclass is always smaller less complex then the subclassing\n')
('subclassing', 'more', 'superclass', '29938056', 'the general problem is that the subclassing is more specific than the superclass\n')
('superclass', 'bigger', 'subclassing', '12938232', 'in this case superclass is bigger than subclassing that s why the second statement is correct\n')
('superclass', 'more', 'subclassing', '34325101', 'superclass defines more general features of the objects of its subclassing\n')
('subclassing', 'more flexible', 'superclass', '6694223', 'a subclassing is more flexible and is treated as an entire object which responds to all superclass methods plus it s own\n')
('subclassing', 'more', 'superclass', '4523120', 'however they are not the same because the subclassing has more specific functions and data members that accomplish a more specific task that the superclass\n')
('subclassing', 'bigger interface', 'superclass', '933047', 'you can t cast a superclass in a subclassing because the subclassing may have a bigger interface than the superclass means the subclassing can have functions like getunixtimestamp that the superclass doesn t have\n')

arguments init method
('subclassing', 'less acts', 'superclass', '6113785', 'these relations naturally arise when you impose restrictions on what you can handle--then if a subclassing means that the method can handle less acts as a superclass of since can handle everything that the subclassing can handle and more\n')
('subclassing', 'more', 'superclass', '41011604', 'in other words if a subclassing is more accessible than its superclass then the access modifier of the superclass loses effect\n')
('subclassing', 'more', 'superclass', '13144639', 'if we are creating an object of a subclassing and invoking the method of superclass and if subclassing extends more than one class which superclass method should be called\n')
('subclassing', 'weaker access', 'superclass', '31177870', 'the subclassing overridden method cannot have weaker access than superclass method\n')
('subclassing', 'narrower', 'superclass', '15037922', 'however if the subclassing returns a narrower subtype of the superclass method return this is called a covariant return type and is allowed in java since jdk 1.5\n')
('subclassing', 'less arguments', 'superclass', '36196748', 'if you subclassing has less arguments than a superclass and you could make them optional in the superclass just add placeholders in the subclassing\n')
('subclassing', 'more', 'superclass', '488946', 'if the subclassing is more specific then it might fill in all by 2 of the arguments to its superclass __init__ method\n')
('subclassing', 'weaker reference', 'superclass', '40404884', 'so i inspected the compiled firebasemessagingservice which was the subclassing of com.google.firebase.iid.zzb and had zzae intent method as private but its subclassing firebasemessagingservice had protected access i know that subclassing cannot have weaker reference than its superclass so i guess there is something wrong with firebasemessagingservice library\n')
('subclassing', 'more', 'superclass', '45940822', 'subclassing must allow more than the superclass not less and going from an argument being optional to not optional is allowing less\n')
('subclassing', 'fewer arguments', 'superclass', '31996234', 'with explicit superclass calling your subclassing can accept more or fewer arguments than its superclass and can decide itself what to pass when calling the superclass\n')
('subclassing', 'more', 'superclass', '23594257', 'shouldn t a subclassing interfaced be able to take in more than the superclass interfacec and use the same method\n')

antialiasing	transparent---------------------------------------------------

profiling	instrumentation---------------------------------------------------

ceil	floor---------------------------------------------------

fractions direction higher
('ceil', 'always higher', 'floor', '39355314', 'on the other hand if what you want to do is not rounding but elimination of fractions into one direction then you have std ceil that goes always higher and std floor that always goes lower\n')
('floor', 'idx lower element', 'ceil', '18961058', 'so floor idx is the lower element and ceil idx is the higher\n')

greater possible works
('ceil', 'greater', 'floor', '1719752', 'the floor times the ceil are greater than the floor xy...that s very much possible\n')
('ceil', 'greater', 'floor', '30812908', 'works because ceil a b is always one greater than floor a b except when a b is a whole number\n')

memmove	memcpy---------------------------------------------------

none similiar functions
('memcpy', 'faster', 'memmove', '19585930', 'so in what platform and how memcpy can be significantly faster than memmove if there is none why providing two similiar functions instead of just memmove and lead to a lots of bug\n')
('memmove', 'faster', 'memcpy', '35210091', 'on some arm platform im working on memmove was 3 times faster than memcpy for short unalligned load\n')

slower 2x server
('memcpy', 'faster', 'memmove', '18176857', 'from reading other so questions such as this or this gives the impression that memcpy should work faster than memmove and intuitively this should be so\n')
('memmove', 'slower', 'memcpy', '22793669', 'bad news is that the asmlib version of memmove is slower than the glibc version it is now running at the 300ms mark on par with the glibc version of memcpy\n')
('memmove', 'slower std', 'memcpy', '44970454', 'std memmove may be very slightly slower than std memcpy emphasis added because it has to first check whether the source and target ranges overlap\n')
('memcpy', 'slower', 'memmove', '18176857', 'why does memcpy perform slower than memmove on my system\n')
('memcpy', 'slower', 'memmove', '41963723', 'why is memcpy so much slower than memmove or hand rolled copy on the server\n')
('memcpy', 'slower', 'memmove', '28623895', 'memcpy is still a little bit slower than memmove\n')
('memmove', 'slower', 'memcpy', '1201337', 'this means that memmove might be very slightly slower than memcpy as it cannot make the same assumptions\n')
('memmove', '2x faster', 'memcpy', '22793669', 'edit memmove is 2x faster than memcpy on the server\n')
('memcpy', 'faster', 'memmove', '19585930', 'the question is about is there really any platform where memcpy is faster than memmove\n')
('memmove', 'slower', 'memcpy', '44966288', 'and it said memmove might be very slightly slower than memcpy\n')

memory answers sophisticated
('memmove', 'more sophisticated', 'memcpy', '36731330', 'as already pointed out in other answers memmove is more sophisticated than memcpy such that it accounts for memory overlaps\n')
('memcpy', 'more efficient', 'memmove', '6283024', 'as an aside my c c++ is rusty but is not memcpy more efficient than memmove if you know you don t have overlapping memory\n')

tiff	png---------------------------------------------------

approach smaller compression
('tiff', 'better', 'png', '4362006', 'tiff â any bit depth any compression lossy or lossless everything including the kitchen sink â and no better than png\n')
('png', 'larger', 'tiff', '44229626', 'the resulting png compression may produce a file size larger than your tiff compression\n')
('png', 'approach smaller', 'tiff', '32949970', 'the resulting file from this png approach is smaller in size than a tiff file and i guess may rescale better\n')

struct	typedef---------------------------------------------------

sum	aggregate-functions---------------------------------------------------

version answer general
('aggregate-functions', 'more general', 'sum', '5653498', 'as an added answer there is also the aggregate-functions which is more general than sum\n')
('aggregate-functions', 'more', 'sum', '10256374', 'aggregate-functions is more general version of sum\n')

openrasta	wcf---------------------------------------------------

api mature web
('openrasta', 'much more mature', 'wcf', '6227583', 'openrasta is much more mature than wcf web api\n')
('openrasta', 'more mature', 'wcf', '6227193', 'though openrasta looks more mature than wcf web api i m still a bit confused\n')

filesystems	fat---------------------------------------------------

fixed-point	floating-point---------------------------------------------------

trinidad	richfaces---------------------------------------------------

mouseleave	mouseover---------------------------------------------------

reliable
('mouseleave', 'more reliable', 'mouseover', '11345144', 'also you might want to use mouseenter and mouseleave which are sanitized by jquery and are a little more reliable than mouseover and mouseout\n')
('mouseleave', 'more reliable', 'mouseover', '13688947', 'imho mouseenter and mouseleave are much more reliable than mouseover and mouseout which tend to flicker\n')

webrick	unicorn---------------------------------------------------

redmine	trac---------------------------------------------------

better easier wound
('redmine', 'better', 'trac', '1050501', 'we found redmine to be a better than trac simply because it is easier to use\n')
('redmine', 'better', 'trac', '1277646', 'redmine was written to be a better trac than trac\n')
('redmine', 'better', 'trac', '323542', 'the authors of redmine are trying to create a better trac than trac\n')
('redmine', 'better', 'trac', '5747934', 'i wound up going with redmine and it s way better than trac\n')

multiple projects box
('redmine', 'nicer', 'trac', '294097', 'redmine handles multiple projects and sub-projects right out of the box and overall seems nicer than trac\n')
('redmine', 'nicer', 'trac', '5309957', 'redmine handles multiple projects and sub projects far nicer than trac\n')

netrw	nerdtree---------------------------------------------------

last better
('nerdtree', 'better', 'netrw', '23161453', 'is nerdtree really much better than netrw\n')
('nerdtree', 'better', 'netrw', '23161254', 'last question is nerdtree really much better than netrw\n')

factors	mean---------------------------------------------------

growth smaller previous
('factors', 'larger', 'mean', '10197144', 'if your growth factors is larger than the golden mean that can t happen\n')
('factors', 'smaller', 'mean', '21847850', 'if the factors is smaller than the golden mean 1.6 and the previous allocations are contiguous with each other they ll eventually add up to a chunk that can satisfy a later requirement\n')
('factors', 'larger', 'mean', '21847850', 'if the factors is larger than the golden mean they never will\n')

x86	mips---------------------------------------------------

complex instructions care
('mips', 'less complex', 'x86', '12800438', 'the wording in your question seems to suggest you don t care as much that the output is mips but rather you want the output to be less complex than x86\n')
('x86', 'more complex instructions', 'mips', '454121', 'x86 have more complex instructions than mips\n')

assembly architecture complicated
('x86', 'more complicated', 'mips', '40397887', 'i have studied the x86 assembly and architecture and it appears to be a lot more complicated than mips\n')
('mips', 'easier', 'x86', '1382636', 'do any of the other common architectures like arm mips sparc etc have an easier than x86 instruction set\n')
('mips', 'easier', 'x86', '16701685', 'if you have not programmed assembly before i suggest you choose mips since it is easier than x86 and then b looking at how to transfer data with the serial port to begin with since this illustrates memory-mapped i o that is used\n')

rjdbc	rodbc---------------------------------------------------

uitextview	uilabel---------------------------------------------------

textarea	pre---------------------------------------------------

scalamock	mockito---------------------------------------------------

swt	swing---------------------------------------------------

uitableview	uipickerview---------------------------------------------------

flask	django---------------------------------------------------

great community extensions
('flask', 'smaller', 'django', '13186525', 'flask has a really great albeit smaller than django community and there are a lot of extensions available for common web-app extensions in the extensions directory\n')
('flask', 'smaller', 'django', '3777454', 'if you are looking for the latter then flask is a micro framework that is considerably smaller than django\n')

screens	mdpi---------------------------------------------------

xhdpi ldpi 48x48
('mdpi', 'shorter', 'screens', '28262431', 'i have used this link to generate nine-patch images however even if i add the files to the drawable ldpi mdpi ldpi xhdpi and xxhdpi folders the image is still shorter than the screens width\n')
('screens', 'slightly taller', 'mdpi', '11429834', 'proportionally the hdpi screens is slightly taller than the mdpi screens\n')
('screens', 'density less', 'mdpi', '13482946', 'if the screens density is less than xhdpi i load smaller sampled sizes of the 96x96 image - as 36x36 for ldpi 48x48 for mdpi 72x72 for hdpi\n')

high smaller size
('screens', 'bigger', 'mdpi', '15987663', 'i read in some tutorials that android automatically scales up the images when the screens resolution is bigger than mdpi\n')
('mdpi', 'phone smaller', 'screens', '28541798', 'addressing issue #2 if your mdpi phone has a smaller screens than 600dp it will use the layout in res layout folder\n')
('screens', 'size larger', 'mdpi', '19835542', 'since the screens size is larger than the common mdpi screens sizes 320x480 the text size looks smaller in this emulator\n')
('screens', 'smaller', 'mdpi', '46668634', 'ldpi assets will look bad on high density screens but are exponentially smaller than mdpi which is exponentially smaller than hdpi etc\n')

cloudant	couchdb---------------------------------------------------

filesystems	ntfs---------------------------------------------------

guava	lambdaj---------------------------------------------------

qunit	jasmine---------------------------------------------------

modulo	addition---------------------------------------------------

operations important slower
('modulo', 'slower', 'addition', '31494852', 'then you can process any length number using very few division remainder modulo operations which is important because they are much slower than addition\n')
('addition', 'much cheaper', 'modulo', '23462464', 'the addition is much cheaper than other operations like modulo and division and array access\n')
('modulo', 'slower integer', 'addition', '898763', 'integer multiplication division and modulo are much slower than integer addition and subtraction\n')
('modulo', 'slower', 'addition', '8132236', 'division and modulo are indeed costly hardware operations whatever you do this is more related to hardware architecture than to languages or compilers perhaps ten times slower than addition\n')

higher precedence operator
('modulo', 'more tightly', 'addition', '40679020', 'because the string formatting operator shares precedence with the remainder or modulo which binds more tightly than the + addition operator\n')
('modulo', 'higher precedence', 'addition', '41520049', 'note parentheses are redundant as division and multiplication have the same priority and modulo has higher precedence over addition\n')
('modulo', 'higher precedence', 'addition', '32254191', 'multiplication division and modulo have the same precedence and they all have higher precedence than addition and subtraction\n')
('modulo', 'higher precedence', 'addition', '15075753', 'modulo can also cause a divide-by-zero and it has a higher precedence than addition\n')
('modulo', 'higher', 'addition', '40602532', 'the modulo has a higher precedence than addition\n')
('modulo', 'higher operator', 'addition', '23395245', 'the modulo has a higher operator precedence than the addition operator therefore it will happen before the addition\n')
('modulo', 'higher precedence', 'addition', '25297793', 'and keep in mind that the modulo has a higher precedence than addition and subtraction\n')

matrix	factors---------------------------------------------------

twig	smarty---------------------------------------------------

market new symfony
('twig', 'better', 'smarty', '2894515', 'if your in the market for a templating engine twig a new templating engine used by symfony is much better than smarty imho\n')
('smarty', 'cleaner', 'twig', '25748940', 'either way i intend to use smarty partly because i have lots of experience with it and partly because its much more well documented and has much more functionality than blade and to me the syntax is slightly cleaner than twig although the template engine is not the point of this question really\n')

range	minimum---------------------------------------------------

negative error exponent
('range', 'lower', 'minimum', '45656389', 'the cause for an integer overflow is when an arithmetic operation attempts to create a numeric value that is outside of the range that can be represented with a given number of bits either larger than the maximum or lower than the minimum representable value\n')
('range', 'greater', 'minimum', '31084948', 'the reductive point here is the expression can actually be simplified to just the range that has the greater minimum value and the lesser maximum value\n')
('range', 'greater', 'minimum', '5234591', 'how about for integer values you specify a range and a predicate that specifies the value must be greater than minimum less than maximum instead\n')
('range', 'greater', 'minimum', '40184847', 'the smallest most negative value that does not cause a range error is the one greater than the minimum exponent minus the number of bits of mantissa\n')
('range', 'smaller', 'minimum', '1990334', 'a range is contiguous when there is no value one smaller than the minimum and no value one bigger than the maximum and there is no gap within the range\n')
('range', 'less', 'minimum', '45109856', 'i have hinted at my analysis of the problem finding the common range of depth values across all datasets and you should be able to track through how i have implemented this in excel to cater for cases where some datasets might contain depth values which are less than the minimum of the common range or which are greater than its maximum or possibly both\n')

gtk	cairo---------------------------------------------------

settimeout	setinterval---------------------------------------------------

useful need method
('setinterval', 'more accurate', 'settimeout', '43600221', 'well setinterval and settimeout essentially try to do the same thing but for your case setinterval method will be more accurate than settimeout\n')
('setinterval', 'more', 'settimeout', '14174099', 'setinterval is more useful than settimeout here as it recurs automatically and you don t need to keep setting it\n')
('settimeout', 'more', 'setinterval', '20139502', 'settimeout is more relevant than setinterval since the first method just waits for a delay and executes a logic whereas the second function is meant for repeating a logic on periodic intervals\n')
('settimeout', 'usually more', 'setinterval', '41731274', 'now a routine to initiate once per second - settimeout is usually more useful than setinterval\n')
('settimeout', 'simpler', 'setinterval', '46886457', 'as for me settimeout is simpler than setinterval in this case as you won t need to clearinterval in the end of the array\n')

better previous ajax
('settimeout', 'better', 'setinterval', '7197129', 'it uses settimeout however settimeout is a better solution than setinterval because it will only queue a new one if the previous one is complete\n')
('settimeout', 'better', 'setinterval', '3030830', 'if so then you can just pop lines off the array using settimeout which is better than setinterval for most animations\n')
('settimeout', 'better', 'setinterval', '31064972', 'but settimeout would be better than setinterval because with setinterval if your previous ajax request is not complete and you start another request there will have multiple requests which would sooner be problematic\n')
('settimeout', 'better idea', 'setinterval', '47316194', 'using settimeout for such purposes is better idea than setinterval as you don t have to clear them and they won t get crowded - if your fight takes longer than period then this won t run into next fight\n')
('settimeout', 'better', 'setinterval', '16126379', 'settimeout is better than setinterval here because setinterval will start at every 5 secs but settimeout will start once each time your job is done and wait for 5 seconds which will make your script adaptive to server response timings\n')
('settimeout', 'better', 'setinterval', '39790991', 'also settimeout is a better approach than setinterval as you explicitly reset it on each round trip\n')
('setinterval', 'better way', 'settimeout', '20182174', 'i understand from searching on so that setinterval is a better way to approach this that settimeout which i was using initially but i haven t figured out how to specify that the function needs to repeat\n')
('settimeout', 'better', 'setinterval', '22424960', 'using settimeout is considered better than setinterval because of the screwy ways that js s event loop works\n')

better task safer
('settimeout', 'safer', 'setinterval', '20550018', 'i think using settimeout is safer than setinterval\n')
('setinterval', 'often better', 'settimeout', '16539647', 'also setinterval is often better replaced by settimeout\n')
('setinterval', 'better way', 'settimeout', '37051171', 'setinterval would be the better way than settimeout\n')
('setinterval', 'better', 'settimeout', '34253539', 'setinterval is better than settimeout for this task\n')

timers use timer
('settimeout', 'timer more preferably', 'setinterval', '34249135', 'the use of one settimeout timer is more preferably than several setinterval timers\n')
('setinterval', 'much more', 'settimeout', '9578359', 'setinterval is much more suited for countdown timers and things you need to run continually since settimeout only runs once and you need to keep on calling it\n')

little shure statement
('setinterval', 'cleaner', 'settimeout', '41311136', 'i find setinterval is a little cleaner than chaining settimeout calls\n')
('settimeout', 'more', 'setinterval', '23111155', 'and im not shure about this statement javascript likes settimeout more than setinterval which gives a little performance boost\n')

max	minimum---------------------------------------------------

equal update left
('max', 'less', 'minimum', '13993794', 'from here you also need to take into account if the user inputs a value higher than the max year of the data and also less than the minimum\n')
('minimum', 'less', 'max', '40118146', 'all numbers will always be equal to or greater than the minimum value or equal to or less than the max value\n')
('minimum', 'higher', 'max', '39976775', 'in this example i would want to flag the following records in my data 2 lower than the minimum for x and 4 higher than the max for y\n')
('max', 'larger', 'minimum', '26761734', 'how can the max value be larger than the minimum\n')
('max', 'lower', 'minimum', '22326765', 'my question is can we set max stack size lower than the minimum stack size which may be 4 kb for the goroutines\n')
('minimum', 'lower', 'max', '32300572', 'for group 1 the minimum value is actually 2 however i need minimum indexed lower than max value index position\n')
('minimum', 'value greater', 'max', '30945059', '4.if minimum value is greater than the current value in array than add difference of than in ans add the difference with current value update max from left\n')

sml	haskell---------------------------------------------------

greedy	backtracking---------------------------------------------------

okhttp	retrofit---------------------------------------------------

solution different service
('okhttp', 'more', 'retrofit', '38431343', 'the basic one and i think the simplest is okhttp but you have to understand that okhttp is no more supported but still work when you downgrade your sdkversion the best solution is to use volley or retrofit\n')
('okhttp', 'more', 'retrofit', '38392143', 'first you have many different library you can use instead of retrofit the basic one and i think the simplest is okhttp but you have to understand that okhttp is no more supported but still work when you downgrade your sdkversion and you can use volley to perform the same service as retrofit\n')

sortedlist	sorteddictionary---------------------------------------------------

removal insertion operations
('sorteddictionary', 'faster', 'sortedlist', '472158', 'sorteddictionary has faster insertion and removal operations for unsorted data o log n as opposed to o n for sortedlist\n')
('sorteddictionary', 'faster insertion', 'sortedlist', '21734216', 'sorteddictionary has faster insertion and removal operations for unsorted data o logn as opposed to o n for sortedlist\n')
('sorteddictionary', 'faster', 'sortedlist', '10950851', 'note after doing some benchmarks i found that sorteddictionary is faster for removal but sortedlist is faster for adding and indexing by key\n')

memory
('sortedlist', 'less', 'sorteddictionary', '24681338', 'â sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'less memory', 'sorteddictionary', '1427158', 'sortedlist tkey tvalue uses less memory than sorteddictionary tkey\n')

middle faster
('sortedlist', 'faster', 'sorteddictionary', '33649821', 'sortedlist is faster when you want to enumerate the elements and you can access the elements by index and sorteddictionary is faster if there are a lot of elements and you want to insert a new element in the middle of the collection\n')
('sortedlist', 'faster', 'sorteddictionary', '890438', 'if the sortedlist is populated all at once from sorted data it s faster than sorteddictionary\n')
('sortedlist', 'faster', 'sorteddictionary', '389813', 'if the list is populated all at once from sorted data sortedlist is faster than sorteddictionary\n')
('sortedlist', 'faster', 'sorteddictionary', '9932109', 'sortedlist is faster than sorteddictionary\n')

octal	hex---------------------------------------------------

cobertura	emma---------------------------------------------------

intersect	contains---------------------------------------------------

rsa	aes---------------------------------------------------

performance resources resource
('aes', 'less', 'rsa', '15027631', 'there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n')
('aes', 'faster', 'rsa', '20925115', 'and regarding your first question it is definitely possible to encrypt decrypt messages directly using rsa there are only technical and performance reasons aes is much faster than rsa why rsa is used only to encrypt a session key and aes is used to encrypt decrypt the messages themselves\n')

slower simpler management
('rsa', 'encrypt faster', 'aes', '14642408', 'it shows that rsa encrypt is faster then aes encrypt\n')
('aes', 'faster', 'rsa', '35236158', 'the aes key is encrypting much more data but is much faster than rsa encryption\n')
('rsa', 'much slower', 'aes', '9237803', 'like you heard asymmetric cryptography like rsa is much slower than symmetric cryptography aes but it does have it s advantages simpler key management a single private key to protect\n')
('rsa', 'much slower', 'aes', '22911417', 'one of the reasons to do so is that rsa is much slower than for example aes\n')
('rsa', 'much slower', 'aes', '26673893', 'rsa is much slower than aes\n')

secure
('rsa', 'more secure', 'aes', '37534974', 'asymmetric key encryption ex rsa is no more secure than symmetric key encryption ex aes\n')
('rsa', 'more', 'aes', '38065154', 'asymmetric encryption ex rsa is no more secure than symmetric encryption ex aes\n')
('aes', 'less secure', 'rsa', '33871712', 'how is aes less secure than rsa in this scenario\n')

execution sizes secs
('aes', 'faster', 'rsa', '2743437', 'so the 115 seconds will be reduced to 3-4 secs plus the encryption decryption time used for aes which is much faster than rsa\n')
('aes', 'more faster', 'rsa', '38483747', 'execution of aes is more faster than rsa for same key sizes\n')

compiled-language	interpreted-language---------------------------------------------------

slower faster execution
('interpreted-language', 'slower', 'compiled-language', '17216232', 'mostly interpreted-language are a bit slower compared with compiled-language but i guess the difference is almost negligible in coffeescript javascript because of node.js\n')
('interpreted-language', 'slower', 'compiled-language', '3899501', 'interpreted-language tend to be but not always are significantly slower than compiled-language\n')
('interpreted-language', 'slower', 'compiled-language', '4079920', 'php is an interpreted-language so will run a little slower than a compiled-language\n')
('interpreted-language', 'slower', 'compiled-language', '1694508', 'this is a good question but should be formulated a little different in my opinion for example why are interpreted-language slower than compiled-language\n')
('interpreted-language', 'much slower', 'compiled-language', '3019070', 'and perl like any interpreted-language is much slower than a compiled-language\n')
('compiled-language', 'faster', 'interpreted-language', '26712393', 'from what i know a compiled-language such as c++ is much faster than an interpreted-language such as javascript\n')
('interpreted-language', 'slower other', 'compiled-language', '18388172', 'python is an interpreted-language so by definition is slower than other compiled-language but the drawback in the execution speed is not even noticeable in most of applications\n')
('compiled-language', 'faster', 'interpreted-language', '5670283', 'that being said a compiled-language like c will almost always be faster than an interpreted-language like javascript\n')
('interpreted-language', 'slower', 'compiled-language', '41849399', 'interpreted-language execution speed are slower than compiled-language true but once there is need for more speed you can call in compiled stuff through gems or micro services\n')
('interpreted-language', 'slower', 'compiled-language', '1737240', 'fact is that interpreted-language like php are always slower than a compiled-language\n')
('compiled-language', 'faster', 'interpreted-language', '223029', 'a compiled-language will generally run faster than an interpreted-language so i think ruby and php start behind the eight ball but it really comes down to how you use the language and how you structure the code\n')
('interpreted-language', 'slower', 'compiled-language', '41413195', 'naturally interpreted-language will run slower than compiled-language as compiled code can be ran blindly by the cpu where as compiled code needs to be checked ran line by line\n')
('interpreted-language', 'slower', 'compiled-language', '6619136', 'an interpreted-language will typically run one to two orders of magnitude slower than a compiled-language\n')
('compiled-language', 'faster', 'interpreted-language', '30971543', 'in my general programming experience compiled c c++ programs generally run faster than most other compiled-language like java or even compiled python and almost always run faster than interpreted-language like uncompiled python or javascript\n')
('interpreted-language', 'slower', 'compiled-language', '7993308', 'this makes interpreted-language generally slower than compiled-language due to the overhead of running the vm or interpreter\n')
('interpreted-language', 'slower', 'compiled-language', '5149958', 'while ruby and python are both interpreted-language and operation-for-operation slower than compiled-language the reality is in executing an application only a small portion of cpu time is spent in your code and the majority is spent into the built-in libraries you call into which are often native implementations and thus are as fast as compiled code\n')
('compiled-language', 'better', 'interpreted-language', '38491212', 'are compiled-language better than interpreted-language or vice-versa\n')
('interpreted-language', 'slower natively', 'compiled-language', '44258776', 'it should be noted that interpreted-language are inherently many time slower than natively compiled-language\n')

performance examples better
('compiled-language', 'better performance', 'interpreted-language', '6361528', 'writing in a compiled-language java or c++ in your examples would almost certainly give better performance than an interpreted-language like php\n')
('compiled-language', 'significantly better', 'interpreted-language', '42017374', 'performance of programs in compiled-language is significantly better than that of an interpreted-language\n')

easier possible bytecode
('interpreted-language', 'probably easier', 'compiled-language', '47286728', 'while java could be described as a compiled and interpreted-language it s probably easier to think of java itself as a compiled-language and java bytecode as an interpreted-language\n')
('interpreted-language', 'surely easier', 'compiled-language', '21665739', 'an interpreted-language surely makes it easier but this is still entirely possible with compiled-language like c\n')

performant level assembly
('compiled-language', 'more performant', 'interpreted-language', '37105652', 'then c which is one those languages closer to the processor level is very performant and generally speaking compiled-language because they turn your code into assembly language are more performant than interpreted-language\n')
('interpreted-language', 'less performant', 'compiled-language', '29574827', 'interpreted-language are inherently less performant than compiled-language - c will generally outperform python - some operations more than others\n')

telnet	ftp---------------------------------------------------

protocol complex form
('telnet', 'easier', 'ftp', '1059847', 'it is optimized for downloading larger files where the setup overhead is amortized over the size and number of downloads http is very light-weight you can communicate to an http server using telnet much easier than ftp especially before passive ftp and is designed around html -- the concept that in the course of your navigation you will be visiting many different servers and grabbing only a couple of files at a time from each\n')
('ftp', 'protocol more', 'telnet', '1741448', 'ftp protocol is more complex than http or telnet form example\n')

webclient	httpwebrequest---------------------------------------------------

higher order milliseconds
('webclient', 'slower', 'httpwebrequest', '22792326', 'using webclient is potentially slightly on the order of a few milliseconds slower than using httpwebrequest directly\n')
('webclient', 'class more idiomatic', 'httpwebrequest', '45059212', 'also i think the webclient class is more idiomatic these days than hand rolling httpwebrequest\n')
('webclient', 'higher', 'httpwebrequest', '47215465', 'because webclient is higher class of httpwebrequest and its slower\n')

printwriter	bufferedwriter---------------------------------------------------

vim	textmate---------------------------------------------------

named	shadowing---------------------------------------------------

margin	height---------------------------------------------------

css element greater
('height', 'always higher', 'margin', '40299232', 'i am trying to make my div wrap the tag however it doesn t wrap the height is always higher of my div and my tag has no padding or margin i tried many things but doesn t work i am adding my style and the html code i am also going to add some screenshots\n')
('height', 'less', 'margin', '7533484', 'it is treating the floated ul as position absolute but only when its height is less than or equal to the negative top margin on its containing parent\n')
('height', 'larger', 'margin', '25303351', 'sometimes when enough content items is added this div height is larger than windows and part of div content is not visible at all it stays bellow page margin\n')
('height', 'more', 'margin', '18125383', '#footer s height is more than 800px so the #container should lose its top margin value by touching #footer and continue scrolling the page without that floating div\n')
('height', 'less', 'margin', '39407472', 'when recyclerview s content height is less than itself - last item has to gain margin padding height and fill the remaining space\n')
('height', 'actually greater', 'margin', '39950172', 'css height 100 gives an element height that is actually greater than 100 by the size of the margin\n')
('margin', 'smaller', 'height', '8026900', 'i assume margintop can t be solved since im setting margin top to -820 in order to get at a point of top 275 therefore screens smaller than 1200px height the div will go much higher...\n')
('height', 'greater', 'margin', '11165394', 'you also need to set a height that is greater than the negative top margin so part of the element will be visible so the user can hover over it\n')
('height', 'bigger', 'margin', '22379684', 'your listview item s height is looking bigger because your are applying 17dp padding and 4dp margin at the top and 7dp padding and 4dp margin at the bottom of the textview ...so its taking total 32dp extra space excluding your textview\n')
('margin', 'greater', 'height', '39145176', 'the value of margin top will be equal or greater than height of the fixed header height\n')
('margin', 'greater', 'height', '31577622', 'if i apply a negative margin to it that is greater than its height the first time feedbackview.showtext is called it doesn t animate in correctly\n')
('margin', 'greater', 'height', '34283849', 'however an algorith could be something like if the new margin top is greater than the height of the current note and the difference between the offet of the current note anchor and the following note anchor is less than the height of the current note than subtract the height of the current note from the new margin\n')
('height', 'much larger', 'margin', '25144600', 'the first row has a height that is much larger than the margin bottom of its .content div so that the margin-bottom is contained and should not effect anything outside of its container\n')
('margin', 'greater', 'height', '46498535', 'you ll need to set the top margin for whatever item you want under it to be greater than the height of your navbar in order for it to show up correctly\n')
('margin', 'greater', 'height', '31577622', 'in activity_main.xml below the feedbackview has a margin top of -36dp which is greater than its height when non-negated\n')
('margin', 'greater', 'height', '35774300', 'if you want to use it then add a bottom margin to the content_main which should be equal or greater than the height of the ad layout\n')
('margin', 'greater', 'height', '1144224', 'in conjunction with a negative margin equal to or greater than the height of the top and bottom borders if any to further remove the element\n')
('height', 'greater', 'margin', '10208968', 'if the height is greater than 66px i want to apply a negative top margin equal to half of its height\n')

browser available percentage
('margin', 'less', 'height', '25738542', 'also be aware that if the height of the printable area that is page height minus top and bottom margin is less than the height of your cell content then it s impossible for the browser to avoid breaking it unless it can somehow warp the fabric of space maybe firefox has a -moz- property for that\n')
('margin', 'larger', 'height', '29724346', 'also you need to be careful about your content - in the fiddle you used h4 and p tags and these have a default top bottom margin set by the browser - if this margin is larger than the space available in the percentage height div it will push the content out of vertical alignment\n')

mergesort	in-place---------------------------------------------------

time space standard
('mergesort', 'more memory', 'in-place', '497849', 'another reason is that mergesort needs more memory because it s hard to implement it as an in-place sort\n')
('in-place', 'less space standard', 'mergesort', '37737510', '1 in-place merge sort is used when you want to sort a list in o nlogn time while using less space than standard mergesort\n')

direct2d	gdi---------------------------------------------------

slower
('direct2d', 'slower', 'gdi', '13281964', 'but my direct2d code is much slower than my gdi code\n')
('direct2d', 'slower', 'gdi', '4055456', 'a direct2d is slower than gdi\n')

configobj	configparser---------------------------------------------------

built-in easier
('configobj', 'easier', 'configparser', '3444436', 'i have heard that configobj is easier to use than configparser even though it is not a built-in library\n')
('configobj', 'easier', 'configparser', '186990', 'i ve heard that configobj is easier to work with than configparser\n')

haskell	ocaml---------------------------------------------------

background-color	background-image---------------------------------------------------

goto	break---------------------------------------------------

simpler statements if-checks
('goto', 'simpler', 'break', '24476', 'if you re in a nested loop and need to break out of all loops a goto can make this much cleaner and simpler than break statements and if-checks\n')
('break', 'worse', 'goto', '30155252', 'the idea of saying break out of the nth nested loop is worse than a goto from a structural perspective\n')

better developer c-like
('break', 'better', 'goto', '17883705', 'nevertheless in my opinion break is not much better than goto its both not a good programming style\n')
('goto', 'better', 'break', '45395794', 'but goto is better than break when you have nested loops like that\n')
('break', 'cleaner solution', 'goto', '12792176', 'to any seasoned developer of a c-like language break will both read better as well as provide a cleaner solution than goto\n')
('break', 'better', 'goto', '723329', 'labeled break like in java would be better than goto for this purpose\n')
('break', 'better', 'goto', '45395794', 'in the previous example break is better than goto\n')

graceful l faster
('break', 'little more', 'goto', '21104206', 'the bad we use a break that is little more than a tamed goto something like goto the end of the loop\n')
('break', 'faster', 'goto', '30144933', 'there s not really a graceful way to break out of for l although it is much faster than a goto loop\n')

udp	mtu---------------------------------------------------

fragmented greater network
('udp', 'less', 'mtu', '40218900', 'in real life udp packets size usually is equal or less than mtu size\n')
('udp', 'larger', 'mtu', '11809828', 'basically while sending udp packets larger than mtu ip fragmentation can occur if it s supported on your platform but not all platforms support it\n')
('udp', 'larger', 'mtu', '18253025', 'when send a udp datagram larger than the mtu size only the last fragment of the udp datagram is putted out to the destination\n')
('udp', 'larger', 'mtu', '20851391', 'my lwip can send udp packets to pc but my pc would fail to reassemble when the udp packets are larger than mtu\n')
('udp', 'larger', 'mtu', '33452216', 'if there is network congestion rate limiting or traffic profiling or if the udp message size is larger than the mtu\n')
('udp', 'bigger', 'mtu', '40218900', 'if udp payload size is bigger than mtu size udp will silently segment the packet\n')
('udp', 'larger', 'mtu', '1436197', 'if you send a udp datagram larger than the mtu it will be fragmented\n')
('udp', 'package larger', 'mtu', '45144409', 'what would happen if my udp package is larger than mtu\n')
('udp', 'smaller', 'mtu', '13423649', 'ideally your udp frames are smaller than the mtu for your architecture say 1500 bytes so the messages won t get chopped up in transit\n')
('udp', 'bigger', 'mtu', '4549135', 'note that udp packets bigger than the mtu s at every hope between your hosts will be split by ip\n')
('udp', 'larger', 'mtu', '21056847', 'ever since i did sockets programming on a pdp 11 it s been the case that ip fragmentation will take care of the case where an ip datagram such as a udp datagram is larger than the mtu for the segment allows\n')
('udp', 'greater', 'mtu', '10356170', 'udp packets greater than the mtu size of the network that carries them will be automatically split up into multiple packets and then reassembled by the recipient\n')
('udp', 'bigger', 'mtu', '2315847', 'udp uses datagrams chunks of data which are received whole on the other side unless the size is bigger than the mtu but that s a different story\n')
('udp', 'bigger', 'mtu', '1436154', 'they are easily generated for udp simply by making the datagram bigger than the mtu\n')

pyglet	pyopengl---------------------------------------------------

heapsort	quicksort---------------------------------------------------

faster slower practice
('quicksort', 'actually worse', 'heapsort', '4292700', 'worst case for quicksort is actually worse than heapsort and mergesort but quicksort is faster on average\n')
('heapsort', 'slower', 'quicksort', '22888581', 'in the event that the quicksort starts to degenerate it uses heapsort which is o n log n worst-case but slightly slower than quicksort on average to guarantee o n log n worst-case runtimes\n')
('quicksort', 'faster', 'heapsort', '39971717', 'this is because quicksort is generally faster than heapsort unless the call depth becomes to deep\n')
('heapsort', 'slower', 'quicksort', '45998880', 'however heapsort is slower than quicksort in the average case in the sense that heapsort performs c n log n whereas quicksort has d n log n performance with d being significantly smaller than c the numbers c and d are constants\n')
('heapsort', 'significantly slower', 'quicksort', '70423', 'but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average\n')
('heapsort', 'less efficient', 'quicksort', '28658362', 'in fact the heapsort algorithm works this way first arrange a random order into heap order and then obtain a sorted order somewhat less efficient than quicksort on average\n')
('heapsort', 'faster', 'quicksort', '7532292', 'when you say something like heapsort should be faster than quicksort what makes you say that\n')
('quicksort', 'faster', 'heapsort', '36468763', 'what makes quicksort faster than heapsort in practice is its constant that was ignored by big o analysis\n')
('quicksort', 'faster', 'heapsort', '107883', 'for example quicksort average cost t n.log n and heapsort average cost t n.log n are both sorting algorithms with the same average cost - yet quicksort is typically much faster than heapsort\n')
('quicksort', 'better', 'heapsort', '18450862', 'why it is said quicksort has better constant factor than heapsort and therefore quicksort is better than heapsort in average\n')
('heapsort', 'slower', 'quicksort', '23986246', 'quicksort time complexity is typically o n log n but it s worst case is o n 2 which is avoided with the switch to heapsort since heapsort is always o n log n but slower than quicksort so it s only used to avoid o n 2\n')
('heapsort', 'better', 'quicksort', '21580093', 'it is a variant of heapsort which is particularly suitable for the sorting of very large amounts of data if a relatively high cost per compare operation is needed and on average better than quicksort\n')
('quicksort', 'more efficient', 'heapsort', '771892', 'average asymptotic order of quicksort is o nlogn and it s usually more efficient than heapsort due to smaller constants tighter loops\n')
('quicksort', 'less work', 'heapsort', '46514662', 'so for even small inputs quicksort does less work than heapsort and is physically faster for every n\n')
('heapsort', 'better', 'quicksort', '33943872', 'asymptotic analysis reveals order of growth of heapsort in the worst case is big-o n logn which is better than quicksort s big-o n 2 as a worst case\n')
('heapsort', 'somewhat slower', 'quicksort', '33943872', 'however heapsort is somewhat slower in practice on most machines than a well-implemented quicksort\n')
('quicksort', 'faster', 'heapsort', '36468115', 'for example quicksort is faster than heapsort in general although their time complexity are the same\n')
('quicksort', 'simpler', 'heapsort', '941325', 'each iteration in quicksort is a lot simpler than heapsort\n')
('heapsort', 'slower', 'quicksort', '46514662', 'because heapsort is actually slower than quicksort for each n\n')
('heapsort', 'faster', 'quicksort', '4775203', 'if i do heapsort i can create the stack while i m sorting but would this be faster than a quicksort and then build the stack afterwords\n')
('quicksort', 'faster', 'heapsort', '18454981', 'the difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsort\n')
('heapsort', 'faster', 'quicksort', '11712414', 'in their respective worst cases heapsort is faster than quicksort\n')
('heapsort', 'faster', 'quicksort', '3330132', 'so for instance heapsort is faster than quicksort in the worst case but slower in the average case\n')
('quicksort', 'usually faster then', 'heapsort', '941325', 'in practice however quicksort is usually faster then heapsort\n')
('quicksort', 'worse', 'heapsort', '26276269', 'from what i heard quicksort should have better average case performance but from my tests it performs 4 times worse than heapsort for array of random integers\n')
('heapsort', 'better big-o', 'quicksort', '6781282', 'heapsort has a better big-o than say quicksort yet quicksort performs much better in practice\n')

higher words per-comparison-overhead
('heapsort', 'higher', 'quicksort', '41480526', 'heapsort has higher overhead than quicksort but its worst case is o n log n vs\n')
('heapsort', 'higher', 'quicksort', '45998880', 'in other words the per-comparison-overhead of heapsort is higher than the one of quicksort\n')

comparisons anyone circumstances
('heapsort', 'better choice', 'quicksort', '18454981', 'in short - if all we care about are comparisons heapsort is a better choice than quicksort\n')
('heapsort', 'better', 'quicksort', '27592487', 'can anyone explain why heapsort performs better and under what circumstances quichesort would be better than both quicksort and heapsort\n')
('quicksort', 'more comparisons', 'heapsort', '18454981', 'you can indeed show that on average quicksort will do more comparisons than heapsort roughly 1.44 n log 2 n for quicksort versus n log 2 n versus heapsort\n')

sort worse insertion
('quicksort', 'worse', 'heapsort', '15064866', 'in theory quicksort is worse than heapsort\n')
('quicksort', 'suddenly worse then', 'heapsort', '26723063', 'for 5 000 000 ints still stored in memory quicksort becomes suddenly worse then heapsort and mergesort\n')
('heapsort', 'way quicker', 'quicksort', '7519297', 'after several tests i found out that my heapsort is way quicker than quicksort i think it should be the other way around my selection sort is also faster than insertion sort\n')
('quicksort', 'worse', 'heapsort', '1853219', 'however quicksort s worst-case performance is significantly worse than heapsort s is\n')
('quicksort', 'worse', 'heapsort', '9157094', 'in theory insertion sort and quicksort are worse than heapsort\n')

bottle	flask---------------------------------------------------

height	column-count---------------------------------------------------

multiplying	add---------------------------------------------------

slower years
('multiplying', 'slower', 'add', '18417272', 'as of a few years ago multiplying was 3x slower than add\n')
('multiplying', 'slower', 'add', '21010730', 'its the multiplying that historically was slower than the add\n')

precedence higher divide
('multiplying', 'higher', 'add', '4885461', 'with extra braces because multiplying has a higher precedence than add - assuming these are both percentage discounts\n')
('multiplying', 'higher precedence', 'add', '10988746', 'to give multiplying and divide higher precedence than add and subtract you can do something like this example adapted from john levine lex yacc 2 e 1992\n')
('multiplying', 'operator higher precedence', 'add', '47289055', 'can someone explain this behaviour multiplying operator has higher precedence than add operator\n')
('multiplying', 'more', 'add', '24842621', 'then i think it would be the problem of precedence in most case they are left-to-right and i think multiplying would be calculated first because in c multiplying is more prior than add instruction by one level\n')
('multiplying', 'higher', 'add', '46965151', 'in the above example the instance of exprbinopadd is a child of the instance of exprbinopmul although precedence of multiplying is higher than precedence of add which results from the proper consideration of the parentheses\n')
('add', 'higher precedence', 'multiplying', '7501430', 'moreover i would like to add the pow in my evaluator with an higher precedence than multiplying and divide\n')
('multiplying', 'higher precedence', 'add', '21650235', 'multiplying and divide have higher precedence than add and subtract\n')
('add', 'higher precedence', 'multiplying', '7501702', 'i would like to add the pow in my evaluator with an higher precedence than multiplying and divide\n')

clock cycles operation
('multiplying', 'faster', 'add', '44273494', 'however multiplying is faster than adding even though less clock cycles are used to add verses multiplying according to what my particular cpu s datasheet says about the instructions being used\n')
('multiplying', 'operation more', 'add', '2306404', 'the multiplying operation uses more clock cycles than the add on many processors\n')

spaces	delimiter---------------------------------------------------

integers indentation whitespace
('delimiter', 'more', 'spaces', '28253043', 'if you want to allow the integers to be delimiter by more than one spaces for indentation purposes or so and depending on the way you want to handle tabs and other non-newline whitespace you can use a more complex delimiter\n')
('spaces', 'more', 'delimiter', '33599383', 'the alternative is to write slightly more complex c code which can split on either spaces or tabs note that you can pass strtok more than one delimiter\n')

awk comma field
('spaces', 'field', 'delimiter', '612937', 'awk uses a comma surrounded by 0 or more spaces as field delimiter\n')
('spaces', 'field', 'delimiter', '1468030', 'it checks for one or more spaces as field delimiter and also tabs\n')

getline	fgets---------------------------------------------------

ignite	hazelcast---------------------------------------------------

nsurlsession	nsurlconnection---------------------------------------------------

boxlayout	gridbaglayout---------------------------------------------------

graphicsmagick	imagemagick---------------------------------------------------

better
('imagemagick', 'better', 'graphicsmagick', '12307515', 'i do know imagemagick better than graphicsmagick\n')
('graphicsmagick', 'better', 'imagemagick', '7623344', 'for me graphicsmagick is performing far better than imagemagick\n')

faster file sizes
('graphicsmagick', 'faster', 'imagemagick', '15074956', 'the origin server would get the images from s3 process them using graphicsmagick since it s much faster than imagemagick then serve them\n')
('graphicsmagick', 'faster', 'imagemagick', '2997695', 'graphicsmagick also seems to be faster than imagemagick using better multitasking\n')
('graphicsmagick', 'faster', 'imagemagick', '14804613', 'graphicsmagick converted much faster than imagemagick although i did not test conversion with cuda processing\n')
('graphicsmagick', 'higher', 'imagemagick', '3722370', 'graphicsmagick is not that much faster -- and the outputted file sizes are significantly higher than imagemagick\n')

simpletest	phpunit---------------------------------------------------

best opinion easier
('simpletest', 'easier', 'phpunit', '34338', 'i found simpletest was even easier than phpunit to set up\n')
('simpletest', 'slightly easier', 'phpunit', '4624172', 'simpletest is slightly easier to grasp but phpunit is the best in my opinion at least so if you want to start learning and using a framework start with the one you re going to use when you ll be a master in tdd\n')

vimeo	youtube---------------------------------------------------

direct3d	direct2d---------------------------------------------------

engineyard	heroku---------------------------------------------------

titan	neo4j---------------------------------------------------

opcache	apc---------------------------------------------------

m2e	maven---------------------------------------------------

droppable	draggable---------------------------------------------------

div smaller bigger
('droppable', 'smaller', 'draggable', '2542137', 'but i have a problem dragging to a droppable that is smaller than the draggable\n')
('draggable', 'smaller', 'droppable', '10540768', 'when i made dimension of draggable div smaller than droppable div then drop event triggered successfully\n')
('draggable', 'smaller', 'droppable', '27011078', 'and the size of the draggable div s should be smaller than the droppable div so that they fit in the droppable container\n')
('draggable', 'smaller', 'droppable', '26960332', 'p.s this will only work if the draggable is smaller than droppable which is true in this case\n')
('draggable', 'bigger', 'droppable', '13497941', 'it seems like the draggable element including the margin is bigger than the droppable element and therefore the dropped status is set although the element does not seems to touch the upper droppable yet\n')
('draggable', 'wider', 'droppable', '27007444', 'this means that your draggable is the full width of the container which is much wider than the droppable and thus can t possibly intersect by 50\n')
('draggable', 'bigger', 'droppable', '45547144', 'i have a draggable parent element ice cream wrapper which is bigger than the droppable one teeth\n')
('droppable', 'larger', 'draggable', '34833594', 'i was able to remove the unwanted behavior described above by turning the droppable into the parent of the element and added a margin padding that is slightly larger than the draggable snaptolerance\n')
('droppable', 'smaller', 'draggable', '25034752', 'perhaps you find it strange since the target droppable s size is much smaller than the draggable\n')
('draggable', 'larger', 'droppable', '18637463', 'when the draggable item is larger than the droppable div for some reason it will always place the appointment in the droppable div box that is directly below the one i am targetting\n')
('droppable', 'more', 'draggable', '30317834', 'how can i make the two droppable div s to not accept more than one draggable elements\n')
('draggable', 'bigger', 'droppable', '28878211', 'apparently the draggable li element is bigger than the droppable div because the li is block size and the div has a 150px width\n')
('draggable', 'bigger', 'droppable', '2985713', 'the draggable div is 3 times bigger than one droppable\n')
('draggable', 'bigger', 'droppable', '25034752', 'this overlap is somewhat forced when the draggable is bigger than the droppable\n')
('draggable', 'more', 'droppable', '11937386', 'it s just a hunch but maybe it s only a matter of the size of your draggable being too big and being over more than one droppable item\n')
('droppable', 'more', 'draggable', '3948447', 'how can i make the droppable to not accept more than one draggable div\n')

set z-index area
('droppable', 'less', 'draggable', '26004165', 'i can make this work if the z-index of the droppable is less than the container but then you can t see where the draggable is since it s hidden behind the container\n')
('draggable', 'higher z-index', 'droppable', '21300419', 'for draggable set higher z-index than droppable so that draggable will always be visible over droppable\n')
('draggable', 'less', 'droppable', '20673571', 'alternatively you could set a width on your draggable which is less than twice the width of your droppable area or combine a set width with one of the above options for a better user experience\n')

point item element
('droppable', 'more', 'draggable', '12739978', 'the problem you outlined is that the droppable is allowing more than 1 draggable item to be placed inside of it\n')
('draggable', 'more', 'droppable', '37350176', 'the draggable is covering more than one droppable element and at this point there are multiple event.target.id s being covered\n')

fractions	integer---------------------------------------------------

mantissa larger number
('fractions', 'larger', 'integer', '85416', 'if the number of bits in the mantissa or fractions is larger than the number of bits in your integer type then you ll possibly lose precision when someone types in a number such as\n')
('integer', 'part bigger then', 'fractions', '39567909', 'i know there are not that many mantissa bits for fractions part for bigger numbers but you did not specify which floating data-type you are using if 32 64 80 128 256 bits or more so hard to say and if the integer part is bigger then your integral data-type used to cut off the non fractions part then you would be in trouble with f-long f\n')

zsh	bash---------------------------------------------------

okhttp	httpclient---------------------------------------------------

koa	express---------------------------------------------------

noexcept	throw---------------------------------------------------

bundler	rvm---------------------------------------------------

max	rank---------------------------------------------------

time larger new
('rank', 'larger number', 'max', '30495806', 'every time a rank finds a larger number than that stored have it send its new max to the root rank\n')
('rank', 'lower', 'max', '24588036', 'if no rank is lower than its number there are no gaps in the table the query returns the max number + 1\n')

declarative	imperative---------------------------------------------------

simpler cleaner business
('declarative', 'simpler', 'imperative', '19199806', 'declarative programming is not always simpler than imperative programming\n')
('declarative', 'way cleaner', 'imperative', '21401916', 'i know that declarative way is cleaner but sometimes imperative programming makes your business safer\n')

dill	pickle---------------------------------------------------

problems serialization support
('dill', 'better serialization', 'pickle', '31962272', 'i think you can do exactly what you want with dill which provides better serialization than pickle\n')
('pickle', 'better', 'dill', '32838740', 'cloudpickle might be a good idea for your problem as well it has better support in pickling objects than pickle not per see better than dill and you can pickle code easily as well\n')
('dill', 'better job', 'pickle', '43642444', 'modules such as dill are doing a better job than pickle\n')
('dill', 'better', 'pickle', '28639107', 'i searched a bit and found that dill can perform better than pickle with classes but i am having problems to implement it\n')

jscript	vbscript---------------------------------------------------

suggest scripting use
('vbscript', 'much more', 'jscript', '35567873', '...i suggest doing all of the scripting from within the vbscript file and avoiding the use of .cmd .bat files completely if you can as vbscript is much more readable and powerful though i prefer using the jscript language instead but that s just me\n')
('jscript', 'simpler', 'vbscript', '23531981', 'the inclusion of jscript code into a batch file is simpler than vbscript and the translation of a small code segment from vbs to jscript is not problematic\n')

vhdl	verilog---------------------------------------------------

hex	binary---------------------------------------------------

digit convenient 0-f
('hex', 'more convenient', 'binary', '45780733', 'as others have pointed out hex is much more convenient than binary anyway - you just need to remember how each of the hex digit 0-f looks in binary and replace groups of 4 bits with a single hex digit\n')
('binary', 'even simpler', 'hex', '12081779', 'the conversion from hex to binary is even simpler since you can simply expand each hex digit into the corresponding binary for example 0xa4 - 1010 0100\n')

representation decimal usability
('hex', 'representation better way', 'binary', '484066', 'it seems the from a readability and usability standpoint the hex representation is a better way of defining binary numbers\n')
('hex', 'faster', 'binary', '34334729', 'this is still accepted by calls like inet_addr and has several advantages all fields are fixed width there are only 8 characters to update and the binary to hex conversion is usually faster than binary to decimal\n')
('hex', 'more', 'binary', '12081888', 'converting between decimal and hex is more involving and at least to me it s been easier if i have to do it in my head to first convert the decimal into binary representation and then the binary number into hex\n')

important alot shorter
('hex', 'easier', 'binary', '23532067', 'but when anyone human looks at it they look at it in hex using a hex editor which is much easier than reading binary\n')
('hex', 'alot shorter', 'binary', '16513841', 'one important reason is because hex is alot shorter and easier to read than binary is for humans\n')

readable data dump
('hex', 'somewhat more', 'binary', '1712946', 'hex is somewhat more readable than binary if i happen to be loading a data dump in a text editor etc\n')
('hex', 'much more readable', 'binary', '21578250', 'and because hex is much more readable and useful than binary - it s often used and shown\n')

modulo	subtraction---------------------------------------------------

scapy	dpkt---------------------------------------------------

flac	wav---------------------------------------------------

comment better ogg
('flac', 'better', 'wav', '45417810', 'regearding your comment i also know that it can deal with flac better than wav and ogg that is not really the case\n')
('flac', 'better', 'wav', '45383521', 'i also know that it can deal with flac better than wav and ogg\n')

next	except---------------------------------------------------

ceiling number amount
('next', 'digit greater', 'except', '23263562', 'for such numbers as 54321 the else statement will be executed never because any next digit is greater than max1 except the first two digits\n')
('except', 'greater', 'next', '10924146', 'now i would like to take the ceiling of this number except in cases where the amount it is greater than the next lower integer is smaller than some epsilon\n')

installation	upgrade---------------------------------------------------

realloc	malloc---------------------------------------------------

faster memcpy memory
('realloc', 'more memory', 'malloc', '4190023', 'that s why realloc can temporarily require more memory than a malloc free pair\n')
('realloc', 'faster', 'malloc', '3108761', 'a realloc can occur significantly faster than a malloc memcpy and free\n')

velocity	freemarker---------------------------------------------------

scikit-learn	nltk---------------------------------------------------

inherited	subclassing---------------------------------------------------

ireadwrite implements base
('subclassing', 'more', 'inherited', '1331150', 'since ireadwrite implements ireadonly ireadwrite is said to be a subclassing of ireadonly although subclassing is more accurately used to describe a class which inherited a base class rather then implements an interface--for the sake of simplicity they are very nearly the same concept\n')
('subclassing', 'trickier', 'inherited', '12945925', 'with subclassing is trickier because any private members of a class are not inherited by the subclassing but protected and public are\n')

android-query	picasso---------------------------------------------------

max	percentile---------------------------------------------------

jackson	org.json---------------------------------------------------

svn	cvs---------------------------------------------------

areas work git
('svn', 'better', 'cvs', '161216', 'svn was supposed to be better than cvs but in some areas that didn t work well\n')
('svn', 'better', 'cvs', '160037', 'svn is better than cvs because it was designed to be - it s roughly the same thing with some simplications and new features\n')
('svn', 'better', 'cvs', '1589215', 'svn in much better than cvs and have lot of mature tools for every platform\n')
('svn', 'better', 'cvs', '1397047', 'if you use svn then it still okay because svn handles binary files much better than cvs\n')
('svn', 'much better', 'cvs', '10859451', 'svn is much better then cvs and git or mercurial are even better again\n')
('svn', 'better', 'cvs', '159971', 'svn is better than cvs\n')
('svn', 'better', 'cvs', '245323', 'that being said i think svn is better in every other respect and you probably shouldn t start a new project with cvs\n')

conda	virtualenv---------------------------------------------------

anaconda alternative packages
('conda', 'better alternative', 'virtualenv', '26663944', 'if you are using anaconda conda is a better alternative to virtualenv as it manages conda packages which are not limited to just python packages\n')
('conda', 'better', 'virtualenv', '20567658', 'an additional bonus i find that conda works better as a package manager than virtualenv\n')

websphere	ibm---------------------------------------------------

wav	mp3---------------------------------------------------

files larger additional
('mp3', 'smaller', 'wav', '23678277', 'if you are still having problems jdk 8 has the ability to play mp3 files which are significantly smaller than wav you may want to try this\n')
('wav', 'larger', 'mp3', '44531357', 'wav files are about 3 times larger than mp3 files so it would need 1.8gb additional space to do the conversion\n')
('mp3', 'smaller', 'wav', '44688938', 'you should definitely pick mp3 because they are about 10x smaller than wav files of the same duration\n')
('wav', 'smaller', 'mp3', '43825846', 'ok i am new to audio with unity but despite reading all the unity posts regarding audio adding 2 short .wav clips i heard wav was smaller than mp3 to my app has added over 200mb\n')
('mp3', 'much smaller', 'wav', '7596704', 'i understand that mp3 is much smaller but it has worst audio quality when is compared to wav files\n')

uncompressed pcm data
('wav', 'file much easier', 'mp3', '1427191', 'either way applying gain and or attenuation to time-domain sample data as in a wav file is much easier than trying to apply these effects to frequency-domain data as in an mp3 file\n')
('wav', 'better', 'mp3', '1628241', 'if you ask if a uncompressed wav which contains pcm data is better than mp3 then yes but the question sometimes is how much this better really matters to the human ear and how much postprocessing you have to perform on that data\n')

qhash	qmap---------------------------------------------------

values lookups faster
('qhash', 'faster', 'qmap', '7123723', 'qhash is faster but qmap values are sorted by key if you iterate through them\n')
('qhash', 'faster lookups', 'qmap', '8907753', 'qhash provides faster lookups than qmap\n')

pyquery	beautifulsoup---------------------------------------------------

division	subtraction---------------------------------------------------

reduction optimization stronger
('division', 'stronger', 'subtraction', '47150236', 'this is called a strength reduction optimization because division is stronger slower more expensive than subtraction\n')
('subtraction', 'weaker', 'division', '39379901', 'this is called a strength reduction operation because subtraction is a weaker and cheaper operation than division\n')
('division', 'operation tighter', 'subtraction', '20687808', 'the division operation binds tighter than i.e is evaluated ahead of the subtraction so you are taking a square root of a negative number\n')
('subtraction', 'slower', 'division', '3704402', 'this platform is probably not representative of your microcontroller but the test shows that on this platform the subtraction is considerably slower than the division\n')
('division', 'slower', 'subtraction', '21475774', 'i am a bit suspicious of the performance because modulo tends to use division which is slower than your subtraction operations\n')

operator higher preference
('division', 'operator higher precedence', 'subtraction', '3423368', 'because the division operator has higher precedence than subtraction\n')
('division', 'operator higher precedence', 'subtraction', '7851837', 'that s because the division operator has a higher precedence than the subtraction operator -\n')
('division', 'operator higher', 'subtraction', '36193506', 'this is because division operator has higher preference than the subtraction operator - in the first example you use are not using brackets therefore division takes place first you can change your code to\n')
('division', 'higher precedence', 'subtraction', '29579783', 'division has higher precedence than subtraction\n')
('division', 'operator higher precedence', 'subtraction', '37897197', 'doesn t get evaluated the way you are expecting the division operator has higher precedence than the subtraction operator\n')
('division', 'greater precedence', 'subtraction', '19693646', 'i don t think they have a natural precedence unlike say multiplication and division being of greater precedence than subtraction and addition because they can be built from subtraction and addition\n')
('division', 'higher precedence', 'subtraction', '41697652', 'remember multiplication division and remainder operators are all higher precedence than subtraction\n')
('division', 'higher precedence', 'subtraction', '6851760', 'in this case division has higher precedence than subtraction parenthesis around the division or not\n')
('division', 'higher', 'subtraction', '13190071', 'division has higher precedence than subtraction so in the first two examples only the second number is being divided\n')
('division', 'greater precedence', 'subtraction', '34893808', 'in this since division has greater precedence than subtraction therefore x 10 will execute first and here we are dividing two int irrespective of the fact that the variable where final answer is stored is a double so answer will be an int i.e 5 10 0 and then subtraction of an int and double will be done here int will be promoted to a double\n')
('division', 'higher precedence', 'subtraction', '14438062', 'without parentheses math.exp c b is executed first as division has higher precedence than subtraction -\n')

dexterity	archetypes---------------------------------------------------

oncreate	onstart---------------------------------------------------

tree	trie---------------------------------------------------

efficient ternary sort
('trie', 'more', 'tree', '15458289', 'most likely a trie is more efficient and you didn t sort your dictionary and it doesn t use a binary tree or ternary tree\n')
('trie', 'substantially more', 'tree', '10970637', 'for cases where each node in the trie has most of its children used the trie is substantially more space efficient and time efficient than th ternary search tree\n')

better kind thing
('tree', 'more similar', 'trie', '5347445', 'recursive is usually used for traversal and binary search tree but this tree is more similar to trie of only 2 character in alphabet\n')
('trie', 'better', 'tree', '3596741', 'a trie is better than a binary search tree for searching elements\n')
('trie', 'better', 'tree', '5953369', 'a trie is better suited to this kind of thing because it lets you store your symbols as a tree and quickly parse it to match values or reject them\n')
('trie', 'better binary', 'tree', '38671242', 'the article says that a trie is better than binary tree as for a string of length m for trie it takes o m time and for binary tree it takes o m logn time\n')

suffix advanced substrings
('tree', 'less', 'trie', '34732260', 'a suffix tree has less dummy nodes than the suffix trie\n')
('tree', 'more', 'trie', '402806', 'a suffix tree is more or less an advanced trie here you can also search for any substrings in o c as for the trie\n')

16-bit	64bit---------------------------------------------------

systems wide larger
('16-bit', 'no longer', '64bit', '6388799', 'most machines now end up with sizeof int sizeof long because 16-bit is no longer convenient but we have long long to get 64bit if needed\n')
('64bit', 'larger range', '16-bit', '35725586', 'on today s desktop systems an int is usually 32 or 64bit wide for a correspondingly much larger range than the 16-bit 32767 32768 you are talking of\n')
('64bit', 'greater', '16-bit', '28664552', 'how many chars you can pack into it depends on the size of int which varies across platforms typically one of 16 32 or 64bit but it could be anything else greater than 16-bit\n')

memset	calloc---------------------------------------------------

certain conditions malloc
('memset', 'slower', 'calloc', '17898722', 'see also why malloc + memset is slower than calloc\n')
('memset', 'slower', 'calloc', '16536738', 'malloc + memset is slower than calloc under certain conditions\n')
('memset', 'slower', 'calloc', '2688466', 'my question is why is malloc + memset so much slower than calloc\n')

multiplication	division---------------------------------------------------

faster slower integer
('multiplication', 'much faster', 'division', '34966700', 'i picked c 1 1 8 for this example simply because it is exact in ieee-754 floating-point representation and typically multiplication is much faster than division\n')
('division', 'slower', 'multiplication', '42840878', 'both works but division is generally slower than multiplication\n')
('division', 'slower', 'multiplication', '14094072', 'is it possible that the division is six times slower than multiplication and\n')
('division', 'slower', 'multiplication', '9714461', 'and division may be slower than multiplication or may still be fast\n')
('multiplication', 'faster', 'division', '899887', 'multiplication is faster than division so the second method is faster\n')
('division', 'faster', 'multiplication', '7730288', 'division is about 20 faster than multiplication\n')
('multiplication', 'faster', 'division', '26656329', 'in usual programming practice one wouldn t bother and simply multiplying by the floating-point representation of 180 ï because multiplication is so much faster than division\n')
('division', 'slower', 'multiplication', '655581', 'division algorithms are slower than multiplication algorithms in most cases\n')
('division', 'slower', 'multiplication', '7459618', 'yes division is usually much slower than multiplication\n')
('multiplication', 'faster', 'division', '4143288', 'similar to pmg s solution but still faster because multiplication is faster than division -\n')
('division', 'slower', 'multiplication', '1643009', 'the tostring should be slower than parse since division is generally slower than multiplication\n')
('division', 'faster', 'multiplication', '22956226', 'therefore i conclude that division is faster than multiplication\n')
('multiplication', 'faster', 'division', '16212577', 'this because 1 x is simpler than y x and multiplication is faster than division\n')
('multiplication', 'faster', 'division', '7720907', 'multiplication is usually significantly faster than division\n')
('multiplication', 'faster then', 'division', '32910219', 'i would also suggest to replace terms like a l1 0.3e1 with as multiplication is faster then division\n')
('division', 'slower operation', 'multiplication', '4125154', 'division is inherently a much slower operation than multiplication\n')
('multiplication', 'faster', 'division', '226515', 'multiplication is faster division is more accurate\n')
('multiplication', 'faster', 'division', '29745183', 'since you re resizing the window make sure to assign the w and h values not as numbers but as products or dynamic numbers multiplication is faster than division but you can also use division\n')
('multiplication', 'faster', 'division', '980962', 'on many processors integer multiplication is faster than integer division\n')
('multiplication', 'faster', 'division', '899929', 'if the latter yes floating point multiplication is generally faster than division\n')
('multiplication', 'faster', 'division', '41185802', 'as to why multiplication is faster than division and when the divisor is fixed this is a faster route\n')
('division', 'much slower', 'multiplication', '36077485', 'i found out that integer division is much slower than multiplication unfortunately\n')
('multiplication', 'faster', 'division', '836856', 'also addition is faster than multiplication and multiplication is faster than division\n')
('division', 'slower', 'multiplication', '24249023', 'because division is often much slower than multiplication if performance is critical you might keep a table with powers of ten and their reciprocals\n')
('multiplication', 'typically faster', 'division', '13771806', 'i used multiplication for both operations because multiplication is typically faster than division\n')
('division', 'generally longer', 'multiplication', '2652547', 'it s just as fast as going the opposite direction if not faster given that division generally takes longer than multiplication\n')
('division', 'slower', 'multiplication', '35506226', 'division is slower than multiplication due to some reasons\n')
('multiplication', 'typically faster', 'division', '21188088', 'the compiler or the jit is likely to convert the first case to the second anyway since multiplication is typically faster than division\n')
('division', 'slower', 'multiplication', '38857588', 'in all other cases division appears to be several times slower than multiplication\n')
('division', 'slower', 'multiplication', '506241', 'division is per se slower than multiplication however i don t know the details\n')
('division', 'slower', 'multiplication', '8776073', 'division is about 10 times slower than multiplication\n')
('multiplication', 'faster', 'division', '31618399', 'multiplication is usually faster than division\n')
('multiplication', 'faster', 'division', '17883577', 'multiplication is faster than division\n')
('division', 'faster', 'multiplication', '39174057', 'division is faster for unint8 than multiplication in your case\n')
('division', 'slower', 'multiplication', '15745819', 'but i wonder why is division actually slower than multiplication\n')
('multiplication', 'far easier', 'division', '1917713', 'multiplication is far easier and faster for a cpu to do than division\n')
('multiplication', 'faster', 'division', '7935724', 'first of all multiplication is faster than division\n')
('multiplication', 'faster', 'division', '22488897', 'multiplication is much faster than division\n')
('multiplication', 'faster integer', 'division', '23965963', 'according to this author integer multiplication can be 40 times faster than integer division\n')
('multiplication', 'faster', 'division', '1135698', 'integer multiplication is much faster than division\n')
('multiplication', 'faster', 'division', '3851309', 'as hroptatyr mentioned the multiplication is quite fast and it s much faster than division\n')
('multiplication', 'vastly faster', 'division', '5459132', 'in many processors integer multiplication is vastly faster than integer division\n')
('multiplication', 'faster', 'division', '8658217', 'for the division-to-multiplication case you are assuming that multiplication is faster than division\n')

modern cpus fast
('division', 'slower float', 'multiplication', '31031223', 'on modern processors float division is a good order of magnitude slower than float multiplication when measured by reciprocal throughput\n')
('division', 'slower', 'multiplication', '436535', 'can be fast or it can be awfully slow even if division is done entirely in hardware if it is done using a div instruction this instruction is about 3 to 4 times slower than a multiplication on modern cpus\n')
('division', 'heavier', 'multiplication', '9939568', 'division may be heavier than multiplication but a commenter pointed out that reciprocals are just as fast as multiplication on modern cpus in which case this isn t correct for your case so if you do have 1 x appearing somewhere inside a loop and more than once you can assist by caching the result inside the loop and then using y\n')

worse addition latency
('division', 'harder', 'multiplication', '1117702', 'if you think back to grade school you ll recall that multiplication was harder than addition and division was harder than multiplication\n')
('division', 'worse', 'multiplication', '37236595', 'formally it means division cannot have a complexity worse than multiplication\n')
('division', 'worse latency', 'multiplication', '45899202', 'division has worse latency than multiplication or addition by a factor of 2 to 4 on modern x86 cpus and worse throughput by a factor of 6 to 40\n')

expensive cost someone
('division', 'more expensive', 'multiplication', '7147370', 'division is a lot more expensive than multiplication\n')
('multiplication', 'less expensive', 'division', '1735122', 'multiplication is less expensive than division so\n')
('division', 'more expensive', 'multiplication', '11481394', 'is division more expensive than multiplication in c++\n')
('division', 'more expensive', 'multiplication', '23577263', 'the reason for doing so is to reduce hardware cost as division is more expensive than multiplication\n')
('division', 'much more', 'multiplication', '22522575', 'division is much more expensive than multiplication\n')
('division', 'much more costly', 'multiplication', '26490416', 'knowing that a division is much more costly than a multiplication\n')
('division', 'more expensive', 'multiplication', '8886384', 'division is always much more expensive than multiplication\n')
('division', 'always more expensive', 'multiplication', '40280506', 'recently someone suggested to me that division is always more expensive than multiplication\n')
('division', 'more', 'multiplication', '4109348', 'division is more expensive than multiplication\n')

integer gap relative
('division', 'slower', 'multiplication', '27709697', 'hardware integer division is always slower than multiplication and the gap in the relative latencies of these instructions continues to widen\n')
('division', 'slower', 'multiplication', '4362064', 'the reason to do this is because even though there is an integer division instruction div idiv in the instruction set it s typically very slow several times slower than multiplication\n')

higher precedence i.e
('multiplication', 'more', 'division', '35845566', 'thus python should interpret this like 12 2 i.e 6 since precedence of multiplication is more than division\n')
('multiplication', 'higher presedence', 'division', '21060979', 'i read that multiplication has has higher presedence than division\n')
('multiplication', 'higher precedence', 'division', '40372189', 'in some of the academic literature implied multiplication is interpreted as having higher precedence than division\n')
('multiplication', 'higher precedence', 'division', '42255570', 'does multiplication has higher precedence over division or it is other way round\n')
('multiplication', 'higher precedence', 'division', '46323336', 'since multiplication is of higher precedence than division\n')
('multiplication', 'higher precedence', 'division', '34242369', 'multiplication has higher precedence than division\n')

expensive one number
('division', 'usually more expensive', 'multiplication', '42193080', 'in the code we calculate 1.0 sum .. because a division usually is more expensive than a multiplication and thus can gain some efficiency with that\n')
('division', 'more', 'multiplication', '22648785', 'however in general one could expect that a division is a more expensive operation than a multiplication\n')
('division', 'more expensive', 'multiplication', '26052472', 'division is one of a number of operations which as far as computational complexity theory is concerned are no more expensive than multiplication\n')

constant compiler expensive
('division', 'more expensive', 'multiplication', '36160101', 'it will be much slower i don t have benchmarks but i would guess at least an order of magnitude maybe more decimal will not benefit from any hardware acceleration and arithmetic on it will require relatively expensive multiplication division by powers of 10 which is far more expensive than multiplication and dividion by powers of 2 to match the exponent before addition subtraction and to bring the exponent back into range after multiplication division\n')
('division', 'normally more expensive', 'multiplication', '33186030', 'this solution has the disadvantage that if the other factor is not constant the compiler and you can t reasonably avoid the division int_max n to be done at runtime and division is normally more expensive than multiplication\n')
('division', 'more expensive', 'multiplication', '12977120', 'usually division is a lot more expensive than multiplication but a smart compiler will often convert division by a compile-time constant to a multiplication anyway\n')
('multiplication', 'faster', 'division', '9113669', 'most optimizing c compilers optimize it out to a multiplication operation which is much faster than division it can be done only if the divisor is constant though\n')

slower operations support
('division', 'slower', 'multiplication', '7554853', 'on many machines particularly those without hardware support for division division is a slower operation than multiplication so this approach can yield a considerable speedup\n')
('multiplication', 'slower hardware', 'division', '436535', 'you always need to know the magic number here 0xaaaaaaab and the correct operations after the multiplication shifts and or additions in most cases and both is different depending on the number you want to divide by and both take too much cpu time to calculate them on the fly that would be slower than hardware division\n')
('division', 'typically slower', 'multiplication', '21566325', 'removing division operations by passing through the inverse into the shader is another useful tip as division is typically slower than multiplication\n')

fewer cycles means
('multiplication', 'usually fewer', 'division', '17883291', 'floating point multiplication usually takes fewer cycles than floating point division\n')
('division', 'many more clock', 'multiplication', '35689883', 'it is common knowledge that division takes many more clock cycles to compute than multiplication\n')
('multiplication', 'fewer', 'division', '40599466', 'it has to do with the fact that multiplication is itself done by means of binary shifts and additions - far fewer than with division\n')

line time multiple
('division', 'more time', 'multiplication', '21610045', 'i have heard division takes more time then multiplication but beyond that i could not determine whether writing this in one line or multiple assignment lines was more efficient\n')
('multiplication', 'cheaper', 'division', '15817184', 'following advise i received multiplication is cheaper than division i revised one code line and interestingly enough 71.2 dropped to 1.7 but the if statement just below shot up to 64.8 â i just don t get it\n')

usb	bluetooth---------------------------------------------------

commands useful slower
('usb', 'connection sometimes easier', 'bluetooth', '13684470', 'it depends on your requirements but setting up a usb connection is sometimes easier than managing a bluetooth connection\n')
('bluetooth', 'slower', 'usb', '23259073', 'i had previously sent those commands via bluetooth but the connection fails too often to be useful and is slower than usb\n')

jython	pypy---------------------------------------------------

unpredictableâ recent benchmark
('jython', 'more unpredictableâ', 'pypy', '29966745', 'jython is more unpredictableâ sometimes almost as fast as pypy sometimes much slower than cpython\n')
('jython', 'slower', 'pypy', '7793515', 'here is a recent benchmark of jython 2.5.2 running on jvm 7 where jython is slower than pypy but faster than cpython\n')

snappy	lzo---------------------------------------------------

decompression big files
('snappy', 'faster', 'lzo', '15693524', 'snappy also consistently decompresses 20 + faster than lzo which is a pretty big win if you want it for files you re reading a lot over hadoop\n')
('snappy', 'faster', 'lzo', '32381774', 'snappy is also significantly faster than lzo for decompression\n')

x86	64bit---------------------------------------------------

x86_64 platform width
('64bit', 'faster 32-bit', 'x86', '6284598', '64bit amd and later intel machines run faster than 32-bit x86 machines because when amd designed the new instruction set they added more cpu registers and made sse math the default\n')
('64bit', 'platform much more', 'x86', '45279374', 'the x86_64 64bit platform is much more than twice the width of the x86 32-bit\n')

slower 32bits faster
('x86', 'slower', '64bit', '12665633', 'faster than on x86 32bits but slower than x64 64bit\n')
('64bit', 'slower', 'x86', '5607953', '64bit code is not actually faster it is usually a bit slower than x86 code\n')

nvidia	ati---------------------------------------------------

tools rendermonkey faster
('nvidia', 'way better tools', 'ati', '5682205', 'the reason i ask is that it seems like nvidia has way better tools and ati seems to have cancelled rendermonkey\n')
('ati', 'better', 'nvidia', '7099300', 'ati might be a better between nvidia and ati since it was reportedly faster in 2009 but i m not sure if those stats are still correct\n')

timsort	quicksort---------------------------------------------------

distinct	union---------------------------------------------------

note rows outer
('distinct', 'faster', 'union', '3877976', 'i am currently using union all and a distinct in the outer query as this proved much faster than using union s for the uniqueness of data\n')
('union', 'faster', 'distinct', '22829159', 'a side note since you want all rows using union all is faster since it does not need to perform a distinct to eliminate duplicates\n')

slower de-dupping tables
('union', 'faster', 'distinct', '3634389', 'however the tables are huge and the union all i read its faster than distinct takes forever to execute even with just two tables let alone 6\n')
('distinct', 'slower', 'union', '1804853', 'keep in mind that union will return a distinct list - duplicates will be removed but it will perform slower than using union all which will not remove duplicates\n')
('distinct', 'slower', 'union', '31622091', 'union distinct is slower than union all but you may need it for de-dupping.\n')
('union', 'faster', 'distinct', '43636244', 'union all is generally faster than using distinct or grouping\n')

inherited	properties---------------------------------------------------

model individual base
('properties', 'better choice', 'inherited', '23018184', 'since the paddle object has properties that are shared by both player and enemy composition is a better choice than inherited\n')
('inherited', 'better', 'properties', '35690134', 'potentially you are trying to model something in inherited that is better suited for composition or your base class should be taking in an object instead of individual related properties if the properties aren t related then perhaps your base class is doing too much single responsibility principle\n')
('inherited', 'better nesting', 'properties', '1287890', 'less is a css extension that enables reuse and encapsulation of values color values for instance improves inherited allows a better nesting of related properties and operations also\n')

pbkdf2	hash---------------------------------------------------

fadein	fadeout---------------------------------------------------

issues shorter animation
('fadein', 'longer', 'fadeout', '2165425', 'more detail set the amount of time the animation will take for fadeout and use a delay for the fadein animation that is longer than the fadeout animation time\n')
('fadeout', 'shorter', 'fadein', '20388866', 'otherwise you will run into issues of trying to fadein and fadeout at the same time if your delay is shorter than your fadein\n')

tcmalloc	glibc---------------------------------------------------

available faster malloc
('tcmalloc', 'faster', 'glibc', '15452794', 'tcmalloc is faster than the glibc 2.3 malloc available as a separate library called ptmalloc2 and other malloc s that i have tested\n')
('tcmalloc', 'faster', 'glibc', '5742204', 'tcmalloc is faster than the glibc 2.3 malloc.\n')

mouseover	mouseout---------------------------------------------------

hash	salt---------------------------------------------------

harder crypt brute
('salt', 'not more secure', 'hash', '8646455', 'so when i see that the salt is stored in the hash password and that you use that hash password as salt i think crypt + salt is not more secure against a brute force on output hackers who managed to steal hash passwords\n')
('hash', 'harder', 'salt', '19884074', 'i don t know how safe could it be and how difficult is for the hacker to determinate the technique i use the thing is that the result has the same length as the hash and is harder to determinate a salt so if for any reason in the history hacker uses a rainbow table and catches a probable result it will be the wrong\n')
('hash', 'harder especially', 'salt', '7003476', 'most attacks involve generating hash for common passwords so for reasonably complicated passwords it becomes harder especially with salt some people use usernames as salt others use randomly generated numbers\n')

situation credentials hands
('salt', 'more', 'hash', '31641520', 'in this situation storing password hash and the salt is more secure than storing the credentials encrypted or not because an attacker would have no way of getting the password back even if he manages to get his hands on both the hash and the salt\n')
('salt', 'passwords more', 'hash', '4269273', 'i get the impression that most people think that hashing salt passwords is the more secure way of handling passwords but i can t figure out a way to comply with current company operations when using hash passwords\n')

data longer string
('salt', 'trimmed', 'hash', '15396796', 'example the salt field might only allow a 64 characters while the generated salt might be longer therefore when you save the salt it gets trimmed which ultimately changes the hash password\n')
('hash', 'much larger', 'salt', '28201502', 'likely not as cheap as xor against n values but seems like there s possibility for better quality results at a minimal extra cost especially if the data being hash is much larger than the salt value\n')
('salt', 'nothing more', 'hash', '12807370', 'this salt is nothing more than a random arbitrary string that you concatenate to the passwords and it will make your hash password unique\n')
('hash', 'longer', 'salt', '482268', 'you can safely store the salt in the db because working out a string from its hash is just as hard when you know some of the string as it is when you know none of it provided the password itself is longer than the salt and long enough and strong enough to take a long time to crack by brute force at least 6 chars with at least one case change and a number or non-alphanumeric i d say\n')
('salt', 'probably faster', 'hash', '4834231', 'you ll probably need to get data anyway so the unique salt is probably faster too because you won t need to calculate the hash over username\n')

ilist	ienumerable---------------------------------------------------

functions specific
('ienumerable', 'less specific', 'ilist', '5213886', 'an ienumerable is less specific than an ilist\n')
('ienumerable', 'less', 'ilist', '17761596', 'ienumerable is less specific than ilist\n')
('ienumerable', 'less specific', 'ilist', '3180672', 'ienumerable is less specific than an ilist that is ilist has functions that ienumerable does not\n')

moles	typemock---------------------------------------------------

self	super---------------------------------------------------

setter	getter---------------------------------------------------

atom-editor	sublimetext---------------------------------------------------

ubuntu	debian---------------------------------------------------

smaller recent wheezy
('debian', 'more recent', 'ubuntu', '20931360', 'i m in debian wheezy which is much more recent than ubuntu 10.04\n')
('ubuntu', 'smaller', 'debian', '29638668', 'i believe ubuntu is smaller debian wheezy smaller still or even alpine for tiny start point\n')

illegalargumentexception	nullpointerexception---------------------------------------------------

glassfish	jboss---------------------------------------------------

j2ee server afaik
('glassfish', 'better j2ee', 'jboss', '283405', 'i think glassfish is a better j2ee app server to start with than jboss\n')
('jboss', 'much more', 'glassfish', '3025706', 'afaik jboss is much more adopted in production deployments than glassfish but this doesn t necessarily mean it s better\n')

d3.js	protovis---------------------------------------------------

kohana	codeigniter---------------------------------------------------

strdup	malloc---------------------------------------------------

nginx	apache---------------------------------------------------

faster static assets
('nginx', 'faster', 'apache', '1315178', 'for example nginx is much faster than apache\n')
('nginx', 'faster', 'apache', '37012428', 'nginx is typically faster than apache but with a low request server it hardly matters\n')
('nginx', 'better', 'apache', '24360855', 'i want to move to nginx since it s better than apache\n')
('nginx', 'faster', 'apache', '35488326', 'i read that nginx is faster than apache and i want to try it with some of the projects and leave the others with apache\n')
('apache', 'faster', 'nginx', '8103931', 'paradoxally it does not mean that apache is faster than nginx it just means that on 1 2 3 .\n')
('nginx', 'better', 'apache', '15646087', 'also what makes nginx better than apache in this case\n')
('nginx', 'faster', 'apache', '25406562', 'nginx is faster than apache and the configuration is easier\n')
('nginx', 'faster', 'apache', '43186862', 'i have recently read that nginx is faster than apache\n')
('nginx', 'faster', 'apache', '27358402', 'nginx â without any optimizations done â is much faster than apache\n')
('apache', 'easier', 'nginx', '38941986', 'for me apache is easier to use but i prefer nginx as it is much faster\n')
('nginx', 'faster', 'apache', '8268449', 'very fast static assets nginx is faster than apache at serving static assets css js images ... and uses very little memory to do so\n')
('nginx', 'much faster', 'apache', '14473134', 'i am not an expert in deployment but in my experience nginx is much faster and more friendly to django compared to apache\n')
('nginx', 'faster', 'apache', '11217047', 'nginx works great by itself and will likely be much faster than apache\n')
('nginx', 'faster', 'apache', '15748792', 'and finally from my experience nginx is faster than apache\n')
('nginx', 'faster', 'apache', '535933', 'not only is nginx supposedly faster than apache at delivering static content but this also offloads your rails application for every image stylesheet javascript or whatever other static content\n')
('apache', 'more popular', 'nginx', '4113570', 'apache is more popular and has more features nginx is smaller and faster and has less features\n')
('nginx', 'faster', 'apache', '4109998', 'nginx will definitely work faster than apache\n')
('apache', 'slower', 'nginx', '45766594', 'i would really like not to run both apache and nginx i did switch everything to apache yet found it loaded my proxies slower than nginx\n')
('nginx', 'faster', 'apache', '32964547', 'for example nginx is considered faster than apache and a nodejs application is considered faster than a php application\n')
('nginx', 'faster', 'apache', '13451844', 'you can serve it from for example nginx varnish which are usually faster than apache\n')
('nginx', 'still faster', 'apache', '23170094', 'nginx is still faster and i might choose it but apache isn t asleep\n')
('nginx', 'better', 'apache', '44707193', 'how can nginx performs better than apache\n')
('nginx', 'faster', 'apache', '19810803', 'nginx is faster than apache handles slow clients better and is generally easier to use\n')

long polling request
('nginx', 'better', 'apache', '2014241', 'nginx also happens to be better than apache at writing logfiles interestingly\n')
('nginx', 'better', 'apache', '6021813', 'why nginx might be better than apache when one is long polling and why long polling is better than periodically polling a server\n')
('nginx', 'easier', 'apache', '35685489', 'nginx can be configured to only respond to requests matching a predefined pattern far easier than with apache\n')
('nginx', 'better', 'apache', '24561939', 'nginx + gunicorn is likely to work better than apache + modwsgi at this point in time\n')
('nginx', 'better', 'apache', '1469813', 'nginx with its own mod_wsgi seems to perform even better than apache but hey you didn t ask about that\n')
('nginx', 'better', 'apache', '10204877', 'uwsgi is better if you are using nginx i find nginx far better than apache personally\n')
('apache', 'better', 'nginx', '8103931', '16 cores apache would scale better than nginx while nginx would process more client requests\n')
('nginx', 'better', 'apache', '20529263', 'nginx is better at handling requests since it does not spawn a new process for every request unlike apache\n')
('nginx', 'better', 'apache', '8103674', 'if you want to use something in front of it though i suggest you use something like nginx better than apache since nginx is also asynchronous like node and it s performs really well at serving static files\n')
('nginx', 'better', 'apache', '7181330', 'i recommend you to use nginx as an reverse proxy since the configuration is easier and the performance is much better than apache\n')
('nginx', 'better', 'apache', '45025292', 'i think you would like lemp e stands for the nginx and for a lot small projects it would be better than apache\n')
('nginx', 'better', 'apache', '9287841', 'nginx is better suited than apache as it is light and single threaded vs apache thread per request in most normal setups\n')
('nginx', 'better', 'apache', '12379123', 'the remote server is set up to allow very few maximum concurrent clients generally nginx handles many concurrent clients better than apache since it doesn t need to fork a new process for every request so if it becomes an issue you might want to look into switching web servers\n')
('nginx', 'better', 'apache', '6942102', '4 i d like to understand why nginx might be better than apache when one is long polling and why long polling is better than periodically polling a server\n')
('nginx', 'better', 'apache', '44707193', 'i aways heart that nginx performs better than apache server\n')
('apache', 'better', 'nginx', '9609477', 'apache made a claim that apache 2.4 will offer performance as good or better than nginx\n')

setting resources performant
('nginx', 'much more efficient', 'apache', '25898583', 'next you ll find that the threading model of nginx is much more efficient than apache s for what you re doing\n')
('nginx', 'more performant', 'apache', '36973548', 'nginx is more performant than apache in most cases with high-levels of requests\n')
('nginx', 'more efficient', 'apache', '9745974', 'nginx or other server is not much more efficient than apache\n')
('nginx', 'less resources', 'apache', '25819090', 'also when your setting up the server i would say start with nginx it s uses less resources than apache\n')
('nginx', 'more flexible', 'apache', '21286932', 'also you should consider using nginx as server that s more flexible than apache\n')
('nginx', 'more complicated', 'apache', '28805780', 'i am not going into how to do rewrites on nginx because it is much more complicated than apache\n')

static files file
('nginx', 'faster', 'apache', '11462284', 'there seems to be a consensus that nginx serves static content faster than apache\n')
('nginx', 'much more', 'apache', '14091869', 'serving static files with nginx is much more efficient than with apache\n')
('nginx', 'faster', 'apache', '15152595', 'when i was googling info on nginx it appears to be faster than apache and works well in serving static pages\n')
('nginx', 'lower', 'apache', '21815739', 'i know nginx has lower memory footprint and little faster than apache in serving static files\n')
('nginx', 'faster', 'apache', '12509474', 'i ve read that nginx is faster for static pages but there are questions about its performance with php compared to apache s performance with php\n')
('nginx', 'faster', 'apache', '3952446', 'for static file serving i found nginx performance lot faster than apache\n')
('nginx', 'faster', 'apache', '13074918', 'as an added benefit nginx can also serve static files much faster than apache and nginx also uses much less ram and can handle much more connections\n')
('nginx', 'faster', 'apache', '22224559', 'i will add that i ve often heard that nginx is faster than apache for serving static files to the point that it s sometimes worth using nginx for static files and reverse proxying to apache for dynamic content\n')
('nginx', 'better', 'apache', '3602188', 'nginx s static file performance is better than apache\n')

web lighter proxy
('nginx', 'faster', 'apache', '35636877', 'i have configured tomcat with apache web server in past and never slowness problem before and practically speaking nginx is said to much lighter and faster than apache web server\n')
('nginx', 'better performance', 'apache', '2583350', 'tornadoweb and nginx are popular web servers for the moment and many benchmarkings show that they have a better performance than apache under certain circumstances\n')
('nginx', 'usually better performance', 'apache', '21035581', 'note that in any case for increased security and fast static file css js delivery you might want to add a reverse proxy layer nginx usually provides better performance but apache works as well before the nodejs python server\n')
('nginx', 'faster', 'apache', '29403998', 'is nginx + php-fpm is suppose to do server operations much faster than apache + mod-php due to efficient usage of memory and other resources\n')
('nginx', 'faster', 'apache', '32573222', 'nginx is faster and lighter but many people find it easier to work with apache because of .htaccess support nginx does not have an analog due to performance concern\n')
('nginx', 'better', 'apache', '9550924', 'although this thread is more than a year old it still merits from the fact that no one mentioned about the not so recent innovations of nginx lighty and other web servers which scale much better than apache at higher concurrency and consume lesser resources\n')
('apache', 'better solution just', 'nginx', '8839295', 'i ve heard it suggested that i use nginx as a reverse proxy in front of apache and node.js is that a better solution than just nginx\n')
('nginx', 'better', 'apache', '35898440', 'i have no idea what i m doing so i dove nose-first into nginx -- which i had never used before -- because someone told me it s better than apache at dealing with lots of small tasks and requests -- not that i would know how to turn apache into a proxy mind you\n')

imagick	gmagick---------------------------------------------------

vb6	vb.net---------------------------------------------------

new features application
('vb.net', 'better language', 'vb6', '38377745', 'vb.net is a better language than vb6 use its com capabilities to save you from writing endless sketchy vb6 code\n')
('vb6', 'application more', 'vb.net', '3326639', 'biggest of all is that adding new features to your vb6 application is more expensive than it would be if the application was in a better language like c# or vb.net\n')
('vb6', 'better use', 'vb.net', '18437545', 'if you don t already know vb6 there s little point in learning it now - your time could be put to much better use by learning vb.net c#\n')

and-operator	or-operator---------------------------------------------------

ipb	mybb---------------------------------------------------

average queries slower
('ipb', 'less', 'mybb', '9600557', 'the ipb which has less queries runs slower than mybb with more queries\n')
('ipb', 'slower', 'mybb', '9600557', 'the ipb one has less queries used only 14 on average but it runs slower than mybb with more queries used average on 20\n')

datediff	difference---------------------------------------------------

owl	rdf---------------------------------------------------

expressive complex relations
('owl', 'more expressive', 'rdf', '15074623', 'owl and rdfs are more expressive than rdf which means here that you can capture more complex relations for instance you can also represent the link between sets of things rdfs subclassof or use transitive properties hasancestor\n')
('owl', 'richer', 'rdf', '6004853', 'owl is richer than languages such as rdf schema rdfs\n')

one-to-many	many-to-many---------------------------------------------------

avx	sse---------------------------------------------------

smaller values fast
('sse', 'clearly faster', 'avx', '18697383', 'now for sse is clearly faster and for the smaller values it s nearlly as fast as avx\n')
('avx', 'faster', 'sse', '29032199', 'so the avx version does indeed appear to faster than the sse version both for the original implementations and the optimised implementations\n')
('avx', 'faster', 'sse', '34069001', 'as expected the performance got better with both and avx 2 faster than sse 4.2 but when i profiled the code with papi i found out that the total number of misses mainly l1 and l2 increased a lot\n')
('avx', 'scalar faster', 'sse', '42324992', 'the question is avx scalar is 2.7x faster than sse when i vectorized it the speed up is 3x matrix size is 128x128 for this question\n')

l1d cache cpus
('avx', 'faster', 'sse', '28030333', 'for small buffers hot in l1d cache avx can copy significantly faster than sse on cpus like haswell where 256b loads stores really do use a 256b data path to l1d cache instead of splitting into two 128b operations\n')
('avx', 'faster', 'sse', '31476517', 'so congratulations - you can pat yourself on the back your avx routine is indeed about a third faster than the sse routine tested on haswell i7 here\n')

sqoop	hadoop---------------------------------------------------

jqgrid	datatables---------------------------------------------------

customisation someone better
('jqgrid', 'better', 'datatables', '4361920', 'if you don t have someone around to help with jqgrid you are better off with datatables\n')
('datatables', 'better', 'jqgrid', '15838894', 'it turns out jquery datatables is better suited for customisation and we have adopted this instead of using jqgrid\n')

read.table	fread---------------------------------------------------

fast read.csv large
('fread', 'faster base', 'read.table', '45595542', 'for reading large csv files you should either use readr read_csv or data.table fread as both are much faster than base read.table\n')
('fread', 'faster', 'read.table', '24966794', 'fread ... is extremely fast 10 - 100 times faster than read.table ... or read.csv ... for large datasets\n')
('fread', 'faster', 'read.table', '26359766', 'fread performs faster and more efficiently than read.table but read.table produces less no errors on the same data set\n')

centos	debian---------------------------------------------------

gitolite	gitosis---------------------------------------------------

best better
('gitolite', 'better', 'gitosis', '17706974', 'i know gitolite better than gitosis\n')
('gitolite', 'better', 'gitosis', '7070048', 'for this the best option is gitolite better than gitosis\n')

web2py	django---------------------------------------------------

admin customizable administrators
('django', 's better', 'web2py', '6338747', 'django s is better web2py s appadmin is for administrators only\n')
('django', 'more customizable', 'web2py', '4353033', 'django s admin is better and more customizable than web2py s appadmin\n')
('web2py', 'gae better', 'django', '4566361', 'as i understand it web2py supports gae better out of the box than django\n')

addition	subtraction---------------------------------------------------

bignum little chip
('addition', 'slower', 'subtraction', '23414385', 'this is a hold over from older compilers and interpreters on old chip architecture that would do addition slightly slower than subtraction\n')
('subtraction', 'slower bignum', 'addition', '46025736', 'but i d think bignum subtraction is a little slower than bignum addition\n')
('subtraction', 'slower', 'addition', '39783882', 'it s possible though that software could mess things up by making subtraction slower than addition - but that s unlikely\n')

mstest	nunit---------------------------------------------------

slower faster
('mstest', 'slower', 'nunit', '5815939', 'from my experience mstest is much slower than nunit\n')
('nunit', 'faster', 'mstest', '22663184', 'nunit is faster as compared to mstest\n')

suspect loading delays
('nunit', 'faster', 'mstest', '3844399', 'nonetheless i tried to compare the sum of all test speeds and in some cases nunit is faster and in other cases mstest is faster\n')
('nunit', 'faster', 'mstest', '3844399', 'thus i suspect when people say that nunit is much faster than mstest it is because of the loading and updating delays but the actual test execution time appears to be very similar\n')

inline	inlining---------------------------------------------------

symbol rule actual
('inline', 'more', 'inlining', '4445686', 'the keyword inline is more about telling the compiler that the symbol will be present in more than one object file without violating the one definition rule than about actual inlining which the compiler can decide to do or not to do\n')
('inline', 'keyword more', 'inlining', '12414229', 'generally speaking the inline keyword is used more now to allow you to violate the one definition rule when you define a function in a header than to give the compiler a hint about inlining\n')

srt	subtitle---------------------------------------------------

formatting options format
('srt', 'simpler', 'subtitle', '43712635', 'srt is simpler than ass but lacks features so you may need to use the force_style option in the subtitle filter\n')
('srt', 'simpler', 'subtitle', '43712635', 'ass supports more formatting options but srt is a simpler format and can be modified with the force_style option in the subtitle filter\n')

adfs	acs---------------------------------------------------

rar	zip---------------------------------------------------

malloc	memcpy---------------------------------------------------

lxml	beautifulsoup---------------------------------------------------

task broken orders
('lxml', 'better', 'beautifulsoup', '5778559', 'regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', '14069663', 'i would recommend lxml for html parsing it s simple and considerably faster than beautifulsoup can be as much as two orders of magnitude\n')
('beautifulsoup', 'more', 'lxml', '1648539', 'beautifulsoup is more suitable for html parsing than lxml\n')
('lxml', 'better', 'beautifulsoup', '29681486', 'the reason for using lxml for such a task is that it cleans html files better than beautifulsoup do\n')
('lxml', 'better option', 'beautifulsoup', '5218029', 'note that lxml is probably a better option than beautifulsoup for this kind of task nowadays for the reasons given by beautifulsoup s author\n')

xpath easier painful
('beautifulsoup', 'easier', 'lxml', '30075680', 'i found a solution to this problem using beautifulsoup at beautifulsoup-where-are-you-putting-my-html because i think it is easier than lxml\n')
('lxml', 'easier', 'beautifulsoup', '8940209', 'lxml enables you to search for elements using xpath which i think is easier than using beautifulsoup s api\n')
('lxml', 'less painful', 'beautifulsoup', '16958218', 'lxml will let you use xpath here which i think will be less painful than beautifulsoup s interface\n')

parser pyquery posts
('lxml', 'faster', 'beautifulsoup', '6728412', 'pyquery is based on lxml so it s also much faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', '880821', 'i ve found that even if lxml is faster than beautifulsoup for documents that size it s usually best to try to reduce the size to a few kb via regex or direct stripping and load that into bs as you are doing now\n')
('lxml', 'faster', 'beautifulsoup', '44964258', 'since you re using lxml why not use it in a more direct manner lxml is believed to be faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', '5784358', 'speed isn t important here but in other applications it is good to know that regexes are very fast 100 times faster than lxml and 1000 faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', '13615911', 'according to some benchmark tests lxml is nearly 100 times faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', '3215955', 'lxml is faster than beautifulsoup i think and has much better functionality while remaining relatively easy to use\n')
('lxml', 'more', 'beautifulsoup', '804829', 'lxml is supposed to be much faster and efficient and can do much more than beautifulsoup\n')
('lxml', 'much faster', 'beautifulsoup', '6649888', 'lxml is much faster than beautifulsoup and probably the fastest parser available for python\n')
('lxml', 'faster', 'beautifulsoup', '4295387', 'it s generally accepted that lxml is faster than beautifulsoup ref\n')
('lxml', 'faster', 'beautifulsoup', '2752712', 'it uses lxml underneath and is much faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', '4025244', 'you ll probably find that lxml runs faster than beautifulsoup but in my uses beautifulsoup was very easy to learn and use and handled typical crappy html as found in the wild well enough that i don t have need for anything else\n')
('lxml', 'faster', 'beautifulsoup', '42852910', 'alternatively you can use lxml module which is lot faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', '15432775', 'how can i find all div and span tags with order preserved.with beautifulsoup it is very simple but i switched recently to lxml since it is much faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', '41266291', 'i prefere lxml it s a harder to understand but much faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', '14164350', 'edit don t use this for html work use the lxml library it s python based and much faster than beautifulsoup\n')
('beautifulsoup', 'slower', 'lxml', '26958133', 'note that using the beautifulsoup parser is a lot slower than lxml s default parser\n')
('lxml', 'faster', 'beautifulsoup', '19357899', 'lxml is also much much faster than beautifulsoup\n')
('beautifulsoup', 'better', 'lxml', '19670433', 'i prefer to use beautifulsoup better than lxml\n')
('lxml', 'better', 'beautifulsoup', '5890829', 'one of the things that makes lxml better than beautifulsoup is support for proper css-like class selection or even supports full css selectors if you want to use them\n')
('lxml', 'faster', 'beautifulsoup', '32041266', 'according to the above posts and my own experience lxml is definitely faster than beautifulsoup\n')

xfce	gnome---------------------------------------------------

qvector	qlist---------------------------------------------------

size store element
('qlist', 'better', 'qvector', '33610032', 'if the size of the qlist s element type is greater than the pointer s size qlist performs better than qvector because it doesn t store the objects sequentially but stores sequentially pointers to heap copies\n')
('qlist', 'better', 'qvector', '33665848', 'size qlist performs better than qvector because it doesn t store the\n')

performance memory heap
('qvector', 'better performance', 'qlist', '36125922', 'qvector will usually give better performance than qlist because qvector always stores its items sequentially in memory where qlist will allocate its items on the heap unless sizeof t sizeof void and t has been declared to be either a q_movable_type or a q_primitive_type using q_declare_typeinfo\n')
('qlist', 'worse', 'qvector', '33665848', 'if it stores it as pointers on the heap won t qlist be much worse off than qvector\n')

quicksort	radix-sort---------------------------------------------------

put	post---------------------------------------------------

docs link advantage
('put', 'request much simpler', 'post', '2864151', 'on the php docs link above they say a put request is much simpler than a post request when uploading file along with this advantage what other advantages disadvanatges do the put has got compared to the post\n')
('post', 'more complex', 'put', '17070042', 'side note it looks like you re using the post form of file upload which as the docs say is considerably more complex than put\n')

multipart api data
('put', 'moreso', 'post', '2023144', 'put is designed for file uploads moreso than post which requires doing a multipart upload but then it comes down to what your server can do as to which is more convenient for you to implement\n')
('put', 'simpler', 'post', '36932851', 'to receive a file in your api i would use a put request simpler than post multipart and fetch the data from the stream php input\n')

appropriate new
('put', 'more', 'post', '9352970', 'i think that in that case the put verb is more appropriate because post really means i want to create something new\n')
('post', 'more appropriate', 'put', '8693510', 'more importantly in this case i think post is more appropriate than put\n')

resource restful blog
('post', 'safer', 'put', '11325318', 'typically you would not allow a http client to determine the uri of a new resource so a post to blog would be safer than a put to blog article-uri although http does cater for appropriate responses should the server be unable to honour the intended uri\n')
('post', 'better', 'put', '32541130', 'post is better but if you want it to be truly restful you should ensure that the uri uniquely identifies the resource and use put\n')
('post', 'more restful', 'put', '44936791', 'side note if you are attempting to create a new customer you may want to use post instead as it may be considered more restful as put s are generally for updating an existing resource but this is up to you\n')

fork	pthreads---------------------------------------------------

processes clone better
('fork', 'better', 'pthreads', '22140337', 'there is a nice comparison of threads and processes here when is clone and fork better than pthreads\n')
('fork', 'better', 'pthreads', '11662781', 'but when is fork and clone better than pthreads\n')

floating-point	fractions---------------------------------------------------

dot decimal representation
('floating-point', 'more', 'fractions', '41839881', 'the floating-point numbers are rounded to have not more than eight fractions digits\n')
('fractions', 'more', 'floating-point', '26145924', 'all other fractions floats have more digits after the dot when expressed in decimal because the representation of floating-point numbers is binary not decimal\n')

png	gif---------------------------------------------------

regard smaller pixels
('gif', 'less', 'png', '42301395', 'i used gif because its file size 2.1kb was considerably less than png or jpeg in this case\n')
('gif', 'smaller', 'png', '2686734', 'gif is smaller because it s based on an colour palette of 256 colours rather than the separate rgb values for each pixel or group of pixels in jpg and png\n')
('gif', 'larger', 'png', '18601225', 'i m not sure if this matters but the gif is significantly larger than the png files\n')
('gif', 'smaller', 'png', '2523038', 'but keep in mind that the gif color palette is way smaller than png\n')
('png', 'wider dimension', 'gif', '30455777', 'wewtaco i noticed that your png file has wider dimension than the gif file and i am guess that could be a reason the black bars are showing up\n')
('gif', 'smaller palette', 'png', '12416387', 'one thing to note is that gif supports a smaller palette than png - only up to 256 colors\n')
('gif', 'smaller', 'png', '27036474', 'since that appears to generate index-color gif files which are smaller than the png files that doxygen generates\n')
('png', 'wider color', 'gif', '2336552', 'png has a wider color pallete than gif and gif is properitary while png is not\n')
('png', 'shim smaller', 'gif', '1841996', 'a 8-bit png shim is smaller than the same dimension 1 pixel gif and everything will still work as planned\n')
('png', 'smaller', 'gif', '116210', 'indexed png less than 256 colors is actually always smaller than gif so i use that most of the time\n')
('gif', 'larger', 'png', '6850687', 'it will always be a web format which basically comes down to jpg png and gif with gif being very unlikely because of its limitations gif can contain 256 colors at most and is generally larger than png\n')
('gif', 'file smaller oh', 'png', '8596064', 'it might help to reduce your gif file sizes smaller oh and i believe -depth 8 can only be used for png images\n')
('png', 'smaller', 'gif', '610565', 'if png isn t smaller than gif then your software may be saving it poorly - look for png optimisation progams like pngout and pngnq\n')
('png', 'smaller', 'gif', '2308120', 'convert it to png 10-30 smaller than gif on average\n')
('png', 'larger equivalent', 'gif', '116461', 'if your png files are coming out larger than equivalent gif files it is almost certainly because your source image has more than 256 colors\n')
('png', 'often smaller', 'gif', '28668844', 'icon size indexed png is often smaller than the same gif\n')
('png', 'larger', 'gif', '610573', 'jpg and png work well for most applications but the files will be larger than gif for very simple graphics\n')
('png', 'smaller', 'gif', '2747873', 'just press save and give it a name and that photoshop image will be saved into a transparent background png file which presents more colors and it s smaller than a gif file and is as good as a jpg\n')
('png', 'generally smaller', 'gif', '34538885', 'but in that regard it is replaced by png which is generally smaller supports alpha transparency where gif pixels are either fully transparent or fully opaque and most importantly gif images are limited to 256 colors\n')
('png', 'better compression', 'gif', '11005984', 'you can then use imagecopy to insert each gif image including the background and imagepng to generate png output which is better for line art than jpeg offers better compression than gif and can support more than 256 colors\n')

bigger alos cant
('png', 'better competition', 'gif', '1084126', 'png images are always compressed lossless but their compression algorithm works better than competition gif\n')
('png', 'better', 'gif', '37907325', 'animated png is better than gif if we re focused on file size â achieving a smaller file size was one of the reasons the apng format was designed\n')
('png', 'better', 'gif', '9424505', 'png gives you better alpha result than gif\n')
('gif', 'format substantially less capable', 'png', '30777789', 'the gif format is substantially less capable than png\n')
('png', 'better support', 'gif', '11199578', 'for example png has better support for transparency than gif or jpeg\n')
('png', 'better', 'gif', '1200232', 'png compresses much better than gif and allows more colors at the same time\n')
('gif', 'slightly better', 'png', '115838', 'there might be some edge cases where gif is slightly better because the png format may have a slightly larger overhead from metadata but it s really not worth the worry\n')
('png', 'not bigger', 'gif', '5134831', 'also if i change all to png is not bigger and alos i am using prawn pdf outputting these images so cant use gif\n')
('png', 'better', 'gif', '4288557', 'many people don t know about 8-bit png which is usually better than gif in size.\n')
('png', 'format better', 'gif', '10666583', 'according to wikipedia the png format provides better compression than gif\n')
('png', 'definitely better', 'gif', '10941029', 'while png is definitely better that gif occasionally there is a use case for needing to stay in gif format\n')
('png', 'newer', 'gif', '610542', 'png is a newer format and often better than either jpeg of gif - especially for screenshots\n')

words	n-gram---------------------------------------------------

iostream	cstdio---------------------------------------------------

jruby	mri---------------------------------------------------

slower opposite 2-5x
('jruby', 'faster', 'mri', '40529208', 'does this mean that the old adagio about jruby being faster than mri ruby is gone\n')
('mri', 'faster', 'jruby', '30228655', 'mri is faster than jruby\n')
('mri', 'faster', 'jruby', '30228655', 'mri has a gil so why is it faster than jruby in handling requests\n')
('mri', 'slower', 'jruby', '30097643', 'this really surprised me because i expected mri to be slower than jruby\n')
('jruby', 'faster', 'mri', '8920123', 'jruby is faster than 1.9 mri matz ruby interpreter the standard in certain areas\n')
('jruby', 'faster', 'mri', '15548793', 'for example jruby is faster than mri jruby 1.7 is faster than jruby 1.6 jruby 1.7 running on hotspot is faster than jruby 1.7 running on j9 jruby 1.7 running on hotspot 1.7 is faster than jruby 1.7 running on hotspot 1.6 jruby 1.7 running on hotspot 1.7 with the c2 compiler is faster than jruby 1.7 running on hotspot 1.7 with the c1 compiler and so on\n')
('mri', '2-5x slower', 'jruby', '40545364', 'so it seems like the opposite - mri 2.3 gets 2-5x slower than jruby 9.1\n')
('jruby', 'faster', 'mri', '7987382', 'and it sounds strange but jruby scales very well and it s faster than mri with java 7\n')

better application rubinius
('jruby', 'better', 'mri', '12071741', 'i know that rails jruby handles concurrency better than mri but i don t know how to do it\n')
('jruby', 'better', 'mri', '13448080', 'for longer-running applications like a web application rubinius or jruby will generally perform better than mri\n')
('jruby', 'better performance', 'mri', '14584499', 'with these options jruby on rails gives about the same or better performance than mri\n')

process long processes
('jruby', 'faster', 'mri', '11058633', 'lastly if you are frequently finding yourself running long running process i advice you to try jruby which is works much better with long running processes due to jvm lot faster than mri\n')
('mri', 'faster', 'jruby', '40556630', 'sometimes mri is faster but with the right parameters and warmup jruby was 3 to 3.5 times as fast on my system for this particular\n')

raw performant execution
('mri', 'faster', 'jruby', '10747331', 'jvm hosted languages are generally going to be faster than traditional mri ruby and both java and scala are generally faster than jruby when it comes to raw cpu capabilities\n')
('jruby', 'more performant', 'mri', '10284169', 'once the jvm has warmed up rails requests under jruby are usually significantly more performant than under mri both in terms of raw execution speed and garbage collection\n')

ecj	javac---------------------------------------------------

coalesce	nvl---------------------------------------------------

standard simpler portable
('coalesce', 'simpler', 'nvl', '38997181', 'the ansi standard function coalesce is simpler than using nvl and decode which should be obsoleted anyway\n')
('coalesce', 'more portable', 'nvl', '16041281', 'the coalesce function is used here because it is more portable than nvl or ifnull\n')

decimal	octal---------------------------------------------------

jogl	lwjgl---------------------------------------------------

put	get---------------------------------------------------

loop counter value
('put', 'process faster', 'get', '31944382', 'as long as the dataframe is small your assumption that the put process is faster than the get seems true we can fetch all 5 items within one loop of while not q.empty\n')
('put', 'higher', 'get', '30760255', 'when i put my loop counter variable pagessent in the watch window it gets optmized when i declare as volatile it still gets optimized but when the max value is set to 4 the loop exits properly but if max value is higher than 4 get stuck..\n')

requests second performance
('put', 'more', 'get', '26171964', 'i m not sure if this is the answer but states that if you expect a rapid increase in the request rate for a bucket to more than 300 put list delete requests per second or more than 800 get requests per second we recommend that you open a support case to prepare for the workload and avoid any temporary limits on your request rate\n')
('put', 'more', 'get', '40435522', 'at very high speeds amazon s3 does have some recommended request rate and performance considerations but this is only when making more than 300 put list delete requests per second or more than 800 get requests per second for a particular bucket\n')

slower rate
('put', 'now slower', 'get', '31944382', 'this could mean that put is now slower than get and we have to wait\n')
('get', 'rate slower', 'put', '41911766', 'at times the get rate is slower than the put rate and we see messages backing up\n')

tcpdf	fpdf---------------------------------------------------

past look better
('tcpdf', 'far better', 'fpdf', '6280801', 'i suggest you to give a look to tcpdf which is far better than fpdf also because it is actively developed\n')
('tcpdf', 'better', 'fpdf', '7739169', 'i ve used tcpdf in the past and found it a lot better than fpdf\n')

httplib	urllib---------------------------------------------------

toupper	tolower---------------------------------------------------

null experiment errors
('toupper', 'faster', 'tolower', '41240021', 'your intial hypothesis of toupper being faster than tolower has a logical fallacy\n')
('tolower', 'faster', 'toupper', '41238495', 'so you can t reject the null hypothesis that tolower is as faster as toupper and thus your experiment has got errors\n')

while-loop	for-loop---------------------------------------------------

cleaner faster
('for-loop', 'faster', 'while-loop', '4203952', 'and now we know that for-loop is faster than while-loop\n')
('while-loop', 'cleaner', 'for-loop', '29374366', 'edit just realized a while-loop may well be a lot cleaner than a for-loop for this\n')
('while-loop', 'faster', 'for-loop', '2611604', 'i have also found that a while-loop is faster than a for-loop\n')

jackson	gson---------------------------------------------------

faster json benchmarks
('gson', 'faster', 'jackson', '33828265', 'under some conditions gson has proven to be a lot faster than jackson there also exists jsonp and json.simple\n')
('jackson', 'faster', 'gson', '9296657', 'jackson is faster but the api is 37x more complex than the gson api\n')
('gson', 'simpler', 'jackson', '9792782', 'gson is simpler jackson is faster\n')
('gson', 'slower', 'jackson', '34679659', 'i looked at gson metrics and it seems slower than jackson\n')
('gson', 'faster', 'jackson', '31940366', 'gson is faster with smaller documents and jackson is faster with large documents\n')
('gson', 'slower', 'jackson', '6559693', 'deserialization performance is similar with gson over 9x slower than jackson and fastjson about 0.5 faster than jackson\n')
('gson', 'faster', 'jackson', '14248787', 'further more gson really seems to be faster than jackson json\n')
('gson', 'faster', 'jackson', '42641548', 'very small object google gson performs faster than jackson and simple json\n')
('jackson', 'faster', 'gson', '45229746', 'in my case i found jackson little faster than gson i used default serialization because so far i don t have a need to customize serialization\n')
('jackson', 'more', 'gson', '12426957', 'jackson is more suitable if you have a complex deep json tree because gson creates a lot of temporary objects which leads to stop the world gcs\n')
('jackson', 'faster', 'gson', '17166058', 'personally i prefer jackson as according to test benchmarks it s faster than gson\n')
('gson', 'slower', 'jackson', '6559693', 'according to the performance results at for serialization with databind with strings gson.tojson myobject gson is over 10x slower than jackson\n')
('jackson', 'faster', 'gson', '5553647', 'take a look at the jackson json parser it s faster than the one in android and faster than gson and supports streaming\n')
('jackson', 'much faster', 'gson', '3261073', 'i ve seen questions like this come up before and the general consensus is that jackson is much faster than gson\n')
('gson', 'better', 'jackson', '14519479', 'also i want to know if google gson is better than jackson for json parsing\n')
('jackson', 'slower', 'gson', '26263028', 'code looks correct and even at its worst jackson should be no slower than gson\n')
('gson', 'faster', 'jackson', '42641548', 'large objects google gson performs faster than jackson and simple json\n')
('gson', 'faster', 'jackson', '4764950', 'gson 1.6 now includes a low-level streaming api and a new parser which is actually faster than jackson\n')

plan project diffrent
('gson', 'better', 'jackson', '3754055', 'we plan to use gson extensively in the application as it seems safer and better than jackson\n')
('jackson', 'better performance', 'gson', '7736941', 'after searched in google found that jackson has better performance than gson i plan to replace gson with jackson in my project but i got a diffrent result when run test code\n')
('jackson', 'better', 'gson', '46011311', 'jackson type safety is way better than gson\n')
('jackson', 'better', 'gson', '7590072', 'i found jackson better than gson performance project activity better docs ...\n')
('jackson', 'lib better performance', 'gson', '43648840', 'also it seems jackson lib has better performance than other packages such as gson which i haven t tried personally\n')
('jackson', 'better', 'gson', '27757123', 'performance of jackson is better than gson\n')

ogg	mp3---------------------------------------------------

quality meg licensing
('ogg', 'better', 'mp3', '12945530', 'in general ogg achieves better compression than mp3 which is a plus for things like download size bandwidth resource usage etc\n')
('ogg', 'vorbis better quality', 'mp3', '2467567', 'ogg vorbis is better quality per meg than mp3 plus no licensing legal issues\n')
('ogg', 'vorbis better then', 'mp3', '9884227', 'moreover ogg vorbis is better then mp3 at all bitrates\n')

cheerio	jsdom---------------------------------------------------

jtextpane	jeditorpane---------------------------------------------------

microchip	avr---------------------------------------------------

map	dictionary---------------------------------------------------

examples constant factor
('map', 'slower', 'dictionary', '2699569', 'std map though is actually implemented in a way that many operations are slower than dictionary as its size gets large\n')
('dictionary', 'slower std', 'map', '2699569', 'for suitably large examples of each dictionary overcomes the constant factor by which it s slower than std map and will actually do operations like lookup insertion etc\n')
('map', 'worse algorithmic', 'dictionary', '2699569', 'i definitely wouldn t try introducing a new general-purpose type for use in python based on std map which has worse algorithmic complexity in time for many important operations andâ in at least some implementationsâ leaves some optimisations to the user that dictionary already has\n')

push	pull---------------------------------------------------

performance subscriptions wan
('push', 'model less', 'pull', '45656811', 'i guess one of them is that the push model is less coupled then the pull model\n')
('pull', 'better', 'push', '7742259', 'pull subscriptions perform much better than push subscriptions in a wan scenario\n')
('pull', 'better', 'push', '7555572', 'is the performance of pull better than push in this scenario\n')
('push', 'better', 'pull', '3585336', 'how are push notification better than pull notification on iphones\n')
('pull', 'better', 'push', '2350342', 'the reason the pull model works better than the push model in this case is as follow\n')

message processing rebus
('pull', 'better rebus', 'push', '26895650', 'if in-order processing is required a much better design would be to use another message processing library that supports a pull model which i think would fit your scenario much better than rebus push model\n')
('pull', 'model definitely easier', 'push', '9999184', 'a heartbeat mechanism pull model is definitely easier to implement but a push model is far more efficient\n')

scalable starters
('push', 'far more', 'pull', '912233', 'why do you think that push is far more scalable then pull for starters\n')
('pull', 'more', 'push', '1768222', 'i have found that pull is more scalable than push\n')

dialog	pop-up---------------------------------------------------

box datebox panel
('pop-up', 'z-index less', 'dialog', '16581005', 'because of datebox pop-up z-index is less then your box mean dialog box s z-index it shows behind pop-up panel\n')
('pop-up', 'bigger', 'dialog', '20348531', 'when typing in the text box the autocomplete pop-up but is bigger than the remaining space in the modal dialog\n')

better divs login
('dialog', 'better', 'pop-up', '784719', 'use floating divs instead which looks like a modal dialog but are better than the pop-up\n')
('pop-up', 'better', 'dialog', '18214671', 'generally a pop-up is a better option for a login dialog and a pop-up would allow you to easily navigate to the main page\n')

window bubble higher
('pop-up', 'higher', 'dialog', '8527360', 'i realize this is an older post but we just ran into the same issue and resolved it by setting the z-index of the bubble pop-up to something higher than the dialog window\n')
('dialog', 'easier', 'pop-up', '38296642', 'dialog makes it easier for you to create a pop-up window with customized contents\n')

benchmarking	profiling---------------------------------------------------

versioning	upgrade---------------------------------------------------

older newer better
('versioning', 'better idea', 'upgrade', '21257793', 'if you think that writing two apps for both versioning is a better idea then should i write app on wp8 first and at the end remove special wp8 features to downgrade it for wp7.5 or maybe i should write wp7.5 app and then add some wp8 features to upgrade it to wp8\n')
('versioning', 'older', 'upgrade', '31218967', 'if your versioning is older than that it won t work and you ll need to upgrade\n')
('upgrade', 'rule older', 'versioning', '4591554', 'this way the upgrade rule detects older versioning and shows a custom dialog if it does\n')
('upgrade', 'newer', 'versioning', '38471241', 'however if that upgrade includes myself say i have a package named server and part of the upgrade includes a newer versioning of server then the upgrade fails\n')
('upgrade', 'greater', 'versioning', '34672781', 'you used a older versioning of vagrant before 1.5 versioning and made an upgrade to vagrant greater than 1.5 versioning\n')
('upgrade', 'actually newer', 'versioning', '34669872', 'upgrade actually installs newer versioning of the packages you have\n')
('upgrade', 'newer older', 'versioning', '36084301', 'also don t forget to upgrade the gradle plugin to 1.5.0 or newer as older versioning are not supported\n')
('upgrade', 'easier newer', 'versioning', '46176002', 'itext versioning is 5.5.x but i guess we can upgrade it if the task would be easier with newer versioning\n')
('versioning', 'older', 'upgrade', '36198561', 'also i can not use custom dimension because my piwik versioning is older and i can not upgrade it now\n')
('upgrade', 'lower', 'versioning', '994571', 'if i enable this then any setup is ran every time it will be asking for upgrade either it is on lower versioning over higher versioning or higher versioning over lower versioning\n')
('upgrade', 'newer browser', 'versioning', '1872552', 'these locations will convert when they go to windows 7 perhaps or because the application they use internally is upgrade and needs the newer browser versioning\n')
('versioning', 'older', 'upgrade', '40344093', 'if the versioning is older than 0.10 please upgrade\n')
('versioning', 'better', 'upgrade', '14940344', 'if you re using older versioning it is better to upgrade and avail benefits of c++11 features as much as possible\n')
('upgrade', 'actually newer', 'versioning', '46809434', 'apt-get upgrade actually installs the newer versioning\n')
('upgrade', 'setup older', 'versioning', '44779572', 'but during upgrade setup launches the older versioning setup bootstrapper ui\n')
('upgrade', 'probably better', 'versioning', '27508192', 'as painful as it s going to be for both of us to perform the upgrade it s probably better to commit the time now and get the code up to the latest versioning than to try to find an older versioning that reduces the effort\n')
('versioning', 'older', 'upgrade', '45592457', 'if your server versioning is older it is highly recommended to upgrade postgres anyway to use jsonb efficiently\n')
('upgrade', 'more simple older', 'versioning', '33321665', 'to upgrade your plone site from 4.3 to 5.0 you can check this link section upgrading plone 4.x to 5.0 the migration should be more simple than older versioning like 3.x or 2.x\n')
('upgrade', 'better last', 'versioning', '4513809', 'you can safely upgrade to trunk its better than last versioning anyway\n')
('upgrade', 'older', 'versioning', '25074930', 'windows installer rollback will work as you request if you use 1 a minor upgrade or 2 a properly sequenced major upgrade that uninstalls the older versioning after successfully updating all files\n')
('versioning', 'higher', 'upgrade', '24226790', 'if you are running that versioning or higher or after you upgrade follow these steps\n')
('versioning', 'older', 'upgrade', '46572148', 'warning you are using requests versioning which is older than requests-oauthlib expects please upgrade to 2.0.0 or later\n')
('versioning', 'older', 'upgrade', '47159711', 'if your versioning is older than 5.0.0 run pip install --upgrade notebook to upgrade\n')
('versioning', 'older', 'upgrade', '37105692', 'if your ruby versioning is older than 2.2.4 then please upgrade it\n')

previous target sdk
('upgrade', 'slower previous', 'versioning', '35099925', 'since the upgrade the content authors are complaining that the experience editor performance is much slower than previous versioning\n')
('upgrade', 'higher', 'versioning', '2984015', 'i am wondering what happens when i release a upgrade that has a higher target sdk versioning then the previous versioning of my app\n')

product3 lower
('versioning', 'lower', 'upgrade', '44174731', 'and my php versioning is lower than 5.3.0 i upgrade that fixed my problem\n')
('versioning', 'lower then', 'upgrade', '40175754', 'if product3 is installed and installed versioning is lower then upgrade\n')

installshield equal first
('versioning', 'greater', 'upgrade', '39303628', 'so just change your versioning to something else which must be greater than the upgrade versioning so that again first condition will be false and system will not check further and will connect without using tls\n')
('upgrade', 'greater then', 'versioning', '12462524', 'i am using installshield 2011 and what i want to do is on an upgrade to install all the files that are equal or greater than then versioning that is already installed\n')

icefaces	richfaces---------------------------------------------------

components easy better
('icefaces', 'more good', 'richfaces', '3252727', 'icefaces provides more good looking components than richfaces\n')
('richfaces', 'more', 'icefaces', '1465066', 'richfaces looks more good option to work than icefaces bcoz it has inbuilt support its easy to learn its long time support guarantee for seam+richfaces combination\n')
('richfaces', 'better', 'icefaces', '3252727', 'richfaces has better ajax support than icefaces\n')

jmock	mockito---------------------------------------------------

dask	pandas---------------------------------------------------

fckeditor	summernote---------------------------------------------------

stanford-nlp	opennlp---------------------------------------------------

training project stanford
('stanford-nlp', 'easier', 'opennlp', '6603262', 'i looking to use a suite of nlp tools for a personal project and i was wondering whether stanford s stanford-nlp is easier to use or opennlp\n')
('opennlp', 'easier', 'stanford-nlp', '45592826', 'i find training in opennlp much easier than in stanford-nlp\n')

ecdsa	rsa---------------------------------------------------

bufferedoutputstream	dataoutputstream---------------------------------------------------

weblogic	jboss---------------------------------------------------

free	realloc---------------------------------------------------

hyperthreading	processors---------------------------------------------------

onkeydown	onkeyup---------------------------------------------------

onitemclicklistener	onclicklistener---------------------------------------------------

gethashcode	equals---------------------------------------------------

equivalent performance implementation
('gethashcode', 'faster', 'equals', '36041588', 'and that is for performance reasons assuming that a gethashcode implementation should always be much faster than an equals implementation\n')
('gethashcode', 'faster equivalent', 'equals', '20598647', 'even though gethashcode itself should be fast it s not mostly faster than equivalent equals\n')
('equals', 'slower', 'gethashcode', '31878297', 'if you do not implement gethashcode union will call equals which will work but is slower than gethashcode\n')

arrays	for-loop---------------------------------------------------

longer iterations division
('arrays', 'longer', 'for-loop', '15291406', 'the hits arrays is longer than numtotalhits so your for-loop limit should be numtotalhits instead of hits.length\n')
('arrays', 'more iterations', 'for-loop', '16164311', 'the longer the arrays gets the more iterations your for-loop will need\n')
('arrays', 'longer', 'for-loop', '13821093', 'note that this is one of those cases where matrix division of large arrays takes longer than a for-loop\n')

faster foreach-loop better
('for-loop', 'faster', 'arrays', '37788181', 'i completely failed to check that assertion and just jumped into the analysis of how the enhanced for-loop is faster on arrays than lists\n')
('arrays', 'better', 'for-loop', '27683326', 'but when looping through an arrays it s better to use a regular for-loop\n')
('arrays', 'smaller', 'for-loop', '43668103', 'as mentioned above as you remove items the arrays gets smaller so a for-loop is probably not the best solution\n')
('for-loop', 'better', 'arrays', '21640491', 'edit using an enhanced for-loop is a lot better than using arrays\n')
('arrays', 'faster', 'for-loop', '29868617', 'this is the reason why working with the higher-dimensional arrays ends up being so much faster than the for-loop -based code\n')
('for-loop', 'faster', 'arrays', '41177212', 'the for-loop is faster than the foreach-loop if the arrays must only be\n')
('for-loop', 'nothing more', 'arrays', '9251272', 'looping with a for-loop is nothing more than a basic iteration of an arrays using a for-loop\n')
('for-loop', 'better', 'arrays', '23501241', 'the questions should i use for-loop or is it better to do it recursively next insert will be called after previous is done should i check if saved.length datalength and then return the arrays or is there some better way how to do it\n')
('arrays', 'faster', 'for-loop', '13200688', 'iterating pair-wise you d normally do something like but iterating over an arrays is faster than using a c-style for-loop\n')
('for-loop', 'faster', 'arrays', '44503420', 'the for-loop is faster than the foreach-loop if the arrays must only be accessed once per iteration\n')
('for-loop', 'faster', 'arrays', '34076726', 'for example sometimes a for-loop is faster than the built-in arrays methods in some browsers\n')
('arrays', 'much better', 'for-loop', '38359658', 'you can use array.prototype.find method to check if the element exists in arrays which is much better than perform a traditional for-loop\n')
('arrays', 'easier', 'for-loop', '40577230', 'with one arrays one can do which is easier than a for-loop\n')
('arrays', 'better', 'for-loop', '41821054', 'since it s an arrays it s better to use a for-loop with a counter variable i which starts from 1\n')
('arrays', 'shorter', 'for-loop', '35563476', 'because if the first word in arrays is shorter than second one you need second for-loop\n')
('for-loop', 'more', 'arrays', '21524225', 'im going to have a second for-loop that makes more arrays and names these arrays as the strings from my previous arrays\n')
('arrays', 'faster', 'for-loop', '19608875', 'i tried this code with my the big arrays it is around 10 to 20 times faster than a for-loop solution and around 200 times fast than the old code\n')
('arrays', 'method faster way', 'for-loop', '18444065', 'when you know both objects are arrays method is a faster way to check equality than for-loop\n')
('arrays', 'better', 'for-loop', '8617791', 'but for the arrays it is better to use for-loop as shown by alnitak than for-in\n')
('arrays', 'better', 'for-loop', '10956586', 'but you will have loops the outer arrays in order to get it to work which would be better done with a for-loop so you reference both at once\n')
('arrays', 'shorter', 'for-loop', '39674479', 'in this case if any element in arrays is shorter than 11 symbols will become big and for-loop will stop executing\n')
('for-loop', 'far better', 'arrays', '35089734', 'but then normal for-loop is far better for arrays than using for-in which is actually for object\n')
('for-loop', 'faster', 'arrays', '32350088', 'thus the for-loop is faster than the foreach-loop if the arrays must\n')
('arrays', 'faster', 'for-loop', '46597341', 'would an arrays be faster than a for-loop in this case\n')

straightforward opinion specific
('for-loop', 'usually better', 'arrays', '41556915', 'in my opinion a for-loop is usually better for doing something a specific number of times and if you re just iterating over every item in an arrays foreach is usually more straightforward\n')
('arrays', 'typically more straightforward', 'for-loop', '34030414', 'in its implementation foreach executes a closure over every element in the arrays this is typically more straightforward and transparent alternative to old-fashioned for-loop\n')

length index version
('for-loop', 'bigger', 'arrays', '18884550', 'it turns out i had a hard coded maximum index in my for-loop which was bigger than the arrays i was trying to assign to\n')
('arrays', 'less', 'for-loop', '31072639', 'if the length of the arrays is less than 8 a regular for-loop summation is performed\n')
('arrays', 'much larger', 'for-loop', '41951140', 'above is a simplified version of my actual code where the c arrays is much larger so i have to use a for-loop to get every index\n')
('for-loop', 'less', 'arrays', '8345962', 'when i try to access it with a for-loop where its index is less than the arrays length i get the following error message typeerror function object is unsubscriptable\n')
('for-loop', 'greater', 'arrays', '32706815', 'also change your logic in the for-loop to be not since i will not ever be greater than the arrays length\n')
('for-loop', 'less', 'arrays', '41386426', 'i fixed this by adding after the for-loop and before the return statement which fixes the problem but if the for-loop is written to continue while i is less than the arrays length and when the arrays only contains a the length is one and i is 0 shouldn t it also pop a\n')

good small amount
('arrays', 'better speed', 'for-loop', '10511218', 'use a for-each loops to go through a range it s not as fast as using a variant arrays but keeps things simple and offers better speed than a for-loop\n')
('for-loop', 'probably better', 'arrays', '36037302', 'i suppose the first option is good for small arrays but a for-loop is probably better practice as the amount of code would remain the same regardless of arrays size\n')

size user program
('for-loop', 'less', 'arrays', '9698965', 'but the for-loop is not reading writing the last part of the parent file which is less than the arrays size\n')
('for-loop', 'less', 'arrays', '31977008', 'okay so after telling the user to enter the size of the arrays the arrays was assigned to lets say 5 therefore in the first for-loop the program is checking if i is less than the arrays size so it can only be entered 5 times as that is the size of the arrays\n')

properties	accessor---------------------------------------------------

aspect static pair
('properties', 'more', 'accessor', '10794303', 'that suggests another aspect where a declared properties is more than a pair of accessor methods that is more static type checking although it is undesirable here\n')
('properties', 'more', 'accessor', '10794303', 'it means a declared properties is more than a pair of accessor methods getter setter\n')

dawg	trie---------------------------------------------------

similar space-efficient prefixes
('dawg', 'more', 'trie', '681760', 'it is a structure similar to but twice as space-efficient as the dawg that is more efficient than the trie which only compresses prefixes\n')
('dawg', 'more', 'trie', '7638114', 'use a dawg which is more efficient than a trie in terms of space waste\n')

division	addition---------------------------------------------------

higher precedence subtraction
('division', 'operator higher', 'addition', '38932876', 'the division operator has a higher precendence than the addition operator so your function is calculating 1 1 + e -x\n')
('division', 'more complex', 'addition', '37904833', 'as far as i know the division is more complex and slower than other operations like addition so is my code incorrect then\n')
('division', 'much slower', 'addition', '8392125', 'it could be done via division which is much slower than addition or it could be translated into a bitwise and operation as well and end up being just as fast as the version\n')
('division', 'operator higher precedence', 'addition', '46675877', 'the division operator has a higher precedence than the addition operator + so you need to enclose the sum with brackets before dividing\n')
('division', 'simpler', 'addition', '4247640', 'knuth writes that fibonacci search is preferable on some computers because it involves only addition and subtraction not division by 2. but almost all computers use binary arithmetic in which division by 2 is simpler than addition and subtraction\n')
('addition', 'faster', 'division', '4624837', 'an addition is faster than a division and a multiplication\n')
('division', 'higher precedence', 'addition', '44168281', 'the division has higher precedence than the addition so what you re calculating is sumaverage1+ sumaverage2 5 which is integer division which is probably not what you want\n')
('division', 'slower', 'addition', '22877763', '2.the division by 2 can be done by bit - shift operation is it really slower than addition\n')
('division', 'higher precedence', 'addition', '16127818', 'multiplication and division operators have higher precedence than addition and subtraction in c++ same as in scientific notation\n')
('division', 'operator higher', 'addition', '19467456', 'the division operator has a higher order precedence as the addition operator\n')
('division', 'higher', 'addition', '27096708', 'division has a higher precedence than addition ergo\n')
('division', 'higher precedence', 'addition', '17433226', 'multiplication and division have a higher precedence than addition and subtraction\n')
('division', 'higher precedence', 'addition', '11533547', 'to start with i need multiplication and division to take higher precedence than addition and subtraction\n')
('division', 'operation slower', 'addition', '29574172', 'it is true that division and modulo a division operation is slower than addition\n')
('division', 'longer', 'addition', '1541739', 'the term is apparently not an exact measurement as it is clear that a double-precision floating-point operation is going to take longer than a single-precision one and multiplication and division are going to take longer than addition and subtraction\n')
('division', 'higher', 'addition', '19503254', 'since division has a higher precedence than addition 5 2 gets evaluated as a integer division returning 2 as an integer\n')
('division', 'slower', 'addition', '29574172', 'division is performed by repeated subtraction therefore needs more level of subtract logic making division slower than addition\n')
('division', 'higher', 'addition', '14622461', 'division has higher precedence than addition\n')
('division', 'higher precedence', 'addition', '28221487', 'note that division has a higher precedence than addition\n')
('division', 'higher', 'addition', '41993666', 'division has a higher precedence than addition or subtraction so it s really this\n')
('division', 'higher priority', 'addition', '43177267', 'multiplication and division have higher priority than addition and subtraction\n')
('division', 'higher precedence', 'addition', '45273269', 'finally we all know that multiplication and division have higher precedence than addition and subtraction so we can remove the extraneous parentheses so this turns into\n')
('division', 'higher precedence', 'addition', '37646748', 'multiplication and division are higher precedence than addition so they get done first - before the implicit conversion to string for concatenation\n')
('division', 'more tightly', 'addition', '884697', 'the addition and subtraction is okay because the types of a and b force them to be performed using floating point arithmetic - but because division binds more tightly than addition and subtraction it s like using the brackets above only the immediate operands are considered\n')
('division', 'operator higher', 'addition', '34712043', 'this happens because the division operator has higher precedence than the + addition operator\n')

time example cycles
('division', 'more time', 'addition', '24542784', 'i remember it says something like division takes much much more time than addition\n')
('division', 'far more', 'addition', '14395974', 'best example the division it an an addition are both o 1 but usually the division takes far more cycles time to execute than the addition\n')

faster gpu careful
('addition', 'faster', 'division', '26964749', 'so if your code has tough data dependency problems addition is about 12 times faster than division\n')
('addition', 'faster', 'division', '1348077', 'performing addition on this slightly larger type will pretty much always be faster than doing division or modulo on the type itself\n')
('division', 'operation faster', 'addition', '37904833', 'i need to find out that how much division operation is faster than addition operation in a gpu\n')
('addition', 'faster', 'division', '26964749', 'with careful optimization however you can make addition 61 times faster than division\n')

difference expensive costly
('division', 'much more', 'addition', '5649137', 'the first difference is that division is much more expensive than addition\n')
('division', 'more costly', 'addition', '26209229', 'generally the division is more costly than addition i think but not much difference in this case\n')

codeigniter	laravel---------------------------------------------------

features better
('laravel', 'much better', 'codeigniter', '26133517', 'before i am using codeigniter but i found out that laravel is much better than codeigniter and it has a lot of features\n')
('laravel', 'better', 'codeigniter', '25132418', 'if you ve been using laravel then you already know it is better than codeigniter\n')

firefox	safari---------------------------------------------------

paint scroll worse
('firefox', 'even worse', 'safari', '33516237', 'i planned on using svgs for the entire site but with only 20-30 svg images of medium to high complexity used in the page and google-chrome already seems to be showing som jank and high paint times for scroll and firefox is even worse though safari seems to do a lot better\n')
('safari', 'better', 'firefox', '7322272', 'safari behaves better than firefox but an error message â œone error in opening the pageâ â shows up in the status bar if you remove the iframe during the load event\n')

affinity	cpu---------------------------------------------------

time performance vs
('affinity', 'better', 'cpu', '39495136', 'but i found if i do not set their cpu affinity that is they run on same core 0 the time performance get better than setting cpu affinity 8.76s vs 14.66s\n')
('affinity', 'better', 'cpu', '15037998', 'cpu affinity it s better for the cpu to have a load average of 1.0 and processes to have affinity to a single core\n')

strncpy	strcpy---------------------------------------------------

unsafe cousins strcpy_s
('strncpy', 'safer', 'strcpy', '32834982', 'i was exploring around with c regarding strncpy since most people says that it is safer than strcpy additional parameter length to avoid buffer overflows\n')
('strncpy', 'safer alternative', 'strcpy', '3629186', 'in general strncpy is a safer alternative to strcpy\n')
('strncpy', 'safer', 'strcpy', '18727224', 'strcpy is notoriously unsafe as are it s cousins strcpy_s and strncpy although they are mildly safer than strcpy\n')
('strncpy', 'not safer method', 'strcpy', '13903306', 'strncpy is not safer method to use as strcpy\n')
('strncpy', 'safer', 'strcpy', '17641528', 'strncpy is safer than strcpy\n')
('strncpy', 'safer', 'strcpy', '33271840', 'you should use strcpy or strncpy safer than strcpy to copy the string stored in the array between arrays\n')
('strncpy', 'not safer', 'strcpy', '1258708', 'strncpy is not safer than strcpy it just trades one type of bugs with another\n')
('strncpy', 'safer', 'strcpy', '30884175', 'myth 3 strncpy is a safer version of strcpy\n')

better things strlcpy
('strcpy', 'better', 'strncpy', '5463735', 'strcpy could be better replaced by strncpy which does some bound checking\n')
('strncpy', 'actually better', 'strcpy', '44577839', 'i.e strncpy is actually better than the simpler strcpy if you are willing to improve the code\n')
('strncpy', 'better', 'strcpy', '10845959', 'using strncpy 3 is better than strcpy 3 but things like strlcpy 3 are better still\n')

screens	hdpi---------------------------------------------------

50px larger resolution
('hdpi', 'more', 'screens', '6366076', 'even if i create three versions for ldpi mdpi and hdpi there are more than screens resolutions in that table if there is no matching image it will scale my image and may not retain the aspect ratio\n')
('screens', 'larger', 'hdpi', '4885845', 'if in java code the values would be in pixels so 50px on mdpi screens will look larger than on hdpi screens\n')
('screens', 'less', 'hdpi', '11429933', 'so as i said - mdpi also doesn t means that your screens resolution is less than hdpi screens resolution\n')

operator-precedence	logical-or---------------------------------------------------

protected	public---------------------------------------------------

closer perfect method
('protected', 'better', 'public', '2757943', 'it s not perfect but i guess that a protected method that does not check parameters is better than a public method that does not do it\n')
('protected', 'more restrictive', 'public', '28963709', 'so a protected is more restrictive than public and private is more restrictive than protected\n')
('protected', 'better', 'public', '4753405', 'that means private is better than protected protected is better than public etc ..\n')
('protected', 'more restrictive', 'public', '15626425', 'protected is more restrictive than public\n')
('protected', 'closer', 'public', '8202001', 'protected is closer to public than private\n')
('protected', 'actually closer', 'public', '36322823', 'furthermore protected is actually closer to public than to private\n')

constructor someone class
('protected', 'less', 'public', '12325479', 'oh i see you need a constructor that has more access than protected but less than public\n')
('protected', 'access more', 'public', '3313279', 'the theory is that someone extending your class with protected access knows more about what they are doing than someone who is merely using it with public access\n')
('protected', 'much more', 'public', '761864', 'therefore the only types that should have access to a constructor are its derived types and hence protected makes much more sense than public\n')

package accessible accessibility
('protected', 'less accessible', 'public', '18376768', 'since package protected is less accessible than public the code is reducing the accessibility of the foo method\n')
('protected', 'more restrictive', 'public', '15220204', 'otherwise there is still the possibility to change a public access to a protected or package private access which will be much more restrictive than public\n')
('protected', 'less accessible', 'public', '24548057', 'change it to public to make it more accessible or perhaps better protected to make it less accessible than public but more than private read more about that here\n')

tcp	arp---------------------------------------------------

range	min---------------------------------------------------

first date console
('range', 'bigger', 'min', '43066794', 'my solution to the range part feels clunky over complicated and doesn t check if the max range value is bigger than the min range value doesn t check if 10 2\n')
('range', 'bigger', 'min', '44600848', 'for ease of debugging i pass the value of to reactive values and print the first date range s value to the console rendered to check whether the it is smaller or bigger than the min and max of the corresponding date column as i did in the lapply function\n')

maxpoint select values
('range', 'higher', 'min', '42850734', 'if you want to check that a number is between the min and max of the range you would likely want to check that it is both higher than the min and lower than the max\n')
('range', 'lower higher', 'min', '42035218', 'i m working on slider that updates 2 text boxes with values the slider is in a limited range so it doesn t give values lower higher than min max\n')
('range', 'greater', 'min', '15000781', 'range is 5000 to 50000 what i want to achive is in maxpoint select box i want to display the values which are greater than min points selected value\n')
('range', 'greater', 'min', '10851578', 'take a look at your picture - all the range you want have ending time greater than min and starting time less than max\n')
('range', 'lower', 'min', '22336343', 'a variation on pentadecagon you are free to set n arbitrary values on the diagonal in some range min..max containing x and fill the rest of the array with lower than min on one side and higher than max on the other\n')
('range', 'greater', 'min', '30718503', 'if range is greater then or less then the min and max then it should throw error\n')

exponent	multiplication---------------------------------------------------

misunderstanding small parameter
('exponent', 'not faster', 'multiplication', '12919354', 'the misunderstanding is that incrementing the exponent is not faster than doing a multiplication\n')
('multiplication', 'slower', 'exponent', '18453999', 'however naive multiplication will get slower and slower as the exponent increases\n')
('exponent', 'faster', 'multiplication', '14917576', 'this is analogous to the way you can compute exponent using successive squaring much faster than by repeated multiplication\n')
('exponent', 'faster', 'multiplication', '20776795', 'however with really very small parameter 2 in your case exponent is faster than multiplication\n')

exception-handling	try-catch---------------------------------------------------

keyup	keydown---------------------------------------------------

multiple stick example
('keydown', 'just better', 'keyup', '25939892', 'they have their differences better stick to one i prefer for this example to use keydown just plays better with me you can use keyup\n')
('keyup', 'more preferable', 'keydown', '20370954', 'keyup is more preferable than keydown because keydown may occur multiple times if user keeps it pressed\n')
('keydown', 'better', 'keyup', '33768168', 'also note that keydown is better for this methodology as keyup will fire multiple times though i guess this will too.\n')

events right value
('keyup', 'more', 'keydown', '45686156', 'then the right events to do it is keyup more than keydown since the value isn t yet in the field at this moment or on change\n')
('keyup', 'earlier', 'keydown', '12622265', 'as you can see the keyup events of numpad5 and numpad6 occured earlier than their keydown event\n')

little element silently-ish
('keydown', 'better', 'keyup', '25278766', 'also if you notice i ve changed the keyup event to keydown which is better in my opinion cause when the user holds their finger down on a button the code wouldn t be fired if it is on the keyup event\n')
('keydown', 'better', 'keyup', '19554689', 'edit keydown is a little better than keyup for the element bind now enter key fails silently-ish\n')

updatepanel	scriptmanager---------------------------------------------------

cypher	gremlin---------------------------------------------------

metaphone	soundex---------------------------------------------------

irrlicht	ogre---------------------------------------------------

tcl	perl---------------------------------------------------

wan	lan---------------------------------------------------

fireworks	photoshop---------------------------------------------------

dotnetzip	sharpziplib---------------------------------------------------

objectcontext	dbcontext---------------------------------------------------

simpler common development
('dbcontext', 'much simpler', 'objectcontext', '9224507', 'and dbcontext is much simpler to use than objectcontext and will serve the most common development needs\n')
('dbcontext', 'much simpler', 'objectcontext', '12495100', 'dbcontext is much simpler to use than objectcontext and will serve the most common development needs\n')

pleasant api easier
('dbcontext', 'api easier', 'objectcontext', '13000063', 'besides the dbcontext api is easier to use than objectcontext\n')
('dbcontext', 'more pleasant api', 'objectcontext', '13089533', 'dbcontext is a much more pleasant api than objectcontext\n')

better newer older
('dbcontext', 'api easier', 'objectcontext', '14727174', 'dbcontext api is easier to work with than objectcontext but both approaches use the former\n')
('dbcontext', 'newer', 'objectcontext', '17285367', 'my understanding is that although dbcontext is newer it s not necessarily better than objectcontext it just provides a different api that might be considered simpler but doesn t that depend on the use case\n')
('dbcontext', 'api better', 'objectcontext', '22010602', 'there are many reasons why the dbcontext api is better than the older objectcontext api but in your case it may initially feel like a downgrade\n')
('dbcontext', 'newer api', 'objectcontext', '15875489', 'dbcontext is newer api which should polish developers experience when using most common tasks - simply the api is better designed but you still have to get objectcontext from dbcontext and use the older api if you want to use some more complex features\n')
('objectcontext', 'worse', 'dbcontext', '7230825', 'it is a feature it is about objectcontext api but the same is true or worse with dbcontext api\n')

panels	scrollable---------------------------------------------------

larger form autoscroll
('panels', 'larger', 'scrollable', '5682770', 'the panels itself is larger than the form and is scrollable autoscroll true\n')
('scrollable', 'smaller inner', 'panels', '19957747', 'i am trying to create a jpanel that is resizable scrollable and contains x smaller inner panels\n')

sorting	filtering---------------------------------------------------

range query pseudomedian
('filtering', 'faster', 'sorting', '45873691', 'you d still have to filtering to get a range though it ought to be faster than sorting at least\n')
('filtering', 'slower just', 'sorting', '7274258', 'if almost all elements fail the filtering then it s considerably slower than just sorting everything since you ll end up selecting thousands of times\n')
('filtering', 'faster', 'sorting', '6654141', 'in terms of your speed query i d propose that your pseudomedian filtering is faster because it doesn t involve sorting\n')

nsmutablestring	nsstring---------------------------------------------------

xna	libgdx---------------------------------------------------

r-tree	quadtree---------------------------------------------------

indexes window queries
('r-tree', 'faster', 'quadtree', '27930062', 'r-tree are much faster than quadtree for nearest neighbours queries\n')
('r-tree', 'faster', 'quadtree', '27930062', 'r-tree are substantially faster than quadtree for window queries like inside contains covers etc\n')
('quadtree', 'faster', 'r-tree', '27930062', 'quadtree indexes are created faster than r-tree\n')

gwt-rpc	requestfactory---------------------------------------------------

gdi	directx---------------------------------------------------

simplification gdi-based speed
('gdi', 'slower', 'directx', '58301', 'speed is usually faster than gdi and slower than directx and depends greatly on how you do things seen something to work 60 times faster after rewriting in a sensible way\n')
('directx', 'faster', 'gdi', '3991925', 'directx is in general much faster than gdi due to the fact that it has full acceleration on most video cards\n')
('directx', 'faster', 'gdi', '368466', 'to say directx is faster than gdi is also something of a simplification - wpf and gdi-based rendering technologies just have different performance characteristics\n')
('directx', 'way faster', 'gdi', '5113541', 'directx is way faster than gdi\n')

xcb	xlib---------------------------------------------------

javassist	cglib---------------------------------------------------

ironpython	cpython---------------------------------------------------

possible jython virtual
('ironpython', 'faster', 'cpython', '8981895', 'ironpython is faster than c# in certain areas but not faster than cpython however you can link ironpython to any language thus over coming problems but then again you can do the same with cpython\n')
('ironpython', 'faster', 'cpython', '3033387', 'it s possible that jython and ironpython are much faster than cpython as well as they are backed by heavily optimized virtual machines jvm and .net clr\n')
('ironpython', 'much faster', 'cpython', '13964362', 'if there s any heavy application logic as opposed to all of the work being networking files database ironpython is much faster than cpython at a few things and much slower at a few others so you probably need to profile and perf-test before you go too far down either path\n')
('ironpython', 'slower', 'cpython', '12843154', 'also on implementations like jython or ironpython could be a lot slower than with cpython\n')
('ironpython', 'slower', 'cpython', '19013034', 'it seems ironpython is just slower than cpython for reading text files\n')

conclusion faster
('ironpython', 'potentially faster', 'cpython', '4148627', 'consequently ironpython is potentially faster than cpython is especially for multithreading scenarios\n')
('ironpython', 'faster', 'cpython', '620976', 'i m not sure exactly how you re drawing the conclusion that ironpython is faster than cpython\n')

couchbase	couchdb---------------------------------------------------

https	ssl---------------------------------------------------

virtual host port
('ssl', 'more', 'https', '39346295', 'there is a limitation on creating virtual hosts for name based virtual host while using ssl 443 port so if you want to have more than one https port enabled you will need ip based virtual hosting\n')
('https', 'more', 'ssl', '24386103', 'it could be a sni problem if you use any kind of load balancer https proxy or more than 1 ssl certificate on the same ip\n')

floyd-warshall	dijkstra---------------------------------------------------

max	median---------------------------------------------------

glut	sdl---------------------------------------------------

g++	gcc---------------------------------------------------

better
('g++', 'better', 'gcc', '8574598', 'g++ seems to work better than gcc in my experience\n')
('g++', 'better', 'gcc', '8133175', 'so using g++ is better than gcc\n')

stringr	stringi---------------------------------------------------

strncpy	memcpy---------------------------------------------------

wxpython	pyqt---------------------------------------------------

hash	crypt---------------------------------------------------

ember.js	backbone.js---------------------------------------------------

mousemove	mouseenter---------------------------------------------------

robocopy	xcopy---------------------------------------------------

better
('robocopy', 'better', 'xcopy', '33527711', 'also robocopy is better than xcopy\n')
('xcopy', 'better', 'robocopy', '23197486', 'xcopy will not be better than robocopy at this\n')

freebsd	linux---------------------------------------------------

padrino	ruby-on-rails---------------------------------------------------

wuliwong complex faster
('padrino', 'better', 'ruby-on-rails', '12682214', 'but i don t know anything about sinatra and padrino is the footprint and speed really that better than ruby-on-rails\n')
('padrino', 'less complex', 'ruby-on-rails', '14831065', 'as wuliwong said sinatra and padrino are way less complex than ruby-on-rails\n')
('padrino', 'faster', 'ruby-on-rails', '12686116', 'sinatra and padrino are not automatically faster than ruby-on-rails\n')

lxml	elementtree---------------------------------------------------

application speed effective
('lxml', 'faster', 'elementtree', '7949706', 'but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library\n')
('lxml', 'faster', 'elementtree', '20621248', 'lxml is faster than elementtree but i ve never found an application where the speed boost paid for the hassles of distribution\n')

qqmlapplicationengine	qquickview---------------------------------------------------

headline newer powerful
('qqmlapplicationengine', 'newer', 'qquickview', '46342425', 'since qqmlapplicationengine is newer than qquickview one would naturally assume that it is more powerful\n')
('qqmlapplicationengine', 'newer', 'qquickview', '40271518', 'headline qqmlapplicationengine is newer and more powerful than qquickview\n')

cpu	hyperthreading---------------------------------------------------

