performance, modulo, slower, ---------------------------------------------------

performance,modulo,slower,operations
i am a bit suspicious of the performance because modulo tends to use division which is slower than your subtraction operations

reduction,operation,weaker,cheaper
this is called a strength reduction operation because subtraction is a weaker and cheaper operation than division

test,platform,slower
this platform is probably not representative of your microcontroller but the test shows that on this platform the subtraction is considerably slower than the division

reduction,optimization,stronger,slower,expensive
this is called a strength reduction optimization because division is stronger slower more expensive than subtraction

operation,tighter,i.e,square,root
the division operation binds tighter than i.e is evaluated ahead of the subtraction so you are taking a square root of a negative number

greater, precedence, first, ---------------------------------------------------

greater,precedence,first,int,i.e,double
in this since division has greater precedence than subtraction therefore x 10 will execute first and here we are dividing two int irrespective of the fact that the variable where final answer is stored is a double so answer will be an int i.e 5 10 0 and then subtraction of an int and double will be done here int will be promoted to a double

operator,higher,precedence
doesn t get evaluated the way you are expecting the division operator has higher precedence than the subtraction operator

multiplication,remainder,operators,higher,precedence
remember multiplication division and remainder operators are all higher precedence than subtraction

higher,precedence
division has higher precedence than subtraction

higher,precedence,parenthesis
in this case division has higher precedence than subtraction parenthesis around the division or not

precedence,multiplication,greater,addition
i don t think they have a natural precedence unlike say multiplication and division being of greater precedence than subtraction and addition because they can be built from subtraction and addition

math.exp,b,higher,precedence
without parentheses math.exp c b is executed first as division has higher precedence than subtraction -

higher,precedence,first,examples
division has higher precedence than subtraction so in the first two examples only the second number is being divided

operator,higher,precedence
that s because the division operator has a higher precedence than the subtraction operator -

operator,higher,precedence
because the division operator has higher precedence than subtraction

other---------------------------------------------------

operator,higher,preference,first,example,brackets,place
this is because division operator has higher preference than the subtraction operator - in the first example you use are not using brackets therefore division takes place first you can change your code to

similar,base,type,cross-products,faster,trickier,numbers,long,kid
subtraction is similar using subtraction of the base type and borrow instead of carry multiplication can be done with repeated additions very slow or cross-products faster and division is trickier but can be done by shifting and subtraction of the numbers involved the long division you would have learned as a kid

thinking,comparison,easier
it may not be the most elegant method but when you just need to convert something ad-hoc thinking of it as comparison and subtraction may be easier than division

