better, multiple, theory, ---------------------------------------------------

multiple,theory,better
edit based on the tests done by multiple people and by theory isnull seems to be a better option over coalesce

example,better
an example of why coalesce is better than isnull

better,generic
isnull performs better than the generic coalesce and better than having another and

answers,trick,better
but depending on the answers to those questions i m guessing that coalesce might do the trick for you better than isnull

queries,thet,dynamic,better
in most cases it has reviled indexes that needed to be add and in most cases the indexes improved the queries the most but after thet have been added the isnull and dynamic still perform better than the coalesce

better
you will find that coalesce works better than isnull here

performance,field,constant,better
is the performance of coalesce field constant better than isnull

better,datatypes
isnull is better then coalesce because of how datatypes are handled

faster, place, circumstances, ---------------------------------------------------

place,faster
you can use isnull also in place of coalesce as isnull is comparatively faster than coalesce

circumstances,faster
in some circumstances isnull is faster than case or coalesce

input,faster
isnull can only have one input however it s been shown to be slightly faster than coalesce

ifloop,answer,faster
this is pretty much the ifloop answer but isnull is slightly faster than coalesce

faster,lesser,implementation
isnull will be faster i think because it has lesser function code implementation for itself making it faster than coalesce

faster
isnull is marginally faster than coalesce

faster
isnull is faster than coalesce

first, values, null, ---------------------------------------------------

first,non-null,set,values,parameters
i tend to use coalesce only when i need to get the first non-null value from a set of 3 or more values as isnull only supports two parameters

values,first,null,portable,ivnl
coalesce will go through the listed values and choose the first one that isn t null it s more portable code than isnull or ivnl etc

null,value,quicker
i understand the difference between these functions but my question is when checking for a single null value would isnull be any quicker than using coalesce

other---------------------------------------------------

cross-compatible,mssql,oracle
coalesce is more cross-compatible than isnull or nvl it works on mssql oracle mysql derby et al.

standard,alternative
coalesce is the more standard alternative of isnull

better,case..when,input,values,expression,multiple
using coalesce is better option than isnull or case..when for this problem since the input values for the coalesce expression can be evaluated multiple times

portable
- coalesce should be more portable than isnull

correct,over...,performance,microscope
coalesce is more correct of course you could just embed isnull over and over and over... but put that under a performance microscope and coalesce may just win

levels,stement
in this case i would use coalesce which provides more levels than isnull rather than the case stement

smart,enough,equivalent,sarg,bent,function,better,part,multiple,values,confusing,name,microsoft
sql server is probably smart enough to translate isnull into the equivalent sarg expression but if you are bent on using a function then coalesce is a better choice because it is part of the sql standard allows for multiple values instead of just two with isnull and avoids using quite possibly the most confusing function name microsoft ever devised in isnull

costly,research
i ve been told that coalesce is less costly than isnull but research doesn t indicate that

general,form,part,sql
you can also use coalesce which is the more general form of isnull and is actually part of the sql standard

sql,server,better,latter,ansi
on the subject of performance on sql server isnull often performs better than coalesce but the latter is ansi compliant if that is important to you

query,plans,efficient
to prefer isnull over coalesce when given the choice is that isnull tends to produce query plans that are more efficient than coalesce

