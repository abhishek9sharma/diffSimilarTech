2562
wmv	flv
pattern0	easier	
i found the production of wmv much better and easier than flv because all windows flv encoders i tried are not really good and stable whereas pretty much every tool can natively output wmv

6671
junit	testng
pattern8	more configurable	
testng strives to be much more configurable than junit but in the end they both work equally well

10809
listview	gridview
pattern0	better	
listview much better than the gridview dataview in that they let you write out clean html

14261
actionscript	mxml
pattern7	
if you write your own reusable components then writing them in actionscript may sometimes give you a little more control but for non-reusable views mxml is much better

16381
equals	gethashcode
pattern0	quicker	
gethashcode should be a lot quicker than equals but doesn t need to be unique

22074
nullpointerexception	illegalargumentexception
pattern10	more	
in my mind illegalargumentexception seems more specific than using a nullpointerexception since it s telling me that the problem was with an argument i passed to the method and not with a value that may have been generated while performing the method

22074
nullpointerexception	illegalargumentexception
pattern10	more specific	
in my mind illegalargumentexception seems more specific than using a nullpointerexception since it s telling me that the problem was with an argument i passed to the method and not with a value that may have been generated while performing the method

23203
haskell	scheme	lisp	scheme
pattern7	
i really like thompsonâ s â œhaskell the craft of functional programmingâ because itâ s well written and haskell allows an easier start than other functional languages while being completely pure unlike lisp or scheme

23203
haskell	scheme	lisp	scheme
pattern7	
i really like thompsonâ s â œhaskell the craft of functional programmingâ because itâ s well written and haskell allows an easier start than other functional languages while being completely pure unlike lisp or scheme

24035
integer	unsigned
pattern0	
in fact your going to get a value bigger than an integer can hold 4 billion unsigned 2 billion signed before the stack is going to over flow fibbonaci 46

24476
goto	break
pattern0	simpler	
if you re in a nested loop and need to break out of all loops a goto can make this much cleaner and simpler than break statements and if-checks

26851
perforce	svn
pattern8	more intuitive	
if anything i find working with svn easier and more intuitive than perforce

26851
perforce	svn
pattern8	more comfortable	
perforce does have support for many other oses but our non-windows devs feel more comfortable with svn too

27439
postgresql	mysql
pattern10	more	
from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster

27439
postgresql	mysql
pattern10	more correct	
from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster

27439
postgresql	mysql
pattern10	
from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster

27439
postgresql	mysql
pattern10	
from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster

27443
postgresql	mysql
pattern7	slower	
in most regards postgresql is slower than mysql especially when it comes to fine tuning in the end

27443
postgresql	mysql
pattern7	slower	
in most regards postgresql is slower than mysql especially when it comes to fine tuning in the end

27443
postgresql	mysql
pattern0	slower	
in most regards postgresql is slower than mysql especially when it comes to fine tuning in the end

29557
mbunit	nunit	mbunit	mstest	nunit	mstest
pattern8	
i ve read time and time again that tdd test first is more difficult with mstest than it is with other testing frameworks such as nunit mbunit etc.

29923
bazaar	git
pattern7	
in git you can do the same with playing around in the index staging area but bazaar has a better ui for it

29923
bazaar	git
pattern7	
in git you can do the same with playing around in the index staging area but bazaar has a better ui for it

34338
phpunit	simpletest
pattern0	easier	
i found simpletest was even easier than phpunit to set up

35627
filesystems	ntfs
pattern0	less	
when people say that unix filesystems are better they might mean to be saying oh ext3 stores bits in such as way that corruption happens way less than ntfs but they might also be talking about design choices made at the common layer above

44752
perforce	svn
pattern10	better	
make sure you re using a source control system that supports branching and merging i ve had experience with perforce and svn and while perforce is better svn is free

44752
perforce	svn
pattern10	better	
make sure you re using a source control system that supports branching and merging i ve had experience with perforce and svn and while perforce is better svn is free

45963
free	malloc
pattern10	
finding a package that can work with both new delete and malloc free obviously gives you more flexibility

45963
free	malloc
pattern10	
finding a package that can work with both new delete and malloc free obviously gives you more flexibility

46614
post	get
pattern10	also more	
post is also more secure than get because you aren t sticking information into a url

46614
post	get
pattern10	also more secure	
post is also more secure than get because you aren t sticking information into a url

46614
post	get
pattern8	more secure	
post is also more secure than get because you aren t sticking information into a url

47674
maven	m2e
pattern10	more	
in other words m2e is more friendly to the maven way

47674
maven	m2e
pattern10	more friendly	
in other words m2e is more friendly to the maven way

47929
udp	tcp
pattern10	faster	
udp is faster than tcp and the simple reason is because its nonexistent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculated by using the tcp window size and round-trip time rtt

47929
udp	tcp
pattern10	faster	
udp is faster than tcp and the simple reason is because its nonexistent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculated by using the tcp window size and round-trip time rtt

48015
emacs	textmate
pattern7	better	
textmate is a better emacs for macs though that won t help you with solaris

48015
emacs	textmate
pattern7	better	
textmate is a better emacs for macs though that won t help you with solaris

48103
division	modulo
pattern0	faster	
a side effect of many division routines is the modulo - so in few cases should division actually be faster than modulo

50632
integer	unsigned
pattern7	
otherwise if the operand that has unsigned integer type has rank greater or equal to the rank of the type of the other operand then the operand with signed integer type is converted to the type of the operand with unsigned integer type

50632
integer	unsigned
pattern7	
otherwise if the operand that has unsigned integer type has rank greater or equal to the rank of the type of the other operand then the operand with signed integer type is converted to the type of the operand with unsigned integer type

50909
youtube	vimeo
pattern0	fewer users	
vimeo will always have fewer users than youtube because the user experience is poor for low bitrate users

52179
postgresql	mysql
pattern0	worse	
i just checked the timings using mysql 5 and they are slightly worse than postgresql

52725
gridview	repeater	gridview	formview
pattern10	
the bind method really isn t for the repeater it s more for the formview or gridview where you are editing just one item in the list not every item in the list

52725
gridview	repeater	gridview	formview
pattern10	
the bind method really isn t for the repeater it s more for the formview or gridview where you are editing just one item in the list not every item in the list

52881
codeigniter	cakephp
pattern0	
also i don t think it is so much that asp.net mvc is so much better than cakephp or codeigniter ruby on rails etc. the great thing about asp.net mvc and other asp.net-based technologies such as monorail is that developers who are using asp.net now have the option of following the mvc pattern using tools and languages they are familiar with

55578
vmware	virtualbox
pattern7	more	
vmware has more features but costs 80 virtualbox on the other hand is more basic but is free for most users see virtualbox licensing faq for details

55578
vmware	virtualbox
pattern7	more features	
vmware has more features but costs 80 virtualbox on the other hand is more basic but is free for most users see virtualbox licensing faq for details

58301
directx	gdi
pattern0	
speed is usually faster than gdi and slower than directx and depends greatly on how you do things seen something to work 60 times faster after rewriting in a sensible way

58301
directx	gdi
pattern0	slower	
speed is usually faster than gdi and slower than directx and depends greatly on how you do things seen something to work 60 times faster after rewriting in a sensible way

60910
emacs	aquamacs
pattern7	
however i m not really much of an emacs user and the preferences menu in aquamacs is less than clear on where and how one might make such a change

60910
emacs	aquamacs
pattern7	
however i m not really much of an emacs user and the preferences menu in aquamacs is less than clear on where and how one might make such a change

65079
wideimage	phpthumb
pattern10	more	
wideimage is the more modern php5 approach while phpthumb has much more features

65079
wideimage	phpthumb
pattern10	more modern	
wideimage is the more modern php5 approach while phpthumb has much more features

65079
wideimage	phpthumb
pattern10	
wideimage is the more modern php5 approach while phpthumb has much more features

65079
wideimage	phpthumb
pattern10	
wideimage is the more modern php5 approach while phpthumb has much more features

67312
addition	multiplication
pattern0	
transcendental functions are always much more slower than addition or multiplication and a well-known bottleneck

68674
ubuntu	linux
pattern10	closer	
ubuntu is getting closer but there are still numerous things with linux that will keep the grandmothers of the world from using it

68674
ubuntu	linux
pattern10	closer	
ubuntu is getting closer but there are still numerous things with linux that will keep the grandmothers of the world from using it

69545
richfaces	icefaces
pattern10	more	
there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces

69545
richfaces	icefaces
pattern10	more semantic	
there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces

69545
richfaces	icefaces
pattern8	more semantic support	
there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces

69989
post	get
pattern0	
get is basically just like post it just has a limit on the amount of data you can send which is usually a lot smaller than post and a semantic difference which makes get not a good candidate from that point of view even if technically they both can do it

70423
quicksort	heapsort
pattern7	significantly slower	
but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average

70423
quicksort	heapsort
pattern7	significantly slower	
but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average

70423
quicksort	heapsort
pattern0	slower	
but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average

70440
quicksort	mergesort
pattern7	usually faster	
quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster

70440
quicksort	mergesort
pattern7	usually faster	
quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster

70440
quicksort	mergesort
pattern0	faster	
quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster

70440
quicksort	mergesort
pattern10	generally faster	
it s because that quicksort is generally faster that people use it instead of mergesort

70440
quicksort	mergesort
pattern10	generally faster	
it s because that quicksort is generally faster that people use it instead of mergesort

70627
quicksort	mergesort
pattern7	not better	
quicksort is not better it is well suited for a different kind of application than mergesort

70627
quicksort	mergesort
pattern7	not better	
quicksort is not better it is well suited for a different kind of application than mergesort

70881
addition	multiplication
pattern7	higher	
precedence rules specify priority of operators which operators will be evaluated first multiplication has higher precedence than addition pemdas

70881
addition	multiplication
pattern7	higher precedence	
precedence rules specify priority of operators which operators will be evaluated first multiplication has higher precedence than addition pemdas

70881
addition	multiplication
pattern0	higher precedence	
precedence rules specify priority of operators which operators will be evaluated first multiplication has higher precedence than addition pemdas

71743
tapestry	sitemesh
pattern10	
i have used sitemesh and it is good for wrapping a set of pages in standard headers and footers but tapestry is better for creating components which are used on many pages possibly many times per page

71743
tapestry	sitemesh
pattern10	
i have used sitemesh and it is good for wrapping a set of pages in standard headers and footers but tapestry is better for creating components which are used on many pages possibly many times per page

73157
free	malloc
pattern7	
yes that may since your allocating with new but deallocating with delelte yes malloc free is safer here but in c++ you should not use them since they won t handle de constructors

73157
free	malloc
pattern7	
yes that may since your allocating with new but deallocating with delelte yes malloc free is safer here but in c++ you should not use them since they won t handle de constructors

73157
free	malloc
pattern7	
yes that may since your allocating with new but deallocating with delelte yes malloc free is safer here but in c++ you should not use them since they won t handle de constructors

73157
free	malloc
pattern7	
yes that may since your allocating with new but deallocating with delelte yes malloc free is safer here but in c++ you should not use them since they won t handle de constructors

74931
postgresql	mysql
pattern0	better	
with correct locking for safety reasons and heavy concurrent use postgresql performed better than mysql

77328
textwrangler	bbedit
pattern0	
i really do not get the appeal it s marginally better than textwrangler bbedit s free little brother but if you re spending money you may as well buy the better tool for a few dollars more

77328
textwrangler	bbedit
pattern0	
i really do not get the appeal it s marginally better than textwrangler bbedit s free little brother but if you re spending money you may as well buy the better tool for a few dollars more

77883
bazaar	git
pattern7	imho easier	
bazaar is imho easier to learn than git

77883
bazaar	git
pattern7	imho easier	
bazaar is imho easier to learn than git

77945
quicksort	mergesort
pattern7	not better	
quicksort is not better than mergesort

77945
quicksort	mergesort
pattern7	not better	
quicksort is not better than mergesort

77945
quicksort	mergesort
pattern0	better	
quicksort is not better than mergesort

79550
width	height
pattern7	
if you can get that to work you might want to try progressively removing the height width position attributes from div.header to get the minimal required attributes to get the effect you want

79550
width	height
pattern7	
if you can get that to work you might want to try progressively removing the height width position attributes from div.header to get the minimal required attributes to get the effect you want

79771
multiplying	multiplication
pattern10	slightly more	
multiplication is slightly more complex as it needs an integer multiplying followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44

79771
multiplying	multiplication
pattern10	slightly more complex	
multiplication is slightly more complex as it needs an integer multiplying followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44

81982
robocopy	xcopy
pattern10	
at least use xcopy robocopy is even faster

81982
robocopy	xcopy
pattern10	
at least use xcopy robocopy is even faster

81983
datediff	difference
pattern10	more	
datediff becomes more difficult to use as you have more dateparts in your difference in your case looks like minutes and seconds

81983
datediff	difference
pattern10	more difficult	
datediff becomes more difficult to use as you have more dateparts in your difference in your case looks like minutes and seconds

85010
restrict	shared
pattern0	
the code is riddled with classes which contain nothing more than public shared attributes variables and methods functions the result of which restrict the application from opening more than one project at a time

85416
integer	fractions
pattern7	larger	
if the number of bits in the mantissa or fractions is larger than the number of bits in your integer type then you ll possibly lose precision when someone types in a number such as

85416
integer	fractions
pattern7	larger	
if the number of bits in the mantissa or fractions is larger than the number of bits in your integer type then you ll possibly lose precision when someone types in a number such as

90477
quicksort	mergesort
pattern10	faster	
as many people have noted the average case performance for quicksort is faster than mergesort

90477
quicksort	mergesort
pattern10	faster	
as many people have noted the average case performance for quicksort is faster than mergesort

91317
webclient	webrequest
pattern7	sometimes easier	
webclient is sometimes easier to use than webrequest

91317
webclient	webrequest
pattern7	sometimes easier	
webclient is sometimes easier to use than webrequest

94070
datamapper	activerecord
pattern10	potentially more	
datamapper is potentially more complex then activerecord but it s a lot easier to develop your domain model and database asynchronous then with activerecord

94070
datamapper	activerecord
pattern10	potentially more complex	
datamapper is potentially more complex then activerecord but it s a lot easier to develop your domain model and database asynchronous then with activerecord

95121
x86	64bit
pattern7	considerably slower	
x86 is considerably slower a few clocks plus a clock or so per function argument while 64bit is much less because most function arguments are passed in registers instead of on the stack

95121
x86	64bit
pattern7	considerably slower	
x86 is considerably slower a few clocks plus a clock or so per function argument while 64bit is much less because most function arguments are passed in registers instead of on the stack

95121
x86	64bit
pattern7	
x86 is considerably slower a few clocks plus a clock or so per function argument while 64bit is much less because most function arguments are passed in registers instead of on the stack

95121
x86	64bit
pattern7	
x86 is considerably slower a few clocks plus a clock or so per function argument while 64bit is much less because most function arguments are passed in registers instead of on the stack

99817
width	height
pattern7	more	
that is the height is more than half the width and depth -- little rule of thumb

99817
width	height
pattern7	more	
that is the height is more than half the width and depth -- little rule of thumb

101381
hex	binary
pattern7	
that s one reason why going from hex to binary is much easier than from decimal to binary

101381
hex	binary
pattern7	
that s one reason why going from hex to binary is much easier than from decimal to binary

105287
nunit	mstest
pattern7	
although several ci tools such as teamcity have better support for nunit probably would change as mstest becomes more popular

105287
nunit	mstest
pattern7	
although several ci tools such as teamcity have better support for nunit probably would change as mstest becomes more popular

105339
int	double
pattern10	more	
for floats and double it s more difficult as with plain int as these may or not may be in the host machines byte-order

105339
int	double
pattern10	more difficult	
for floats and double it s more difficult as with plain int as these may or not may be in the host machines byte-order

107883
quicksort	heapsort
pattern0	faster	
for example quicksort average cost t n.log n and heapsort average cost t n.log n are both sorting algorithms with the same average cost - yet quicksort is typically much faster than heapsort

109038
cairngorm	puremvc
pattern10	more	
puremvc is more invasive than cairngorm meaning that your code is heavily dependent on the framework you have to subclass implement the framework classes interfaces but that doesn t mean that cairngorm isn t

109038
cairngorm	puremvc
pattern10	more invasive	
puremvc is more invasive than cairngorm meaning that your code is heavily dependent on the framework you have to subclass implement the framework classes interfaces but that doesn t mean that cairngorm isn t

109038
cairngorm	puremvc
pattern8	more invasive	
puremvc is more invasive than cairngorm meaning that your code is heavily dependent on the framework you have to subclass implement the framework classes interfaces but that doesn t mean that cairngorm isn t

115620
google-chrome	firefox
pattern0	
until people have more experience with google-chrome i would think firefox is a better choice

115620
google-chrome	firefox
pattern7	
until people have more experience with google-chrome i would think firefox is a better choice

115620
google-chrome	firefox
pattern7	
until people have more experience with google-chrome i would think firefox is a better choice

115838
gif	png
pattern7	never worse	
as a general rule png is never worse and often better than gif because of superior compression

115838
gif	png
pattern7	never worse	
as a general rule png is never worse and often better than gif because of superior compression

115838
gif	png
pattern0	better	
as a general rule png is never worse and often better than gif because of superior compression

115838
gif	png
pattern7	slightly better	
there might be some edge cases where gif is slightly better because the png format may have a slightly larger overhead from metadata but it s really not worth the worry

115838
gif	png
pattern7	slightly better	
there might be some edge cases where gif is slightly better because the png format may have a slightly larger overhead from metadata but it s really not worth the worry

116210
gif	png
pattern0	smaller	
indexed png less than 256 colors is actually always smaller than gif so i use that most of the time

116461
gif	png
pattern0	larger equivalent	
if your png files are coming out larger than equivalent gif files it is almost certainly because your source image has more than 256 colors

116739
hash	md5
pattern0	more reliable	
sha-256 uses 64 characters in the database but with an index on the column that isn t a problem and it is a proven hash and more reliable than md5 and sha-1

116767
pbkdf2	hash
pattern7	quicker	
a key-stretching algorithm like pbkdf2 applies a quicker hash like sha512 thousands of times typically causing the hash generation to take 1 5 of a second or so

116767
pbkdf2	hash
pattern7	quicker	
a key-stretching algorithm like pbkdf2 applies a quicker hash like sha512 thousands of times typically causing the hash generation to take 1 5 of a second or so

123076
metaphone	soundex
pattern0	better	
edit double metaphone was specifically designed to be better than soundex and work in languages other than english

124248
rsa	aes
pattern0	less user-friendly	
algorithms like rsa are much less user-friendly than aes

124248
rsa	aes
pattern10	more	
that is actually not the case with rsa which is --- more so than aes --- just a math equation

124248
rsa	aes
pattern10	more so	
that is actually not the case with rsa which is --- more so than aes --- just a math equation

124248
rsa	aes
pattern7	less	
block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa

124248
rsa	aes
pattern7	less safe	
block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa

124248
rsa	aes
pattern0	less safe	
block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa

127152
int	chars
pattern0	
schema is simple like hell one table with autoint as primary index and less than 10 int tiny int and chars 10

127922
mbunit	nunit
pattern7	
mbunit has compatible syntax with nunit but has more features especially data driven tests

127922
mbunit	nunit
pattern7	
mbunit has compatible syntax with nunit but has more features especially data driven tests

128055
quicksort	shellsort
pattern0	slower	
if you use shellsort no extra memory is needed at all though shellsort will be much slower than quicksort

128221
g++	gcc
pattern0	looser	
unfortunately g++ packed the structs significantly looser than gcc which caused significant problems sharing objects between c and c++ code

133271
inline	inlining
pattern0	bigger	
if a function is static thus not exported anyway and only called once within your code and you never use a pointer to the function chances are good that gcc will decide to inline it automatically as it will have no negative impact the binary won t get bigger by inlining it only once

134346
hash	md5
pattern10	much more	
using a non-reversible hash such as md5 is much more secure and you can store the hash value as clear text

134346
hash	md5
pattern10	much more secure	
using a non-reversible hash such as md5 is much more secure and you can store the hash value as clear text

135543
versioning	upgrade
pattern0	
the subversion versioning on the server is older than the versioning on my notebook so i guess my newer versioning somehow upgrade the working directories so they are incompatible with the old versioning on the development server

139120
codeigniter	cakephp
pattern0	lighter	
i suspect codeigniter doesn t have quite as flexible a structure it s smaller and lighter than cakephp but a quick look at the cakephp manual to see how behaviors components helpers and the vendors folder may be helpful

140359
mantis	bugzilla
pattern0	
it certainly looks nicer and has better usability than mantis or bugzilla but it s not open and it makes some tradeoffs for a simpler interface

140501
width	height
pattern7	greater	
if the width is greater then height 3 4 screen.width then

140501
width	height
pattern7	greater then	
if the width is greater then height 3 4 screen.width then

140502
pop-up	dialog
pattern7	
i think it s a better idea to show a div as dialog in the middle of your website because the chance that this is pop-up blocked is smaller and it s imo less annoying

140502
pop-up	dialog
pattern7	
i think it s a better idea to show a div as dialog in the middle of your website because the chance that this is pop-up blocked is smaller and it s imo less annoying

141340
floating-point	integer
pattern0	simpler	
but integer arithmetic arguably is inherently simpler than floating-point

142240
cpu	processors
pattern7	better	
some fancy compilers understand the un interrelatedness of instructions to a limited extent and will automatically interleave instruction flows probably over a longer window than the cpu sees to better utilise the processors

142240
cpu	processors
pattern7	better	
some fancy compilers understand the un interrelatedness of instructions to a limited extent and will automatically interleave instruction flows probably over a longer window than the cpu sees to better utilise the processors

142427
versioning	upgrade
pattern7	number easier	
using compatibility as the central point in the versioning number makes it easier for users especially if te product is a library to judge whether or not they can expect a smoothe and safe upgrade or not

142427
versioning	upgrade
pattern7	number easier	
using compatibility as the central point in the versioning number makes it easier for users especially if te product is a library to judge whether or not they can expect a smoothe and safe upgrade or not

145433
maven	buildr
pattern0	faster	
and even though everybody says ruby is slow buildr was 2-6x faster than maven

147392
vim	emacs
pattern0	
emacs or vim is not significantly better than vim or emacs

148152
nant	cruisecontrol
pattern0	
think about project management bug reports and it all adds up to something more than just cruisecontrol svn and nant

148194
apache	nginx
pattern0	less memory	
servers like lighthttp and nginx can handle large amounts of traffic in much less memory than apache if you can sacrifice apache s power and flexibility or if you just don t need those things which often you don t

149212
cpu	hyperthreading
pattern7	more	
almost any new cpu has more than one core or if it has just one it might support hyperthreading and thus pretending it has more than one

149212
cpu	hyperthreading
pattern7	more	
almost any new cpu has more than one core or if it has just one it might support hyperthreading and thus pretending it has more than one

149409
3des	aes
pattern10	more	
3des is more expensive than aes for example

149409
3des	aes
pattern10	more expensive	
3des is more expensive than aes for example

149409
3des	aes
pattern8	more expensive	
3des is more expensive than aes for example

151399
ogre	irrlicht
pattern7	cleaner	
irrlicht has a cleaner api lower system requirements and works better across platforms than ogre in my opinion

151399
ogre	irrlicht
pattern7	cleaner api	
irrlicht has a cleaner api lower system requirements and works better across platforms than ogre in my opinion

154057
inherited	subclassing
pattern10	more	
inherited is more useful when a new subclassing wants to change the way a method works if you just need to change the data the class uses to work probably an approach like this would do the trick

154057
inherited	subclassing
pattern10	more useful	
inherited is more useful when a new subclassing wants to change the way a method works if you just need to change the data the class uses to work probably an approach like this would do the trick

157238
lwjgl	jogl
pattern10	more	
jogl is more java-like whereas lwjgl provides more gaming functionality on top of opengl access

157238
lwjgl	jogl
pattern10	more java-like	
jogl is more java-like whereas lwjgl provides more gaming functionality on top of opengl access

157238
lwjgl	jogl
pattern7	
jogl is more java-like whereas lwjgl provides more gaming functionality on top of opengl access

157238
lwjgl	jogl
pattern7	
jogl is more java-like whereas lwjgl provides more gaming functionality on top of opengl access

159971
cvs	svn
pattern7	better	
svn is better than cvs

159971
cvs	svn
pattern7	better	
svn is better than cvs

159971
cvs	svn
pattern0	better	
svn is better than cvs

160021
cvs	svn
pattern7	
so what is with svn that your company dislikes so much and cvs does better

160037
cvs	svn
pattern7	better	
svn is better than cvs because it was designed to be - it s roughly the same thing with some simplications and new features

160037
cvs	svn
pattern7	better	
svn is better than cvs because it was designed to be - it s roughly the same thing with some simplications and new features

160037
cvs	svn
pattern0	better	
svn is better than cvs because it was designed to be - it s roughly the same thing with some simplications and new features

161193
mouse	keyboard
pattern0	more	
for example do you use keyboard more than mouse

161202
cvs	svn
pattern8	more comparable format	
the first one can be solved by using svn +ssh which is the more comparable format as cvs uses its own protocol as well

161216
cvs	svn
pattern0	better	
svn was supposed to be better than cvs but in some areas that didn t work well

161216
cvs	svn
pattern8	more useful features	
the other distributed tools are a lot faster svn is slow as hell even cvs can be faster sometimes have much more useful features than svn are developing rapidly while seeing any new feature in svn takes years

166196
des	aes
pattern10	
i know you said you don t care about how secure it is but if you chose des you might as well take aes it is the more up-to-date encryption method

166196
des	aes
pattern10	
i know you said you don t care about how secure it is but if you chose des you might as well take aes it is the more up-to-date encryption method

170948
lisp	scheme
pattern0	better common	
here is a solution in scheme because i know that better than common lisp and have an interpreter for checking my work

172177
apache	lighttpd
pattern10	more	
the benefit of both apache is more powerful and extensible useless if you don t need that power but anyway... and lighttpd is faster at static content

172177
apache	lighttpd
pattern10	more powerful	
the benefit of both apache is more powerful and extensible useless if you don t need that power but anyway... and lighttpd is faster at static content

172177
apache	lighttpd
pattern10	
the benefit of both apache is more powerful and extensible useless if you don t need that power but anyway... and lighttpd is faster at static content

172177
apache	lighttpd
pattern10	
the benefit of both apache is more powerful and extensible useless if you don t need that power but anyway... and lighttpd is faster at static content

176144
firefox	safari
pattern7	
third in my experience going from safari to firefox is usually less problematic than the other way around

176144
firefox	safari
pattern7	
third in my experience going from safari to firefox is usually less problematic than the other way around

177565
verilog	vhdl
pattern10	more	
vhdl is more popular in europe and verilog is dominating in the us

177565
verilog	vhdl
pattern10	more popular	
vhdl is more popular in europe and verilog is dominating in the us

178555
verilog	vhdl
pattern0	more feature-rich	
yes vhdl was once much more feature-rich than verilog but later revisions of the language verilog 2001 verilog 2005 systemverilog etc.. have cherry-picked most of the interesting features and there is far more robust toolchain support for verilog and its variant these days in addition to it being the dominant language in use in the us in my experience vhdl is only used here when dealing with extreme legacy blocks and in academic contexts partially due to the tools support mentioned previously

179520
google-chrome	safari
pattern7	also earlier	
google-chrome also uses an earlier version of webkit than the current safari so pages should be checked in both browsers

179520
google-chrome	safari
pattern7	also earlier version	
google-chrome also uses an earlier version of webkit than the current safari so pages should be checked in both browsers

181450
coalesce	isnull
pattern0	
also you can make your code simpler by using isnull or coalesce to handle columns which contain nulls

183126
inherited	properties
pattern10	much more	
now in .net for desktop controls you can use inherited which is much more powerful than the old tag properties anyway

183126
inherited	properties
pattern10	much more powerful	
now in .net for desktop controls you can use inherited which is much more powerful than the old tag properties anyway

183290
ant	maven
pattern10	more	
as you ve already said ant is more a replacement for gnu make while maven is primary a buildout dependency-management application

183290
ant	maven
pattern10	more	
as you ve already said ant is more a replacement for gnu make while maven is primary a buildout dependency-management application

184381
webkit	gecko
pattern0	smaller	
my understanding is webkit is pretty good smaller than gecko

186990
configobj	configparser
pattern7	easier	
i ve heard that configobj is easier to work with than configparser

186990
configobj	configparser
pattern7	easier	
i ve heard that configobj is easier to work with than configparser

190913
subclass	abstract-class
pattern0	more	
making abstract-class before i had more than one subclass in mind for them

191616
cvs	svn
pattern8	more efficient	
in fact svn does stores binaries a lot more efficient than cvs for more info see the svn-faq

194130
ant	maven
pattern0	
it is much better than ant because for most common tasks you don t have to write a complicated build.xml maven has very good defaults and it s all convention over configuration

195398
postgresql	mysql
pattern10	
that s why it s usually said that mysql is best for webapps while postgresql is more enterprisey

195398
postgresql	mysql
pattern10	
that s why it s usually said that mysql is best for webapps while postgresql is more enterprisey

196705
django	web2py	pylons	web2py
pattern7	easier	
anyway the most important issue is that web2py is easier than django pylons php and rails

196705
django	web2py	pylons	web2py
pattern7	easier	
anyway the most important issue is that web2py is easier than django pylons php and rails

196705
django	web2py	pylons	web2py
pattern0	easier	
anyway the most important issue is that web2py is easier than django pylons php and rails

196705
django	web2py	pylons	web2py
pattern0	easier	
anyway the most important issue is that web2py is easier than django pylons php and rails

198565
post	get
pattern10	
neither one of get and post is inherently more secure than the other just like neither one of fax and phone is more secure than the other

198565
post	get
pattern10	
neither one of get and post is inherently more secure than the other just like neither one of fax and phone is more secure than the other

198565
post	get
pattern10	more	
get is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaining

198565
post	get
pattern10	more appropiate	
get is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaining

198565
post	get
pattern10	
get is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaining

198565
post	get
pattern10	
get is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaining

198624
nfa	dfa
pattern7	far easier	
because representation of a given problem with a nfa is far easier than the equivalent dfa

198624
nfa	dfa
pattern7	far easier	
because representation of a given problem with a nfa is far easier than the equivalent dfa

199290
nullpointerexception	illegalargumentexception
pattern0	longer	
decoding nullpointerexception is going to take a bit longer than illegalargumentexception filepath must be supplied or whatever

201171
quicksort	mergesort
pattern7	worse	
quicksort is worse complexity than mergesort in the worst case.

201171
quicksort	mergesort
pattern7	worse complexity	
quicksort is worse complexity than mergesort in the worst case.

201171
quicksort	mergesort
pattern0	worse complexity	
quicksort is worse complexity than mergesort in the worst case.

201950
postgresql	mysql
pattern7	much better	
postgresql gets much better performance and this is coming from a former mysql partisan

201950
postgresql	mysql
pattern7	much better performance	
postgresql gets much better performance and this is coming from a former mysql partisan

205364
postgresql	mysql
pattern0	faster	
mysql i am told can be optimized to do faster reads than postgresql but both are pretty ridiculously fast in terms of # transactions sec they support and it doesn t sound like that s your problem

206134
pop-up	dialog
pattern0	less intrusive	
from a practice standpoint - excluding accessibility - modal windows provide an alternative that are less startling as say dialog boxes and feel less intrusive than pop-up windows

209147
opera	google-chrome	opera	safari	google-chrome	safari
pattern0	
according to some - browser - statistics ie6 market share is still bigger than google-chrome safari and opera together nearly as much as ie7

209147
opera	google-chrome	opera	safari	google-chrome	safari
pattern0	
according to some - browser - statistics ie6 market share is still bigger than google-chrome safari and opera together nearly as much as ie7

215539
antivirus	norton
pattern0	better	
many other antivirus software that works just as well if not better than norton like avg avast and others do allow you to uninstall from the add remove

217708
config	ini
pattern0	
being php parseing it is nearly eg the file needs to be opened closed etc as fast as having the code at the top of each script and much faster than ini and xml config solutions

218031
mouse	keyboard
pattern7	
unless it s a usb keyboard mouse and 8042 emulation is disabled where you would need a usb stack but you can use the boot protocol for the keyboard mouse which is simpler

218544
centos	linux	centos	solaris	solaris	aix
pattern7	
and i do as much work as possible on our linux centos 5 system simply because the tools on it are still newer than anything i can find readily packaged for aix solaris is somewhat better

218544
centos	linux	centos	solaris	solaris	aix
pattern7	
and i do as much work as possible on our linux centos 5 system simply because the tools on it are still newer than anything i can find readily packaged for aix solaris is somewhat better

219506
mouse	keyboard
pattern0	
some elements require more than simple mouse keyboard interactions due to the complex rendering carried out by extjs

220922
elf	coff
pattern0	
it runs on a number of platforms and supports more than just elf files i believe it also supports coff and a few others

223029
interpreted-language	compiled-language
pattern0	faster	
a compiled-language will generally run faster than an interpreted-language so i think ruby and php start behind the eight ball but it really comes down to how you use the language and how you structure the code

224223
innodb	myisam
pattern10	
a better solution is not to use myisam for tables where the data is constantly changing - innodb is much more bulletproof and as paul correctly points out you can use transactions on innodb tables but not on myisam

224223
innodb	myisam
pattern10	
a better solution is not to use myisam for tables where the data is constantly changing - innodb is much more bulletproof and as paul correctly points out you can use transactions on innodb tables but not on myisam

226515
division	multiplication
pattern10	faster	
multiplication is faster division is more accurate

226515
division	multiplication
pattern10	faster	
multiplication is faster division is more accurate

226515
division	multiplication
pattern10	
multiplication is faster division is more accurate

226593
cruisecontrol	teamcity
pattern7	far easier	
for a one man shop teamcity is far easier to setup and configure than cruisecontrol

226593
cruisecontrol	teamcity
pattern7	far easier	
for a one man shop teamcity is far easier to setup and configure than cruisecontrol

228750
innodb	myisam
pattern7	slower	
also innodb is slower than myisam unless myisam is blocking for a huge select

228750
innodb	myisam
pattern7	slower	
also innodb is slower than myisam unless myisam is blocking for a huge select

228750
innodb	myisam
pattern0	slower	
also innodb is slower than myisam unless myisam is blocking for a huge select

229915
for-loop	loops
pattern10	neater	
putting the whole thing in a for-loop makes it neater and ensures that the iterating isread is called each loops

229915
for-loop	loops
pattern10	neater	
putting the whole thing in a for-loop makes it neater and ensures that the iterating isread is called each loops

232055
clistctrl	ccombobox
pattern0	
possibly faster than ccombobox with drawitem would be an owner data clistctrl

234378
accessor	properties
pattern0	
specialname is more than properties accessor event add remove methods count here as well that s why you have to check the names as well

234378
accessor	properties
pattern0	
specialname is more than properties accessor event add remove methods count here as well that s why you have to check the names as well

234591
tolower	toupper
pattern8	
it is suggested in this so post that c# is more efficient with toupper because microsoft optimized it that way. but i ve also read this argument that converting tolower vs

234639
tolower	toupper
pattern10	
i can t say whether toupper or tolower is faster though

234639
tolower	toupper
pattern10	
i can t say whether toupper or tolower is faster though

241621
nstableview	nssplitview
pattern0	shorter	
a pattern i also use is to make the nstableview slightly shorter than the nssplitview and have buttons at the bottom add delete etc

242546
kerberos	ldap
pattern0	more	
one might want to define kerberos access to more than one ldap server

245323
cvs	svn
pattern10	better	
that being said i think svn is better in every other respect and you probably shouldn t start a new project with cvs

245323
cvs	svn
pattern10	better	
that being said i think svn is better in every other respect and you probably shouldn t start a new project with cvs

251995
getter	setter
pattern10	
a getter without a setter is more like a public final member variable--but at that point why not just use a public final member variable they do no more harm.

251995
getter	setter
pattern10	
a getter without a setter is more like a public final member variable--but at that point why not just use a public final member variable they do no more harm.

256092
bazaar	git
pattern7	
bazaar is a distributed version tool just like git but is imo simpler to setup and use

256092
bazaar	git
pattern7	
bazaar is a distributed version tool just like git but is imo simpler to setup and use

257953
width	height
pattern7	
safari will expand up to a width of 800px unless the width is already greater than 800 in which case it maintains that width and only modifies the window height

257953
width	height
pattern7	
safari will expand up to a width of 800px unless the width is already greater than 800 in which case it maintains that width and only modifies the window height

259080
bluej	greenfoot
pattern7	better	
i think greenfoot is better than bluej for 8-years old

259080
bluej	greenfoot
pattern7	better	
i think greenfoot is better than bluej for 8-years old

259080
bluej	greenfoot
pattern0	better	
i think greenfoot is better than bluej for 8-years old

259460
postgresql	mysql
pattern10	more	
postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that

259460
postgresql	mysql
pattern10	more compliant	
postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that

259517
postgresql	mysql
pattern10	more	
i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql

259517
postgresql	mysql
pattern10	more powerful	
i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql

259517
postgresql	mysql
pattern8	more powerful	
i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql

260148
lxml	libxml2	lxml	libxslt	libxml2	libxslt
pattern10	
libxml2 libxslt also come with their own much lower-level python bindings but lxml is much more straightforward and pythonic and it seems to have great performance as well

260148
lxml	libxml2	lxml	libxslt	libxml2	libxslt
pattern10	
libxml2 libxslt also come with their own much lower-level python bindings but lxml is much more straightforward and pythonic and it seems to have great performance as well

262798
innodb	myisam
pattern7	heavier	
i know innodb is heavier than myisam but just how much more

262798
innodb	myisam
pattern7	heavier	
i know innodb is heavier than myisam but just how much more

262798
innodb	myisam
pattern0	heavier	
i know innodb is heavier than myisam but just how much more

263966
ubuntu	centos
pattern10	less	
in this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versions

263966
ubuntu	centos
pattern10	less desirable	
in this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versions

269117
swt	swing
pattern10	more	
swt is more simple to use than swing especially if this is your first ui

269117
swt	swing
pattern10	more simple	
swt is more simple to use than swing especially if this is your first ui

277306
boost	stl
pattern10	better	
i ve used both for the same project boost is better integrated with the stl and especially c++ exceptions

277306
boost	stl
pattern10	better	
i ve used both for the same project boost is better integrated with the stl and especially c++ exceptions

277511
innodb	myisam
pattern7	slower	
innodb is slower than myisam for most uses but can perform faster in certain conditions due to a better locking mechanism

277511
innodb	myisam
pattern7	slower	
innodb is slower than myisam for most uses but can perform faster in certain conditions due to a better locking mechanism

277511
innodb	myisam
pattern0	slower	
innodb is slower than myisam for most uses but can perform faster in certain conditions due to a better locking mechanism

277564
bluecloth	rdiscount
pattern8	more reliable	
rdiscount seems to be much faster and more reliable than bluecloth

283405
jboss	glassfish
pattern7	better	
i think glassfish is a better j2ee app server to start with than jboss

283405
jboss	glassfish
pattern7	better j2ee	
i think glassfish is a better j2ee app server to start with than jboss

283405
jboss	glassfish
pattern7	
jboss is a big and quite complex application and glassfish is smaller and i find it easier to understand

283405
jboss	glassfish
pattern7	
jboss is a big and quite complex application and glassfish is smaller and i find it easier to understand

285023
quicksort	heapsort
pattern0	smaller sets	
i was just going to say radix sort however that could be a bit above what you were looking to implement introsort is generally the accepted sorting solution for data it s a variation of quicksort that switches to heapsort when it reaches smaller sets as it s faster on smaller sets than quicksort

288727
floating-point	integer
pattern7	arithmetic usually faster	
which uses all integer arithmetic is usually faster than its floating-point equivalent likely significantly faster in the case of a floating-point type equivalent to t-sql s decimal type

288727
floating-point	integer
pattern7	arithmetic usually faster	
which uses all integer arithmetic is usually faster than its floating-point equivalent likely significantly faster in the case of a floating-point type equivalent to t-sql s decimal type

288727
floating-point	integer
pattern0	faster	
which uses all integer arithmetic is usually faster than its floating-point equivalent likely significantly faster in the case of a floating-point type equivalent to t-sql s decimal type

289468
children	parent
pattern7	more	
i have come up with a few ideas such as traversing the html document tree to its leaves adding up the length of the text and only seeing what other text the parent has if the parent gives us more content than the children do

289468
children	parent
pattern7	more content	
i have come up with a few ideas such as traversing the html document tree to its leaves adding up the length of the text and only seeing what other text the parent has if the parent gives us more content than the children do

289468
children	parent
pattern0	more content	
i have come up with a few ideas such as traversing the html document tree to its leaves adding up the length of the text and only seeing what other text the parent has if the parent gives us more content than the children do

292975
domxpath	domdocument
pattern10	
for this kind of task reading the document into a domdocument and using domxpath is probably more suitable

292975
domxpath	domdocument
pattern10	
for this kind of task reading the document into a domdocument and using domxpath is probably more suitable

294097
redmine	trac
pattern0	nicer	
redmine handles multiple projects and sub-projects right out of the box and overall seems nicer than trac

294978
int	double
pattern7	
if you assign an int to a double there s no loss of precision because double is wider

303277
mapguide	arcmap
pattern0	more	
i mostly work with esri software though i ve had a little bit of work with mapguide mostly for clients whose engineering departments are using cad more than arcmap

304069
ant	maven
pattern7	better	
however some things ant handles better than maven and if there s not a maven plugin for it it may be difficult to handle in maven

304069
ant	maven
pattern7	better	
however some things ant handles better than maven and if there s not a maven plugin for it it may be difficult to handle in maven

304069
ant	maven
pattern0	better	
however some things ant handles better than maven and if there s not a maven plugin for it it may be difficult to handle in maven

305216
ant	maven
pattern0	
i think that inventing something better than both ant and maven wouldn t be that difficult but that tool doesn t seem to exist yet

307238
getter	setter
pattern7	
from a performance and design perspective using annotations on getter is a better idea than member variables because the getter setter are called using reflection if placed on the field than a method

307238
getter	setter
pattern7	
from a performance and design perspective using annotations on getter is a better idea than member variables because the getter setter are called using reflection if placed on the field than a method

311896
lisp	scheme
pattern0	
i think architecture with sockets was chosen for better portability between different lisp btw slime also supports clojure and mit scheme and os-es slime works on windows too

315407
cos	sin
pattern0	
using a-star instead of brute force pathfinding will be faster just like how bresenham circles are better than using sin cos

317990
crypt	md5	crypt	hash	hash	md5
pattern7	
my sense is that encode and decode are probably good solutions when you want the data to be recoverable but that unrecoverable hash using crypt md5 is a better approach for stored passwords

317990
crypt	md5	crypt	hash	hash	md5
pattern7	
my sense is that encode and decode are probably good solutions when you want the data to be recoverable but that unrecoverable hash using crypt md5 is a better approach for stored passwords

317990
crypt	md5	crypt	hash	hash	md5
pattern7	
my sense is that encode and decode are probably good solutions when you want the data to be recoverable but that unrecoverable hash using crypt md5 is a better approach for stored passwords

317990
crypt	md5	crypt	hash	hash	md5
pattern7	
my sense is that encode and decode are probably good solutions when you want the data to be recoverable but that unrecoverable hash using crypt md5 is a better approach for stored passwords

319433
gif	png
pattern0	better	
paul points out that png compresses static line art better than gif for nearly every situation

323542
redmine	trac	redmine	mantis	redmine	bugzilla	trac	mantis	trac	bugzilla	mantis	bugzilla
pattern0	more	
i think you ll find that your team will like either trac or redmine more than bugzilla or mantis

323542
redmine	trac
pattern0	better	
the authors of redmine are trying to create a better trac than trac

332211
postgresql	mysql
pattern10	
for large and complicated systems yes there are enough bugs quirks that can rear their ugly heads - i am convinced that the reason that people tend to always go with mysql over postgresql is that the name mysql is much more attractive

332211
postgresql	mysql
pattern10	
for large and complicated systems yes there are enough bugs quirks that can rear their ugly heads - i am convinced that the reason that people tend to always go with mysql over postgresql is that the name mysql is much more attractive

332459
postgresql	mysql
pattern7	
i m currently considering which is a better choice for my php application - mysql which i m more familiar with or postgresql which has less php support no object-oriented wrapper but seems tried and tested

332459
postgresql	mysql
pattern7	
i m currently considering which is a better choice for my php application - mysql which i m more familiar with or postgresql which has less php support no object-oriented wrapper but seems tried and tested

333440
activemq	rabbitmq
pattern10	way more	
apache activemq which is way more popular than qpid or rabbitmq - or indeed any jms provider would work just fine

333440
activemq	rabbitmq
pattern10	way more popular	
apache activemq which is way more popular than qpid or rabbitmq - or indeed any jms provider would work just fine

337764
int	chars
pattern0	less room	
for lookup tables with a low volume of rows you can use a 3 chars code as the primary key as this takes less room than an int but the performance difference is negligible

340054
width	height
pattern7	greater	
add a new row until height is greater than width

340054
width	height
pattern7	greater	
add a new row until height is greater than width

340054
width	height
pattern0	greater	
add a new row until height is greater than width

340054
width	height
pattern7	greater	
add a new column until width is greater than height

340054
width	height
pattern7	greater	
add a new column until width is greater than height

340054
width	height
pattern0	greater	
add a new column until width is greater than height

344281
folder	directory
pattern7	
the problem is that i ve now accumulated a bunch of backup folder in each project directory which makes it harder to find the specific change i was looking for

344281
folder	directory
pattern7	
the problem is that i ve now accumulated a bunch of backup folder in each project directory which makes it harder to find the specific change i was looking for

344492
google-chrome	firefox
pattern7	
used to be firefox but google-chrome is nicer out of the box

344492
google-chrome	firefox
pattern7	
used to be firefox but google-chrome is nicer out of the box

348306
wordpress	phpbb
pattern7	
a typical lamp application like wordpress or phpbb runs more than 10 queries per pageview without problems

348306
wordpress	phpbb
pattern7	
a typical lamp application like wordpress or phpbb runs more than 10 queries per pageview without problems

360494
cpu	processors
pattern7	more	
passive loadbalancing if a physical cpu is running more than one task the scheduler will attempt to run any new tasks on a second physical processors

360494
cpu	processors
pattern7	more	
passive loadbalancing if a physical cpu is running more than one task the scheduler will attempt to run any new tasks on a second physical processors

361681
range	min
pattern0	
grid min value should be either 0 or a nice value lower than the min value of the data in range

365630
for-loop	loops
pattern7	much faster	
i did test it a while ago with the result that a for-loop is much faster than a foreach loops

365630
for-loop	loops
pattern7	much faster	
i did test it a while ago with the result that a for-loop is much faster than a foreach loops

365804
dlsym	dlopen
pattern0	
given that i know little about apache modules i would try to remove apache from the equation try writing a simple c program that does little more than a dlopen and possibly the subsequent dlsym then exits

365834
innodb	myisam
pattern7	more	
innodb has more overhead but uses row-level locking so that reads and writes can happen concurrently without the problems that myisam s table locking incurs

365834
innodb	myisam
pattern7	more overhead	
innodb has more overhead but uses row-level locking so that reads and writes can happen concurrently without the problems that myisam s table locking incurs

365945
firefox	safari
pattern0	more forgiving	
but i haven t yet figured out whether it s me writing sloppy code with firefox perhaps being more forgiving than safari or if it s safari or if it s jquery

367387
versioning	upgrade
pattern0	
this code is more for an example and in this example below it is checking to see if the versioning of notepad.exe needs to be upgrade that means the versioning stored in the property table value notepad_verson is greater than the versioning of notepad.exe on the system

368466
directx	gdi
pattern10	faster	
to say directx is faster than gdi is also something of a simplification - wpf and gdi-based rendering technologies just have different performance characteristics

368466
directx	gdi
pattern10	faster	
to say directx is faster than gdi is also something of a simplification - wpf and gdi-based rendering technologies just have different performance characteristics

371821
apache	lighttpd
pattern10	even faster	
for instance in some benchmarks lighttpd is even faster at serving static resources than apache

371821
apache	lighttpd
pattern10	even faster	
for instance in some benchmarks lighttpd is even faster at serving static resources than apache

373983
rtp	rtcp	rtp	sdp	rtp	sip	sip	sdp	rtcp	sdp
pattern0	
internet telephony is a lot more than sip - rtp rtcp sdp on-device audio handling etc.

375160
getter	setter
pattern10	
if the getter setter is any more complex than that i would use get_x and set_x

375160
getter	setter
pattern10	
if the getter setter is any more complex than that i would use get_x and set_x

375160
getter	setter
pattern10	
if the getter setter is any more complex than that i would use get_x and set_x

375160
getter	setter
pattern10	
if the getter setter is any more complex than that i would use get_x and set_x

377519
int	double
pattern7	
i d guess that when calling mymethod 5 5 could be a double or an int as well and double has higher priority

377519
int	double
pattern7	
i d guess that when calling mymethod 5 5 could be a double or an int as well and double has higher priority

380074
innodb	myisam
pattern7	better	
innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash

380074
innodb	myisam
pattern7	better performance	
innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash

380074
innodb	myisam
pattern0	better performance	
innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash

380074
innodb	myisam
pattern7	
innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash

380074
innodb	myisam
pattern7	
innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash

380074
innodb	myisam
pattern10	
innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash

380074
innodb	myisam
pattern10	
innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash

380092
int	chars
pattern0	better bet	
well then an int field may just be a better bet than a chars 50

380757
redmine	trac
pattern8	more complete	
i d recommend redmine like the other posters as it is more complete than trac

382518
imperative	declarative
pattern7	code easier	
declarative code is easier to make bug-free than imperative code

382518
imperative	declarative
pattern7	code easier	
declarative code is easier to make bug-free than imperative code

384102
tortoisegit	svn
pattern0	better	
nobody has ever accused git of being easy-to-use no tortoisegit for example although i hear it s coming so you might be better off with svn beanstalk

386826
ati	nvidia
pattern0	
a co-worker says there s fewer issues with an ati card at home than with nvidia but i ve been updating my video drivers pretty much monthly for the past few months and it s still not resolved so we can t just release our product and just tell our customers that some day the driver manufacturers may get around to fixing this

386835
redmine	trac
pattern0	better	
redmine is an open source ruby on rails application that supports multiple projects much better than trac and seems to be much easier to administer

388146
free	memmove
pattern8	more efficient	
the compiler is free to choose a method that is more efficient than memmove

388422
fink	macports
pattern10	more	
i second macports it is more up to date than fink and closer to the freebsd ports system where i come from

388422
fink	macports
pattern10	more	
i second macports it is more up to date than fink and closer to the freebsd ports system where i come from

389813
sortedlist	sorteddictionary
pattern7	less	
sortedlist uses less memory than sorteddictionary

389813
sortedlist	sorteddictionary
pattern7	less memory	
sortedlist uses less memory than sorteddictionary

389813
sortedlist	sorteddictionary
pattern0	less memory	
sortedlist uses less memory than sorteddictionary

389813
sortedlist	sorteddictionary
pattern7	faster	
sorteddictionary has faster insertion and removal operations for unsorted data o log n as opposed to o n for sortedlist

389813
sortedlist	sorteddictionary
pattern7	faster insertion	
sorteddictionary has faster insertion and removal operations for unsorted data o log n as opposed to o n for sortedlist

389813
sortedlist	sorteddictionary
pattern10	faster	
if the list is populated all at once from sorted data sortedlist is faster than sorteddictionary

389813
sortedlist	sorteddictionary
pattern10	faster	
if the list is populated all at once from sorted data sortedlist is faster than sorteddictionary

389824
innodb	myisam
pattern7	actually faster	
innodb is actually faster than myisam in quite a few cases so it depends on what your application s mix of selects updates concurrent queries indexes buffer configuration etc

389824
innodb	myisam
pattern7	actually faster	
innodb is actually faster than myisam in quite a few cases so it depends on what your application s mix of selects updates concurrent queries indexes buffer configuration etc

389824
innodb	myisam
pattern0	faster	
innodb is actually faster than myisam in quite a few cases so it depends on what your application s mix of selects updates concurrent queries indexes buffer configuration etc

392733
haskell	scheme
pattern0	earlier	
some background i m learning haskell now having earlier worked with scheme and cl and a little foray into clojure

393362
perl	tcl
pattern0	worse	
tcl is no better nor worse than perl ruby python or any other scripting language in this regard -- they all do basic file operations with equal aplomb

399122
int	chars
pattern7	
there have been machines where sizeof int will be one value probably 4 but where sizeof chars is larger

400867
mouse	keyboard
pattern7	
getting proficient with a mix of sr and keyboard mouse is much easier than full hands-free operation

400867
mouse	keyboard
pattern7	
getting proficient with a mix of sr and keyboard mouse is much easier than full hands-free operation

400867
mouse	keyboard
pattern7	
getting proficient with a mix of sr and keyboard mouse is much easier than full hands-free operation

400867
mouse	keyboard
pattern7	
getting proficient with a mix of sr and keyboard mouse is much easier than full hands-free operation

401279
vsto	add-in
pattern10	
vba add-in are a bit troublesome to deploy but vsto is even more so

401279
vsto	add-in
pattern10	
vba add-in are a bit troublesome to deploy but vsto is even more so

402030
width	height
pattern0	
if the distance between the center of the circle and all of the vertices is greater than the radius of the circle and all of those distances are shorter than the width and height of the rectangle then the circle should be inside of the rectangle

402806
trie	tree
pattern10	more	
a suffix tree is more or less an advanced trie here you can also search for any substrings in o c as for the trie

402806
trie	tree
pattern10	more	
a suffix tree is more or less an advanced trie here you can also search for any substrings in o c as for the trie

405022
innodb	myisam
pattern10	faster	
myisam is faster in data warehousing situations such as full table scan reporting etc.. but innodb can actually be faster in many cases with normal oltp queries

405022
innodb	myisam
pattern10	faster	
myisam is faster in data warehousing situations such as full table scan reporting etc.. but innodb can actually be faster in many cases with normal oltp queries

405022
innodb	myisam
pattern7	
innodb is harder to tune since it has more knobs but a properly tuned innodb system can often have higher throughput than myisam due to better locking and better i o patterns

405022
innodb	myisam
pattern7	
innodb is harder to tune since it has more knobs but a properly tuned innodb system can often have higher throughput than myisam due to better locking and better i o patterns

405022
innodb	myisam
pattern0	higher throughput	
innodb is harder to tune since it has more knobs but a properly tuned innodb system can often have higher throughput than myisam due to better locking and better i o patterns

406288
getter	setter
pattern10	
i feel like the getter setter example is more clear and hides the implementation details of what name and description are

406288
getter	setter
pattern10	
i feel like the getter setter example is more clear and hides the implementation details of what name and description are

406426
lisp	prolog
pattern0	easier	
i also checked prolog and it seems a pretty cool language easy to do relations between data and easier than lisp but i d like to hear what you think

408820
awt	swing
pattern10	more	
are there any cases where awt is more useful advised to use than swing or vice-versa

408820
awt	swing
pattern10	more useful	
are there any cases where awt is more useful advised to use than swing or vice-versa

408981
pyopengl	pyglet
pattern7	actually more	
i d say that pyglet is actually more evolved than pyopengl

408981
pyopengl	pyglet
pattern7	actually more	
i d say that pyglet is actually more evolved than pyopengl

408981
pyopengl	pyglet
pattern0	more	
i d say that pyglet is actually more evolved than pyopengl

409563
int	boolean
pattern7	
returning boolean or an int is more of a c mindset than a java in java you would just handle the exception one

409563
int	boolean
pattern7	
returning boolean or an int is more of a c mindset than a java in java you would just handle the exception one

410176
photoshop	fireworks
pattern7	easier	
i find fireworks has an easier time dealing with vectors because they re first class objects while in photoshop they re actually a combination of a vector mask and a colour fill

410176
photoshop	fireworks
pattern7	easier time	
i find fireworks has an easier time dealing with vectors because they re first class objects while in photoshop they re actually a combination of a vector mask and a colour fill

410465
profiler	perf
pattern10	more	
a profiler gives you more detailed information which can help to diagnose and fix perf problems

410465
profiler	perf
pattern10	more detailed	
a profiler gives you more detailed information which can help to diagnose and fix perf problems

413752
ant	maven
pattern0	more	
i d definitely use ant or maven - my preference is ant because it s more flexible and i think it would suit your development style more than maven as well

414289
mouse	keyboard
pattern0	faster	
the keyboard is almost always faster than the mouse

414763
subtraction	modulo
pattern0	slower	
as you can see modulo is about an order of magnitude slower than subtraction

415743
vmware	virtualbox
pattern7	
i managed to use andlinux + wine to get this working but honestly i think the vmware virtual pc virtualbox route is simpler

416947
awt	swing
pattern0	less memory	
i mean by light weight i thought maybe the swing components occupy less memory than the awt components

417342
multiplying	subtract
pattern8	more reliable	
adding and subtract logarithms of factorials then taking the exponential at the end is more reliable than multiplying and dividing factorials directly

421566
minimum	max
pattern0	
the plugin dll itself also does not expose anything more than the minimum interface required by max for adding a few top level scripted classes

422343
intersect	contains
pattern7	greater	
given two ranges a a b and c c d do they intersect is one greater than the other or does one contains the other

422343
intersect	contains
pattern7	greater	
given two ranges a a b and c c d do they intersect is one greater than the other or does one contains the other

425355
width	height
pattern7	
for a cross-browser experience its either scroll width height or offset width height whichever is greater

430730
post	get
pattern0	
or how is it better than post redirect get if the functions can in fact be used in solving my particular problem

430883
junit	testng
pattern10	more	
testng is more flexible than junit and have multiple advantages like support for parallel testing for example

430883
junit	testng
pattern10	more flexible	
testng is more flexible than junit and have multiple advantages like support for parallel testing for example

430883
junit	testng
pattern8	more flexible	
testng is more flexible than junit and have multiple advantages like support for parallel testing for example

431398
apache	nginx
pattern0	
so you can do a django redirect_to urlconf entry but you d be better off with an apache or nginx or insert-your-webserver-here redirect so the initial request never has to hit django at all

433998
int	chars
pattern0	
note that in c++ literals having more than one chars still have type int although their value is implementation defined

434277
post	get
pattern0	
now that you accept more than simple get post json or xml your model will have to distinguish between each request type and know how to parse them

436535
division	multiplication
pattern0	slower	
can be fast or it can be awfully slow even if division is done entirely in hardware if it is done using a div instruction this instruction is about 3 to 4 times slower than a multiplication on modern cpus

436535
multiplying	multiplication	multiplying	division	division	multiplication
pattern0	faster	
in a 64 bit application this code will be a lot faster than in a 32 bit application in a 32 bit application multiplying two 64 bit numbers take 3 multiplication and 3 additions on 32 bit values - however it might be still faster than a division on a 32 bit machine

436535
division	multiplication
pattern0	slower hardware	
you always need to know the magic number here 0xaaaaaaab and the correct operations after the multiplication shifts and or additions in most cases and both is different depending on the number you want to divide by and both take too much cpu time to calculate them on the fly that would be slower than hardware division

440239
int	double
pattern8	
this shouldn t come as any surprise - there are more long values than double given the nan values and plenty of double aren t int so we can t expect every long to be exactly representable

442181
postgresql	mysql
pattern7	better	
i also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoid

442181
postgresql	mysql
pattern7	better handling	
i also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoid

449918
webclient	webrequest
pattern7	simpler	
webclient is simpler to use than webrequest

449918
webclient	webrequest
pattern7	simpler	
webclient is simpler to use than webrequest

453751
kerberos	ntlm
pattern7	better	
in fact in some ways ntlm is better than kerberos

453751
kerberos	ntlm
pattern7	better	
in fact in some ways ntlm is better than kerberos

453751
kerberos	ntlm
pattern0	better	
in fact in some ways ntlm is better than kerberos

454121
x86	mips
pattern8	more complex instructions	
x86 have more complex instructions than mips

455359
int	double
pattern8	
int and string are really quite different certainly more different than int and double

463420
freemarker	velocity
pattern7	simpler	
velocity is simpler than freemarker

463420
freemarker	velocity
pattern7	simpler	
velocity is simpler than freemarker

463420
freemarker	velocity
pattern0	simpler	
velocity is simpler than freemarker

463420
freemarker	velocity
pattern10	more	
freemarker is more powerful than velocity

463420
freemarker	velocity
pattern10	more powerful	
freemarker is more powerful than velocity

463420
freemarker	velocity
pattern8	more powerful	
freemarker is more powerful than velocity

463954
firefox	safari
pattern7	just better	
firefox is just better for web development and i prefer safari overall

463954
firefox	safari
pattern7	just better	
firefox is just better for web development and i prefer safari overall

465728
subtraction	multiplication	subtraction	addition	division	multiplication	division	subtraction	division	addition	addition	multiplication
pattern0	higher	
i know the basics division and multiplication higher than addition and subtraction but i would have to look up something more esoteric

470267
int	double
pattern10	
this one s an overflow but i think it illustrates the unreliability of isnumeric in general especially for int - for double it s much more reliable

470267
int	double
pattern10	
this one s an overflow but i think it illustrates the unreliability of isnumeric in general especially for int - for double it s much more reliable

471259
trac	bugzilla
pattern0	better	
trac s issue tracking is little better than bugzilla s...i know a lot of folks love trac but i find it very inflexible

472158
sortedlist	sorteddictionary
pattern7	less	
sortedlist uses less memory than sorteddictionary

472158
sortedlist	sorteddictionary
pattern7	less memory	
sortedlist uses less memory than sorteddictionary

472158
sortedlist	sorteddictionary
pattern0	less memory	
sortedlist uses less memory than sorteddictionary

472158
sortedlist	sorteddictionary
pattern7	faster	
sorteddictionary has faster insertion and removal operations for unsorted data o log n as opposed to o n for sortedlist

472158
sortedlist	sorteddictionary
pattern7	faster insertion	
sorteddictionary has faster insertion and removal operations for unsorted data o log n as opposed to o n for sortedlist

472283
for-loop	loops
pattern7	generally better	
the conclusion of the article is that using for-loop is generally better and faster than the foreach loops

472283
for-loop	loops
pattern7	generally better	
the conclusion of the article is that using for-loop is generally better and faster than the foreach loops

472333
disk	ram
pattern7	much faster	
ram is much faster than disk

472333
disk	ram
pattern7	much faster	
ram is much faster than disk

472333
disk	ram
pattern0	faster	
ram is much faster than disk

482268
hash	salt
pattern0	longer	
you can safely store the salt in the db because working out a string from its hash is just as hard when you know some of the string as it is when you know none of it provided the password itself is longer than the salt and long enough and strong enough to take a long time to crack by brute force at least 6 chars with at least one case change and a number or non-alphanumeric i d say

482412
ftp	smb
pattern10	faster	
push log files to a central location ftp is faster than smb the windows ftp command can be automated with -s scriptfile

482412
ftp	smb
pattern10	faster	
push log files to a central location ftp is faster than smb the windows ftp command can be automated with -s scriptfile

484066
hex	binary
pattern7	representation better	
it seems the from a readability and usability standpoint the hex representation is a better way of defining binary numbers

484066
hex	binary
pattern7	representation better way	
it seems the from a readability and usability standpoint the hex representation is a better way of defining binary numbers

484840
runtimeexception	unchecked-exception
pattern0	
note better than just runtimeexception would be to use a more specific unchecked-exception if one is available

484849
hex	binary
pattern7	just less	
hex is just less verbose and can express anything a binary number can

484849
hex	binary
pattern7	just less verbose	
hex is just less verbose and can express anything a binary number can

486951
nunit	mstest
pattern8	
attributes are used in a more meaningful manner than mstest or nunit

487454
quicksort	mergesort
pattern7	worse	
given that it is possible to vastly reduce the likelihood of the worst case of quicksort s time complexity via random selection of the pivot for example i think one could argue that mergesort is worse in all but the pathological case of quicksort

487454
quicksort	mergesort
pattern7	worse	
given that it is possible to vastly reduce the likelihood of the worst case of quicksort s time complexity via random selection of the pivot for example i think one could argue that mergesort is worse in all but the pathological case of quicksort

488946
superclass	subclassing
pattern10	more	
if the subclassing is more specific then it might fill in all by 2 of the arguments to its superclass __init__ method

488946
superclass	subclassing
pattern10	more specific	
if the subclassing is more specific then it might fill in all by 2 of the arguments to its superclass __init__ method

488978
mockito	easymock
pattern7	
the easymock support is complete but the mockito plugin needs some more work

488978
mockito	easymock
pattern7	
the easymock support is complete but the mockito plugin needs some more work

495528
vbscript	jscript
pattern10	infinitely more	
when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection

495528
vbscript	jscript
pattern10	infinitely more elegant	
when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection

495528
vbscript	jscript
pattern8	more elegant	
when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection

497794
quicksort	mergesort
pattern0	quicker	
i had been taught that quicksort is almost always quicker than mergesort and i understand that there is some debate on this topic but i at least expected it to be closer than this

497819
quicksort	mergesort
pattern0	better	
previously discussed on so why is quicksort better than mergesort

497849
mergesort	in-place
pattern7	more	
another reason is that mergesort needs more memory because it s hard to implement it as an in-place sort

497849
mergesort	in-place
pattern7	more memory	
another reason is that mergesort needs more memory because it s hard to implement it as an in-place sort

497967
quicksort	mergesort
pattern7	better	
the biggest difference that can be produced between the two of them will always be to quicksort s detriment and it involves lists that are already largely sorted or contain a large number of ties when quicksort does better than mergesort the difference will not be nearly so great

497967
quicksort	mergesort
pattern7	better	
the biggest difference that can be produced between the two of them will always be to quicksort s detriment and it involves lists that are already largely sorted or contain a large number of ties when quicksort does better than mergesort the difference will not be nearly so great

497967
quicksort	mergesort
pattern0	better	
the biggest difference that can be produced between the two of them will always be to quicksort s detriment and it involves lists that are already largely sorted or contain a large number of ties when quicksort does better than mergesort the difference will not be nearly so great

498069
inherited	properties
pattern0	
if a browser s stylesheet does define a style for all types of element and this style has a higher precendence than inherited then inherited properties values should never be observed

498840
integer	unsigned
pattern7	
otherwise if the operand that has unsigned integer type has rank greater or

498840
integer	unsigned
pattern7	
otherwise if the operand that has unsigned integer type has rank greater or

505839
width	height
pattern10	longer	
my fixed document xps has its page orientation set to landscape the page media size has a width that is longer that its height and it displays correctly in the viewer as landscape

505839
width	height
pattern10	longer	
my fixed document xps has its page orientation set to landscape the page media size has a width that is longer that its height and it displays correctly in the viewer as landscape

506241
division	multiplication
pattern0	slower	
division is per se slower than multiplication however i don t know the details

506252
division	multiplication
pattern0	busier place	
both operations are done down at the floating point unit fpu level and even in the world of integral alus the division circuit is a far busier place than a multiplication circuit

509703
sproutcore	javascriptmvc
pattern0	more heavyweight	
it s probably overkill for what you need but sproutcore is an mvc framework and it doesn t look any more heavyweight than javascriptmvc or trimpath s junction

511928
int	double
pattern7	value also larger	
the largest double value is also larger than the largest int so it would have to be a long

511928
int	double
pattern7	value also larger	
the largest double value is also larger than the largest int so it would have to be a long

511966
innodb	myisam
pattern10	
if that s true then you might not need all the transactional safety provided by the innodb storage engine and you might be able to get away with switching to myisam which is considerably more efficient on aggregate queries

511966
innodb	myisam
pattern10	
if that s true then you might not need all the transactional safety provided by the innodb storage engine and you might be able to get away with switching to myisam which is considerably more efficient on aggregate queries

512569
xsl-fo	xslt
pattern7	more	
all in all t4 to me is more of a inside vs code-generation tool to quickly create c# or other files while xslt is more of a data-processing data-transformation tool to turn data from xml into another format typically html or pdf using xsl-fo

512569
xsl-fo	xslt
pattern7	more	
all in all t4 to me is more of a inside vs code-generation tool to quickly create c# or other files while xslt is more of a data-processing data-transformation tool to turn data from xml into another format typically html or pdf using xsl-fo

514184
floating-point	integer
pattern7	math slower	
they take up more space and floating-point math is slower than integer math

514184
floating-point	integer
pattern7	math slower	
they take up more space and floating-point math is slower than integer math

514184
floating-point	integer
pattern0	slower	
they take up more space and floating-point math is slower than integer math

515325
wxpython	qt-designer
pattern10	more	
as far as i can tell qt-designer is more powerful than any wxpython counterpart like boa constructor and pyglade

515325
wxpython	qt-designer
pattern10	more powerful	
as far as i can tell qt-designer is more powerful than any wxpython counterpart like boa constructor and pyglade

516941
disk	ram
pattern0	cheaper	
disk space is probably always going to be cheaper than ram

519191
emacs	jedit
pattern7	
jedit is still pretty good but emacs is quite better

521392
maven	pom.xml
pattern7	
sure there is a learning curve with maven but reading a pom.xml is far easier than reading a build.xml

521392
maven	pom.xml
pattern7	
sure there is a learning curve with maven but reading a pom.xml is far easier than reading a build.xml

526070
int	double
pattern7	greater	
today i noticed that when i cast a double that is greater than the maximum possible int to an int i get -2147483648

526070
int	double
pattern7	greater	
today i noticed that when i cast a double that is greater than the maximum possible int to an int i get -2147483648

526070
int	double
pattern7	less	
similarly when i cast a double that is less than the minimum possible int i also get -2147483648

526070
int	double
pattern7	less	
similarly when i cast a double that is less than the minimum possible int i also get -2147483648

530086
freebsd	linux
pattern10	much better	
just a tip but from personal experience i ve found that freebsd works much better on low-end hardware than a modern linux distro does

530086
freebsd	linux
pattern10	much better	
just a tip but from personal experience i ve found that freebsd works much better on low-end hardware than a modern linux distro does

531772
x86	64bit
pattern7	more	
reason why double can t be declared volatile it s 64bit which makes it more than the word size on x86 which prevents it from being declared volatile in the cli if i remember correctly

531772
x86	64bit
pattern7	more	
reason why double can t be declared volatile it s 64bit which makes it more than the word size on x86 which prevents it from being declared volatile in the cli if i remember correctly

535933
apache	nginx
pattern0	faster	
not only is nginx supposedly faster than apache at delivering static content but this also offloads your rails application for every image stylesheet javascript or whatever other static content

539857
translation	localization
pattern7	easier	
localization it s easier to translation text than images

539857
translation	localization
pattern7	easier	
localization it s easier to translation text than images

542234
awt	swing
pattern7	
which java framework awt or swing makes more sense for something this simple

542234
awt	swing
pattern7	
which java framework awt or swing makes more sense for something this simple

544898
northwind	adventureworks
pattern0	
what are your strategies best practices when it comes to dealing with a reasonably sized sql server database anything larger than northwind or adventureworks - do you use multiple filegroups

548312
int	chars
pattern0	
the value of an int chars constant containing more than one chars ab or containing a chars or escape sequence that does not map to a single-byte execution chars is implementation-defined

548356
int	chars
pattern0	
when an int is declared using a chars constant of more than one chars it is sensitive to the byte order of the machine for which the constant was developed

548827
boost	stl
pattern8	less standard	
boost libraries are generally less mature and less standard than stl

548848
boost	stl
pattern0	better	
once you re past the basics with c++ learning how to use parts of stl and then how it works will be better than tackling boost

550564
int	double
pattern7	
even though a standard conversion sequence converting from int float double to long double is better than a user-defined conversion sequence converting from myclass to long double your operator version is not chosen because your other parameter long double requires a conversion from the argument which is worse than what the builtin operator needs for that argument perfect match

550564
int	double
pattern7	
even though a standard conversion sequence converting from int float double to long double is better than a user-defined conversion sequence converting from myclass to long double your operator version is not chosen because your other parameter long double requires a conversion from the argument which is worse than what the builtin operator needs for that argument perfect match

551342
vim	emacs
pattern7	much older	
since emacs is much older than the extensible vim as opposed to the relatively non-extensible vi it has a much larger collection of extension modes covering almost any purpose you can imagine

551342
vim	emacs
pattern7	much older	
since emacs is much older than the extensible vim as opposed to the relatively non-extensible vi it has a much larger collection of extension modes covering almost any purpose you can imagine

559225
cvsnt	svn
pattern7	simply much better	
just a wild guess here but if you re using cvsnt on the server this observation might be based on the fact that cvsnt simply is much better at merging than svn because it has the notion of mergepoints

559225
cvsnt	svn
pattern7	simply much better	
just a wild guess here but if you re using cvsnt on the server this observation might be based on the fact that cvsnt simply is much better at merging than svn because it has the notion of mergepoints

559937
trac	bugzilla
pattern8	
i would suggest something more modern than bugzilla such as trac or lighthouse although bugzilla may fit your bill

560114
accessor	properties
pattern7	
and lastly the properties makes refactoring easier for example when the value later is no longer stored in a variable but is calculated inside the properties accessor or comes from some other source variable

560114
accessor	properties
pattern7	
and lastly the properties makes refactoring easier for example when the value later is no longer stored in a variable but is calculated inside the properties accessor or comes from some other source variable

562990
boost	stl
pattern0	
.net library support is way better and cleaner than stl mfc and boost

563472
lisp	scheme
pattern7	somewhat simpler	
it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp

563472
lisp	scheme
pattern7	somewhat simpler not	
it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp

563472
lisp	scheme
pattern0	simpler common	
it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp

565933
disk	ram
pattern7	alway faster	
buy as much memory as you can afford ram is alway faster than io from disk

565933
disk	ram
pattern7	alway faster	
buy as much memory as you can afford ram is alway faster than io from disk

568703
opensuse	linux
pattern0	
i have used a lot more than 10 linux distributions and i now stick to opensuse

569500
width	height
pattern0	
there is no automatic clipping performed so you have to ensure that parameters top and left are not smaller than 0 zero and left + as well as top + are not greater than the width or height of the destination image respectively

570247
postgresql	mysql
pattern7	
you re right postgresql has much better support for sql and other advanced features so there s a very good case for why postgresql is superior to mysql

570247
postgresql	mysql
pattern7	
you re right postgresql has much better support for sql and other advanced features so there s a very good case for why postgresql is superior to mysql

576296
skip-lists	tree
pattern0	better	
so as you can see the random binary search tree was rather a lot better than the skip-lists

579589
innodb	myisam
pattern7	higher	
their conclusion innodb has 30 higher performance than myisam on average

579589
innodb	myisam
pattern7	higher performance	
their conclusion innodb has 30 higher performance than myisam on average

579589
innodb	myisam
pattern0	higher performance	
their conclusion innodb has 30 higher performance than myisam on average

584128
udp	tcp
pattern0	lower overhead	
udp has a much lower overhead than tcp

584131
udp	tcp
pattern10	more	
tcp mounts are more reliable and you know you have a network problem much faster than with udp

584131
udp	tcp
pattern10	more reliable	
tcp mounts are more reliable and you know you have a network problem much faster than with udp

584131
udp	tcp
pattern0	faster	
tcp mounts are more reliable and you know you have a network problem much faster than with udp

584131
udp	tcp
pattern0	faster	
tcp mounts are more reliable and you know you have a network problem much faster than with udp

584198
pdfbox	itext
pattern0	better	
start with pdfbox as it s text extraction abilities are better than itext s

584890
yslow	pagespeed
pattern0	better	
in my testing so far google s pagespeed addon is far and above much better than yslow

585100
asp.net-mvc	openrasta
pattern7	much closer	
i d suggest having a look at openrasta which is much closer to http semantics than asp.net asp.net-mvc is

585100
asp.net-mvc	openrasta
pattern7	much closer	
i d suggest having a look at openrasta which is much closer to http semantics than asp.net asp.net-mvc is

586834
postgresql	mysql
pattern0	more	
i had mentioned that in our rails application all select queries dropped below 100ms after switching to postgresql whereas some of the complex joins generated by activerecord would occasionally take as much as 15s or more with mysql 5.1 because of nested loops with inner table scans even when indices were available

592640
kerberos	ntlm
pattern0	faster	
kerberos is complex to set up and even though it generally is considered faster than ntlm this is only true when you reach a certain limit of simultanious users on your site

592640
kerberos	ntlm
pattern0	slower	
for a low traffic site the huge tokens that kerberos send across the network actually makes it slower than ntlm

594466
int	double
pattern0	faster	
so i asked myself can a double be faster than a int

597265
division	multiplication
pattern0	
for example a lot of people that started at a higher level have no idea why shifts are so much faster than multiplication and division or the impact of branching etc

597847
northwind	adventureworks
pattern7	better	
talk about sql server 2005 adventureworks is better than northwind

597847
northwind	adventureworks
pattern7	better	
talk about sql server 2005 adventureworks is better than northwind

597847
northwind	adventureworks
pattern0	better	
talk about sql server 2005 adventureworks is better than northwind

599070
ant	maven
pattern7	really better	
and it turns out maven really does a better job of managing dependencies for ant build.xml files than does ivy

599070
ant	maven
pattern7	really better job	
and it turns out maven really does a better job of managing dependencies for ant build.xml files than does ivy

601626
getter	setter
pattern7	
or if your getter takes parameters or your setter takes more than a value parameter

601626
getter	setter
pattern7	
or if your getter takes parameters or your setter takes more than a value parameter

601996
wxhaskell	gtk2hs
pattern7	
wxhaskell is probably a little easier to build if you are not on linux gtk2hs is likely easier if you are linux hosted but both are pretty complex to build to be honest as there are a significant number of dependencies in both cases

601996
wxhaskell	gtk2hs
pattern7	
wxhaskell is probably a little easier to build if you are not on linux gtk2hs is likely easier if you are linux hosted but both are pretty complex to build to be honest as there are a significant number of dependencies in both cases

602804
postgresql	mysql
pattern0	
the advantage with sphinx is easier integration with mysql and postgresql however lucene is more feature-rich

604314
width	height	width	margin	margin	height
pattern0	nicer	
edit someone else suggested css and i believe that using the height and width directives from css will give you the same result as using the same attributes of the tag but doesn t limit you strictly to images and a will play nicer with any margin or padding directives you might use

605544
int	double
pattern7	way greater	
the range of double is way greater than the range of 32 or 64 bit int which is why std floor returns a double

605544
int	double
pattern7	way greater	
the range of double is way greater than the range of 32 or 64 bit int which is why std floor returns a double

605544
int	double
pattern7	
casting to int should be fine so long as it s within the appropriate range - but be aware that a double can t represent all 64 bit int exactly so you may also end up with errors when you go beyond the point at which the accuracy of double is such that the difference between two consecutive double is greater than 1

605544
int	double
pattern7	
casting to int should be fine so long as it s within the appropriate range - but be aware that a double can t represent all 64 bit int exactly so you may also end up with errors when you go beyond the point at which the accuracy of double is such that the difference between two consecutive double is greater than 1

605547
int	double
pattern7	far greater	
another reason is that the range of double is far greater than that of int

605547
int	double
pattern7	far greater	
another reason is that the range of double is far greater than that of int

610260
memcpy	strcpy	memcpy	strncpy	strcpy	strncpy	strlen	strcpy	strlen	strncpy
pattern7	slower	
but for the example you give it doesn t matter - if it s going to fail it will be in the initial strlen so strncpy doesn t buy you anything in terms of safety and presumbly strncpy is slower as it has to both check bounds and for nul and any difference between memcpy and strcpy isn t worth changing code for speculatively

610260
memcpy	strcpy	memcpy	strncpy	strcpy	strncpy	strlen	strcpy	strlen	strncpy
pattern7	slower	
but for the example you give it doesn t matter - if it s going to fail it will be in the initial strlen so strncpy doesn t buy you anything in terms of safety and presumbly strncpy is slower as it has to both check bounds and for nul and any difference between memcpy and strcpy isn t worth changing code for speculatively

610494
strcpy	strncpy
pattern7	
of course you might still ask whether to use strncpy or strcpy in implementing that abstraction strncpy is safer there provided you fully grok what it does

610494
strcpy	strncpy
pattern7	
of course you might still ask whether to use strncpy or strcpy in implementing that abstraction strncpy is safer there provided you fully grok what it does

610542
gif	png
pattern7	newer	
png is a newer format and often better than either jpeg of gif - especially for screenshots

610542
gif	png
pattern7	newer format	
png is a newer format and often better than either jpeg of gif - especially for screenshots

610565
gif	png
pattern0	smaller	
if png isn t smaller than gif then your software may be saving it poorly - look for png optimisation progams like pngout and pngnq

610573
gif	png
pattern0	larger	
jpg and png work well for most applications but the files will be larger than gif for very simple graphics

612937
spaces	delimiter
pattern0	field	
awk uses a comma surrounded by 0 or more spaces as field delimiter

614696
telerik	componentart
pattern7	
although it depends on your project size and requriments i recommend devxpress and telerik web windows .i ve used componentart telerik devxpress and i think telerik is better if u are developing web applications.and devxpress are better in winforms.by the way while developing in some cases i came across especially performance problems in telerik products.nevertheless telerik is good choice for web development

614696
telerik	componentart
pattern7	
although it depends on your project size and requriments i recommend devxpress and telerik web windows .i ve used componentart telerik devxpress and i think telerik is better if u are developing web applications.and devxpress are better in winforms.by the way while developing in some cases i came across especially performance problems in telerik products.nevertheless telerik is good choice for web development

619544
cpython	pypy
pattern0	faster	
part of the compiler toolchain includes an experimental jit generator now in its fifth incarnation and starting to work really well - the goal is for a jited pypy to run much faster than cpython

620976
cpython	ironpython
pattern10	faster	
i m not sure exactly how you re drawing the conclusion that ironpython is faster than cpython

620976
cpython	ironpython
pattern10	faster	
i m not sure exactly how you re drawing the conclusion that ironpython is faster than cpython

628270
haskell	scheme	imperative	declarative	lisp	scheme
pattern10	
i think that functional declarative programming haskell scheme lisp etc is more powerful and more abstract than imperative programming and therefore is intrinsically harder to learn

628270
haskell	scheme	imperative	declarative	lisp	scheme
pattern10	
i think that functional declarative programming haskell scheme lisp etc is more powerful and more abstract than imperative programming and therefore is intrinsically harder to learn

628270
haskell	scheme	imperative	declarative	lisp	scheme
pattern8	
i think that functional declarative programming haskell scheme lisp etc is more powerful and more abstract than imperative programming and therefore is intrinsically harder to learn

630233
vmware	virtualbox
pattern0	faster	
in my experience i ve found that vmware seems to be faster than virtualbox although i don t have any hard data to back it up

630233
vmware	virtualbox
pattern10	faster	
even though vmware has been faster for me i still use virtualbox because it s good enough and is free and im cheap

630233
vmware	virtualbox
pattern10	faster	
even though vmware has been faster for me i still use virtualbox because it s good enough and is free and im cheap

630770
uiview	catransition
pattern8	more limited	
the uiview class methods are convenience methods for common animations but are more limited than catransition

638446
udp	tcp
pattern10	faster	
in some applications tcp is faster better throughput than udp

638446
udp	tcp
pattern10	faster better	
in some applications tcp is faster better throughput than udp

638446
udp	tcp
pattern7	faster better	
in some applications tcp is faster better throughput than udp

638446
udp	tcp
pattern7	faster better throughput	
in some applications tcp is faster better throughput than udp

638446
udp	tcp
pattern0	better throughput	
in some applications tcp is faster better throughput than udp

638446
udp	mtu	udp	tcp
pattern0	faster	
for example i read an experiment in which a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp

640303
google-chrome	firefox
pattern7	less	
using the same data google-chrome does in less than 5 seconds what took ie and firefox 10 to 15 seconds to accomplish

640303
google-chrome	firefox
pattern7	less	
using the same data google-chrome does in less than 5 seconds what took ie and firefox 10 to 15 seconds to accomplish

645799
disk	ram
pattern0	
writing to a local database or handling a data structure larger than ram will impact the disk making network calls will impact the network hardware cpu bound calculations will impact there

651200
rapidsvn	tortoisesvn
pattern7	
with a gui interface along with a command line one subversion has tortoisesvn rapidsvn which is more of a traditional ui or ankhsvn for visual studio integration

651200
rapidsvn	tortoisesvn
pattern7	
with a gui interface along with a command line one subversion has tortoisesvn rapidsvn which is more of a traditional ui or ankhsvn for visual studio integration

655564
multiplying	multiplication
pattern10	
if you re dividing or multiplying by a variable then it s likely that multiplication is slightly faster because the logic is generally more simple

655564
multiplying	multiplication
pattern10	
if you re dividing or multiplying by a variable then it s likely that multiplication is slightly faster because the logic is generally more simple

655581
division	multiplication
pattern0	slower	
division algorithms are slower than multiplication algorithms in most cases

655584
division	multiplication
pattern0	slower	
which one is faster is indeed a cpu-specific issue or at least how much faster is cpu specific yes division is typically seen as slower than multiplication

656377
entity-relationship	diagram
pattern0	
it s the only conceptual modeling tool available for relational data the others - erwin and its ilk - being at best logical modeling tools with nothing much better than entity-relationship diagram and ddl synchrnoization which are also provided by object role modeling tools

656377
entity-relationship	diagram
pattern0	
it s the only conceptual modeling tool available for relational data the others - erwin and its ilk - being at best logical modeling tools with nothing much better than entity-relationship diagram and ddl synchrnoization which are also provided by object role modeling tools

674037
hash	salt
pattern7	
as others have mentioned you want to be careful with your hash since it s easy to do something that s not really secure h salt password is far weaker than h password salt but at the same time you want to balance the effort put into this with the value of the site content

674037
hash	salt
pattern7	
as others have mentioned you want to be careful with your hash since it s easy to do something that s not really secure h salt password is far weaker than h password salt but at the same time you want to balance the effort put into this with the value of the site content

677459
config	ini
pattern0	less	
ini is really a much simpler format than xml if you have less than fifty config options and they are not nested

680613
quicksort	mergesort
pattern10	also more	
quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss

680613
quicksort	mergesort
pattern10	also more complicated	
quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss

680613
quicksort	mergesort
pattern8	more complicated	
quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss

681760
trie	dawg
pattern10	more	
it is a structure similar to but twice as space-efficient as the dawg that is more efficient than the trie which only compresses prefixes

681760
trie	dawg
pattern10	more efficient	
it is a structure similar to but twice as space-efficient as the dawg that is more efficient than the trie which only compresses prefixes

683028
joomla	typo3
pattern8	more professional	
i didn t work with these applications yet but afaik typo3 and ezpublish both php are considered much more professional than joomla

686982
width	height
pattern0	
the padding on the #variablesize would have to be equal to or greater than the width height of the images

688135
disk	ram
pattern0	
vs.net makes tons of i o calls and ram disk are much faster than real disk

688567
disk	ram
pattern0	
you might want to investigate more than creating ram disk

690380
firebird	dbisam
pattern10	
something like textolution s proprietary add-on for firebird looks like it could accommodate constructing single complex nested query that would apply both regular and fulltext criteria but dbisam does it more elegantly

690380
firebird	dbisam
pattern10	
something like textolution s proprietary add-on for firebird looks like it could accommodate constructing single complex nested query that would apply both regular and fulltext criteria but dbisam does it more elegantly

691900
post	get
pattern8	
eval is more dangerous than get post because the submitted content can run functions like include which can access any file apache has read privileges for or shell_exec which can do anything in the shell the apache user can do etc

698048
post	get
pattern0	less subsequent	
an initial get request to a page usually costs less than subsequent post anyway so there s not much reason to avoid it

698780
subtraction	multiplication	subtraction	addition	addition	multiplication
pattern0	cheaper	
addition subtraction for the rectangular bound calculation is cheaper than multiplication

699357
int	chars
pattern0	
the value of an int chars constant containing more than one chars

706428
bazaar	git
pattern0	slower	
i hear all this stuff about bazaar being slower than git

706457
bazaar	git
pattern0	slower	
an incredibly rough eye balling of the numbers they posted showed bazaar to be 2-4x slower than either git or mercurial in the use cases tested

710493
int	double
pattern7	
this prints derived.foo double - even though the compiler knows there is a matching method with a parameter of type int and the argument is type int and the conversion from int to int is better than the conversion from int to double the fact that only the foo double method is originally declared in derived means the compiler ignores foo int

710493
int	double
pattern7	
this prints derived.foo double - even though the compiler knows there is a matching method with a parameter of type int and the argument is type int and the conversion from int to int is better than the conversion from int to double the fact that only the foo double method is originally declared in derived means the compiler ignores foo int

712054
haskell	sml
pattern0	
it is semantically influenced more by java sml haskell and a very obscure oo language called gbeta

713801
postgresql	mysql
pattern0	
an alternative would be firebird which is not so flexible but in my experience it is in some cases performing much better than mysql and postgresql

714814
public	protected
pattern0	
package-private is stricter than protected and public scopes but more permissive than private scope

721224
int	chars
pattern7	wider	
an implicit cast is disallowed as an int is wider has a greater range of values than a chars

721224
int	chars
pattern7	wider	
an implicit cast is disallowed as an int is wider has a greater range of values than a chars

721563
gridview	repeater
pattern10	better	
maybe a repeater is better but you will be fine with a gridview if you are familiar with it

721563
gridview	repeater
pattern10	better	
maybe a repeater is better but you will be fine with a gridview if you are familiar with it

723329
goto	break
pattern0	better	
labeled break like in java would be better than goto for this purpose

724272
post	get
pattern7	more	
sorry that this post is more of the and for further information... type than a direct answer which i think has now been given-- i just thought it was helpful not to get things lost inside comments

724272
post	get
pattern7	more	
sorry that this post is more of the and for further information... type than a direct answer which i think has now been given-- i just thought it was helpful not to get things lost inside comments

724365
free	malloc
pattern10	
this avoids malloc free but is less extensible and more prone to buffer overflow issues so i rarely ever use it

724365
free	malloc
pattern10	
this avoids malloc free but is less extensible and more prone to buffer overflow issues so i rarely ever use it

726875
versioning	upgrade
pattern7	
upgrade_250 the wordpress 2.5.0 upgrade will be run if the database versioning is less than 7499. each of these functions run their own data migration and population procedures some of which are called during the initial database setup script

726875
versioning	upgrade
pattern7	
upgrade_250 the wordpress 2.5.0 upgrade will be run if the database versioning is less than 7499. each of these functions run their own data migration and population procedures some of which are called during the initial database setup script

728716
width	height
pattern7	
unfortunately using nsstring -stringwithfont forwidth linebreakmode doesn t work - which ever wrap mode you choose the text wraps with a width that is less than the current width and the height becomes 0 on any overflow lines

728716
width	height
pattern7	
unfortunately using nsstring -stringwithfont forwidth linebreakmode doesn t work - which ever wrap mode you choose the text wraps with a width that is less than the current width and the height becomes 0 on any overflow lines

734559
typeerror	attributeerror
pattern7	
many times catching an attributeerror or typeerror is simpler and apparently faster

734559
typeerror	attributeerror
pattern7	
many times catching an attributeerror or typeerror is simpler and apparently faster

741341
subtraction	addition
pattern8	
although i should warn you for anything more complicated than addition and subtraction and shifts you ll need to use non-trivial algorithms

744070
cdr	cons
pattern0	
hons generally runs slower than cons because in creating a hons an attempt is made to see whether a hons already exists with the same car and cdr

746301
junit	testng
pattern7	
you may want to use junit in the part of unit testing but testng is more than a unite testing framework

746301
junit	testng
pattern7	
you may want to use junit in the part of unit testing but testng is more than a unite testing framework

752147
union	distinct
pattern0	
union forces a distinct to occur and there s little slower than distinct

754723
innodb	myisam
pattern7	generally less	
plus you have to make your tables myisam which is generally less suitable than innodb

754723
innodb	myisam
pattern7	generally less suitable	
plus you have to make your tables myisam which is generally less suitable than innodb

754723
innodb	myisam
pattern0	less suitable	
plus you have to make your tables myisam which is generally less suitable than innodb

756327
gridview	datalist
pattern10	much more	
gridview has much more bells and whistles than datalist

756327
gridview	datalist
pattern10	much more bells	
gridview has much more bells and whistles than datalist

757699
telerik	radwindow
pattern10	
telerik has a control called radwindow which is more or less a modal window

757699
telerik	radwindow
pattern10	
telerik has a control called radwindow which is more or less a modal window

761581
postgresql	mysql
pattern8	more sane	
since postgresql is a lot more sane than mysql there are not that many tricks to report on

761596
codeigniter	kohana
pattern10	
and a thing about codeigniter i asked some time ago people about it and most says that kohana based on codeigniter is better

761864
public	protected
pattern7	much more	
therefore the only types that should have access to a constructor are its derived types and hence protected makes much more sense than public

761864
public	protected
pattern7	much more sense	
therefore the only types that should have access to a constructor are its derived types and hence protected makes much more sense than public

761864
public	protected
pattern0	more sense	
therefore the only types that should have access to a constructor are its derived types and hence protected makes much more sense than public

763764
apache	nginx
pattern10	
it seems to be common wisdom that if you are deploying django on an apache server then you should still put an nginx server in front of the application to serve static files at which nginx is more performant

763764
apache	nginx
pattern10	
it seems to be common wisdom that if you are deploying django on an apache server then you should still put an nginx server in front of the application to serve static files at which nginx is more performant

764074
verilog	vhdl
pattern8	less common	
pacoblaze was written in verilog which like adam said less common than vhdl

764490
merb	ruby-on-rails
pattern8	
this will be made less onerous by ruby-on-rails 3 which is intended to be orm agnostic after the merge with merb

765929
installation	upgrade	versioning	upgrade
pattern7	much better	
as for production side of things upgrading your database in transaction msi-style installation is much better than attempting to upgrade at each app startup since you can potentially end up with desynchronized database-application versioning

765929
installation	upgrade	versioning	upgrade
pattern7	much better	
as for production side of things upgrading your database in transaction msi-style installation is much better than attempting to upgrade at each app startup since you can potentially end up with desynchronized database-application versioning

766479
inherited	properties
pattern7	easier	
multiple inherited makes it easier to compose classes from small mixin base classes that implement functionality and have properties to remember state

766479
inherited	properties
pattern7	easier	
multiple inherited makes it easier to compose classes from small mixin base classes that implement functionality and have properties to remember state

771892
quicksort	heapsort
pattern8	more efficient	
average asymptotic order of quicksort is o nlogn and it s usually more efficient than heapsort due to smaller constants tighter loops

772710
versioning	upgrade
pattern0	
i am not sure could this be because now the older links after upgrade is been pointed to newer versioning and just linking is not sufficient and need to modify something more on linux

773225
hide	show
pattern0	
js for tabs generally does no more than show hide maybe load content

773225
hide	show
pattern0	
js for tabs generally does no more than show hide maybe load content

774381
ferret	sphinx
pattern10	
i ve used ferret in the past with few problems although i ve heard sphinx is better

780111
cout	cin
pattern10	printf faster	
scanf is faster than cin printf is faster than cout etc

780111
cout	cin
pattern10	printf faster	
scanf is faster than cin printf is faster than cout etc

780156
free	malloc
pattern0	
i am wondering if there is a cross-platform allocator that is one step lower than malloc free

780156
free	malloc
pattern0	
i am wondering if there is a cross-platform allocator that is one step lower than malloc free

782375
cvs	svn
pattern8	more popular	
in addition another coworker said cvs was a lot more popular than svn

784328
int	chars
pattern0	more	
for example if the string is going to store a decimal-formatted 32-bit int you know that you do not need more than 11 chars to do so

784719
pop-up	dialog
pattern0	better	
use floating divs instead which looks like a modal dialog but are better than the pop-up

788881
width	height
pattern7	
what would be perfect is keeping the percent height and width while child width is smaller than parent a width

788881
width	height
pattern7	
what would be perfect is keeping the percent height and width while child width is smaller than parent a width

790473
rar	zip
pattern0	
it s much better compressing than zip rar

790473
rar	zip
pattern0	
it s much better compressing than zip rar

792460
floating-point	integer
pattern7	
the difference between each floating-point number and its corresponding integer is less than 1 or equal to 1 if you really must

792460
floating-point	integer
pattern7	
the difference between each floating-point number and its corresponding integer is less than 1 or equal to 1 if you really must

794801
put	get
pattern10	method better	
right now i would have to say the put method is better since it works and i could not get the webservice to work

794801
put	get
pattern10	method better	
right now i would have to say the put method is better since it works and i could not get the webservice to work

798046
floating-point	integer
pattern7	greater	
i know c++ have functions that return largest or smallest integer that is greater or lower than a like ceil or floor.is there a function that implement digit limitation of floating-point variable

798046
floating-point	integer
pattern7	greater	
i know c++ have functions that return largest or smallest integer that is greater or lower than a like ceil or floor.is there a function that implement digit limitation of floating-point variable

799142
udp	tcp
pattern7	less	
udp has less overhead than tcp and is therefore faster

799142
udp	tcp
pattern7	less overhead	
udp has less overhead than tcp and is therefore faster

799142
udp	tcp
pattern0	less overhead	
udp has less overhead than tcp and is therefore faster

799142
udp	tcp
pattern10	
udp has less overhead than tcp and is therefore faster

803700
nginx	lighttpd
pattern10	even more	
it s simple and nginx is even more ridiculously fast and lightweight than lighttpd

803700
nginx	lighttpd
pattern10	even more ridiculously	
it s simple and nginx is even more ridiculously fast and lightweight than lighttpd

804829
lxml	beautifulsoup
pattern0	more	
lxml is supposed to be much faster and efficient and can do much more than beautifulsoup

805392
ssl	https
pattern10	
if you have a secure ftp sftp server or secure http ssl https server then curl can accept ssh keys although using an ssl key is more commonly accepted on the internet. it can use those keys to authenticate and establish a secure connection to the directories which have been made public to your user through the server

805392
ssl	https
pattern10	
if you have a secure ftp sftp server or secure http ssl https server then curl can accept ssh keys although using an ssl key is more commonly accepted on the internet. it can use those keys to authenticate and establish a secure connection to the directories which have been made public to your user through the server

808889
glut	sdl
pattern10	
i have never used glut but i know that many people will say sdl is better

810193
addition	multiplication
pattern7	operator higher	
well we know it is the first one because of precedence - the binary multiplication operator has higher precedence than the binary + addition operator and is resolved first

810193
addition	multiplication
pattern7	operator higher precedence	
well we know it is the first one because of precedence - the binary multiplication operator has higher precedence than the binary + addition operator and is resolved first

811801
haskell	sml
pattern0	better	
because sml is eagerly evaluated the execution model is far easier to comprehend and debugging via printf works a lot better than in haskell

811937
junit	testng
pattern7	much friendlier	
testng is much friendlier to this paradigm than junit though

811937
junit	testng
pattern7	much friendlier	
testng is much friendlier to this paradigm than junit though

813984
doc	rtf
pattern7	somewhat easier	
if the latter is what you want you could use rtf which is somewhat easier than the doc format

813984
doc	rtf
pattern7	somewhat easier	
if the latter is what you want you could use rtf which is somewhat easier than the doc format

813984
doc	rtf
pattern0	easier	
if the latter is what you want you could use rtf which is somewhat easier than the doc format

814811
actionscript	mxml
pattern10	better	
i would say pure actionscript is better for programming whether you use flash ide or flex ide is not that relevant and mxml is better for non-programmers to combine the components programmed in as

814811
actionscript	mxml
pattern10	better	
i would say pure actionscript is better for programming whether you use flash ide or flex ide is not that relevant and mxml is better for non-programmers to combine the components programmed in as

814811
actionscript	mxml
pattern10	
i would say pure actionscript is better for programming whether you use flash ide or flex ide is not that relevant and mxml is better for non-programmers to combine the components programmed in as

814811
actionscript	mxml
pattern10	
i would say pure actionscript is better for programming whether you use flash ide or flex ide is not that relevant and mxml is better for non-programmers to combine the components programmed in as

816576
camping	ruby-on-rails	ramaze	camping
pattern0	
i would like to use a lighter framework than ruby-on-rails sinatra ramaze camping but am concerned that by doing so i will not be able to use a lot of shared libraries that have been tailored to ruby-on-rails in the form of plugins

818424
datamapper	activerecord
pattern0	faster	
i d recommend datamapper for orm not only it s way faster than activerecord but it s also very modularly built and plugins are actual gems that you can easily install

819327
int	chars
pattern7	usually bigger	
int is usually bigger than chars â more suitable for calculations but not so suitable for byte-level manipulation

819327
int	chars
pattern7	usually bigger	
int is usually bigger than chars â more suitable for calculations but not so suitable for byte-level manipulation

819327
int	chars
pattern0	bigger	
int is usually bigger than chars â more suitable for calculations but not so suitable for byte-level manipulation

827594
haskell	ocaml
pattern7	fewer	
haskell has fewer industrial users than ocaml and although it does have multicore support it is still being developed in a very unproductive direction

827594
haskell	ocaml
pattern7	fewer industrial	
haskell has fewer industrial users than ocaml and although it does have multicore support it is still being developed in a very unproductive direction

836856
division	multiplication	division	addition	addition	multiplication
pattern10	faster	
also addition is faster than multiplication and multiplication is faster than division

836856
division	multiplication	division	addition	addition	multiplication
pattern10	faster	
also addition is faster than multiplication and multiplication is faster than division

836856
division	multiplication	division	addition	addition	multiplication
pattern10	faster	
also addition is faster than multiplication and multiplication is faster than division

836856
division	multiplication	division	addition	addition	multiplication
pattern10	faster	
also addition is faster than multiplication and multiplication is faster than division

839664
superclass	subclassing
pattern7	always smaller	
for my understanding the superclass is always smaller less complex then the subclassing

839664
superclass	subclassing
pattern7	always smaller less	
for my understanding the superclass is always smaller less complex then the subclassing

840730
git-svn	svn2git
pattern0	better results	
using svn2git might produce better results than git-svn if you have tags or branches.

840989
int	boolean
pattern0	
so the best approach here is either to use a wider type than int number or pass some flag boolean value to function as well as int to indicate actual value absence

843733
qcodo	qcubed
pattern7	community much stronger	
qcubed community is much stronger at the moment so you might want to check in qcodo forum for your answers on basic problems but post on the qcubed forum

843733
qcodo	qcubed
pattern7	community much stronger	
qcubed community is much stronger at the moment so you might want to check in qcodo forum for your answers on basic problems but post on the qcubed forum

845066
cpython	ironpython
pattern0	more	
i am however no cpython guru and can get so much more out of ironpython than cpython as i can easily leverage the .net platform on which i am far more at home

846356
postgresql	mysql
pattern10	performance probably better	
as i said postgresql is far superior and i hate mucking with mysql s bizarre bugs and i think that overall postgresql performance is probably better than mysql for any even slightly complicated query

846356
postgresql	mysql
pattern10	performance probably better	
as i said postgresql is far superior and i hate mucking with mysql s bizarre bugs and i think that overall postgresql performance is probably better than mysql for any even slightly complicated query

848039
for-loop	loops
pattern7	wider	
the scope of the variable in the test of the while loops is wider than the scope of variables declared in the header of the for-loop

848039
for-loop	loops
pattern7	wider	
the scope of the variable in the test of the while loops is wider than the scope of variables declared in the header of the for-loop

848572
disk	ram
pattern7	slower	
memory is a bottleneck to performance ram runs slower than the cpu and if you re paging to disk than it s really slow

848572
disk	ram
pattern7	slower	
memory is a bottleneck to performance ram runs slower than the cpu and if you re paging to disk than it s really slow

851210
range	max	range	min	min	max
pattern7	
and during sometime i have a range where min and max is less than 1 and greater than 0

851210
range	max	range	min	min	max
pattern7	
and during sometime i have a range where min and max is less than 1 and greater than 0

851468
strcpy	strncpy
pattern7	
concerning the problem your printpiglatin could use the existing function strcpy or better strncpy which is safer in regards to buffer overflows

851468
strcpy	strncpy
pattern7	
concerning the problem your printpiglatin could use the existing function strcpy or better strncpy which is safer in regards to buffer overflows

853042
ienumerable	icollection	ienumerable	ilist	ilist	icollection
pattern7	
compared to ienumerable and icollection ilist performs much better for large or dynamic lists because it provides an indexer allowing us quick random access

853042
ienumerable	icollection	ienumerable	ilist	ilist	icollection
pattern7	
compared to ienumerable and icollection ilist performs much better for large or dynamic lists because it provides an indexer allowing us quick random access

853042
ienumerable	icollection	ienumerable	ilist	ilist	icollection
pattern7	
compared to ienumerable and icollection ilist performs much better for large or dynamic lists because it provides an indexer allowing us quick random access

853042
ienumerable	icollection	ienumerable	ilist	ilist	icollection
pattern7	
compared to ienumerable and icollection ilist performs much better for large or dynamic lists because it provides an indexer allowing us quick random access

857530
int	chars
pattern10	far more	
since sql server doesn t support named constants chars is far more descriptive than int when used in stored procedure and views as constants

857530
int	chars
pattern10	far more descriptive	
since sql server doesn t support named constants chars is far more descriptive than int when used in stored procedure and views as constants

857530
int	chars
pattern8	more descriptive	
since sql server doesn t support named constants chars is far more descriptive than int when used in stored procedure and views as constants

857900
isnull	nullif
pattern10	
in my opinion using isnull nullif is faster than using case when

857900
isnull	nullif
pattern10	
in my opinion using isnull nullif is faster than using case when

857900
isnull	nullif
pattern10	
in my opinion using isnull nullif is faster than using case when

857900
isnull	nullif
pattern10	
in my opinion using isnull nullif is faster than using case when

864659
des	rsa
pattern0	larger	
des code is 8 times larger than rsa

870080
union	distinct
pattern7	
also a union all takes longer than a union distinct

870080
union	distinct
pattern7	
also a union all takes longer than a union distinct

870080
union	distinct
pattern0	
also a union all takes longer than a union distinct

871372
union	distinct
pattern7	
also a union all takes longer than a union distinct

871372
union	distinct
pattern7	
also a union all takes longer than a union distinct

871372
union	distinct
pattern0	
also a union all takes longer than a union distinct

876774
pascal	delphi
pattern7	
delphi users might want to look at free pascal s paralel implementation of libchm since a pascal solution makes it easier embeddable

876774
pascal	delphi
pattern7	
delphi users might want to look at free pascal s paralel implementation of libchm since a pascal solution makes it easier embeddable

879201
colt	jama
pattern8	more powerful	
colt does this already but i have found it is more complicated and more powerful than jama which may explain why simple functions are slower with colt

879201
colt	jama
pattern0	slower	
colt does this already but i have found it is more complicated and more powerful than jama which may explain why simple functions are slower with colt

880821
lxml	beautifulsoup
pattern10	faster	
i ve found that even if lxml is faster than beautifulsoup for documents that size it s usually best to try to reduce the size to a few kb via regex or direct stripping and load that into bs as you are doing now

880821
lxml	beautifulsoup
pattern10	faster	
i ve found that even if lxml is faster than beautifulsoup for documents that size it s usually best to try to reduce the size to a few kb via regex or direct stripping and load that into bs as you are doing now

883177
imagemagick	libtiff
pattern7	
ghostscript and imagemagick convert should also be able to do this for you although libtiff is supposedly quicker

884697
subtraction	addition	division	subtraction	division	addition
pattern10	more	
the addition and subtraction is okay because the types of a and b force them to be performed using floating point arithmetic - but because division binds more tightly than addition and subtraction it s like using the brackets above only the immediate operands are considered

884697
subtraction	addition	division	subtraction	division	addition
pattern10	more tightly	
the addition and subtraction is okay because the types of a and b force them to be performed using floating point arithmetic - but because division binds more tightly than addition and subtraction it s like using the brackets above only the immediate operands are considered

885598
cifs	smb
pattern0	
nfs with the right setup version and tuning is just a tad slower than smb cifs

885598
cifs	smb
pattern0	
nfs with the right setup version and tuning is just a tad slower than smb cifs

886136
rank	max
pattern0	faster	
while i think gbn s answer is probably sufficient i m wondering whether use of an over clause to establish a max date per id attribute with which to reduce the select in a where clause wouldn t be faster than a rank

886207
int	double
pattern10	
using string int double etc is more expected and therefore more maintainable

886207
int	double
pattern10	
using string int double etc is more expected and therefore more maintainable

887983
udp	mtu
pattern0	
3 you are sending messages that are bigger than the udp max message size 4 each device in your network has a max message size mtu so you might be exceeding a limit there

890438
sortedlist	sorteddictionary
pattern7	less	
sortedlist uses less memory than sorteddictionary

890438
sortedlist	sorteddictionary
pattern7	less memory	
sortedlist uses less memory than sorteddictionary

890438
sortedlist	sorteddictionary
pattern0	less memory	
sortedlist uses less memory than sorteddictionary

890438
sortedlist	sorteddictionary
pattern0	faster	
if the sortedlist is populated all at once from sorted data it s faster than sorteddictionary

896482
webclient	httpwebrequest
pattern10	
use httpwebrequest instead of webclient it s slightly less convenient but not by very much and set the keepalive property to false

896482
webclient	httpwebrequest
pattern10	
use httpwebrequest instead of webclient it s slightly less convenient but not by very much and set the keepalive property to false

897118
disk	ram
pattern0	
if your working set is larger than your ram the operating system will be constantly swapping pages out to disk to make room to swap in pages that an application wants to access

897862
bazaar	git
pattern0	
mercurial is significantly faster than bazaar it s slower than git though by a much smaller difference

897862
bazaar	git
pattern7	slower	
mercurial is significantly faster than bazaar it s slower than git though by a much smaller difference

897862
bazaar	git
pattern7	slower	
mercurial is significantly faster than bazaar it s slower than git though by a much smaller difference

897862
bazaar	git
pattern0	slower	
mercurial is significantly faster than bazaar it s slower than git though by a much smaller difference

898763
subtraction	modulo	subtraction	multiplication	subtraction	addition	division	modulo	division	multiplication	division	subtraction	division	addition	addition	modulo	addition	multiplication	multiplication	modulo
pattern0	slower integer	
integer multiplication division and modulo are much slower than integer addition and subtraction

899887
division	multiplication
pattern10	faster	
multiplication is faster than division so the second method is faster

899887
division	multiplication
pattern10	faster	
multiplication is faster than division so the second method is faster

899929
division	multiplication
pattern7	generally faster	
if the latter yes floating point multiplication is generally faster than division

899929
division	multiplication
pattern7	generally faster	
if the latter yes floating point multiplication is generally faster than division

899929
division	multiplication
pattern0	faster	
if the latter yes floating point multiplication is generally faster than division

899967
firefox	safari
pattern0	faster	
in safari we found that the dom level 0 took twice the time off the dom level 2 but was still four times faster than either firefox case

901826
ubuntu	linux
pattern7	
at home w ubuntu linux virtualbox is easier to maintain performs as well as i require and is free

901826
ubuntu	linux
pattern7	
at home w ubuntu linux virtualbox is easier to maintain performs as well as i require and is free

903548
bitarray	bitvector
pattern8	more efficient	
why is the bitvector 32 structure more efficient than bitarray

910557
width	height
pattern7	
then when an image is loaded the rectangle s style checks its triggers to see if the image has a height or width that is less than 100px

910557
width	height
pattern7	
then when an image is loaded the rectangle s style checks its triggers to see if the image has a height or width that is less than 100px

912233
pull	push
pattern10	far more	
why do you think that push is far more scalable then pull for starters

912233
pull	push
pattern10	far more scalable	
why do you think that push is far more scalable then pull for starters

913928
junit	testng
pattern0	better solution	
if there is a junit extension or similar framework that provides a better solution than testng then please let me know

914297
int	chars	implements	extends
pattern7	less	
plain chars having unspecified signed-ness allows compilers to select whichever representation is more efficient for the target architecture on some architectures zero extends a one-byte value to the size of int requires less operations thus making plain chars unsigned while on others the instruction set makes sign-extending more natural and plain chars gets implements as signed

914297
int	chars	implements	extends
pattern7	less operations	
plain chars having unspecified signed-ness allows compilers to select whichever representation is more efficient for the target architecture on some architectures zero extends a one-byte value to the size of int requires less operations thus making plain chars unsigned while on others the instruction set makes sign-extending more natural and plain chars gets implements as signed

921679
children	parent
pattern0	
so long as the nodes in general have more parent than children this direction will be much faster

922429
width	height
pattern7	greater	
it s close - i m finding if height is greater than width the left position of the rotated image is incorrect

922429
width	height
pattern7	greater	
it s close - i m finding if height is greater than width the left position of the rotated image is incorrect

922429
width	height
pattern0	greater	
it s close - i m finding if height is greater than width the left position of the rotated image is incorrect

922429
width	height
pattern7	greater	
similarly if width is greater than height the top position of the rotated image is incorrect

922429
width	height
pattern7	greater	
similarly if width is greater than height the top position of the rotated image is incorrect

922429
width	height
pattern0	greater	
similarly if width is greater than height the top position of the rotated image is incorrect

923190
mouse	keyboard
pattern8	more important	
also in this case keyboard input is essential and more important than mouse interaction

924296
min	max
pattern0	
probably the line drawer was a bresenham modified to skip the points drawn unless they were greater than max or less than min

924296
min	max
pattern0	less	
probably the line drawer was a bresenham modified to skip the points drawn unless they were greater than max or less than min

928247
width	height
pattern7	
meaning if the height divided by width gives more than 1

928247
width	height
pattern7	
meaning if the height divided by width gives more than 1

929548
emacs	aquamacs
pattern7	
carbon emacs is closer to the unix emacs experience whereas the aquamacs people have put considerable effort into os x integration

929548
emacs	aquamacs
pattern7	
carbon emacs is closer to the unix emacs experience whereas the aquamacs people have put considerable effort into os x integration

931234
children	parent
pattern0	more n	
in the same breath i would also like to be able to run a specific number of child processes at any given time say for example n children running concurrently whenever one exits the parent process starts another child if needed but has no more than n children at any given moment

933047
superclass	subclassing
pattern0	bigger interface	
you can t cast a superclass in a subclassing because the subclassing may have a bigger interface than the superclass means the subclassing can have functions like getunixtimestamp that the superclass doesn t have

937211
disk	ram
pattern0	
at some point if you re doing randomish queries and your working set is sufficiently larger than ram then you ll be limited by the small number of random iops a disk can do

937557
filtering	grouping
pattern7	
words grouping filtering has higher

937557
filtering	grouping
pattern7	
words grouping filtering has higher

941325
quicksort	heapsort
pattern10	usually faster	
in practice however quicksort is usually faster then heapsort

941325
quicksort	heapsort
pattern10	usually faster then	
in practice however quicksort is usually faster then heapsort

941325
quicksort	heapsort
pattern0	simpler	
each iteration in quicksort is a lot simpler than heapsort

941685
xna	spritebatch
pattern0	more	
in xna when is it appropriate to render your game content using more than one spritebatch

942017
x86	64bit	16-bit	64bit
pattern8	less efficient	
in fact for x86 64 processors performing 32-bit or 16-bit operations are less efficient than 64bit or 8-bit operations due to the operand prefix byte that has to be decoded

943494
ant	maven
pattern7	
having said all of that i do think that maven is a very interesting and useful system i m not calling it a tool like ant is maven is broader than that for software development configuration and build management

943494
ant	maven
pattern7	
having said all of that i do think that maven is a very interesting and useful system i m not calling it a tool like ant is maven is broader than that for software development configuration and build management

953814
postgresql	mysql
pattern7	more	
postgresql has more established support for this but mysql has played catch up in the last year or so and has a working method of this in the latest versions

953814
postgresql	mysql
pattern7	more established	
postgresql has more established support for this but mysql has played catch up in the last year or so and has a working method of this in the latest versions

953814
postgresql	mysql
pattern0	faster	
mysql s version is apparently marginally faster than postgresql but lacks some of the more advanced spatial features therefore it s pretty much limited to finding records that match a certain range of coordinates

955645
int	chars
pattern0	shorter	
if you use chars x where x 4 your chars key will be shorter than a int one

955645
int	chars
pattern0	greater	
if you use chars x where x 4 your chars key will be greater than a int one

957655
postgresql	mysql
pattern10	more	
in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with

957655
postgresql	mysql
pattern10	more tricks	
in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with

960774
sum	coalesce
pattern0	less	
i m pretty sure the linker will coalesce equivalent strings so the total will be less than the sum of the parts for these sections but i guess typically not by much

961662
quicksort	mergesort
pattern0	faster	
in most cases quicksort will run faster than mergesort even though the worst-case execution time is longer

962301
octal	binary
pattern10	
when converting from binary to octal it s more easy each 3 bits give you 1 digit in octal

962301
octal	binary
pattern10	
when converting from binary to octal it s more easy each 3 bits give you 1 digit in octal

962399
vbscript	vba	vbscript	vb6	vb6	vba
pattern0	better	
vb6 vba though a little better than vbscript in general still has many similar issues where for their domain they require much more boiler plate to do simple tasks than what i would like and have seen in other scripting languages

962806
integer	unsigned	16-bit	64bit	unsigned	short
pattern0	
a number bigger than 64bit can never occur in a multiplication because c is an unsigned integer of 32 bits and k is a unsigned short of 16-bit

964541
int	chars
pattern10	type more	
sometimes chars type is more usable than int - fixed size chars doesn t take much storage room and you can see enumerated values directly in database fields

964541
int	chars
pattern10	type more usable	
sometimes chars type is more usable than int - fixed size chars doesn t take much storage room and you can see enumerated values directly in database fields

964541
int	chars
pattern8	more usable	
sometimes chars type is more usable than int - fixed size chars doesn t take much storage room and you can see enumerated values directly in database fields

965313
imagemagick	libjpeg
pattern0	slower	
basically imagemagick was only slightly slower than libjpeg

966107
int	chars
pattern10	often faster	
far better to use a surrogate key and yes a join on an int is often faster and you can join in delete staments in many databases not use the slower subquery especially since names tend to be longer than a few chars

966107
int	chars
pattern10	often faster	
far better to use a surrogate key and yes a join on an int is often faster and you can join in delete staments in many databases not use the slower subquery especially since names tend to be longer than a few chars

967805
emacs	textmate
pattern0	better	
i feel like emacs is so much better than textmate

967921
primes	modulus
pattern10	
someone else in this thread makes a somewhat convincing argument that modulus a primes is better for detecting bit-swapping

967921
primes	modulus
pattern10	
someone else in this thread makes a somewhat convincing argument that modulus a primes is better for detecting bit-swapping

969709
disk	ram
pattern0	larger available	
in future these lists may be read from disk and larger than available ram

972203
spaces	delimiter
pattern0	
this method can handle more delimiter than spaces by the regex being used

977462
vim	emacs
pattern10	more	
emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs

977462
vim	emacs
pattern10	more powerful	
emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs

977462
vim	emacs
pattern8	more powerful	
emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs

977462
vim	emacs
pattern7	quicker	
maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent

977462
vim	emacs
pattern7	quicker	
maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent

977462
vim	emacs
pattern7	better	
maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent

977462
vim	emacs
pattern7	better	
maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent

980929
udp	tcp
pattern7	
udp is great if you plan to have your client for the game account for missing information by using approximation most fps games do this as well as just about any game that requires very quick reflexes where tcp ip is simpler will greatly reduce errors in transmission and be more prone to lag

980929
udp	tcp
pattern7	
udp is great if you plan to have your client for the game account for missing information by using approximation most fps games do this as well as just about any game that requires very quick reflexes where tcp ip is simpler will greatly reduce errors in transmission and be more prone to lag

980962
division	multiplication
pattern10	faster	
on many processors integer multiplication is faster than integer division

980962
division	multiplication
pattern10	faster	
on many processors integer multiplication is faster than integer division

982185
sudo	passwd
pattern10	better	
sudo is better in most respects but still requires a passwd which asroot does not

982185
sudo	passwd
pattern10	better	
sudo is better in most respects but still requires a passwd which asroot does not

982437
richfaces	icefaces
pattern7	
my personal experience with both richfaces mixed better with other jsf libs icefaces has more advanced ajax capabilities like server sided push kinda like comet the basic ajax functionality is easier to set up and use but plays difficult sometimes when you mix it with other jsf libs

982437
richfaces	icefaces
pattern7	
my personal experience with both richfaces mixed better with other jsf libs icefaces has more advanced ajax capabilities like server sided push kinda like comet the basic ajax functionality is easier to set up and use but plays difficult sometimes when you mix it with other jsf libs

989209
ant	maven
pattern0	clearer	
i find the ant one much clearer than the maven one

990780
innodb	myisam
pattern10	faster	
i heard myisam is faster but others say innodb can be fast also but it takes abit more to optimize it

990780
innodb	myisam
pattern10	faster	
i heard myisam is faster but others say innodb can be fast also but it takes abit more to optimize it

990830
innodb	myisam
pattern7	slower	
innodb is slower for read only databases because it has features acid compliant row level locking that myisam leaves out

990830
innodb	myisam
pattern7	slower	
innodb is slower for read only databases because it has features acid compliant row level locking that myisam leaves out

994571
versioning	upgrade
pattern0	lower	
if i enable this then any setup is ran every time it will be asking for upgrade either it is on lower versioning over higher versioning or higher versioning over lower versioning

994571
versioning	upgrade
pattern0	
if i enable this then any setup is ran every time it will be asking for upgrade either it is on lower versioning over higher versioning or higher versioning over lower versioning

996052
haskell	ocaml
pattern0	better	
i would just use ocaml but haskell s syntax is so much better than ocaml s and haskell is pure and has cool features such as type classes

999268
width	height
pattern7	
if the orginal file s width is greater than 480 or lessthan 450 then i want to set the width of output image as 450px.and the height has to be proportional of the width

999268
width	height
pattern7	
if the orginal file s width is greater than 480 or lessthan 450 then i want to set the width of output image as 450px.and the height has to be proportional of the width

