1004

hql	jpql	1
('hql', 'more', 'jpql', '', '16886935', 'because hql is more or less superset of jpql it of course works also in hql\n')

pbkdf2	hash	3
('pbkdf2', 'slower standard', 'hash', 'performance', '13395733', 'key derivation algorithms such as bcrypt and pbkdf2 aka rfc2898derivebytes are much slower than standard hash algorithms\n')
('pbkdf2', 'quicker', 'hash', '', '116767', 'a key-stretching algorithm like pbkdf2 applies a quicker hash like sha512 thousands of times typically causing the hash generation to take 1 5 of a second or so\n')
('pbkdf2', 'better plain', 'hash', '', '7029421', 'key strengthening techniques such as bcrypt or pbkdf2 are generally considered better than plain hash since cracking them requires more resources\n')

model-glue	coldspring	1
('model-glue', 'easier', 'coldspring', 'usability', '7291086', 'fortunately model-glue has tight integration with coldspring a popular bean container for cfml and model-glue 3 makes it easier than ever to use coldspring beans in your controllers\n')

pdflib	pdfbox	2
('pdflib', 'tet slightly better', 'pdfbox', '', '22675690', 'edit 31 march 2014 for what it s worth i have found that pdfbox is much better at text extraction than itextsharp notwithstanding a bespoke strategy implementation and pdflib tet is slightly better than pdfbox but it s quite expensive\n')
('pdflib', 'better', 'pdfbox', '', '22675690', 'edit 31 march 2014 for what it s worth i have found that pdfbox is much better at text extraction than itextsharp notwithstanding a bespoke strategy implementation and pdflib tet is slightly better than pdfbox but it s quite expensive\n')

png	gif	40
('png', 'definitely better', 'gif', '', '10941029', 'while png is definitely better that gif occasionally there is a use case for needing to stay in gif format\n')
('gif', 'file smaller', 'png', 'memory', '8596064', 'it might help to reduce your gif file sizes smaller oh and i believe -depth 8 can only be used for png images\n')
('gif', 'smaller', 'png', 'memory', '2523038', 'but keep in mind that the gif color palette is way smaller than png\n')
('png', 'better alpha', 'gif', '', '9424505', 'png gives you better alpha result than gif\n')
('png', 'format better', 'gif', '', '10666583', 'according to wikipedia the png format provides better compression than gif\n')
('png', 'newer format', 'gif', '', '610542', 'png is a newer format and often better than either jpeg of gif - especially for screenshots\n')
('png', 'wider', 'gif', '', '2336552', 'png has a wider color pallete than gif and gif is properitary while png is not\n')
('gif', 'larger', 'png', 'memory', '6850687', 'it will always be a web format which basically comes down to jpg png and gif with gif being very unlikely because of its limitations gif can contain 256 colors at most and is generally larger than png\n')
('png', 'better', 'gif', '', '9424505', 'png gives you better alpha result than gif\n')
('png', 'newer', 'gif', '', '610542', 'png is a newer format and often better than either jpeg of gif - especially for screenshots\n')
('png', 'better', 'gif', '', '319433', 'paul points out that png compresses static line art better than gif for nearly every situation\n')
('gif', 'smaller', 'png', 'memory', '2686734', 'gif is smaller because it s based on an colour palette of 256 colours rather than the separate rgb values for each pixel or group of pixels in jpg and png\n')
('png', 'better support', 'gif', 'usability', '11199578', 'for example png has better support for transparency than gif or jpeg\n')
('png', 'better', 'gif', '', '4288557', 'many people don t know about 8-bit png which is usually better than gif in size.\n')
('png', 'not bigger', 'gif', 'memory', '5134831', 'also if i change all to png is not bigger and alos i am using prawn pdf outputting these images so cant use gif\n')
('png', 'wider color', 'gif', '', '2336552', 'png has a wider color pallete than gif and gif is properitary while png is not\n')
('png', 'much better', 'gif', '', '1200232', 'png compresses much better than gif and allows more colors at the same time\n')
('gif', 'smaller palette', 'png', 'memory', '12416387', 'one thing to note is that gif supports a smaller palette than png - only up to 256 colors\n')
('png', 'never worse', 'gif', '', '115838', 'as a general rule png is never worse and often better than gif because of superior compression\n')
('png', 'better', 'gif', '', '11199578', 'for example png has better support for transparency than gif or jpeg\n')
('gif', 'file smaller oh', 'png', 'memory', '8596064', 'it might help to reduce your gif file sizes smaller oh and i believe -depth 8 can only be used for png images\n')
('png', 'larger equivalent', 'gif', 'memory', '116461', 'if your png files are coming out larger than equivalent gif files it is almost certainly because your source image has more than 256 colors\n')
('gif', 'smaller', 'png', 'memory', '12416387', 'one thing to note is that gif supports a smaller palette than png - only up to 256 colors\n')
('png', 'larger', 'gif', 'memory', '610573', 'jpg and png work well for most applications but the files will be larger than gif for very simple graphics\n')
('gif', 'larger', 'png', 'memory', '18601225', 'i m not sure if this matters but the gif is significantly larger than the png files\n')
('gif', 'slightly better', 'png', '', '115838', 'there might be some edge cases where gif is slightly better because the png format may have a slightly larger overhead from metadata but it s really not worth the worry\n')
('png', 'smaller', 'gif', 'memory', '116210', 'indexed png less than 256 colors is actually always smaller than gif so i use that most of the time\n')
('png', 'better compression', 'gif', '', '10666583', 'according to wikipedia the png format provides better compression than gif\n')
('png', 'better compression', 'gif', '', '10666940', 'png achieves better compression than gif because it applies a pre-filtering step before the lossless compression deflate roughly equivalent to lzw. see wikipedia s explanation of png filtering\n')
('gif', 'significantly larger', 'png', 'memory', '18601225', 'i m not sure if this matters but the gif is significantly larger than the png files\n')
('png', 'usually better', 'gif', '', '4288557', 'many people don t know about 8-bit png which is usually better than gif in size.\n')
('png', 'better', 'gif', '', '1200232', 'png compresses much better than gif and allows more colors at the same time\n')
('png', 'better', 'gif', '', '115838', 'as a general rule png is never worse and often better than gif because of superior compression\n')
('png', 'shim smaller', 'gif', 'memory', '1841996', 'a 8-bit png shim is smaller than the same dimension 1 pixel gif and everything will still work as planned\n')
('png', 'smaller', 'gif', 'memory', '2747873', 'just press save and give it a name and that photoshop image will be saved into a transparent background png file which presents more colors and it s smaller than a gif file and is as good as a jpg\n')
('png', 'smaller', 'gif', 'memory', '610565', 'if png isn t smaller than gif then your software may be saving it poorly - look for png optimisation progams like pngout and pngnq\n')
('png', 'format better compression', 'gif', '', '10666583', 'according to wikipedia the png format provides better compression than gif\n')
('png', 'better competition', 'gif', '', '1084126', 'png images are always compressed lossless but their compression algorithm works better than competition gif\n')
('png', 'better compression', 'gif', '', '11005984', 'you can then use imagecopy to insert each gif image including the background and imagepng to generate png output which is better for line art than jpeg offers better compression than gif and can support more than 256 colors\n')
('png', 'smaller', 'gif', 'memory', '2308120', 'convert it to png 10-30 smaller than gif on average\n')

udp	tcp	205
('tcp', 'much more', 'udp', '', '9235592', '+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed there\n')
('udp', 'better', 'tcp', '', '14749840', 'i think udp will perform better than tcp gcdasyncsocket in your case video transfer\n')
('udp', 'more', 'tcp', '', '19350736', 'udp is more of a fire and forget whereas tcp maintains a connection state\n')
('tcp', 'much slower', 'udp', 'performance', '11890330', 'tcp is much slower than udp but when the two machines are not on the same lan udp is not reliable\n')
('udp', 'lower latency', 'tcp', '', '10624972', 'like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n')
('udp', 'faster', 'tcp', 'performance', '25350887', 'one often finds the argument that udp is faster then tcp\n')
('tcp', 'better', 'udp', '', '2935622', 'in general the tcp protocol manages the available network bandwidth better than the udp protocol\n')
('tcp', 'faster', 'udp', 'performance', '1581034', 'at my company we have found memory mapped files to be much faster than loopback tcp ip for communication on the same box so i m assuming it would be faster than udp too\n')
('udp', 'faster', 'tcp', 'performance', '5862704', 'udp is generally faster than tcp as it does not have to do the overhead checking of consistency that tcp must deal with\n')
('udp', 'faster', 'tcp', 'performance', '47929', 'udp is faster than tcp and the simple reason is because its nonexistent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculated by using the tcp window size and round-trip time rtt\n')
('udp', 'lower', 'tcp', '', '24880258', 'one can say udp has a lower overhead than tcp because its packets have a smaller header and therefore take less bandwidth to send the payload the data\n')
('udp', 'better', 'tcp', '', '7329214', 'does udp always perform better than tcp\n')
('tcp', 'slower', 'udp', 'performance', '19081574', 'in doing so the tradefoff is that tcp becomes slower compared to udp\n')
('udp', 'communication connection less', 'tcp', '', '2896525', 'udp communication is connection less as compared to tcp which need a connection\n')
('udp', 'communication much less', 'tcp', '', '12082396', 'udp communication requires much less overhead than tcp due to the number of messages exchanged\n')
('udp', 'always faster', 'tcp', 'performance', '2280675', 'also see this other so answer about the misconception that udp is always faster than tcp\n')
('udp', 'also more work', 'tcp', '', '2364616', 'udp is also more work than tcp if you need reliability which is built in to tcp\n')
('tcp', 'more', 'udp', '', '9952101', 'that among other things is why tcp is considered more reliable but slower than udp\n')
('udp', 'faster', 'tcp', 'performance', '5594213', 'udp is faster than tcp because packets are sent without guarantee of delivery nor order\n')
('udp', 'more relevant here', 'tcp', '', '1442901', 'a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n')
('tcp', 'throughput bigger', 'udp', 'memory', '10315535', 'i am confused why tcp throughput is bigger than udp\n')
('udp', 'faster', 'tcp', 'performance', '18811601', 'because there is no confirmation on udp packets it s slightly faster than tcp\n')
('udp', 'worse', 'tcp', '', '5485831', 'also note that it is easy to implement your own stack on top of udp that performs worse than tcp\n')
('udp', 'generally faster', 'tcp', 'performance', '5862704', 'udp is generally faster than tcp as it does not have to do the overhead checking of consistency that tcp must deal with\n')
('udp', 'connectionless more relevant', 'tcp', '', '1442901', 'a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n')
('udp', 'better', 'tcp', '', '11338428', 'short answer if you can tolerance with any packet loss udp is better otherwise tcp\n')
('udp', 'better', 'tcp', '', '16924352', 'does udp always perform better than tcp\n')
('udp', 'faster', 'tcp', 'performance', '5978352', 'the reason udp is faster than tcp is because there is no form of flow control or error correction\n')
('udp', 'simpler', 'tcp', 'usability', '24559909', 'c++ is not my first language and this is small part of code i can t figure out i ve chosen udp because it is always much simpler than tcp\n')
('udp', 'much better', 'tcp', '', '25287117', 'since loosing some packets doesn t matter but speed latency is crucial udp is much better than tcp\n')
('udp', 'absolutely faster', 'tcp', 'performance', '21363292', 'if the network between the two point have a very high quality udp is absolutely faster than tcp but in some other case such as the gprs network tcp may been faster and more reliability than udp\n')
('udp', 'better', 'tcp', '', '7329214', 'this was surprising for me as it is well known fact that udp performs better than tcp\n')
('tcp', 'more', 'udp', '', '14649005', 'also remember that dns requests can use tcp if the request or response would need more than 1 udp packet\n')
('tcp', 'better protocol', 'udp', '', '24411213', 'hello to all i am developing an application that needs to send a image via the udp socket.i know that tcp is a better protocol but playing with kryonet in java i have learnt that udp is better for this type of application.i have this small class that i have made\n')
('tcp', 'far better', 'udp', '', '3918611', 'tcp is far better at transferring large quantities of data but when the network fails it s more likely that udp will get through\n')
('tcp', 'bigger overhead', 'udp', 'memory', '24881403', 'tcp has bigger overhead than udp because it needs to add more data to your payload but you are guaranteed that your data will be received in it s destination in the order you sent it and not corrupted\n')
('tcp', 'faster better', 'udp', 'performance', '638446', 'in some applications tcp is faster better throughput than udp\n')
('udp', 'harder', 'tcp', '', '5869634', 'udp port scanning is possible but it is harder than tcp scanning\n')
('udp', 'faster', 'tcp', 'performance', '21363292', 'if the network between the two point have a very high quality udp is absolutely faster than tcp but in some other case such as the gprs network tcp may been faster and more reliability than udp\n')
('udp', 'less overhead', 'tcp', 'performance', '1099695', 'most importantly you can easily supplement udp with some reliable delivery hand-shaking that s less overhead than tcp\n')
('udp', 'less reliable', 'tcp', 'reliability', '4884364', 'and there are no handshakings required udp are pretty much faster but less reliable than tcp\n')
('udp', 'better', 'tcp', '', '16924212', '-- does udp always perform better than tcp\n')
('udp', 'much better just', 'tcp', '', '17652027', 'instead of implementing all these over udp it is much better just to switch to tcp\n')
('tcp', 'faster', 'udp', 'performance', '584131', 'tcp mounts are more reliable and you know you have a network problem much faster than with udp\n')
('tcp', 'more', 'udp', '', '11428762', 'if they are connected over the internet you could try to use the examples for tcp but tcp has more overhead than udp\n')
('udp', 'more', 'tcp', '', '7400055', 'udp is more popular in nat punching because provides much better results than tcp\n')
('udp', 'better', 'tcp', '', '7329214', 'scenario where udp is better than tcp\n')
('tcp', 'higher', 'udp', '', '16388203', 'actually we could say that tcp is a higher level protocol compared to udp because tcp includes some advanced features which might be useful .\n')
('tcp', 'higher latencies', 'udp', '', '5423061', 'tcp is subject to higher latencies than udp as it requires the client to send back packet confirmations\n')
('tcp', 'more likely', 'udp', '', '6527310', 'tcp socket is even more likely than udp socket but both work\n')
('udp', 'faster', 'tcp', 'performance', '9286808', 'for instance zeromq can leverage udp multicast to run faster than any tcp protocol but the application programmer doesn t need to learn a new api\n')
('udp', 'faster', 'tcp', 'performance', '4147351', 'udp protocol is unreliable but much much faster than tcp which is most commonly used for communication\n')
('udp', 'better', 'tcp', '', '16924492', 'does udp always perform better than tcp\n')
('tcp', 'connections more', 'udp', '', '9047315', 'it may be that the kernel heuristics for servering tcp connections is more aggressive than for udp sockets since tcp connections require more state and more continuous processing than do udp sockets\n')
('udp', 'slower', 'tcp', 'performance', '9300555', 'i assumend that the transmission using udp have to be much faster than using tcp but in fact my tests proved that the udp transmission is about 7 to 8 times slower than using tcp\n')
('tcp', 'more reliable', 'udp', 'reliability', '1898944', 'what i have thought of so far is that tcp is going to be more reliable than udp and in rmi corba we want network reliability\n')
('udp', 'better performance', 'tcp', 'performance', '16442504', 'udp will almost always provide better performance than tcp at the cost of reliability\n')
('tcp', 'slower', 'udp', 'performance', '11890330', 'tcp is much slower than udp but when the two machines are not on the same lan udp is not reliable\n')
('udp', 'simpler protocol', 'tcp', 'usability', '2576102', 'udp is simpler protocol than tcp and you can still simulate features of tcp using udp\n')
('tcp', 'bigger', 'udp', 'memory', '10315535', 'i am confused why tcp throughput is bigger than udp\n')
('udp', 'higher', 'tcp', '', '5561668', 'so assess the situation the development cost of a udp transport is higher to significantly higher than tcp and to some degree you are re-inventing tcp\n')
('udp', 'lower overhead', 'tcp', 'performance', '584128', 'udp has a much lower overhead than tcp\n')
('tcp', 'more overhead', 'udp', 'performance', '11428762', 'if they are connected over the internet you could try to use the examples for tcp but tcp has more overhead than udp\n')
('udp', 'significantly faster', 'tcp', 'performance', '3424324', 'udp is significantly faster than tcp and is why it is or was used for video and various things back in the day\n')
('udp', 'better choice', 'tcp', '', '8587512', 'the key question was related to what kind of situations would udp be the better choice over tcp\n')
('udp', 'easier', 'tcp', 'usability', '7374426', 'keep in mind that implementing udp traversal is easier than tcp\n')
('udp', 'just smaller', 'tcp', 'memory', '9409379', 'udp just has a smaller overhead than tcp but that comes at the cost of reliability\n')
('udp', 'less stringent', 'tcp', '', '2588997', 'instead you can use udp and implement your own scheme for verification of data that is less stringent than tcp\n')
('tcp', 'better option', 'udp', 'usability', '6104661', 'if you can t afford lost packets then tcp is probably a better option than udp since it provides that guarantee out of the box\n')
('tcp', 'slower', 'udp', 'performance', '11455687', 'tcp is slower than udp and you ll have to mitigate that in realtime multiplayer\n')
('udp', 'communication much less overhead', 'tcp', 'performance', '12082396', 'udp communication requires much less overhead than tcp due to the number of messages exchanged\n')
('udp', 'simpler', 'tcp', 'usability', '3424324', 'a udp stack is considerably simpler than a tcp stack\n')
('udp', 'connectionless more', 'tcp', '', '1442901', 'a heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-oriented\n')
('tcp', 'harder', 'udp', '', '10491782', 'but it sounds like you want to do nat traversal over tcp which is a harder problem than udp\n')
('udp', 'smaller overhead', 'tcp', 'memory', '9409379', 'udp just has a smaller overhead than tcp but that comes at the cost of reliability\n')
('udp', 'really faster', 'tcp', 'performance', '12530442', 'udp is really faster than tcp and the simple reason is because it s non-existent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculatd by using the tcp window size and round-trip time rtt .\n')
('tcp', 'slower', 'udp', 'performance', '2290873', 'tcp is reliable but slower than udp while udp is not safe and i have to implement my own fault-handling codes\n')
('tcp', 'slower', 'udp', 'performance', '21942178', 'apart from that tcp packets by themselves are not slower than udp packets and data transfer with a simple tcp connection can be faster than with a simple udp connection because flow control and reliable transfer is already integrated and you don t have to reinvent everything again and often worse\n')
('udp', 'better', 'tcp', '', '16924212', '-- in which scenario configuration would i get udp to perform better than tcp\n')
('udp', 'better', 'tcp', '', '25287117', 'since loosing some packets doesn t matter but speed latency is crucial udp is much better than tcp\n')
('udp', 'much better', 'tcp', '', '17652027', 'instead of implementing all these over udp it is much better just to switch to tcp\n')
('tcp', 'more', 'udp', '', '584131', 'tcp mounts are more reliable and you know you have a network problem much faster than with udp\n')
('tcp', 'bigger', 'udp', 'memory', '9047258', 'the problem is that tcp creates bigger packages of data while udp uses 8 kb of data blocks\n')
('udp', 'simpler', 'tcp', 'usability', '14297743', 'also sending receiving data over udp is much simpler than over tcp and it does not require any connections\n')
('tcp', 'more', 'udp', '', '5978352', '2 tcp needs more processing at network interface level where as in udp itâ s not\n')
('tcp', 'more reliable', 'udp', 'reliability', '9952101', 'that among other things is why tcp is considered more reliable but slower than udp\n')
('udp', 'faster', 'tcp', 'performance', '7603776', 'from experience i can tell you udp is about 10-15 faster than tcp on dedicated and udp-tuned networks\n')
('udp', 'faster', 'tcp', 'performance', '12530442', 'udp is really faster than tcp and the simple reason is because it s non-existent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculatd by using the tcp window size and round-trip time rtt .\n')
('udp', 'much easier', 'tcp', 'usability', '20769240', 'as such traversing a nat through udp is much easier than tcp\n')
('udp', 'considerably simpler', 'tcp', 'usability', '3424324', 'a udp stack is considerably simpler than a tcp stack\n')
('udp', 'much faster', 'tcp', 'performance', '13413608', 'this is the reason why udp is much faster than tcp\n')
('udp', 'faster', 'tcp', 'performance', '19019042', 'we propose to use udp over tcp since udp is faster than tcp\n')
('tcp', 'slower', 'udp', 'performance', '9952101', 'that among other things is why tcp is considered more reliable but slower than udp\n')
('tcp', 'better', 'udp', '', '16924212', 'i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp average 65 better\n')
('udp', 'far more appropriate', 'tcp', '', '1946932', 'btw i concur that udp is far more appropriate than tcp in this case\n')
('udp', 'slower', 'tcp', 'performance', '9300555', 'maybe one of you guys already sees a problem in the code snippets or have any other suggestion or hint for me why my udp transmission is slower than tcp\n')
('udp', 'higher performance', 'tcp', 'performance', '8796401', 'as an additional note my suspicion is that you d need to indulge yourself in some pretty sophisticated benchmarks before you could conclude that udp is actually going to have higher performance than tcp for web services\n')
('tcp', 'better', 'udp', '', '24411213', 'hello to all i am developing an application that needs to send a image via the udp socket.i know that tcp is a better protocol but playing with kryonet in java i have learnt that udp is better for this type of application.i have this small class that i have made\n')
('tcp', 'faster better throughput', 'udp', 'performance', '638446', 'in some applications tcp is faster better throughput than udp\n')
('udp', 'simpler', 'tcp', 'usability', '2576102', 'udp is simpler protocol than tcp and you can still simulate features of tcp using udp\n')
('udp', 'less costly', 'tcp', '', '20753875', 'also if you have very limited memory processing resources it is worth bearing in mind that udp is a less costly protocol as it avoids a lot of the overheads tcp incurs due to its inbuilt connection management\n')
('tcp', 'more complicated', 'udp', 'usability', '10861938', 'it was introduced since the nat traversal for tcp is much more complicated than udp\n')
('tcp', 'slower', 'udp', 'performance', '8813553', 'tcp is slower assures data arrival udp is faster data corruption may be possible\n')
('tcp', 'more processing', 'udp', '', '5978352', '2 tcp needs more processing at network interface level where as in udp itâ s not\n')
('udp', 'less reliable', 'tcp', 'reliability', '17310250', 'udp is way lighter and faster but somewhat less reliable than tcp\n')
('tcp', 'more', 'udp', '', '1100868', 'some protocols are more complex because what s needed are some but not all of the features of tcp but more than what udp provides\n')
('tcp', 'socket even more', 'udp', '', '6527310', 'tcp socket is even more likely than udp socket but both work\n')
('udp', 'just smaller overhead', 'tcp', 'memory', '9409379', 'udp just has a smaller overhead than tcp but that comes at the cost of reliability\n')
('tcp', 'simpler', 'udp', 'usability', '4220469', 'you ve struck lucky with the requirements - because you re going from udp - tcp it s actually a lot simpler than doing udp - udp\n')
('udp', 'better', 'tcp', '', '16924492', 'or is there any specific scenario where udp is better than tcp\n')
('udp', 'faster', 'tcp', 'performance', '18660445', 'use socket for tcp and datagram for udp its a lot faster than tcp but less connection oriented\n')
('udp', 'less complex', 'tcp', 'usability', '12082396', 'in my experience udp based code is generally less complex than tcp based code\n')
('tcp', 'slower', 'udp', 'performance', '13245606', 'please note however that this architecture implements tcp which is much slower than udp and will not work for any type of fast-paced data intensive games but should accomplish your goals given your description above\n')
('tcp', 'slower', 'udp', 'performance', '7287150', 'the problem with using tcp is obviously that it is a lot slower than udp\n')
('udp', 'much simpler', 'tcp', 'usability', '14297743', 'also sending receiving data over udp is much simpler than over tcp and it does not require any connections\n')
('tcp', 'more overhead', 'udp', 'performance', '5520735', 'certainly tcp has more overhead than udp\n')
('tcp', 'faster', 'udp', 'performance', '638446', 'in some applications tcp is faster better throughput than udp\n')
('udp', 'faster', 'tcp', 'performance', '13413608', 'this is the reason why udp is much faster than tcp\n')
('udp', 'also more', 'tcp', '', '2364616', 'udp is also more work than tcp if you need reliability which is built in to tcp\n')
('udp', 'better', 'tcp', '', '16924212', 'or is there any specific scenario where udp is better than tcp\n')
('udp', 'faster', 'tcp', 'performance', '8947847', 'in that sense reliable udp cannot be faster than tcp\n')
('udp', 'better', 'tcp', '', '3918611', 'udp is actually expected to work better than tcp in lossy networks or congested networks\n')
('tcp', 'better', 'udp', '', '7329214', 'but when i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp for 10mb of data\n')
('udp', 'traversal easier', 'tcp', 'usability', '7374426', 'keep in mind that implementing udp traversal is easier than tcp\n')
('tcp', 'faster', 'udp', 'performance', '9552483', 'what s currently baffling me is in my results tcp finishes almost 2x faster than udp\n')
('udp', 'lower overhead', 'tcp', 'performance', '24880258', 'one can say udp has a lower overhead than tcp because its packets have a smaller header and therefore take less bandwidth to send the payload the data\n')
('udp', 'way lighter', 'tcp', 'memory', '17310250', 'udp is way lighter and faster but somewhat less reliable than tcp\n')
('udp', 'better', 'tcp', '', '11406148', 'udp scales better than tcp because of reduced states that need to be maintained in the operating system\n')
('udp', 'significantly easier', 'tcp', 'usability', '3568783', 'udp is significantly easier do you really need tcp btw\n')
('tcp', 'windowing more', 'udp', '', '1930483', 'tcp windowing is more expensive than raw udp but if you use udp to go faster and add a custom loss-recovery or seqno ack resend manager then that may slow you down again\n')
('tcp', 'more reliable', 'udp', 'reliability', '584131', 'tcp mounts are more reliable and you know you have a network problem much faster than with udp\n')
('udp', 'less reliable', 'tcp', 'reliability', '9287416', 'udp is less reliable on a wide area network but in a closed environment of a vm talking to its host you can safely skip all the tcp reliability stuff\n')
('tcp', 'bigger', 'udp', 'memory', '24881403', 'tcp has bigger overhead than udp because it needs to add more data to your payload but you are guaranteed that your data will be received in it s destination in the order you sent it and not corrupted\n')
('udp', 'less overhead', 'tcp', 'performance', '799142', 'udp has less overhead than tcp and is therefore faster\n')
('tcp', 'better', 'udp', '', '4416038', 'tcp is much better than udp in terms of reliability\n')
('tcp', 'more reliable', 'udp', 'reliability', '5431991', 'tcp is certainly going to be more reliable than udp since udp doesn t guarantee packet delivery which is probably why you application is hanging on the receive\n')
('udp', 'smaller', 'tcp', 'memory', '10624972', 'like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n')
('tcp', 'less helpful', 'udp', '', '24101612', 'tcp streaming for audio can be less helpful than udp rtp as you d have to turn off nagling\n')
('udp', 'faster', 'tcp', 'performance', '9300555', 'i assumend that the transmission using udp have to be much faster than using tcp but in fact my tests proved that the udp transmission is about 7 to 8 times slower than using tcp\n')
('udp', 'simpler', 'tcp', 'usability', '4701184', 'you can use udp as well but if you are dealing with firewalls it is probably going to be simpler with tcp\n')
('tcp', 'connections more aggressive', 'udp', '', '9047315', 'it may be that the kernel heuristics for servering tcp connections is more aggressive than for udp sockets since tcp connections require more state and more continuous processing than do udp sockets\n')
('udp', 'less', 'tcp', '', '20753875', 'also if you have very limited memory processing resources it is worth bearing in mind that udp is a less costly protocol as it avoids a lot of the overheads tcp incurs due to its inbuilt connection management\n')
('tcp', 'way better then', 'udp', '', '14199053', 'tcp is way better then udp for that\n')
('tcp', 'better throughput', 'udp', '', '638446', 'in some applications tcp is faster better throughput than udp\n')
('tcp', 'better', 'udp', '', '23080381', 'in practice this means that tcp is better suited for continuous transmission of data whereas the more lightweight udp can be used when reliability isn t important\n')
('udp', 'lower overhead', 'tcp', 'performance', '8783507', 'udp sockets have much lower overhead than tcp because packets are not acknowledged by the recipient\n')
('udp', 'far more', 'tcp', '', '1946932', 'btw i concur that udp is far more appropriate than tcp in this case\n')
('udp', 'transport higher', 'tcp', '', '5561668', 'so assess the situation the development cost of a udp transport is higher to significantly higher than tcp and to some degree you are re-inventing tcp\n')
('tcp', 'much more complicated', 'udp', 'usability', '10861938', 'it was introduced since the nat traversal for tcp is much more complicated than udp\n')
('tcp', 'more', 'udp', '', '5520735', 'certainly tcp has more overhead than udp\n')
('tcp', 'higher level', 'udp', '', '16388203', 'actually we could say that tcp is a higher level protocol compared to udp because tcp includes some advanced features which might be useful .\n')
('tcp', 'more', 'udp', '', '22241001', 'i m aware of the differences in general the facts like tcp is more accurate while udp is more fast\n')
('tcp', 'socket much harder', 'udp', '', '6437427', 'when writing your server bear in mind that the sequence of events for a tcp socket is much harder than for a udp socket since as well as the normal socket and bind calls you also have to listen and accept\n')
('tcp', 'slower', 'udp', 'performance', '9627280', 'because of tcp requires connection and provides security it is slower than udp and therefore it should not be preffered during a video streaming\n')
('udp', 'knottier', 'tcp', '', '3541790', 'normally a server wouldn t need to know the client s address beforehand but udp s knottier than tcp the more usual stream-oriented approach to socket communication in many ways\n')
('tcp', 'way better', 'udp', '', '14199053', 'tcp is way better then udp for that\n')
('udp', 'faster', 'tcp', 'performance', '22583941', 'only when packets can be discarded unordered can udp be faster than tcp\n')
('udp', 'faster', 'tcp', 'performance', '12045089', 'don t think of it as udp is faster and tcp is slower because that s just wrong\n')
('tcp', 'much better', 'udp', '', '4416038', 'tcp is much better than udp in terms of reliability\n')
('tcp', 'more accurate', 'udp', 'performance', '22241001', 'i m aware of the differences in general the facts like tcp is more accurate while udp is more fast\n')
('tcp', 'better', 'udp', '', '9235592', 'for this particular application sending simple data chunk to the client from an index given by the client tcp will not perform any better than udp\n')
('tcp', 'much slower', 'udp', 'performance', '13245606', 'please note however that this architecture implements tcp which is much slower than udp and will not work for any type of fast-paced data intensive games but should accomplish your goals given your description above\n')
('tcp', 'faster', 'udp', 'performance', '16589674', 'i was expecting that udp would be faster but tcp is on average two times faster than udp\n')
('udp', 'less overhead', 'tcp', 'performance', '12082396', 'udp communication requires much less overhead than tcp due to the number of messages exchanged\n')
('udp', 'faster', 'tcp', 'performance', '1514244', 'theoretically udp should be be 30-50 faster than tcp because it s missing the extra trip for the ack and has a smaller header overhead however in reality there are many cases where tcp would outperform udp just because of congestion control\n')
('udp', 'connection less', 'tcp', '', '4533720', 'udp is connection less but at the same level as tcp\n')
('udp', 'more appropriate', 'tcp', '', '1946932', 'btw i concur that udp is far more appropriate than tcp in this case\n')
('tcp', 'windowing more expensive', 'udp', '', '1930483', 'tcp windowing is more expensive than raw udp but if you use udp to go faster and add a custom loss-recovery or seqno ack resend manager then that may slow you down again\n')
('tcp', 'slower', 'udp', 'performance', '4086350', 'with tcp its slightly slower than udp and has more features\n')
('tcp', 'slower', 'udp', 'performance', '8143223', 'tcp is a bit slower than udp but more failsafe\n')
('udp', 'faster then', 'tcp', 'performance', '25350887', 'one often finds the argument that udp is faster then tcp\n')
('udp', 'transmission slower', 'tcp', 'performance', '9300555', 'maybe one of you guys already sees a problem in the code snippets or have any other suggestion or hint for me why my udp transmission is slower than tcp\n')
('udp', 'better results', 'tcp', '', '7400055', 'udp is more popular in nat punching because provides much better results than tcp\n')
('udp', 'faster', 'tcp', 'performance', '3424324', 'udp is significantly faster than tcp and is why it is or was used for video and various things back in the day\n')
('udp', 'less latency', 'tcp', '', '20769240', 'udp lends itself to real-time less latency than tcp\n')
('udp', 'better', 'tcp', '', '17509301', 'i did some research and found that udp may be more suitable in this case because udp hole punching works much better than tcp hole punching\n')
('udp', 'easier structured', 'tcp', 'usability', '8059790', 'udp packets are easier structured than tcp packets but sacrifice security for their size\n')
('tcp', 'much more complicated', 'udp', 'usability', '9235592', '+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed there\n')
('udp', 'faster', 'tcp', 'performance', '8110762', 'i don t think you should make the assumption that udp is faster than tcp\n')
('udp', 'less', 'tcp', '', '9287416', 'udp is less reliable on a wide area network but in a closed environment of a vm talking to its host you can safely skip all the tcp reliability stuff\n')
('tcp', 'bigger payload', 'udp', 'memory', '3156544', 'tcp sockets- guaranteed delivery bigger payload than udp cumbersome to setup for web based solutions\n')
('udp', 'faster reliable communication', 'tcp', 'performance', '4361953', 'http is an application layer protocol which could be encapsulated with a protocol that uses udp providing arguably faster reliable communication than tcp\n')
('udp', 'faster', 'tcp', 'performance', '18107414', 'as a general rule udp is faster than tcp due to less protocol overhead\n')
('tcp', 'harder problem', 'udp', '', '10491782', 'but it sounds like you want to do nat traversal over tcp which is a harder problem than udp\n')
('tcp', 'more reliable', 'udp', 'reliability', '4551201', 'you could get them to do a udp multicast within a lan environment to identify the programs using protocol messages then have a stored cache of each other s identity and then use tcp to connect and do main exchanging of messages which is more reliable than udp\n')
('udp', 'faster', 'tcp', 'performance', '12855045', 'in a native application i would use udp for the most data player position ... because it s way faster than tcp and it s uncritical when it is lost\n')
('udp', 'better otherwise', 'tcp', '', '11338428', 'short answer if you can tolerance with any packet loss udp is better otherwise tcp\n')
('udp', 'better', 'tcp', '', '16924212', 'this was surprising for me as i expected udp to perform better than tcp\n')
('udp', 'faster', 'tcp', 'performance', '2280675', 'also see this other so answer about the misconception that udp is always faster than tcp\n')
('tcp', 'more secure', 'udp', '', '22152967', 'the decision on yours the tcp protocol used for connection oriented network that is more secure than udp\n')
('tcp', 'faster', 'udp', 'performance', '638446', 'for example i read an experiment in which a stream of 300 byte packets was being sent over ethernet 1500 byte mtu and tcp was 50 faster than udp\n')
('udp', 'faster', 'tcp', 'performance', '24726976', 'only when packets can be discarded unordered can udp be faster than tcp\n')
('udp', 'better', 'tcp', '', '16924352', 'scenario where udp is better than tcp\n')
('udp', 'lighter', 'tcp', 'memory', '19535121', 'yes udp is much much lighter than tcp\n')
('udp', 'more popular', 'tcp', 'usability', '7400055', 'udp is more popular in nat punching because provides much better results than tcp\n')
('tcp', 'much more', 'udp', '', '10861938', 'it was introduced since the nat traversal for tcp is much more complicated than udp\n')
('tcp', 'slower', 'udp', 'performance', '21729285', 'try to increase timeout value tcp is slower than udp\n')
('tcp', 'worse', 'udp', '', '25587789', 'if your client connections are more or less permanent and not too many clients are connected at the same time tcp is only slightly worse than udp\n')
('tcp', 'socket even more likely', 'udp', '', '6527310', 'tcp socket is even more likely than udp socket but both work\n')
('tcp', 'bigger packages', 'udp', 'memory', '9047258', 'the problem is that tcp creates bigger packages of data while udp uses 8 kb of data blocks\n')
('udp', 'less', 'tcp', '', '799142', 'udp has less overhead than tcp and is therefore faster\n')
('tcp', 'more complicated', 'udp', 'usability', '9235592', '+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed there\n')
('udp', 'lower', 'tcp', '', '10624972', 'like matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed ie\n')
('udp', 'easier', 'tcp', 'usability', '20769240', 'as such traversing a nat through udp is much easier than tcp\n')
('tcp', 'faster', 'udp', 'performance', '8930717', 'is sending packets via an established tcp connection after all hand shaking has been done a method to be faster than udp\n')

pdfbox	itext	3
('pdfbox', 'better', 'itext', '', '584198', 'start with pdfbox as it s text extraction abilities are better than itext s\n')
('pdfbox', 'less mature', 'itext', '', '10496107', 'on the downside pdfbox is less mature than itext so it has less features and documentation available\n')
('pdfbox', 'less', 'itext', '', '10496107', 'on the downside pdfbox is less mature than itext so it has less features and documentation available\n')

lxml	beautifulsoup	31
('lxml', 'faster', 'beautifulsoup', 'performance', '4025244', 'you ll probably find that lxml runs faster than beautifulsoup but in my uses beautifulsoup was very easy to learn and use and handled typical crappy html as found in the wild well enough that i don t have need for anything else\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '4295387', 'it s generally accepted that lxml is faster than beautifulsoup ref\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '14164350', 'edit don t use this for html work use the lxml library it s python based and much faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '880821', 'i ve found that even if lxml is faster than beautifulsoup for documents that size it s usually best to try to reduce the size to a few kb via regex or direct stripping and load that into bs as you are doing now\n')
('lxml', 'better', 'beautifulsoup', '', '5778559', 'regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup\n')
('lxml', 'better', 'beautifulsoup', '', '5890829', 'one of the things that makes lxml better than beautifulsoup is support for proper css-like class selection or even supports full css selectors if you want to use them\n')
('lxml', 'significantly more powerful', 'beautifulsoup', 'usability', '5999808', 'lxml is significantly more powerful and robust than beautifulsoup in my experienced opinion\n')
('lxml', 'more efficient', 'beautifulsoup', 'performance', '5778559', 'regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '6649888', 'lxml is much faster than beautifulsoup and probably the fastest parser available for python\n')
('beautifulsoup', 'better', 'lxml', '', '19670433', 'i prefer to use beautifulsoup better than lxml\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '3215955', 'lxml is faster than beautifulsoup i think and has much better functionality while remaining relatively easy to use\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '6728412', 'pyquery is based on lxml so it s also much faster than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '15432775', 'how can i find all div and span tags with order preserved.with beautifulsoup it is very simple but i switched recently to lxml since it is much faster than beautifulsoup\n')
('lxml', 'much faster', 'beautifulsoup', 'performance', '6649888', 'lxml is much faster than beautifulsoup and probably the fastest parser available for python\n')
('beautifulsoup', 'more', 'lxml', '', '1648539', 'beautifulsoup is more suitable for html parsing than lxml\n')
('beautifulsoup', 'more suitable', 'lxml', '', '1648539', 'beautifulsoup is more suitable for html parsing than lxml\n')
('lxml', 'significantly more', 'beautifulsoup', '', '5999808', 'lxml is significantly more powerful and robust than beautifulsoup in my experienced opinion\n')
('lxml', 'less painful', 'beautifulsoup', '', '16958218', 'lxml will let you use xpath here which i think will be less painful than beautifulsoup s interface\n')
('lxml', 'also more features', 'beautifulsoup', 'usability', '2430575', 'lxml also has more features and offers beautifulsoup too\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '13615911', 'according to some benchmark tests lxml is nearly 100 times faster than beautifulsoup\n')
('lxml', 'more', 'beautifulsoup', '', '804829', 'lxml is supposed to be much faster and efficient and can do much more than beautifulsoup\n')
('lxml', 'also more', 'beautifulsoup', '', '2430575', 'lxml also has more features and offers beautifulsoup too\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '14069663', 'i would recommend lxml for html parsing it s simple and considerably faster than beautifulsoup can be as much as two orders of magnitude\n')
('lxml', 'better option', 'beautifulsoup', 'usability', '5218029', 'note that lxml is probably a better option than beautifulsoup for this kind of task nowadays for the reasons given by beautifulsoup s author\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '2752712', 'it uses lxml underneath and is much faster than beautifulsoup\n')
('lxml', 'easier', 'beautifulsoup', 'usability', '8940209', 'lxml enables you to search for elements using xpath which i think is easier than using beautifulsoup s api\n')
('beautifulsoup', 'no longer', 'lxml', '', '1922064', 'for starters beautifulsoup is no longer actively maintained and the author even recommends alternatives such as lxml\n')
('beautifulsoup', 'no longer actively', 'lxml', '', '1922064', 'for starters beautifulsoup is no longer actively maintained and the author even recommends alternatives such as lxml\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '19357899', 'lxml is also much much faster than beautifulsoup\n')
('lxml', 'more', 'beautifulsoup', '', '5778559', 'regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup\n')
('lxml', 'faster', 'beautifulsoup', 'performance', '5784358', 'speed isn t important here but in other applications it is good to know that regexes are very fast 100 times faster than lxml and 1000 faster than beautifulsoup\n')

tinyint	varchar	1
('tinyint', 'better', 'varchar', '', '10645605', 'i think tinyint is better than varchar in this case\n')

qt-designer	wxpython	2
('qt-designer', 'more', 'wxpython', '', '515325', 'as far as i can tell qt-designer is more powerful than any wxpython counterpart like boa constructor and pyglade\n')
('qt-designer', 'more powerful', 'wxpython', 'usability', '515325', 'as far as i can tell qt-designer is more powerful than any wxpython counterpart like boa constructor and pyglade\n')

insertion-sort	quicksort	2
('insertion-sort', 'less commonly', 'quicksort', '', '18309423', 'in cs insertion-sort is less commonly used because we have much better algorithms quicksort and merge-sort come to mind\n')
('insertion-sort', 'less', 'quicksort', '', '18309423', 'in cs insertion-sort is less commonly used because we have much better algorithms quicksort and merge-sort come to mind\n')

slurm	torque	1
('slurm', 'better', 'torque', '', '8485138', 'i performed survey on torque slurm loadleveler slurm is better than torque in handling large nodes but in a single cluster\n')

range	max	18
('max', 'smaller', 'range', 'memory', '21562035', 'to create equal bins you can simply first define a min and max value which is slightly smaller than both range\n')
('range', 'larger', 'max', 'memory', '17068322', 'if you date range is larger than the two years displayed just drag the formulas down to expand the max range\n')
('range', 'less', 'max', '', '19947660', 'the python built-in range will make a series of values for you starting with adding k each time and stopping with the last multiple of k that is less than max x\n')
('max', 'bigger', 'range', 'memory', '24089593', 'that occasional max threshold is actually bigger than the range of small instance\n')
('max', 'threshold actually bigger', 'range', 'memory', '24089593', 'that occasional max threshold is actually bigger than the range of small instance\n')
('range', 'greater', 'max', '', '20943998', 'i want to validate a number as decimal up to two decimal and minimum range is greater than 0.00 and max range is up to 99.99\n')
('max', 'larger', 'range', 'memory', '18854408', 'i ll leave the rest up to you ov checking for error conditions such as more than 1 column passed in the range or range of unequal size or a max # of items returned being larger than the range size\n')
('range', 'bigger', 'max', 'memory', '17936725', 'a signed 64-bit integer range from âˆ 2 63 to 2 63 âˆ 1 the absolute value of 0x8000000000000000 or âˆ 2 63 is 2 63 is bigger than the max 64-bit integer\n')
('range', 'lower', 'max', '', '8013367', 'i have this grid each coordinate in the grid can be either closed or open i m tying to using an open coordinate find all the open coordinates around the first that are valid and the walk range between then is equal or lower than the max walk range\n')
('range', 'greater', 'max', '', '20007371', 'keep in mind that the cast int d will not throw an exception if the value of d is outside the range of an int - if which is greater than the max value of an int the resultant cast will be -2147483648\n')
('range', 'much more straightforward', 'max', '', '24873884', 'figuring out the necessary exponent range is much more straightforward if you can describe the max and min possible absolute values of your input you can easily find suitable corresponding binary minimum and maximum exponent\n')
('range', 'less', 'max', '', '1386828', 'the range function produces a list of integers from 0 less than the max len s by step 3\n')
('range', 'much more', 'max', '', '24873884', 'figuring out the necessary exponent range is much more straightforward if you can describe the max and min possible absolute values of your input you can easily find suitable corresponding binary minimum and maximum exponent\n')
('range', 'higher', 'max', '', '8013367', 'at first i tried a solution using a where i would select every coordinate in range check if they were valid if they were i would call a from them to the center position and count the number of steps if they were higher than my max range i would just remove the coordinate from my list\n')
('range', 'less', 'max', '', '13264779', 'if max z1 z2 range is less than or equal to table2 max value2 where table1.type table2.type\n')
('range', 'greater', 'max', '', '17885817', 'an automatically adjusted range will always be the next power of 10 greater than max value\n')
('range', 'larger', 'max', 'memory', '3567637', 'so if you re getting a step exceeds the specified range error i d guess that the default step value 1 is larger than the max of the range the result of .\n')
('range', 'larger', 'max', 'memory', '2022693', 'basically if you know that your events are never larger than a given duration you can search for a bounded range that s larger than the max duration then add restrictions to get rid of the extra stuff that matched\n')

ienumerable	iqueryable	14
('iqueryable', 'much more', 'ienumerable', '', '9246022', 'i m not familiar with the infeasability of iqueryable but this blog post seems to indicate that iqueryable is much more preferable to ienumerable because iqueryable allows access to the underlying expression\n')
('ienumerable', 'more', 'iqueryable', '', '20529312', 'ienumerable is more generic than iqueryable though all instances of iqueryable implement ienumerable and only defines\n')
('iqueryable', 'implementation more picky', 'ienumerable', 'usability', '9773250', 'entity framework s iqueryable implementation is more picky about creating new objects in objects than regular linq to objects ienumerable\n')
('iqueryable', 'more suitable', 'ienumerable', '', '13622131', 'i d say iqueryable is more suitable for interaction with a database than ienumerable is\n')
('ienumerable', 'more', 'iqueryable', '', '23475916', 'ienumerable is more generic than iqueryable though all\n')
('ienumerable', 'better', 'iqueryable', '', '5182499', 'the ienumerable side of linq which works on in-memory objects that are already in the heap will almost certainly perform better than the iqueryable side which exists to be translated into a native query language like sql\n')
('ienumerable', 'slower', 'iqueryable', 'performance', '17604913', 'in simple words all operations on ienumerable causes simple iteratation over all elements well it s lazy ienumerable really slower than iqueryable\n')
('iqueryable', 'way quicker', 'ienumerable', '', '17920394', 'with really basic calls to the database iqueryable is way quicker but when do i need to think about using an ienumerable in its place\n')
('iqueryable', 'much more preferable', 'ienumerable', '', '9246022', 'i m not familiar with the infeasability of iqueryable but this blog post seems to indicate that iqueryable is much more preferable to ienumerable because iqueryable allows access to the underlying expression\n')
('ienumerable', 'more generic', 'iqueryable', '', '20529312', 'ienumerable is more generic than iqueryable though all instances of iqueryable implement ienumerable and only defines\n')
('iqueryable', 'implementation more', 'ienumerable', 'usability', '9773250', 'entity framework s iqueryable implementation is more picky about creating new objects in objects than regular linq to objects ienumerable\n')
('iqueryable', 'better', 'ienumerable', '', '7791066', 'i have read about ienumerable and iqueryable i have read that iqueryable is better with linq because when you use where clauses it creates the exact query it needs but with ienumerable it retrieves all rows from database and then filters on memory\n')
('ienumerable', 'more generic', 'iqueryable', '', '23475916', 'ienumerable is more generic than iqueryable though all\n')
('iqueryable', 'more', 'ienumerable', '', '13622131', 'i d say iqueryable is more suitable for interaction with a database than ienumerable is\n')

filtering	grouping	2
('grouping', 'greater', 'filtering', '', '23948347', 'grouping that by acct to do the count by acct and when the result is greater than 1 filtering it using a having clause\n')
('filtering', 'more', 'grouping', '', '14151083', '2 i used link1 and link2 to filtering out duplicate users existing in more than one grouping\n')

if-statement	for-loop	1
('if-statement', 'worse', 'for-loop', '', '12656655', 'this is little strange to me why if-statement is in this aspect treated worse than for-loop\n')

tree	trie	17
('tree', 'admittedly more', 'trie', '', '2688976', 'finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n')
('trie', 'more', 'tree', '', '15458289', 'most likely a trie is more efficient and you didn t sort your dictionary and it doesn t use a binary tree or ternary tree\n')
('trie', 'substantially more space', 'tree', 'memory', '10970637', 'for cases where each node in the trie has most of its children used the trie is substantially more space efficient and time efficient than th ternary search tree\n')
('trie', 'more', 'tree', '', '2688976', 'finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n')
('tree', 'more memory', 'trie', 'memory', '4203216', 'use a radix tree wiki or trie wiki if you are concerned about performance.the radix tree is more memory efficient compared to a trie\n')
('trie', 'better', 'tree', '', '5953369', 'a trie is better suited to this kind of thing because it lets you store your symbols as a tree and quickly parse it to match values or reject them\n')
('tree', 'more similar', 'trie', '', '5347445', 'recursive is usually used for traversal and binary search tree but this tree is more similar to trie of only 2 character in alphabet\n')
('tree', 'faster', 'trie', 'performance', '6723322', 'the suffix tree is lighter and faster than the trie and is used to index dna or optimize some large web search engines\n')
('trie', 'better', 'tree', '', '3596741', 'a trie is better than a binary search tree for searching elements\n')
('tree', 'more', 'trie', '', '4203216', 'use a radix tree wiki or trie wiki if you are concerned about performance.the radix tree is more memory efficient compared to a trie\n')
('tree', 'admittedly more difficult', 'trie', '', '2688976', 'finally b+ tree is admittedly more difficult to implement than a trie it s more on a red-black tree level of complexity\n')
('tree', 'usually faster', 'trie', 'performance', '13988231', 'ps radix tree is usually faster and more compact then trie but suffers from the same side effects of trie comparing to hash tables though less significant of course\n')
('trie', 'more efficient', 'tree', 'performance', '15458289', 'most likely a trie is more efficient and you didn t sort your dictionary and it doesn t use a binary tree or ternary tree\n')
('tree', 'more', 'trie', '', '402806', 'a suffix tree is more or less an advanced trie here you can also search for any substrings in o c as for the trie\n')
('tree', 'more', 'trie', '', '5347445', 'recursive is usually used for traversal and binary search tree but this tree is more similar to trie of only 2 character in alphabet\n')
('trie', 'substantially more', 'tree', '', '10970637', 'for cases where each node in the trie has most of its children used the trie is substantially more space efficient and time efficient than th ternary search tree\n')
('tree', 'lighter', 'trie', 'memory', '6723322', 'the suffix tree is lighter and faster than the trie and is used to index dna or optimize some large web search engines\n')

d3.js	protovis	5
('d3.js', 'significantly faster', 'protovis', 'performance', '12335448', 'for semantic zooming you ll notice that d3.js is significantly faster than protovis\n')
('d3.js', 'more animation', 'protovis', '', '6218120', 'finally i haven t done much with animation but i think you re entirely correct - d3.js provides more animation support than protovis especially in terms of animated transitions\n')
('d3.js', 'faster', 'protovis', 'performance', '12335448', 'for semantic zooming you ll notice that d3.js is significantly faster than protovis\n')
('d3.js', 'more', 'protovis', '', '6218120', 'finally i haven t done much with animation but i think you re entirely correct - d3.js provides more animation support than protovis especially in terms of animated transitions\n')
('d3.js', 'better option', 'protovis', 'usability', '3313282', 'the team behind protovis has since created d3.js so this is likely a better option than protovis\n')

vundle	pathogen	1
('vundle', 'better', 'pathogen', '', '17790897', 'also i tried installing pathogen and that worked for some bundles but would not work for perlomni.vim because it was an ftplugin and pathogen was not appending the bundles correctly and after research i saw most people saying vundle was better than pathogen\n')

fractions	rational-numbers	1
('fractions', 'more', 'rational-numbers', '', '11600191', 'and most importantly all decimals stored on a computer are terminating because in a computer a decimal fractions is not much more than a rational-numbers m n with n being a power of 2\n')

oursql	mysql-python	2
('oursql', 'nicer', 'mysql-python', '', '2542930', 'i hear oursql is nicer the mysql-python\n')
('oursql', 'more proficient', 'mysql-python', '', '15832451', 'at least for .executemany oursql seems to be more proficient than mysql-python as the sql statement is only prepared once for all submitted values\n')

rythm	velocity	4
('rythm', 'faster', 'velocity', 'performance', '9596890', 'the benchmark shows rythm is 2 to 3 times faster than velocity on a normal page\n')
('rythm', 'faster', 'velocity', 'performance', '13906189', 'rythm is a strong typed java template engine using razor like syntax with high performance 2 to 3 times faster than velocity and fm\n')
('rythm', 'faster', 'velocity', 'performance', '13906205', 'rythm is a strong typed java template engine using razor like syntax with high performance 2 to 3 times faster than velocity and fm\n')
('rythm', 'faster', 'velocity', 'performance', '9926106', 'rythm is a high performance 2 to 3 times faster than velocity pure java template which use razor like syntax\n')

openrasta	asp.net-mvc	1
('openrasta', 'much closer', 'asp.net-mvc', '', '585100', 'i d suggest having a look at openrasta which is much closer to http semantics than asp.net asp.net-mvc is\n')

put	post	14
('post', 'more', 'put', '', '8693510', 'more importantly in this case i think post is more appropriate than put\n')
('post', 'also more commonly', 'put', '', '6203393', 'post is also more commonly used for partial updates as put generally implies sending a full new representation of the resource\n')
('put', 'simpler', 'post', 'usability', '2864151', 'on the php docs link above they say a put request is much simpler than a post request when uploading file along with this advantage what other advantages disadvanatges do the put has got compared to the post\n')
('post', 'more complex', 'put', 'usability', '17070042', 'side note it looks like you re using the post form of file upload which as the docs say is considerably more complex than put\n')
('put', 'more', 'post', '', '9352970', 'i think that in that case the put verb is more appropriate because post really means i want to create something new\n')
('post', 'more', 'put', '', '17924408', 'the client post scores and fetches highscore lists from the server and everything seemed to be working perfectly we had been testing it for a month with no problems and the code is really simple with not much more than a put get\n')
('put', 'request much simpler', 'post', 'usability', '2864151', 'on the php docs link above they say a put request is much simpler than a post request when uploading file along with this advantage what other advantages disadvanatges do the put has got compared to the post\n')
('post', 'more appropriate', 'put', '', '8693510', 'more importantly in this case i think post is more appropriate than put\n')
('post', 'safer', 'put', 'security', '11325318', 'typically you would not allow a http client to determine the uri of a new resource so a post to blog would be safer than a put to blog article-uri although http does cater for appropriate responses should the server be unable to honour the intended uri\n')
('put', 'moreso', 'post', '', '2023144', 'put is designed for file uploads moreso than post which requires doing a multipart upload but then it comes down to what your server can do as to which is more convenient for you to implement\n')
('put', 'more', 'post', '', '8669928', 'put does not mean update any more than post means insert\n')
('put', 'more secure http', 'post', '', '1577549', 'http put isn t inherently any more secure than http post if you re allowing the uploaded files to be exceuted on your server\n')
('post', 'also more', 'put', '', '6203393', 'post is also more commonly used for partial updates as put generally implies sending a full new representation of the resource\n')
('put', 'more appropriate', 'post', '', '9352970', 'i think that in that case the put verb is more appropriate because post really means i want to create something new\n')

mouseenter	mouseover	1
('mouseenter', 'better choice', 'mouseover', '', '2157980', 'the mouseenter event is usually a better choice than mouseover\n')

aes	des	19
('aes', 'faster result', 'des', 'performance', '9052760', 'aes will indeed yield a considerably faster result than des\n')
('aes', 'more', 'des', '', '21082690', 'also see why aes is more secure than des\n')
('aes', 'more secure', 'des', '', '21082690', 'also see why aes is more secure than des\n')
('aes', 'larger triple', 'des', 'memory', '13404970', 'note that the effective key size of aes is larger than triple des\n')
('aes', 'faster', 'des', 'performance', '9928310', 'if aes is negotiated it s faster than des and 3des used by default by older applications\n')
('des', 'faster', 'aes', 'performance', '10282566', 'using des assuming it s a little faster than aes and requires a smaller key and\n')
('aes', 'more', 'des', '', '17019046', 'turns out this was a hardware failure the aes commands need more power than the des crypto1 ones 50 more which the antenna failed to deliver at the reading range i was testing with\n')
('aes', 'faster', 'des', 'performance', '25612825', 'this shows that the timings are sensitive to buffering and that aes is faster than des\n')
('aes', 'encryption less vulnerable', 'des', '', '3929325', 'which steps of aes encryption makes it less vulnerable than des\n')
('des', 'slower', 'aes', 'performance', '7007053', 'des is usually substantially slower than aes on modern hardware and has keys that are far too short for modern use\n')
('des', 'slower', 'aes', 'performance', '10282754', 'though it s unrelated to your actual question des is generally slower than aes at least in software so unless you really need to keep the key small aes is almost certainly a better choice\n')
('aes', 'encryption more', 'des', '', '11269211', 'i ve read that aes encryption is more secure than the triple des encryption ms is using in their example above\n')
('aes', 'better speedup', 'des', '', '21886363', 'if you used aes then you might see a better speedup over the des 3des observations\n')
('aes', 'less vulnerable', 'des', '', '3929325', 'which steps of aes encryption makes it less vulnerable than des\n')
('des', 'generally slower', 'aes', 'performance', '10282754', 'though it s unrelated to your actual question des is generally slower than aes at least in software so unless you really need to keep the key small aes is almost certainly a better choice\n')
('aes', 'encryption less', 'des', '', '3929325', 'which steps of aes encryption makes it less vulnerable than des\n')
('aes', 'encryption more secure', 'des', '', '11269211', 'i ve read that aes encryption is more secure than the triple des encryption ms is using in their example above\n')
('aes', 'more power', 'des', '', '17019046', 'turns out this was a hardware failure the aes commands need more power than the des crypto1 ones 50 more which the antenna failed to deliver at the reading range i was testing with\n')
('aes', 'larger', 'des', 'memory', '13404970', 'note that the effective key size of aes is larger than triple des\n')

smartgwt	uibinder	2
('smartgwt', 'much more', 'uibinder', '', '6262121', 'while smartgwt has much more sophisticated widgets than gwt you still can t use uibinder in conjunction with it which is why i rejected using smartgwt\n')
('smartgwt', 'much more sophisticated', 'uibinder', '', '6262121', 'while smartgwt has much more sophisticated widgets than gwt you still can t use uibinder in conjunction with it which is why i rejected using smartgwt\n')

trinidad	richfaces	3
('trinidad', 'more basic', 'richfaces', '', '2402860', 'regarding skinning i feel trinidad default skinning to be more basic than richfaces one but i think both have ways to make them as beautiful as your css skills allow you\n')
('richfaces', 'more mature', 'trinidad', '', '2402860', 'i think richfaces has a more mature ajax integration and their ajax components and events are more easy to use for me than trinidad ones\n')
('richfaces', 'more', 'trinidad', '', '2402860', 'i think richfaces has a more mature ajax integration and their ajax components and events are more easy to use for me than trinidad ones\n')

division	multiplying	8
('division', 'much more concise', 'multiplying', 'usability', '11588693', 'but determining the digit and the carry by division is much more concise and for the larger factors also much more efficient when multiplying a digit by 100 the result is on average 450 requiring 45 subtractions but two divisions are sufficient for all factors\n')
('multiplying', 'better', 'division', '', '10420573', 'but in normal case it takes n 2 comparison so you half the height of tree but you multiplying each merge with two so total running time is not better than division to 2 part\n')
('division', 'slower', 'multiplying', 'performance', '4301621', 'sure that s probably compiled or jit d away but you should avoid division in performance critical code it s far slower than multiplying\n')
('division', 'slower', 'multiplying', 'performance', '15712237', 'i presume that you know that using a division is a lot slower than multiplying by decimal number 5 is always slower than 0.2\n')
('division', 'much more', 'multiplying', '', '11588693', 'but determining the digit and the carry by division is much more concise and for the larger factors also much more efficient when multiplying a digit by 100 the result is on average 450 requiring 45 subtractions but two divisions are sufficient for all factors\n')
('division', 'better', 'multiplying', '', '7945958', 'while working with integer division it s better to multiplying first and divide later to minimize the rounding error\n')
('division', 'more', 'multiplying', '', '13148266', 'division of quaternion a by quaternion b is nothing more than multiplying a by the multiplicative inverse of b\n')
('multiplying', 'faster', 'division', 'performance', '6056262', 'these can be compared to multiplying by 2 x left-shift or divinding by 2 x right-shift but it should be noted that a binary shift is much faster than a division operation\n')

eigen	boost	1
('eigen', 'faster', 'boost', 'performance', '16991255', 'inspecting the assembly shows that in the sequential access case eigen is faster because the sum becomes vectorized while it does not when using raw boost multi_array\n')

memcpy	strcpy	17
('memcpy', 'faster', 'strcpy', 'performance', '15176895', 'we keep track of what cmd s length ought to be in a variable and copy the string with memcpy which is slightly faster than strcpy and does neither check string length nor copy the extra zero at end of string\n')
('memcpy', 'faster', 'strcpy', 'performance', '24966693', 'so i feel that on x86 memcpy is faster than strcpy\n')
('memcpy', 'faster', 'strcpy', 'performance', '24966693', 'is memcpy usually faster than strcpy on most real platforms\n')
('memcpy', 'slightly faster', 'strcpy', 'performance', '15176895', 'we keep track of what cmd s length ought to be in a variable and copy the string with memcpy which is slightly faster than strcpy and does neither check string length nor copy the extra zero at end of string\n')
('memcpy', 'slower', 'strcpy', 'performance', '4361629', 'memcpy is not really any slower than strcpy\n')
('memcpy', 'slower', 'strcpy', 'performance', '24967980', 'for example for small amounts of data an memcpy optimised for large amounts of data may be significantly slower than a strcpy that wasn t optimised for large amounts of data\n')
('memcpy', 'usually faster', 'strcpy', 'performance', '3942421', 'memcpy is usually faster than strcpy for longer strings\n')
('strcpy', 'more complicated', 'memcpy', 'usability', '25303036', 'the reason for not having strcpy i m guessing is that strcpy can be replaced more efficiently with memcpy for constant strings and if the string is not constant strcpy is a bit more complicated than memcpy anyway so not as beneficial to make inline optimisations for\n')
('memcpy', 'rarely slower', 'strcpy', 'performance', '23201978', 'memcpy is rarely slower than strcpy or strncpy and often significantly faster\n')
('memcpy', 'faster', 'strcpy', 'performance', '24966865', 'on almost any platform memcpy is going to be faster than strcpy when copying the same number of bytes\n')
('memcpy', 'faster', 'strcpy', 'performance', '9760567', 'but sometimes memcpy performs faster than strcpy because it moves blocks of memory at a time which allows it to perform some optimization i will not go into details here\n')
('memcpy', 'slightly faster', 'strcpy', 'performance', '23762261', 'because of the above replace strdup with strlen malloc memcpy memcpy is slightly faster than strcpy\n')
('memcpy', 'faster', 'strcpy', 'performance', '3942421', 'memcpy is usually faster than strcpy for longer strings\n')
('memcpy', 'slower', 'strcpy', 'performance', '23201978', 'memcpy is rarely slower than strcpy or strncpy and often significantly faster\n')
('memcpy', 'faster', 'strcpy', 'performance', '23762261', 'because of the above replace strdup with strlen malloc memcpy memcpy is slightly faster than strcpy\n')
('memcpy', 'faster', 'strcpy', 'performance', '25242721', 'memcpy is faster than strcpy and also enforces you to specify a buffer size\n')
('memcpy', 'faster', 'strcpy', 'performance', '24990268', 'if size is known normally a non-naive implementation of memcpy is faster than strcpy since it takes profit of the cpu s data bus size\n')

greenfoot	bluej	1
('greenfoot', 'better', 'bluej', '', '259080', 'i think greenfoot is better than bluej for 8-years old\n')

sproutcore	javascriptmvc	1
('sproutcore', 'more heavyweight', 'javascriptmvc', 'memory', '509703', 'it s probably overkill for what you need but sproutcore is an mvc framework and it doesn t look any more heavyweight than javascriptmvc or trimpath s junction\n')

serializable	deserialization	9
('serializable', 'quicker', 'deserialization', '', '1092020', 'the serializable seems quicker but deserialization much slower and the app is doing more deserializing than serializing\n')
('deserialization', 'much faster', 'serializable', 'performance', '12316966', 'if the taskproperty class is decorated with datacontract attribute and with datamember attribute for each property the deserialization is much faster than when it is decorated with serializable attribute\n')
('deserialization', 'code more', 'serializable', '', '19277574', 'i ve reworked it slightly so that the deserialization code looks more like its serializable counterpart\n')
('serializable', 'more control', 'deserialization', 'usability', '3210800', 'you ll need to implement serializable to have java handle the serializable or externalizable if you need more control over the deserialization process\n')
('serializable', 'longer equal', 'deserialization', '', '18810000', 'i have an issue with serializable in c# .net where if i serializable in one stream multiple references to a same object these references are no longer equal after deserialization\n')
('deserialization', 'harder', 'serializable', '', '3019036', 'deserialization is harder than serializable\n')
('serializable', 'better control', 'deserialization', 'usability', '20996013', 'side note check-out the json.net serializable which gives more options and better control over the deserialization process\n')
('serializable', 'more', 'deserialization', '', '20996013', 'side note check-out the json.net serializable which gives more options and better control over the deserialization process\n')
('serializable', 'more options', 'deserialization', 'usability', '20996013', 'side note check-out the json.net serializable which gives more options and better control over the deserialization process\n')

stdout	fflush	2
('fflush', 'frequency lower', 'stdout', '', '5903481', 'i guess that these lines have shorter output so the fflush frequency is lower i used the stdout line to print a deliberate help message\n')
('stdout', 'more', 'fflush', '', '2605364', 'occasionally the stdout needs more than a write method fflush is another common one which stringio will handle\n')

division	addition	31
('division', 'more', 'addition', '', '884697', 'the addition and subtraction is okay because the types of a and b force them to be performed using floating point arithmetic - but because division binds more tightly than addition and subtraction it s like using the brackets above only the immediate operands are considered\n')
('division', 'higher precedence', 'addition', '', '17433226', 'multiplication and division have a higher precedence than addition and subtraction\n')
('division', 'higher precedence', 'addition', '', '14622461', 'division has higher precedence than addition\n')
('division', 'much more expensive', 'addition', '', '5649137', 'the first difference is that division is much more expensive than addition\n')
('division', 'larger', 'addition', 'memory', '5649131', 'and division has larger complexity than addition\n')
('division', 'more time', 'addition', 'performance', '24542784', 'i remember it says something like division takes much much more time than addition\n')
('division', 'longer', 'addition', '', '1541739', 'the term is apparently not an exact measurement as it is clear that a double-precision floating-point operation is going to take longer than a single-precision one and multiplication and division are going to take longer than addition and subtraction\n')
('division', 'operator higher order', 'addition', '', '19467456', 'the division operator has a higher order precedence as the addition operator\n')
('addition', 'faster', 'division', 'performance', '4624837', 'an addition is faster than a division and a multiplication\n')
('division', 'higher', 'addition', '', '14622461', 'division has higher precedence than addition\n')
('division', 'larger complexity', 'addition', 'memory', '5649131', 'and division has larger complexity than addition\n')
('division', 'simpler', 'addition', 'usability', '4247640', 'knuth writes that fibonacci search is preferable on some computers because it involves only addition and subtraction not division by 2. but almost all computers use binary arithmetic in which division by 2 is simpler than addition and subtraction\n')
('division', 'far more cycles', 'addition', '', '14395974', 'best example the division it an an addition are both o 1 but usually the division takes far more cycles time to execute than the addition\n')
('division', 'slower', 'addition', 'performance', '8392125', 'it could be done via division which is much slower than addition or it could be translated into a bitwise and operation as well and end up being just as fast as the version\n')
('addition', 'faster', 'division', 'performance', '1348077', 'for example on most 32 bit systems 64-bit addition is faster than 32-bit division modulo\n')
('addition', 'faster', 'division', 'performance', '1348077', 'performing addition on this slightly larger type will pretty much always be faster than doing division or modulo on the type itself\n')
('division', 'far more', 'addition', '', '14395974', 'best example the division it an an addition are both o 1 but usually the division takes far more cycles time to execute than the addition\n')
('division', 'operator higher', 'addition', '', '19467456', 'the division operator has a higher order precedence as the addition operator\n')
('division', 'more expensive', 'addition', '', '5649137', 'the first difference is that division is much more expensive than addition\n')
('division', 'slower', 'addition', 'performance', '22877763', '2.the division by 2 can be done by bit - shift operation is it really slower than addition\n')
('division', 'higher precedence', 'addition', '', '16127818', 'multiplication and division operators have higher precedence than addition and subtraction in c++ same as in scientific notation\n')
('division', 'more tightly', 'addition', '', '884697', 'the addition and subtraction is okay because the types of a and b force them to be performed using floating point arithmetic - but because division binds more tightly than addition and subtraction it s like using the brackets above only the immediate operands are considered\n')
('division', 'more', 'addition', '', '8335325', 'so even disregarding that division is more expensive than addition and multiplication we see that the number of operations the sieve requires is much smaller than the number of operations required by trial division if the limit is not too small\n')
('division', 'higher', 'addition', '', '19503254', 'since division has a higher precedence than addition 5 2 gets evaluated as a integer division returning 2 as an integer\n')
('division', 'much more', 'addition', '', '5649137', 'the first difference is that division is much more expensive than addition\n')
('addition', 'faster', 'division', 'performance', '8949555', 'for example an addition is typically much faster than a division\n')
('division', 'higher precedence', 'addition', '', '11533547', 'to start with i need multiplication and division to take higher precedence than addition and subtraction\n')
('addition', 'less work', 'division', '', '8643410', 'in addition to that the crossing off may be less work than a division don t know about python it is for c arrays\n')
('division', 'more expensive', 'addition', '', '8335325', 'so even disregarding that division is more expensive than addition and multiplication we see that the number of operations the sieve requires is much smaller than the number of operations required by trial division if the limit is not too small\n')
('division', 'much slower', 'addition', 'performance', '8392125', 'it could be done via division which is much slower than addition or it could be translated into a bitwise and operation as well and end up being just as fast as the version\n')
('division', 'higher precedence', 'addition', '', '19503254', 'since division has a higher precedence than addition 5 2 gets evaluated as a integer division returning 2 as an integer\n')

objectcontext	dbcontext	17
('dbcontext', 'much simpler', 'objectcontext', 'usability', '12495100', 'dbcontext is much simpler to use than objectcontext and will serve the most common development needs\n')
('dbcontext', 'newer api', 'objectcontext', '', '15875489', 'dbcontext is newer api which should polish developers experience when using most common tasks - simply the api is better designed but you still have to get objectcontext from dbcontext and use the older api if you want to use some more complex features\n')
('dbcontext', 'newer', 'objectcontext', '', '15179448', 'i used to use dbcontext for all of my db models until i read ways to optimize entity framework after following the steps i found my self forced to switch to objectcontext instead so there were alot of code changes to be done but i am not sure that i doing the right thing specially after googling the deference i ve noticed that dbcontext is newer and better than objectcontext and also i noticed that i lost alot of things while switching to objectcontext like migrations and find method and much more.\n')
('dbcontext', 'api easier', 'objectcontext', 'usability', '13000063', 'besides the dbcontext api is easier to use than objectcontext\n')
('objectcontext', 'better', 'dbcontext', '', '12689334', 'in 6.7 a graph it shown that states that the performance of a objectcontext linq query is better than dbcontext linq query\n')
('dbcontext', 'more pleasant api', 'objectcontext', '', '13089533', 'dbcontext is a much more pleasant api than objectcontext\n')
('dbcontext', 'slower', 'objectcontext', 'performance', '10103310', 'if adding 2000 entities and saving the changes at the end dbcontext is 3 to 5 times slower than objectcontext btw. i know that adding a large amount of entities would be better using sqlbulkcopy but that s not the point\n')
('dbcontext', 'newer', 'objectcontext', '', '15875489', 'dbcontext is newer api which should polish developers experience when using most common tasks - simply the api is better designed but you still have to get objectcontext from dbcontext and use the older api if you want to use some more complex features\n')
('dbcontext', 'api better', 'objectcontext', '', '22010602', 'there are many reasons why the dbcontext api is better than the older objectcontext api but in your case it may initially feel like a downgrade\n')
('objectcontext', 'worse', 'dbcontext', '', '7230825', 'it is a feature it is about objectcontext api but the same is true or worse with dbcontext api\n')
('dbcontext', 'better', 'objectcontext', '', '17285367', 'my understanding is that although dbcontext is newer it s not necessarily better than objectcontext it just provides a different api that might be considered simpler but doesn t that depend on the use case\n')
('dbcontext', 'lighter', 'objectcontext', 'memory', '14903097', 'you just need to connect using the entity framework driver and if you develop in any of technologies that uses dbcontext includes code first model first and data base first but is lighter than objectcontext you can use the list below\n')
('dbcontext', 'newer', 'objectcontext', '', '17285367', 'my understanding is that although dbcontext is newer it s not necessarily better than objectcontext it just provides a different api that might be considered simpler but doesn t that depend on the use case\n')
('dbcontext', 'much simpler', 'objectcontext', 'usability', '9224507', 'and dbcontext is much simpler to use than objectcontext and will serve the most common development needs\n')
('dbcontext', 'api easier', 'objectcontext', 'usability', '14727174', 'dbcontext api is easier to work with than objectcontext but both approaches use the former\n')
('dbcontext', 'slower', 'objectcontext', 'performance', '10103310', 'when it comes to deletion it even gets worse when saving at the end of all entity removals dbcontext is around 18 times slower than objectcontext\n')
('dbcontext', 'better', 'objectcontext', '', '15179448', 'i used to use dbcontext for all of my db models until i read ways to optimize entity framework after following the steps i found my self forced to switch to objectcontext instead so there were alot of code changes to be done but i am not sure that i doing the right thing specially after googling the deference i ve noticed that dbcontext is newer and better than objectcontext and also i noticed that i lost alot of things while switching to objectcontext like migrations and find method and much more.\n')

m2e	maven	7
('maven', 'steeper', 'm2e', '', '1429767', 'maven 2 has a steeper learning curve but provides a much richer set of functionality for building your projects and eclipse integration through m2e or iam\n')
('m2e', 'longer works', 'maven', '', '5704090', 'with 0.13 m2e this no longer works as the maven builder appears to put things in target your-artificat-version-snapshot web-inf classes\n')
('maven', 'less likely', 'm2e', '', '14206612', 'moreover i m using m2e the maven plugin for eclipse so it seems that the compatibility of any maven plugins that might work by themselves is even less likely with m2e\n')
('m2e', 'more', 'maven', '', '47674', 'in other words m2e is more friendly to the maven way\n')
('maven', 'steeper learning', 'm2e', '', '1429767', 'maven 2 has a steeper learning curve but provides a much richer set of functionality for building your projects and eclipse integration through m2e or iam\n')
('m2e', 'better integration additional', 'maven', '', '10005421', 'm2e is also a platform that let others provide better integration with additional maven plugins android web development etc.\n')
('m2e', 'more friendly', 'maven', '', '47674', 'in other words m2e is more friendly to the maven way\n')

leaflet	openlayers	1
('leaflet', 'more lightweight', 'openlayers', 'memory', '13807524', 'while leaflet aims to be more lightweight than openlayers openlayers is by far the more mature proj\n')

fancybox	thickbox	1
('fancybox', 'smaller', 'thickbox', 'memory', '3458145', 'i m using facebox and fancybox both smaller than thickbox\n')

opera	google-chrome	7
('opera', 'more powerful', 'google-chrome', 'usability', '7449937', 'since you noted thoughts on other browsers would be helpful opera s kiosk mode seems more powerful than google-chrome s\n')
('opera', 'probably more complete', 'google-chrome', '', '17245353', 'opera probably is more complete to manage canvas than google-chrome but the problem is always to exclude the finger touch if i m using the pen\n')
('opera', 'probably more', 'google-chrome', '', '17245353', 'opera probably is more complete to manage canvas than google-chrome but the problem is always to exclude the finger touch if i m using the pen\n')
('opera', 'much more', 'google-chrome', '', '3888711', 'especially in opera there is much more green in the painting than in google-chrome\n')
('opera', 'higher', 'google-chrome', '', '14887100', 'now this works fine in google-chrome and safari and i have had to use assitional css settings for firefox but ie and opera both display my ribbon div about 25px higher than in google-chrome or safari\n')
('opera', 'much more green', 'google-chrome', '', '3888711', 'especially in opera there is much more green in the painting than in google-chrome\n')
('opera', 'longer', 'google-chrome', '', '2294832', 'also nice to know is the fact that the latest version of google-chrome and also opera don t know since when but longer than google-chrome supports userscripts out of the box no need to install any add-ons\n')

uiimage	ciimage	1
('uiimage', 'slightly larger', 'ciimage', 'memory', '11301560', 'it seems like if the uiimage is slightly larger the ciimage is double the size whereas if the uiimage is slightly smaller this isn t the case\n')

pdfbox	itextsharp	1
('pdfbox', 'much better', 'itextsharp', '', '22675690', 'edit 31 march 2014 for what it s worth i have found that pdfbox is much better at text extraction than itextsharp notwithstanding a bespoke strategy implementation and pdflib tet is slightly better than pdfbox but it s quite expensive\n')

multiplying	add	18
('multiplying', 'more', 'add', '', '24842621', 'then i think it would be the problem of precedence in most case they are left-to-right and i think multiplying would be calculated first because in c multiplying is more prior than add instruction by one level\n')
('multiplying', 'more prior', 'add', '', '24842621', 'then i think it would be the problem of precedence in most case they are left-to-right and i think multiplying would be calculated first because in c multiplying is more prior than add instruction by one level\n')
('multiplying', 'operation more', 'add', '', '2306404', 'the multiplying operation uses more clock cycles than the add on many processors\n')
('add', 'lower resolutions', 'multiplying', '', '15262190', 'you can add higher and lower resolutions by multiplying or dividing them by 2\n')
('multiplying', 'slower', 'add', 'performance', '21010730', 'its the multiplying that historically was slower than the add\n')
('add', 'faster', 'multiplying', 'performance', '3706276', 'add is faster than mul but if you want to multiplying two general values mul is far faster than any loop iterating add operations\n')
('multiplying', 'slower', 'add', 'performance', '18417272', 'as of a few years ago multiplying was 3x slower than add\n')
('multiplying', 'more', 'add', '', '22388522', 'where multiplying binds more tightly than add\n')
('add', 'higher precedence', 'multiplying', '', '7501702', 'i would like to add the pow in my evaluator with an higher precedence than multiplying and divide\n')
('multiplying', 'higher', 'add', '', '4885461', 'with extra braces because multiplying has a higher precedence than add - assuming these are both percentage discounts\n')
('multiplying', 'more tightly', 'add', '', '22388522', 'where multiplying binds more tightly than add\n')
('multiplying', 'higher precedence', 'add', '', '10988746', 'to give multiplying and divide higher precedence than add and subtract you can do something like this example adapted from john levine lex yacc 2 e 1992\n')
('multiplying', 'higher precedence', 'add', '', '4885461', 'with extra braces because multiplying has a higher precedence than add - assuming these are both percentage discounts\n')
('multiplying', 'more time', 'add', 'performance', '21819771', 'functionally a multiplying will always take more time than an add because it combines a true multiplying along with a true addition step\n')
('multiplying', 'slower', 'add', 'performance', '18418827', 'on a cpu with a fast multiplier multiplying may only be on the order of 4 times slower than add but on normal hardware it s 16-32 times slower for a 32 bit operation\n')
('multiplying', 'operation more clock', 'add', '', '2306404', 'the multiplying operation uses more clock cycles than the add on many processors\n')
('multiplying', 'higher precedence', 'add', '', '21650235', 'multiplying and divide have higher precedence than add and subtract\n')
('add', 'higher precedence', 'multiplying', '', '7501430', 'moreover i would like to add the pow in my evaluator with an higher precedence than multiplying and divide\n')

hive	hdfs	1
('hive', 'slower plain', 'hdfs', 'performance', '9167763', 'plus the overhead of doing it is extremely costly- hive queries against hbase are on my cluster at least an order of magnitude slower than against plain hdfs files\n')

rsa	aes	19
('rsa', 'more', 'aes', '', '124248', 'that is actually not the case with rsa which is --- more so than aes --- just a math equation\n')
('aes', 'faster then', 'rsa', 'performance', '15027631', 'there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n')
('aes', 'faster', 'rsa', 'performance', '15027631', 'there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n')
('rsa', 'less user-friendly', 'aes', 'usability', '124248', 'algorithms like rsa are much less user-friendly than aes\n')
('rsa', 'encrypt faster', 'aes', 'performance', '14642408', 'it shows that rsa encrypt is faster then aes encrypt\n')
('rsa', 'much slower', 'aes', 'performance', '22911417', 'one of the reasons to do so is that rsa is much slower than for example aes\n')
('aes', 'less', 'rsa', '', '15027631', 'there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n')
('aes', 'less resource', 'rsa', '', '15027631', 'there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa\n')
('aes', 'less', 'rsa', '', '124248', 'block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa\n')
('aes', 'faster', 'rsa', 'performance', '20925115', 'and regarding your first question it is definitely possible to encrypt decrypt messages directly using rsa there are only technical and performance reasons aes is much faster than rsa why rsa is used only to encrypt a session key and aes is used to encrypt decrypt the messages themselves\n')
('rsa', 'less strenght', 'aes', '', '23744165', 'in your particular case an rsa key of 2048 bits has a lot less strenght than an aes key of 256 bits\n')
('rsa', 'key less', 'aes', '', '24333679', 'but if you use public key encryption to encrypt messages you are a limited to small messages -- a 1024 bit rsa key encrypts less than 128 bytes and b going to pay in performance because public key encryption is much more costly than symmetric key encryption such as aes encryption\n')
('rsa', 'much slower', 'aes', 'performance', '9237803', 'like you heard asymmetric cryptography like rsa is much slower than symmetric cryptography aes but it does have it s advantages simpler key management a single private key to protect\n')
('aes', 'less safe', 'rsa', '', '124248', 'block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa\n')
('aes', 'much faster', 'rsa', 'performance', '2743437', 'so the 115 seconds will be reduced to 3-4 secs plus the encryption decryption time used for aes which is much faster than rsa\n')
('rsa', 'encrypt faster then', 'aes', 'performance', '14642408', 'it shows that rsa encrypt is faster then aes encrypt\n')
('rsa', 'more so', 'aes', '', '124248', 'that is actually not the case with rsa which is --- more so than aes --- just a math equation\n')
('aes', 'much faster', 'rsa', 'performance', '20925115', 'and regarding your first question it is definitely possible to encrypt decrypt messages directly using rsa there are only technical and performance reasons aes is much faster than rsa why rsa is used only to encrypt a session key and aes is used to encrypt decrypt the messages themselves\n')
('aes', 'faster', 'rsa', 'performance', '2743437', 'so the 115 seconds will be reduced to 3-4 secs plus the encryption decryption time used for aes which is much faster than rsa\n')

uitextview	uilabel	3
('uitextview', 'much more', 'uilabel', '', '18561194', 'i m aware that uitextview is much more suitable for this as it implements uitextinput protocol which has all the methods i need but due to a bug in ios i m limited to uilabel\n')
('uitextview', 'much more suitable', 'uilabel', '', '18561194', 'i m aware that uitextview is much more suitable for this as it implements uitextinput protocol which has all the methods i need but due to a bug in ios i m limited to uilabel\n')
('uitextview', 'slower', 'uilabel', 'performance', '4925945', 'also consider using uilabel instead of uitextview if you don t need to edit information inside since uitextview take longer to allocate and init and are generally slower than uilabel\n')

timeit	cprofile	1
('timeit', 'more accurate', 'cprofile', 'performance', '24627415', 'you should always use the timeit module for time trials it is far more accurate than cprofile here\n')

vlfeat	opencv	1
('vlfeat', 'smaller', 'opencv', 'memory', '15091737', 'have a look at sift and surf and at vlfeat which has a good sift implementation and also implements mser and hog and is much smaller than opencv\n')

datamapper	activerecord	17
('activerecord', 'much simpler then', 'datamapper', 'usability', '4034591', 'activerecord is much simpler then a datamapper but also much more limited\n')
('datamapper', 'much more ruby', 'activerecord', '', '2681920', 'also datamapper is much more ruby syntax friendy and features like lazy loading when doing chainable conditions like activerecord in rails 3 are there from the beginning\n')
('datamapper', 'faster', 'activerecord', 'performance', '818424', 'i d recommend datamapper for orm not only it s way faster than activerecord but it s also very modularly built and plugins are actual gems that you can easily install\n')
('datamapper', 'better', 'activerecord', '', '5351338', 'datamapper idea is definitely better than activerecord\n')
('activerecord', 'much simpler', 'datamapper', 'usability', '4034591', 'activerecord is much simpler then a datamapper but also much more limited\n')
('datamapper', 'much smarter', 'activerecord', '', '5351338', 'datamapper is much smarter then activerecord\n')
('datamapper', 'higher', 'activerecord', '', '8169572', 'the level of abstraction of datamapper is way higher than the activerecord s\n')
('datamapper', 'much smarter then', 'activerecord', '', '5351338', 'datamapper is much smarter then activerecord\n')
('datamapper', 'potentially more complex', 'activerecord', 'usability', '94070', 'datamapper is potentially more complex then activerecord but it s a lot easier to develop your domain model and database asynchronous then with activerecord\n')
('datamapper', 'much more', 'activerecord', '', '2681920', 'also datamapper is much more ruby syntax friendy and features like lazy loading when doing chainable conditions like activerecord in rails 3 are there from the beginning\n')
('datamapper', 'way higher', 'activerecord', '', '8169572', 'the level of abstraction of datamapper is way higher than the activerecord s\n')
('datamapper', 'idea definitely better', 'activerecord', '', '5351338', 'datamapper idea is definitely better than activerecord\n')
('datamapper', 'model much easier', 'activerecord', 'usability', '4338143', 'from my point of view the datamapper model is much easier to grasp but since activerecord is the defacto standard it feels weird to change the orm just for this little problem\n')
('datamapper', 'newer', 'activerecord', '', '3828562', 'datamapper is newer than activerecord\n')
('datamapper', 'newer', 'activerecord', '', '3828265', 'so a question for those who know better is datamapper newer than activerecord\n')
('datamapper', 'potentially more', 'activerecord', '', '94070', 'datamapper is potentially more complex then activerecord but it s a lot easier to develop your domain model and database asynchronous then with activerecord\n')
('activerecord', 'more', 'datamapper', '', '18681836', 'i don t know whether this port of cql3 to ruby support activerecord it acts more like a simple datamapper but it worths having a look\n')

qunit	jasmine	3
('qunit', 'better', 'jasmine', '', '12772542', 'performing this asynchronous testing is actually possible in qunit but is handled better in another javascript testing framework jasmine js\n')
('jasmine', 'clearly more', 'qunit', '', '18155477', 'jasmine is clearly more bdd focused than qunit although i could see doing bdd with qunit by describing the tests in a behavior-oriented way\n')
('jasmine', 'clearly more bdd', 'qunit', '', '18155477', 'jasmine is clearly more bdd focused than qunit although i could see doing bdd with qunit by describing the tests in a behavior-oriented way\n')

memset	memcpy	1
('memset', 'faster', 'memcpy', 'performance', '21631430', 'it is understandable that memset is faster than memcpy\n')

silex	symfony	1
('silex', 'lower overhead', 'symfony', 'performance', '14501349', 'also take a look at silex as this has lower overhead than symfony and works with symfony forms\n')

keyup	keydown	7
('keyup', 'more preferable', 'keydown', '', '20370954', 'keyup is more preferable than keydown because keydown may occur multiple times if user keeps it pressed\n')
('keyup', 'earlier', 'keydown', '', '12622265', 'as you can see the keyup events of numpad5 and numpad6 occured earlier than their keydown event\n')
('keydown', 'better', 'keyup', '', '19554689', 'edit keydown is a little better than keyup for the element bind now enter key fails silently-ish\n')
('keydown', 'earlier', 'keyup', '', '14646962', 'the events seem to not follow strict sequential rules second keydown comes earlier than first keyup so the timer gets initialized multiple times\n')
('keyup', 'more', 'keydown', '', '20370954', 'keyup is more preferable than keydown because keydown may occur multiple times if user keeps it pressed\n')
('keydown', 'better', 'keyup', '', '25278766', 'also if you notice i ve changed the keyup event to keydown which is better in my opinion cause when the user holds their finger down on a button the code wouldn t be fired if it is on the keyup event\n')
('keydown', 'earlier first', 'keyup', '', '14646962', 'the events seem to not follow strict sequential rules second keydown comes earlier than first keyup so the timer gets initialized multiple times\n')

speex	wma	1
('speex', 'better', 'wma', '', '2526831', 'speex is designed for speech and should perform better than wma mp3 or other audio codecs that are designed to handle music if you are just encoding speech which i assume since you are grabbing from the mic\n')

robospice	ion	2
('robospice', 'more', 'ion', '', '23863829', 'i ve used both robospice is more robust but ion is easier on the eyes\n')
('robospice', 'more robust', 'ion', 'reliability', '23863829', 'i ve used both robospice is more robust but ion is easier on the eyes\n')

height	width	569
('width', 'greater', 'height', '', '25686634', 'so if the width was greater than the height doing\n')
('width', 'larger', 'height', 'memory', '18321869', 'left position in fixed worked probably due to the fact that it s width is larger than it s height\n')
('height', 'greater device', 'width', '', '13474562', 'device height greater than device width\n')
('width', 'larger', 'height', 'memory', '3507317', 'solved it will resize only if width is larger than 800px or height is larger than 600px\n')
('width', 'much bigger', 'height', 'memory', '14835714', 'now pen style thumb width is much bigger than height show correctly\n')
('width', 'greater', 'height', '', '12516127', 'in other words if either maxwidth is greater than the width of or maxheight is greater than the height of it will return true\n')
('width', 'greater', 'height', '', '15030192', 'inversely if the width is greater the generated height will be slightly smaller\n')
('height', 'auto more consistent', 'width', '', '19236411', 'so height auto seems more consistent with the grid based on width and a vertical scrollbar\n')
('width', 'greater', 'height', '', '20850740', 'if the height is greater than the width get the ratio by dividing the new height with the old one and finally multiply the width with the ratio to get the new width if the width is greater than the height you do the opposite like in the example code below\n')
('width', 'smaller', 'height', 'memory', '8036734', 'now this works on my desktop machine in firefox if i make the width smaller than the height\n')
('width', 'smaller', 'height', 'memory', '16437434', 'how can i make the outer div height and width never be any smaller than the height and width of its contents\n')
('width', 'more', 'height', '', '21797368', 'i resize the image if its width is more then 225 and height automatically fix with that width\n')
('height', 'greater', 'width', '', '12428326', 'when the picture is portrait height is greater than width the output is automatically rotated how can i prevent this behavior\n')
('width', 'less', 'height', '', '24466192', 'when the screen width hits less that 780px the catalog grid page div just loses its height and the page becomes unscrollable\n')
('width', 'greater', 'height', '', '9335077', 'alternatively you can use jquery filter method to filter all the images which have width greater than height and then add the required class at once\n')
('height', 'greater', 'width', '', '8698365', 'you can tell the difference by seeing if the screen height is greater than the screen width\n')
('height', 'greater', 'width', '', '10765232', '1 if image s height is greater than width then its height will be 300\n')
('width', 'less', 'height', '', '25426764', 'i am trying to make my html page tablet compattible by trying to hide the menu if width is less than height it works when page loads but when i change the orientation of tablet the menu div remains at its place\n')
('width', 'less', 'height', '', '15420151', 'tried some option as width is less when we resize then list item move below and increase height of ul so using this method i am able to hide last visible\n')
('height', 'bigger original', 'width', 'memory', '1725214', 'if set true then it might increase the width or height if the given width and height are bigger than original width and height\n')
('width', 'side larger', 'height', 'memory', '21121447', 'when resizing the image if the width side is larger than the height resize the image so that the image height is the div s height and hide the width overflow after centering\n')
('height', 'larger', 'width', 'memory', '23404270', 'to draw a crossed rectangle of height 2 times larger than its width using the low-level graphics package facilities i call\n')
('width', 'less', 'height', '', '12234413', 'what i need to do is change the 515 based on the width of the window if the window width is above 1280 i would like the value for the height to be 515 and if it is below 1280 i would like the height to be 615 and if the width is less than 480 make the height 715\n')
('width', 'bigger', 'height', 'memory', '5834312', 'my image has the width bigger than the height so i want that the minumum zoom is the width\n')
('height', 'higher', 'width', '', '4798429', 'the button height is higher than it s width go to step 2\n')
('width', 'less then', 'height', '', '14006742', 'i expect that in portrait orientation screen width is less then height\n')
('width', 'greater', 'height', '', '13836395', 'check if image width is greater than its height and if so rotate image clockwise\n')
('width', 'bigger', 'height', 'memory', '24474692', 'of course this would have the problem that in displays where the width is bigger than the height there will be an area not covered by the video\n')
('height', 'greater', 'width', '', '23044218', 'icon s height is greater than width\n')
('height', 'larger', 'width', 'memory', '13478032', 'so it needs to downsize the image so that both the width and height are larger than the width and height of the target maintaining aspect ratio\n')
('height', 'smaller', 'width', 'memory', '9003490', 'i need to resize an image so that if its height is smaller than its width i ll set its height and vice versa\n')
('width', 'larger', 'height', 'memory', '13170840', 'since the width of your image is larger than the height you need to basically reverse these three lines of code\n')
('width', 'longer', 'height', '', '18413471', 'so when playback i first check the orientation of the video by measuring width and height and if width is longer than height rotate textureview by 90 degrees by below code\n')
('width', 'less', 'height', '', '14165666', 'how do i make sure that the uilabel when sizetofit is called returns a width that is less than 320 so only the height is scaled to fit the body of the text\n')
('height', 'bigger canvas', 'width', 'memory', '24895655', 'the program does load a picture its width height always bigger than canvas width height and when i make a mouse click on the canvas it returns a x y - coordinates and color grayscale value but it always a coordinates of canvas not an image ones\n')
('height', 'smaller', 'width', 'memory', '5559526', 'basically you would start with a font height smaller than the height of your textview and then iterate or do a binary search through fonts of varying sizes until you find one that measures to smaller than the width of your textview\n')
('height', 'greater', 'width', '', '22056288', 'if the image is portrait height is greater than width the image will have a width of 100 within the div and be vertically centered\n')
('height', 'longer', 'width', '', '5063216', 'if the height is longer than the width the screen is in portrait mode otherwise it is landscape\n')
('width', 'larger', 'height', 'memory', '23343876', 'when the medium width becomes larger than its height then it would be the default landscape size\n')
('height', 'greater windows', 'width', '', '15075408', 'if auto then grid stretches its width and height to fit its content hence why your grid.width is greater than windows width\n')
('width', 'larger', 'height', 'memory', '15176364', 'the following code is working without any error but my problem is when i create a thumbnail some times thumbnail are non understandable one some conditions such as width is very larger than height i also tried a code for calculate height automatically.but it won t perfectly works\n')
('width', 'greater', 'height', '', '9108031', 'while setting it to the imageview check if the width of the image is greater than height or not and rotate it to 90 if needed\n')
('height', 'greater', 'width', '', '16334500', 'this is to make grid consist of squares instead of having them look like rectangles with height few times greater than width closer to the north and south poles\n')
('width', 'greater', 'height', '', '8355244', 'media screen and width greater than height\n')
('height', 'greater', 'width', '', '12872068', 'otherwise if the height of the image id greater than its width\n')
('width', 'greater', 'height', '', '11097681', 'it is happening when width is greater than height\n')
('height', 'larger', 'width', 'memory', '6801546', 'my current code will rotate but will crop the edges if the height is larger then the width\n')
('width', 'higher', 'height', '', '12420697', 'it should look wheter the image width is higher than its height and the opposite and according to that set a height or width and the other value height width should be set proportionally so it won t get stretched\n')
('height', 'larger', 'width', 'memory', '16534519', 'if the video height was larger than its width the math is the same\n')
('width', 'greater', 'height', '', '23662884', 'if width is greater than height return the target otherwise return the proportional width\n')
('height', 'bigger then', 'width', 'memory', '10278925', 'in other words to check if the height is bigger then the width\n')
('height', 'bigger', 'width', 'memory', '8592874', 'if the height is bigger smaller than width don t draw or set visibility false\n')
('height', 'always greater', 'width', '', '22698229', 'note this holds as long as the condition that the height is always greater than the width is maintained\n')
('height', 'larger', 'width', 'memory', '12059328', 'if image height is larger than width then scaletypes fitstart fitend and fitcenter don t work\n')
('width', 'higher', 'height', '', '4798429', 'if the button contents width is higher than it s height then the binding will force it s width lower\n')
('width', 'bigger', 'height', 'memory', '14999625', 'yet when i save the image the image his in landscape width is bigger than height\n')
('width', 'larger', 'height', 'memory', '21121447', 'when resizing the image if the width side is larger than the height resize the image so that the image height is the div s height and hide the width overflow after centering\n')
('height', 'greater then', 'width', '', '7028094', 'the mediasize class and all of it s inner classes only have sizes where the height is greater then the width\n')
('height', 'greater', 'width', '', '7028094', 'i ve found some things online that state that the height must always be greater than the width and have seen in the java source checks for this with accompanying messages that this is the case but cannot find a reason why\n')
('width', 'less', 'height', '', '13895081', 'bitmap data always has a width and a height just take a look at the numbers and if the width is less than the height rotate the image as per alistair3408 s answer\n')
('width', 'greater', 'height', '', '16749457', 'same for width being greater than height\n')
('width', 'lesser', 'height', '', '16995105', 'sometimes width greater than height and sometimes width lesser than height\n')
('width', 'larger', 'height', 'memory', '14338477', 'however if you want to redesign your layout or make adjustments based on wether the screen is in landscape width is larger than height or portrait height is larger than width mode you can definitely use css media queries\n')
('width', 'greater', 'height', '', '18919808', 'you should first check if maxsizex is greater then the width or the maxsizey is greater than the height\n')
('height', 'larger', 'width', 'memory', '5606021', 'if you want a pure css option i believe an absolute positioned div inside the body with width and height of 100 overflow auto and right padding larger than the width of a scroll bar will replace the normal scrollbar without shifting the content to the left on long pages\n')
('width', 'greater', 'height', '', '22882680', 'i.e max-width kicks in when image width is greater than height and its height will be calculated proportionally\n')
('height', 'less', 'width', '', '9242136', 'when i want to draw a rectangle in c# using pen tools if the rectangle width and height is less then the pens width then program draw nothing in from if pens alignment property inset .but when i set alignment center then it print a rectangle\n')
('width', 'lower', 'height', '', '2329892', 'you do this by dismissing all variations where the width is lower than the depth so for each i w i d i and then dismissing the variation where the height is not the highest nor the lowest of the three dimensions because the other two variations can go one on top of the other and this one can t join in\n')
('width', 'always greater then', 'height', '', '13163119', 'okay here is the problem i have images of different sizes but that doesn t really matter because their width is always greater then their height and all images are resized to a 100px width height still is different in each image\n')
('height', 'more', 'width', '', '17988792', 'but now when i scale down the background image is not scaled down to smaller sizes if the height is more than the width\n')
('width', 'greater', 'height', '', '6333466', 'but you only want it to be negative when x is greater than the width or y is greater than the height\n')
('width', 'less', 'height', '', '10250826', 'when x is equal to width and y is less than height you will be writing to the array 0 y+1 cell\n')
('width', 'less', 'height', '', '18260710', 'elements smaller than height or width is less than 2000px will become circles elements larger than height or width is more than 2000px will not become circles but rather stay their original shapes but have largely rounded corners\n')
('height', 'auto more', 'width', '', '19236411', 'so height auto seems more consistent with the grid based on width and a vertical scrollbar\n')
('height', 'bigger', 'width', 'memory', '16773968', 'but in safari browser the table cell height is bigger than the width i did not set the whole table dimensions\n')
('height', 'larger', 'width', 'memory', '25271665', 'although the uiimageview is square the uiimage s height is much larger than the width\n')
('height', 'more', 'width', '', '17228741', 'it s has the same height but has more width\n')
('width', 'less', 'height', '', '10240005', 'if width is less than height just discarding it and if above allowing it\n')
('height', 'greater', 'width', '', '17781966', 'i noticed some very peculiar behaviour of the site which is pages whose height is greater than or equal to the max vertical pixels occupy a certain width while pages whose content does not fill the height have a different width even though the code for the menu is exactly the same.why does this happen and what is the remedy\n')
('width', 'less', 'height', '', '11617140', 'i m using a resize function to wrap a div with a container when the browser width is less than 801px or the height is greater than the width\n')
('height', 'smaller', 'width', 'memory', '7129417', 'when i resize a borderless form to a small width and height it won t get smaller than width 132 height 38\n')
('height', 'more', 'width', '', '19877046', 'in details height is getting larger than expected and event more than width\n')
('width', 'bigger', 'height', 'memory', '22428319', 'and when the width is bigger than the height the height 100 width auto\n')
('height', 'smaller', 'width', 'memory', '8181293', 'also if the image width or height is smaller than displaywidth scale you might want to cap it to be image width instead\n')
('width', 'greater', 'height', '', '1679092', 'whenever i resize an image to a desired size there whe width is greater than the height the proportions get screwed\n')
('width', 'greater', 'height', '', '9073333', 'if the width is greater than the height of the image you can safely assume that it was taken in landscape mode\n')
('width', 'larger', 'height', 'memory', '1830829', 'such that a landscape image would have an ideal height of 300 or slightly larger with a width 400 and a portrait image would have an ideal width of 400 or slightly larger with a height 300\n')
('width', 'higher increase', 'height', '', '6190937', 'you could adjust the height of the iframe if the scrollbars are present just check the iframes scrollwidth against it s offsetwidth and if the scroll width is higher increase the height of the iframe by the height of the scrollbar prolly 5-10px i d have to check to be sure\n')
('width', 'larger', 'height', 'memory', '10772157', 'hi i m working on an application that will be loading images and i m looking to scale each image to it s largest possible size for instance if the image is a landscape image if width is larger than height i would like to stretch the width to fill the width of the phone and scale height to keep it s aspect ratio\n')
('width', 'greater', 'height', '', '5594103', 'as you can see if image width is greater than height the script first makes image 128 px height\n')
('width', 'bigger', 'height', 'memory', '1499590', 'edit actually you resize the one that is the biggest if width is bigger you resize that and if height is bigger then you resize that\n')
('width', 'smaller', 'height', 'memory', '11875616', 'this should fit the image to the height of the gridview maintaining the aspect ratio and crop the remaining width unless the image s width is smaller than that of the gridview when the height is matched\n')
('width', 'greater', 'height', '', '24500643', 'for word to recognize it as landscaped the width must be greater than the height\n')
('width', 'greater', 'height', '', '7458411', 'so this script will take a jpg gif of png image resize it to 110px width if width is greater of 110px height if height is greater\n')
('width', 'less', 'height', '', '12129775', 'implement getscrollabletracksviewportheight width to return true if height width is less than parent height width and false otherwise\n')
('width', 'greater', 'height', '', '15234830', 'that will let you know if the picture is landscape because width would be greater than height\n')
('height', 'greater', 'width', '', '15912763', 'to explain the logic all it does is sets the width to 100 and checks if it s height is greater if it isn t then width 100 is fine\n')
('height', 'bigger', 'width', 'memory', '17867347', 'width and height of the canvas element need to be as big or bigger than the width and height of the image which i wasn t setting when i created the image object\n')
('width', 'smaller', 'height', 'memory', '20502912', 'check it out it doesn t matter the width you set to the #content because naturalsize checks the ratio and the container s width and sets a smaller height for the video than the original preventing the black bars appearing in original video height with a smaller width\n')
('width', 'greater', 'height', '', '18561358', 'it works fine if the image has equal width ahd height but when the width is greater than the height or vice versa then the trouble comes in\n')
('height', 'larger', 'width', 'memory', '6238274', 'so if i set height attribute to 40 i might find myself with images larger than 120 width\n')
('height', 'larger', 'width', 'memory', '11494920', 'not only is height of keyboard so large how can height be larger than width\n')
('width', 'smaller', 'height', 'memory', '17336778', 'the basic idea behind the approach is that you map the coordinates of the images to the interval by dividing by the width assuming the width is the larger dimension but it does not matter if it is smaller than the height\n')
('height', 'less window', 'width', '', '8556332', 'but is it dangerous to assume that while working in landscape mode the window height will always be less than window width and therefore making it the main constraining factor\n')
('width', 'larger', 'height', 'memory', '20851077', 'i m trying to set the height of a image to 150px if the image width is larger than the height and if the image height is larger than the width the width of the image changes to 150px\n')
('width', 'larger', 'height', 'memory', '4973933', 'again a uiscrollview will not scroll in height width unless the contentsize property s height width is larger than its frame property height width\n')
('width', 'higher imageview', 'height', '', '22898577', 'i need display photo to fill full width and when image is higher than imageview height it can be scroll up and down\n')
('height', 'bigger', 'width', 'memory', '8418207', 'just check if the height is bigger then the width thus portait\n')
('width', 'wider', 'height', '', '17121808', 'where the width is wider and the height is shorter than 44\n')
('width', 'bigger', 'height', 'memory', '23045687', 'the reason why i m struggling is that sometimes the width is bigger than the height and sometimes the height is bigger than the width\n')
('height', 'larger', 'width', 'memory', '10772157', 'if the height is larger than the width a portrait image the image should be scaled to fit the height of the phone and width should then adjust to keep the aspect ratio i ve had a bit of trouble getting this to work here s what i ve done so far though any help would be greatly appreciated\n')
('height', 'significantly lower', 'width', '', '3796630', 'the problem i m experiencing is that when i use javascript to grab a portrait photo s properties when it s loading the height is significantly lower than what it should be and the width is bigger than it should be\n')
('width', 'bigger smaller virtual', 'height', 'memory', '17876563', 'if you wan to account for all the possible options real height width bigger smaller than virtual height width and to make sure that the best configuration is delivered the rescaling occurs such that the available space is maximised it is not so straightforward\n')
('height', 'lower', 'width', '', '16312695', 'parent s height is lower than its width\n')
('height', 'smaller', 'width', 'memory', '3933621', 'for example if you know that you have no such object whose width or height is smaller than 50 pixel then you will put 50 as the increment in the nested loop either on width or height or both.\n')
('height', 'greater', 'width', '', '15935838', 'as of today no browser implements a vertical slider based solely on height being greater than width\n')
('width', 'greater', 'height', '', '25374705', 'basically you need to create a random x position with the an upper bound no greater than the width of the applet and a random y position with an upper bound no greater than the height of the applet for example.\n')
('width', 'bigger', 'height', 'memory', '8418207', 'if the width is bigger then the height landscape\n')
('width', 'much larger', 'height', 'memory', '24800214', 'for example if the image width is much larger than the image height than on smartphone the image will use 100 of the width of the screen and in proportion to that will be the height of the image\n')
('width', 'longer src_x', 'height', '', '4443677', 'meaning if s width is longer src_x has to be 0 and if height is longer src_y has to be 0\n')
('height', 'smaller', 'width', 'memory', '25418912', 'i have a view where i need to place an uiimageview and i was told to place it inside a rectangle that takes the screen width and its height is smaller than width fixed size\n')
('height', 'greater', 'width', '', '340054', 'add a new row until height is greater than width\n')
('height', 'greater', 'width', '', '7094415', 'likewise if we change img and #clock to have a defined width instead of a defined height then we have a clock that can scale properly but only if the viewport height is greater than the width\n')
('width', 'greater', 'height', '', '10279626', 'take screenshot of rotated screen and while uploading turn the dimension to portrait if their dimension is landscape i.e width is greater than height\n')
('height', 'larger', 'width', 'memory', '5472211', 'scale does not work for images where the height is larger than the width\n')
('width', 'less', 'height', '', '20155301', 'if the thumb text width is less that the height of the track the thumb shape will be scaled down\n')
('height', 'less', 'width', '', '2260142', 'this code should draw the test rectangles only when the height is less than the width and otherwise the window should remain clear\n')
('height', 'larger', 'width', 'memory', '14338477', 'however if you want to redesign your layout or make adjustments based on wether the screen is in landscape width is larger than height or portrait height is larger than width mode you can definitely use css media queries\n')
('height', 'bigger', 'width', 'memory', '11398598', 'you should consider if the height is bigger than the width portrait\n')
('height', 'greater', 'width', '', '21931976', 'managed to accomplish it by checking whether the pan tilt amount added to the zoom width height is greater than the overall image width height then stop it from panning tilting\n')
('width', 'smaller', 'height', 'memory', '25708207', 'i want to add media queries for a div to change position when the screen width is smaller than 820px and or height smaller than 615px so i made this\n')
('height', 'greater', 'width', '', '20636870', 'basically i have about 30 images with varying height and length not greater than 750px width and 500 px height\n')
('height', 'greater', 'width', '', '13387041', 'my code might be a bit off and only for one side of the room but conceptually you are checking if your camera position modified by an offset based on camera width or height is greater or less than the room position modified by an offset based on room width or height\n')
('width', 'greater', 'height', '', '18418282', 'if the intersection width is greater than the intersection height the ball has hit in the bottom or vertical sides of the brick\n')
('width', 'greater', 'height', '', '10858994', 'but if they went fullscreen or wide width is greater than height they would see a sidebar on the left and maybe also the right\n')
('height', 'less', 'width', '', '13265536', 'this seems to happen only when the page s height is less than its width\n')
('width', 'less', 'height', '', '16708518', 'but i can see if i give width as wrap_content then height is less than fixed height because keeping aspect ratio height corresponding to wrap_content width is less fixed height\n')
('height', 'less then', 'width', '', '9242136', 'when i want to draw a rectangle in c# using pen tools if the rectangle width and height is less then the pens width then program draw nothing in from if pens alignment property inset .but when i set alignment center then it print a rectangle\n')
('width', 'greater', 'height', '', '10677367', 'if width is greater than height then you ll most probably in landscape mode\n')
('height', 'slightly smaller', 'width', 'memory', '18477605', 'the first two commented lines for setting width and height of dialog works but second two uncommented lines does not work displayed height is slightly smaller than it should be and content overflows vertically width is ok\n')
('height', 'smaller', 'width', 'memory', '16050771', 'i can rotate it to any angle i want but i want to make the rotated square squashed making the height 2 3 smaller than the width\n')
('height', 'less', 'width', '', '22455947', 'i don t think you can do what you want with pure css as you will need to make a calculation to see if the images height is less than the width\n')
('width', 'larger', 'height', 'memory', '8029524', 'right now what this code is producing is the right image doesn t look like a square the width is larger than the height\n')
('height', 'bigger smaller', 'width', 'memory', '8592874', 'if the height is bigger smaller than width don t draw or set visibility false\n')
('width', 'less', 'height', '', '2740480', 'which will paint all the text red when the window width is less than its height\n')
('height', 'less', 'width', '', '1766649', 'unless the screen height is less than 580px or width less than 930px\n')
('height', 'greater', 'width', '', '15935838', 'regardless setting height greater than width is needed to get the layout right between browsers\n')
('width', 'larger', 'height', 'memory', '6139398', 'i tried changing the screen resolution in a virtual machine orientation change is really just a screen resolution change that results in width being larger than height or vice versa and could not trigger any layout events\n')
('width', 'greater', 'height', '', '8964861', 'if the width is greater than 320 or the height is greater than 480 it should scale in a way so that it becomes as close to 320x480 as possible but by keeping the proper proportion of width to height\n')
('height', 'greater', 'width', '', '20850740', 'if the height is greater than the width get the ratio by dividing the new height with the old one and finally multiply the width with the ratio to get the new width if the width is greater than the height you do the opposite like in the example code below\n')
('height', 'greater', 'width', '', '12516108', 'its a bool value so if the maximum of width or height is greater than real width then you get true\n')
('width', 'larger', 'height', 'memory', '8030055', 'the right image doesn t look like a square the width is larger than the height\n')
('height', 'more', 'width', '', '21148302', 'if the height is more than the width then it is portrait\n')
('height', 'bigger', 'width', 'memory', '22428319', 'i would when the height is bigger than the width the width 100 height auto\n')
('width', 'less', 'height', '', '21830193', 'width is usually less than height you might want to think about inverting the coordinates ie\n')
('height', 'greater', 'width', '', '2156868', 'now i want an array which contain those books id s which their height is greater than or equal to their width\n')
('height', 'less', 'width', '', '3740078', 'my imade doesnt display when the image height is less than 981pz width is less than 477pz\n')
('height', 'greater', 'width', '', '18578932', 'after that in my case if the width is greater than the height i set the the height to 100 in css and if the height is greater than the width i set the width to 100\n')
('width', 'smaller', 'height', 'memory', '6236110', 'if you think about a moment this is exactly what you want - to know if width is smaller than height portrait the opposite landscape or if they are the same square\n')
('width', 'less', 'height', '', '10560219', 'i have the size to 10 less than the width and 10 less than the height\n')
('width', 'always greater', 'height', '', '21835119', 'but with the videos i m using the width is always greater than the height and players know whether to rotate the video or not based on the rotation exif value\n')
('width', 'greater', 'height', '', '8410913', 'in java we have a restriction that width should not greater than height\n')
('width', 'greater', 'height', '', '12052546', 'it is regarded as landscape if the width is greater than the height\n')
('width', 'bigger', 'height', 'memory', '9931388', 'the current solution works for shapes with equal sides but my divs are not like that their width are bigger than their height\n')
('height', 'larger', 'width', 'memory', '17197425', 'the solution posted by nathaniel actually fails if the image height is larger than the image width\n')
('width', 'larger', 'height', 'memory', '12761582', 'others because the width is larger than the height doesn t fit properly.that s why i crop them they must be centered in order to make sence\n')
('width', 'less', 'height', '', '23691836', 'does this mean that if or when i resize the width of the web browser on my desktop pc so the width is less than the height of the web browser the portrait.css file will override the current style\n')
('height', 'greater', 'width', '', '8750030', 'the orientation media feature is portrait when the value of the height is greater than or equal to the value of the width mdash\n')
('height', 'greater', 'width', '', '14382603', 'still my pdf output s height is greater than the width\n')
('width', 'greater', 'height', '', '23328020', 'if width is greater than height it is landscape\n')
('width', 'larger', 'height', 'memory', '25645100', 'in other way if width is larger than height it should be width 100 height auto\n')
('width', 'bigger', 'height', 'memory', '17216661', 'assuming width is bigger in size then height scale the image width to the holder width\n')
('width', 'greater such image', 'height', '', '11878102', 'i have one issue regarding uiimageview and uiimage i get confuse on 1 thing ie my uiimageview height 759 and width 748 and i am downloading the images from server that height and width is so so greater such as image height 2048 and width 2500\n')
('width', 'less', 'height', '', '5465769', 'if you look at your code you always use i + - 1 width + j + - 1 so everything will be ok for the lines where i is less than the height but everything else is going to be out of range\n')
('height', 'smaller', 'width', 'memory', '4792970', 'essentially what this does is check whether your image view s width height is smaller that the screen s width height and if so create an inset of half the screen s width height you could probably make this larger if you want the image to go out of the screen bounds\n')
('width', 'greater', 'height', '', '8416936', 'but a workaround could be to detect the size of the viewport if the width is greater than the height display normally\n')
('width', 'less fixed', 'height', '', '16708518', 'but i can see if i give width as wrap_content then height is less than fixed height because keeping aspect ratio height corresponding to wrap_content width is less fixed height\n')
('width', 'larger', 'height', 'memory', '16154711', 'the width should be larger than the height\n')
('width', 'bigger', 'height', 'memory', '23166267', 'let s assume that width of the array is bigger than height otherwise we will split in another direction\n')
('width', '2px greater', 'height', '', '6997297', 'button width is 2px greater in ie7 and button height is 4px greater in ie7\n')
('width', 'larger body', 'height', 'memory', '12164520', 'if left is larger than body width or top is larger than body height\n')
('width', 'greater', 'height', '', '13715921', 'i want boardpanel to always be a square with size equal to the minimum of gamepanel s width and height if gamepanel s width is greater than height there should be empty space on the left and right if it s smaller there should be empty space on top and bottom\n')
('height', 'bigger', 'width', 'memory', '13847935', 'ps the image source width and height is always bigger than the width and height parameters and the width and height ratio is being preserved\n')
('width', 'larger', 'height', 'memory', '22182816', 'the idea is that the width is 3 times larger than the height and i was thinking to achieve this with overflow-x auto and overflow-y hidden as shown in the example from the second row 6-th column on these website\n')
('height', 'greater', 'width', '', '24484014', 'if the picture is vertical the height should be greater than the width\n')
('height', 'greater', 'width', '', '24637639', 'is there any way using only css to set a div s height to be never greater than its width\n')
('width', 'greater', 'height', '', '2687926', 'if i have an image whose width is greater than its height rotating that image using this method and then painting it will result in the image being painted vertically above the point 0 0 and horizontally to the right of the point 0 0\n')
('height', 'less', 'width', '', '25358064', 'for the portrait mode and when image height is less than image width\n')
('height', 'greater', 'width', '', '14395482', 'and i want to show the video in the landscape mode if the height is greater then the width of the phone otherwise to show the video in the portrait mode\n')
('height', 'much taller', 'width', '', '19614115', 'everything seems good until i previewed the website on an ipad iphone portrait mode where the screen height is much taller than its width\n')
('width', 'still smaller', 'height', 'memory', '16419128', 'if the width is still smaller than the height adjust it manually and you should be able to fix your issue\n')
('width', 'bigger then', 'height', 'memory', '8418207', 'if the width is bigger then the height landscape\n')
('height', 'larger window', 'width', 'memory', '7107007', 'portrait mode is when the window height is larger than window width\n')
('height', 'less image', 'width', '', '25358064', 'for the portrait mode and when image height is less than image width\n')
('height', 'far smaller', 'width', 'memory', '25735875', 'in this case if i want to have a fixed width while keeping ratio i just set height to a very large number so that the resizer will actually ignore it since the ratio of real height to desired height is far smaller than the ratio of real width and desired width\n')
('height', 'smaller', 'width', 'memory', '25711329', 'since your height is smaller than the width it should do the trick\n')
('height', 'greater', 'width', '', '5192159', 'i m using gallery located on sd card when i pick the horizontal image width greater than height it loads the image in image view perfectly fine but the problem is with vertical image height greater than width it show the image in image view rotated on the left side or saying -90 degree from original position\n')
('height', 'longer', 'width', '', '19044555', 'you may even make its height longer than its width to let the labels spread out\n')
('width', 'larger', 'height', 'memory', '24491431', 'my camera by default is in landscape mode therefore it takes pictures with a width much larger than the height\n')
('width', 'larger', 'height', 'memory', '21474110', 'if i have a writeablebitmap version of my image and either the height or width whichever is larger is scaled to be either the screen height or width then how might i over lay that image on top of another image that is the page size to make the image become a full screen image\n')
('height', 'bigger', 'width', 'memory', '23328020', 'if the height is bigger than the width it is portrait\n')
('height', 'bigger', 'width', 'memory', '22849380', 'if your height is bigger and width is smaller than container width will be stretch to 100 and height will be trimmed from both side\n')
('width', 'less', 'height', '', '25622611', 'width - set it a width make sure it has a priority more than others but less than height\n')
('height', 'greater', 'width', '', '2850154', 'documents are most likely to be in portrait format taller than they are wide so if the height is greater than the width then do don t have to do anything\n')
('height', 'more', 'width', '', '16253350', 'how can i even get real image size at least height it s more important than width in my case from downloaded image\n')
('height', 'higher', 'width', '', '18053036', 'note if you are sure that image is portrait if and only if your images height is higher than its width you could measure them to find its orientation\n')
('width', 'higher', 'height', '', '24031281', 'still not managed yet to detect orientation correctly because now for some reason when portrait - width is still higher than height with is 960 at least that what javascript see but in reality it is not going over boundaries which are 768px\n')
('width', 'smaller', 'height', 'memory', '16419128', 'if the width is still smaller than the height adjust it manually and you should be able to fix your issue\n')
('height', 'larger', 'width', 'memory', '16462848', 'i m not interested in the height only the width they won t be the same - the size will be dynamic but i can presume the height will be larger than the width\n')
('height', 'dramatically smaller', 'width', 'memory', '9378676', 'if you rotate the device the width becomes the height and we can ignore the change but if the height gets dramatically smaller while the width remains the same it is safe to assume there is a keyboard being shown and we throw a show keyboard event\n')
('width', 'greater', 'height', '', '18722384', 'and i m just having trouble saying if the image original file s width is greater than the height then we need the height to expand to the height of the surrounding element and put the width at auto so it doesn t get squished but keeping in mind that the client can upload any image size they want with no restrictions of must be 350x350\n')
('width', 'greater', 'height', '', '20280824', 'however nowhere in the code have you checked that the width of the view added to the top of the view is not greater than the height of bitmaptosave\n')
('height', 'more', 'width', '', '19673051', 'it seems that you are just printing too much and it seems to come from the third inner for-loop and also in other cases when the height is more than the width possible from the fourth for-loop\n')
('width', 'greater', 'height', '', '24007876', 'when the width is greater than the height the orientation is landscape\n')
('height', 'greater', 'width', '', '16397803', 'you just perform the apply the aspect ratio of the image to the imageviews height and if it s greater than the width set it to the width\n')
('width', 'ratio always higher then', 'height', '', '18445301', 'your and are static which means and are always they same aswell respectively 5.1785714285714 and 2.55625 so width ratio is always higher then height ratio\n')
('height', 'here smaller', 'width', 'memory', '21230682', 'if a user s screen had a resolution of 1000x800px 100vmin would be equal to 800px and 100vmax would be equal to 1000px as the height here is the smaller unit and the width is the larger unit\n')
('width', 'greater device', 'height', '', '12029504', 'so you can get your image coordinates before moving it and you can compute measure of movement in your ontouchlistener class.now if x coordinate of your image plus horizontal movement that you computed be greater than device width or y coordinate of your image plus vertical movement that you computed be greater than device height your image not move\n')
('height', 'greater', 'width', '', '12052546', 'it is regarded as portrait if the height is greater than the width\n')
('height', 'smaller', 'width', 'memory', '25347071', 'as i understand it you need footer to be on the left side of the sidebar when content height is smaller and full width bellow sidebar when content is higher\n')
('height', 'greater', 'width', '', '15030192', 'more specifically if the image height is greater than the width the generated height will be the same as the resulting .png s height but the generated width will be slightly smaller\n')
('width', 'larger', 'height', 'memory', '23317339', 'i figured that if the image was actually in landscape then it was appearing stretched and truncated because it s width was larger than its height\n')
('height', 'greater', 'width', '', '21588583', 'see code below and fiddle - i ve added the case where the height is greater than the width too for completeness\n')
('width', 'larger', 'height', 'memory', '18260710', 'elements smaller than height or width is less than 2000px will become circles elements larger than height or width is more than 2000px will not become circles but rather stay their original shapes but have largely rounded corners\n')
('height', 'greater', 'width', '', '24834441', 'and opposite if height is greater than width then resize height to 500 pixels and scale width accordingly\n')
('width', 'larger', 'height', 'memory', '17336778', 'the basic idea behind the approach is that you map the coordinates of the images to the interval by dividing by the width assuming the width is the larger dimension but it does not matter if it is smaller than the height\n')
('height', 'longer', 'width', '', '17595155', 'then if the height is longer than the width you set the height to 500px and set the width to auto\n')
('width', 'greater', 'height', '', '20503236', 'when the screen width is greater than the md breakpoint in bootstrap give all the elements with panel-body class which are direct descendants of the column elements a minimum height of 420px which happens to be a magic number that works with your existing content\n')
('width', 'smaller', 'height', 'memory', '15566189', 'when i resize my browser window and the div s width becomes smaller the elements inside the div jump below expanding the height\n')
('width', 'ratio always higher', 'height', '', '18445301', 'your and are static which means and are always they same aswell respectively 5.1785714285714 and 2.55625 so width ratio is always higher then height ratio\n')
('height', 'greater', 'width', '', '3158569', 'in the other case when the height is greater than the width then the field at and can be calculated using that arithmetic sum and the rhomboid can be imagined as a rectangle with x-value x and y-value y- w-x-1\n')
('height', 'img more', 'width', '', '24717205', 'but when the height img is more than 500px or when the img width is more than the width of the carousel the img overflows the carousel\n')
('width', 'greater', 'height', '', '12872068', 'if the width of the image is greater than its height landscape\n')
('height', 'less', 'width', '', '14351731', 'for the dragging to be jerky like this the width and height of the stage must be 256 and less than width 1050 and height 293\n')
('height', 'smaller', 'width', 'memory', '8249123', 'in case your image s width height is smaller than form contentpane s width height you might as well do not scale it since the image will fit the screen\n')
('width', 'bigger', 'height', 'memory', '16899614', 'if the width is bigger than the height i want the height to be set to auto\n')
('width', 'smaller then', 'height', 'memory', '8953187', 'but the video height and width is smaller then then device screen height width\n')
('width', 'space taller', 'height', 'memory', '13383931', 'in that font the zero width space is taller than verdana characters are causing added height requirements\n')
('width', 'larger', 'height', 'memory', '21026331', 'when you are using the orientation landscape you have to consider whether the keyboard popup will change the display once the width size is larger than the height size the css will consider it as landscape\n')
('width', 'smaller', 'height', 'memory', '4170787', 'i wouldn t scale the image every single time in the paintcomponent method but do it once if the width and height have been changed since the last call and in that case recreate a bufferedimage containing the image which you blit every single time before calling the superclass paintcomponent scaled up to the right size use something like image scaling does not work when original image height width is smaller the scaling height width\n')
('width', 'less', 'height', '', '23691836', 'or does it only load the portrait.css file on page load and if the viewport width is already less than its height\n')
('width', 'bigger', 'height', 'memory', '7521113', 'if width is bigger than height print image-horizontal else print image-vertical\n')
('height', 'higher', 'width', '', '21822512', 'this demo illustrate the change from landscape to portrait using css orientation when the window height is higher than its width\n')
('height', 'greater real', 'width', '', '12516108', 'its a bool value so if the maximum of width or height is greater than real width then you get true\n')
('width', 'bigger', 'height', 'memory', '19386537', 'i need to apply a condition in the case that an image s width is bigger than equal to or smaller than height but i m in trouble when i try to compare the variables\n')
('width', 'greater', 'height', '', '18423629', 'both of the sides move toward it but in this case never reach it since the width 100 is greater than the height 30\n')
('height', 'larger', 'width', 'memory', '11000855', 'your main div has height 1200px and the content are larger than this width so border is not displaying on the content which are overflowing you can check by increase height it will showed\n')
('height', 'always bigger', 'width', 'memory', '13847935', 'ps the image source width and height is always bigger than the width and height parameters and the width and height ratio is being preserved\n')
('width', 'higher', 'height', '', '10535356', 'i just want to set the custom page width and height page width is higher than page height\n')
('width', 'larger', 'height', 'memory', '21846086', 'as you can already see from these dimensions the captured image s width is smaller than its height whereas the uiimageview s width is larger than its height - the proportions are different\n')
('width', 'bigger', 'height', 'memory', '7318706', 'height 110px | width relevant to the height if the width is bigger than height\n')
('width', 'bigger', 'height', 'memory', '8063047', 'landscape orientation is that one where the width is bigger than the height\n')
('height', 'less', 'width', '', '2850154', 'if the height is less than the width then rotate through 90 degrees\n')
('width', 'larger', 'height', 'memory', '16260912', 'if the width is larger than the height itâ s in landscape mode\n')
('width', 'larger', 'height', 'memory', '23732276', 'in landscape mode the container s width somehow gets larger than its height as shown below\n')
('width', 'greater', 'height', '', '21835119', 'but with the videos i m using the width is always greater than the height and players know whether to rotate the video or not based on the rotation exif value\n')
('height', 'harder', 'width', '', '13909024', 'edit okay so the real problem comes when you try and make your container that fluid because height is harder for a browser to calculate than width\n')
('width', 'greater device', 'height', '', '13474562', 'device width greater than device height\n')
('height', 'bigger', 'width', 'memory', '15464469', 'if window height is bigger then window width the we have a portrait or in any other case we have a landscape orientation\n')
('height', 'smaller', 'width', 'memory', '10843642', 'the presence of a tab bar controller was enough to make the height 768 - 20 - 49 699 just smaller than the width 1024 - 320 - 1 gutter 703\n')
('height', 'higher', 'width', '', '21004167', 'if height is higher than width then do as you re doing now\n')
('width', 'greater', 'height', '', '18638691', 'if width is greater than height you know that the orientation changed to landscape\n')
('width', 'less', 'height', '', '15562702', 'here s an example of the width being less than the height and then rotated 90deg.\n')
('height', 'higher', 'width', '', '16312695', 'parent s height is higher than its width\n')
('width', 'greater', 'height', '', '23411430', 'my document s width is greater than the browser s height so i can t center it vertically in relation to the document\n')
('width', 'smaller', 'height', 'memory', '9812751', 'if you have a portrait device the width is smaller than the height\n')
('height', 'larger', 'width', 'memory', '17652981', 'chrome however stops displaying the canvas when the height becomes larger than 8130 pixels the width is constant - 834 px\n')
('height', 'greater', 'width', '', '5352175', 'and if the image s height is greater than maxheight or the width is greater than maxwidth i d like to proportionally resize the image so that it fits in maxwidth x maxheight\n')
('width', 'greater', 'height', '', '9140945', 'what i was looking to do was to assign a width property of 100 if the height of the images is greater than the width and the height if the width is greater than the height\n')
('height', 'larger', 'width', 'memory', '19877046', 'in details height is getting larger than expected and event more than width\n')
('width', 'less', 'height', '', '18049469', 'width is less than height implies the portrait-secondary\n')
('width', 'less', 'height', '', '8883535', 'since the height width is calculated on the visible viewport the soft keyboard apparently causes the orientation to flip now that the viewport width is less than the height\n')
('height', 'less', 'width', '', '8355244', 'media screen and height less than width\n')
('height', 'greater', 'width', '', '13507428', 'if the height of the image is greater than the width of the image clicked then this means that you have taken the image in portrait mode\n')
('height', 'greater then', 'width', '', '14395482', 'and i want to show the video in the landscape mode if the height is greater then the width of the phone otherwise to show the video in the portrait mode\n')
('height', 'less', 'width', '', '7249500', 'find out if the height is less or the width is less\n')
('width', 'greater', 'height', '', '4817661', 'then since width of your image is greater than height multiply the original width and height by 250 498\n')
('width', 'smaller', 'height', 'memory', '21822512', 'when the window width is smaller than its height then the orientation would be considered portrait\n')
('height', 'larger', 'width', 'memory', '7107007', 'portrait mode is when the window height is larger than window width\n')
('height', 'bigger', 'width', 'memory', '19586339', 'i m not fully sure how this should work on desktops but i m pretty sure that when you resize the browser the orientation should change provided the height was bigger than the width and after resizing it s the other way round\n')
('width', 'higher', 'height', '', '9096093', 'i need to force the width when i am adding the image to the layout i mean that the image must be keep the aspect ratio but the image must be higher than the height of the screen and the image must be shown incomplete if the height of the image is higher than the height of the screen\n')
('height', 'smaller', 'width', 'memory', '3933590', 'for example if you know that you have no such object whose width or height is smaller than 50 pixel then you will put 50 as the increment in the nested loop either on width or height or both.\n')
('height', 'higher', 'width', '', '6571089', 'when the height is higher than this threshold both right panels gain additional width and the righttoppanel loses its height much faster than the rightbottompanel when decreasing height of jframe\n')
('width', 'smaller', 'height', 'memory', '5494046', 'on devices like the droid the bottom row is squinched in because the table width is smaller than the height\n')
('width', 'somehow larger', 'height', 'memory', '23732276', 'in landscape mode the container s width somehow gets larger than its height as shown below\n')
('width', 'smaller', 'height', 'memory', '5061538', 'the image is placed in a correct height but the width could be bigger or smaller than the height constraints\n')
('width', 'larger', 'height', 'memory', '16780816', 'i suspect ios just sets the landscape flag if the usable width is larger than the usable height\n')
('width', 'greater', 'height', '', '1405994', 'the width is greater than the height so our calculations are\n')
('height', 'less window', 'width', '', '8556995', 'judging by these i would assume that in landscape orientation the window height will be less than window width\n')
('width', 'greater', 'height', '', '18722384', 'ok so i m trying to see if an image s width is greater than it s height then apply a class if not apply another class\n')
('width', 'less', 'height', '', '16350127', 'okay so i used one trick pony s solution but tried to modify it to create a square image out of a rectangle if the width is less than the height but not stretch the original image and instead center it\n')
('height', 'bigger', 'width', 'memory', '4667116', 'you can change the width and height attributes on the referenced svg if they are bigger than the width and height on the iframe element you should get scrollbars\n')
('height', 'ratio greater', 'width', '', '25120950', 'once the image is loaded into a new picture shape and renamed i want to based on whether the width to height ratio is greater than a threshold resize its width keeping aspect ratio then crop the remaining down to the height and visaversa\n')
('width', 'bigger value', 'height', 'memory', '18074555', 'this is weird cause i would figure that the width should have a bigger value than the height right now\n')
('height', 'bigger', 'width', 'memory', '19193308', 'if your height is bigger and width is smaller than container width will be stretch to 100 and height will be trimmed from both side\n')
('height', 'lower', 'width', '', '22862119', 'simple because the viewport has changed due to the keyboard showing and the final viewport has a height lower than width\n')
('height', 'greater', 'width', '', '14317290', 'or div s width and height is greater than img s width and height.\n')
('height', 'greater', 'width', '', '16749457', 'if the height is greater than the width it will auto-calculate the middle and give you a perfectly centered square\n')
('height', 'greater', 'width', '', '8964861', 'if the width is greater than 320 or the height is greater than 480 it should scale in a way so that it becomes as close to 320x480 as possible but by keeping the proper proportion of width to height\n')
('width', 'larger', 'height', 'memory', '23110412', 'so its width is the width of the user s browser minus as much as possible without making them larger than 90 height of the viewport\n')
('height', 'bigger', 'width', 'memory', '14835714', 'bottle thumb height is much bigger than width are only partly visible\n')
('width', 'more', 'height', '', '25003115', 'if your collection view occupies whole screen then you can simply check if width is more than height and take the result as landscape orientation\n')
('width', 'less', 'height', '', '14810939', 'if the image width is less than the image height i want to add class a to that particular image if not i want to add class b to that particular image\n')
('width', 'greater', 'height', '', '24083688', 'if you want to target any case when width is greater than height i think something like min-aspect-ratio 101 100 or something like this might work\n')
('height', 'larger', 'width', 'memory', '1830829', 'such that a landscape image would have an ideal height of 300 or slightly larger with a width 400 and a portrait image would have an ideal width of 400 or slightly larger with a height 300\n')
('width', 'smaller', 'height', 'memory', '23382518', 'in this case you create a document of which the width is smaller than the height the mediabox is defined as a rectangle in portrait but you rotate that page adding a rotate entry equal to 90 to the page dictionary\n')
('width', 'greater', 'height', '', '18578932', 'after that in my case if the width is greater than the height i set the the height to 100 in css and if the height is greater than the width i set the width to 100\n')
('height', 'greater', 'width', '', '7041278', 'its height is greater than width\n')
('height', 'dramatically larger', 'width', 'memory', '9378676', 'when the height gets dramatically larger while width stays the same we throw a hide keyboard event\n')
('height', 'less', 'width', '', '18189048', 'in your xml you gave and 10dp both vertical and horizontal spacing and then in your custom view implementation you gave 150 as width and height and 8 as padding basically they conflict try to make both values convenient since the columnwidth you gave is way more less than width you gave in your custom view\n')
('width', 'greater', 'height', '', '16311064', 'updated to handle cases where image width is greater than height\n')
('width', 'more', 'height', '', '22718938', 'i feel that the image background s width looks more than 400 pixels say x and the height is also more than 400 pixels say y\n')
('width', 'larger', 'height', 'memory', '16715206', 'i want to know if the device screen width is larger than height\n')
('width', 'bigger', 'height', 'memory', '10947299', 'if the ratio is bigger then 1 then the width is bigger than height let s say 700px 500px and after resizing the image is filled with white spaces in the top and bottom of the image\n')
('height', 'greater', 'width', '', '16568870', 'i thought i d use another image source for my slider when the height of the window is greater than its width\n')
('width', 'greater', 'height', '', '22993902', 'i check to see if the window s width is greater than its height in order to determine if the user is holding the device in landscape or portrait mode and i translate the data that the accelerometer provides based on that fact\n')
('width', 'less', 'height', '', '14006742', 'i expect that in portrait orientation screen width is less then height\n')
('width', 'greater', 'height', '', '7094415', 'we now have a clock that can scale properly but only if the viewport width is greater than the height not the other way around\n')
('width', 'less', 'height', '', '21744460', 'it applies to window objects but also to scrollable frames and elements with the overflow css property set to scroll or auto when the element s explicit height or width is less than the height or width of its contents\n')
('width', 'more', 'height', '', '14425300', 'it works fine when the image is square or the width is not too much more than the height\n')
('height', 'larger', 'width', 'memory', '21864099', 'in this post he used 56.25 to make a ratio of 16 9 while i understand the maths 100 16 9 it doesn t seem to be the case if the height is larger than the width\n')
('height', 'bigger', 'width', 'memory', '4472086', 'on every image load a call this function with image and resize if its width or height is bigger than my max width and max height\n')
('width', 'larger', 'height', 'memory', '14338178', 'is the width of the viewport larger than the height\n')
('width', 'greater', 'height', '', '15303172', 'when width of the image is greater than height set height to a fixed value and auto stretch width\n')
('height', 'more', 'width', '', '20511670', 'please help...this is the problem of one sony experia model.whose height is more but width is less.this particular layout is working fine where the height and width is almost adjusted in physical devices.like samsung and htc\n')
('width', 'greater', 'height', '', '15855869', 'i would like to resize the image when the image width is greater than the image height or vice versa\n')
('width', 'higher', 'height', '', '16610554', 'most devices seem to recognize the highest dimension as the max-width but some amazon kindle 2 appear to treat lower dimension as the width and higher as the height\n')
('height', 'bigger', 'width', 'memory', '24227548', 'it works well when height is bigger than width but it does not work when width is bigger than height\n')
('height', 'greater', 'width', '', '3329991', 'or i can set the width to more than 36 and it appears to grow by width-36 but if for instance i set both the height and width of one of these narrow cells to the same number lets say 60px the height of what gets displayed is greater than the width and it appears as a rectangle not a square\n')
('width', 'bigger', 'height', 'memory', '23059729', 'when the uitableviewcontroller view width is made bigger 500px+ the cell adopts the correct height however label 1 becomes too big for its content spanning 1 line of text over 2 lines and label 2 becomes squashed spanning 2 lines of text into 1 line\n')
('width', 'longer', 'height', '', '17595155', 'else if the width is longer than the height you set the width to 500px and the height to auto\n')
('height', 'less', 'width', '', '9656926', 'the only way i found to be sure that the view is in landscape mode is to test that the view height is less than the view width\n')
('height', 'higher', 'width', '', '4798429', 'button height is higher than it s width\n')
('width', 'greater', 'height', '', '340054', 'add a new column until width is greater than height\n')
('width', 'longer', 'height', '', '4443677', 'meaning if s width is longer src_x has to be 0 and if height is longer src_y has to be 0\n')
('width', 'smaller', 'height', 'memory', '8953187', 'but the video height and width is smaller then then device screen height width\n')
('width', 'greater', 'height', '', '5192159', 'i m using gallery located on sd card when i pick the horizontal image width greater than height it loads the image in image view perfectly fine but the problem is with vertical image height greater than width it show the image in image view rotated on the left side or saying -90 degree from original position\n')
('width', 'always greater', 'height', '', '13163119', 'okay here is the problem i have images of different sizes but that doesn t really matter because their width is always greater then their height and all images are resized to a 100px width height still is different in each image\n')
('width', 'shorter', 'height', '', '23349831', 'the width is shorter and the height and position is wrong too\n')
('width', 'larger', 'height', 'memory', '10963741', 'if i set the frame of the tableviewincell to a width larger than the height of the containing cell then it goes heywire\n')
('width', 'longer', 'height', '', '15863186', 'your ratio is a little more than one since your width is longer than your height so your left and right boundaries are essentially something like -1.5 and 1.5 whatever your ratio happens to be\n')
('width', 'greater', 'height', '', '16508788', 'there may be a better way to do this but a quick and dirty method would be to inspect the display s width and height with display.getsize point point - if the width is greater than the height then normal mode is landscape otherwise portrait\n')
('height', 'greater', 'width', '', '11064609', 'in fact the gap doesn t appear at all when width is greater than height only when height is greater than width\n')
('height', 'larger', 'width', 'memory', '14338178', 'is the height of the viewport larger than the width\n')
('height', 'greater', 'width', '', '2452088', 'my assumption is that the library would take a vertical image see that the height is greater than the width and translate the height width config appropriately so the image remains vertical\n')
('width', 'shorter', 'height', '', '25638225', 'so if an image is in landscape size the width is shorter than the height which throws things off\n')
('height', 'greater', 'width', '', '5035943', 'if the height is greater than the width just reverse the width and height variables\n')
('height', 'larger', 'width', 'memory', '21121447', 'if the images height side is larger than the width resize the image so that the width matches the divs width and hide the height overflow after vertically centering\n')
('width', 'more', 'height', '', '8344063', 'the best i could come up with would be to scale the line to fit inside paper based on the width of the path assuming that the width is more than the height\n')
('width', 'more', 'height', '', '19742328', 'my solution was to use a php variable and increment it on each generated then if i have let s say 13 rows it echoes but the cells must have an exact width so it may add a new line of text if i have a longer text on a cell and the table will have more than 1280px height\n')
('height', 'larger', 'width', 'memory', '7513445', 'this is for the case when the height of the image is larger than the width\n')
('height', 'larger', 'width', 'memory', '5430989', 'i brute forced it a bit with forcing the height of the box to always be larger than the width\n')
('width', 'bigger', 'height', 'memory', '9750016', 'i would advice to check if the width is bigger than the height of the picture taken landscape picture and if that is the case show an alert to the users to explain that just portrait pictures are supported\n')
('width', 'larger', 'height', 'memory', '15573596', 'landscape pages can be created in 2 ways set a width larger than the height or set the page rotation to 90 or 270 degrees for a portrait page\n')
('height', 'greater', 'width', '', '9038874', 'anyway i checked your code ..your mistake that you always calculate knopafmeting based on width that is correct if height is equal or greater than width\n')
('width', 'larger', 'height', 'memory', '16419128', 'you ll need to change the width and height settings so that the width is larger than the height\n')
('height', 'greater', 'width', '', '19358789', 'on pageshow or pagebeforeshow add that class if screen height is greater than width portrait\n')
('height', 'more', 'width', '', '21213502', 'as per your expectation create a new emulator with height 800 more than the width 480\n')
('height', 'smaller', 'width', 'memory', '8410913', 'if i set the page format with height is smaller than width it is treating it as a4 paper and feed the bottom of the paper\n')
('height', 'greater', 'width', '', '18418282', 'if the intersection height is greater that the intersection width then it is a horizontal collision\n')
('width', 'less', 'height', '', '7637968', 'it applies to window objects but also to scrollable frames and elements with the overflow css property set to scroll or auto when the element s explicit height or width is less than the height or width of its contents\n')
('width', 'much larger', 'height', 'memory', '21020087', 'despite them being set to the same numbers the column width is much larger than the row height\n')
('height', 'bigger then', 'width', 'memory', '15464469', 'if window height is bigger then window width the we have a portrait or in any other case we have a landscape orientation\n')
('width', 'bigger', 'height', 'memory', '7093990', 'because the width was bigger than the height of the pictures the img element was too small and the rotated picture overlaid some of the text above and below\n')
('height', 'greater', 'width', '', '22882680', 'similarly max-height will be in effect when height is greater than width\n')
('height', 'less', 'width', '', '25554204', 'the image height is probably going to be less than the width and really just depends on what type of image you are using and how tall you want the carousel image to be\n')
('height', 'much bigger', 'width', 'memory', '14835714', 'bottle thumb height is much bigger than width are only partly visible\n')
('width', 'less', 'height', '', '5537586', 'the problem is that layer.bounds still returns 200x200 for the layer but because of the perspective transformation the actual visible width is less and the height more than 200\n')
('height', 'larger', 'width', 'memory', '12973648', 'the canvas height is slightly larger than the width\n')
('width', 'smaller', 'height', 'memory', '14095480', 'from my experience every time the kindle fires up my landscape app with a width smaller than the height thus by definition not really giving me a landscape view i just ignore the surface and wait it quickly gives me a a real landscape flipping the height and width so that its a true landscape view\n')
('width', 'longer', 'height', '', '505839', 'my fixed document xps has its page orientation set to landscape the page media size has a width that is longer that its height and it displays correctly in the viewer as landscape\n')
('width', 'more then', 'height', '', '21797368', 'i resize the image if its width is more then 225 and height automatically fix with that width\n')
('height', 'bigger', 'width', 'memory', '6496336', 'this is used in a situation that view s width height is bigger that its parent s width height\n')
('width', 'higher', 'height', '', '6190937', 'you could adjust the height of the iframe if the scrollbars are present just check the iframes scrollwidth against it s offsetwidth and if the scroll width is higher increase the height of the iframe by the height of the scrollbar prolly 5-10px i d have to check to be sure\n')
('width', 'greater', 'height', '', '24733215', 'how can i detect if the printed width is greater than the printed height\n')
('height', 'larger then', 'width', 'memory', '6801546', 'my current code will rotate but will crop the edges if the height is larger then the width\n')
('height', 'larger', 'width', 'memory', '11798092', 'as they say above you can resize your browser window to have the height be larger than the width so then the media portrait is true\n')
('width', 'more', 'height', '', '4183120', 'how do i determine the picture size if it is a horizontal picture width is more than height width 300px and height 200 then insert into the database\n')
('width', 'greater', 'height', '', '16995105', 'sometimes width greater than height and sometimes width lesser than height\n')
('width', 'size larger', 'height', 'memory', '21026331', 'when you are using the orientation landscape you have to consider whether the keyboard popup will change the display once the width size is larger than the height size the css will consider it as landscape\n')
('height', 'greater', 'width', '', '11283198', 'if the height in resolution is greater than its width how do i achieve it\n')
('width', 'smaller', 'height', 'memory', '23111057', 'portait in a mobile device is that orientation where the width is smaller than the height\n')
('height', 'greater', 'width', '', '22486347', 'for example my image width is 10mm but in height it is 300mm so i want it to appear reflecting this so in this case i would expect it to appear very narrow but tall because the height is so much greater than the width\n')
('width', 'greater', 'height', '', '20046104', 'its working fine for square images the problem is when width is greater than height\n')
('width', 'greater', 'height', '', '3644563', 'you may want to check if the width is greater than the height\n')
('width', 'wider', 'height', '', '15858157', 'because if you do that then if you tell opengl to draw a square it will appear as a rectangle on the screen instead if you don t have your x axis edges be larger than your y axis edges when your screen width is wider than your screen height as suggested by the image\n')
('width', 'greater', 'height', '', '1753801', 'when working with a landscape photo the photo width is greater than the photo height\n')
('width', 'larger', 'height', 'memory', '25009636', 'if your image s width is larger than its height then mark s solution will leave space at the top and bottom of the screen\n')
('height', 'less', 'width', '', '6249751', 'i have a gallery with different image sizes the custom layout is below for gallery its working correctly if the image width is les than height but if image height is less than width its not working correctly\n')
('height', 'bigger', 'width', 'memory', '23365040', 'so at first this looks ok but is actually is not all pixels in the image are not square but elongated with their height being bigger than their width\n')
('width', 'smaller', 'height', 'memory', '4188627', 'you just should separate the x and y axis during distance comparison if the y distance is smaller than the width and the x distance is smaller than the height than there is a collision\n')
('width', 'bigger', 'height', 'memory', '14649461', 'so the ring shape will be cropped if the width of the imageview becomes bigger than the height\n')
('height', 'more', 'width', '', '2571643', 'i see that they are squeezed such that the height is more than the width\n')
('width', 'smaller', 'height', 'memory', '10947299', 'of course if the ratio is less than 1 then the width is smaller than height let s say 500px 700px and you will see the white spaces on the left and right of the image\n')
('height', 'greater', 'width', '', '17959581', 'it only seems to display when the height is greater than the width\n')
('width', 'bigger', 'height', 'memory', '24227548', 'it works well when height is bigger than width but it does not work when width is bigger than height\n')
('width', 'more', 'height', '', '3245750', 'the width of the timetable is more than the height of the timetable\n')
('height', 'greater', 'width', '', '25280814', 'if the height of the image is greater than the width then i rotate the image by 270 degrees\n')
('height', 'more', 'width', '', '4111695', 'this could happen if your fft size is much larger than the height of the drawing area or the number of spectral lines is a lot more than its width\n')
('width', 'wider', 'height', '', '12397909', 'what i want to do is that everytime the width of the image is wider than the height of the image i want to rotate the picture by 90 degrees clockwise into landscape layout mode save it on app s documents folder and then present it on the screen - this way the picture of the widescreen tv appears 90 degrees rotated but the image aspect ratio is not totally destroyed\n')
('height', 'greater', 'width', '', '22993902', 'the problem is that when i move to an android device whose orientation is landscape by default the device s hardware is arranged in such a way that it is clear it is intended to be used mainly in landscape orientation the x and y coordinates are reversed and the fact that the window s height is greater than its width can t be used to determine whether the user is holding the device with it s top up and its bottom down\n')
('height', 'greater', 'width', '', '7028094', 'the mediasize class and all of it s inner classes only have sizes where the height is greater then the width\n')
('height', 'bigger then', 'width', 'memory', '8418207', 'just check if the height is bigger then the width thus portait\n')
('height', 'less imageview', 'width', '', '19673468', 'there is two case if your actual image size is equal or grater than your imageview width and height then you can use adjustviewbounds property and if your actual image size is less than imageview width and height than use scaletype property to shown image in imageview based on your requirement\n')
('height', 'greater', 'width', '', '9140945', 'what i was looking to do was to assign a width property of 100 if the height of the images is greater than the width and the height if the width is greater than the height\n')
('width', 'usually less', 'height', '', '21830193', 'width is usually less than height you might want to think about inverting the coordinates ie\n')
('width', 'taller', 'height', '', '6955700', 'i interpred this to mean that for example the width will be 5 8th of the width of the working area unless this results in the dialog which is taller than the height of the working area in which case it will use a wider width\n')
('width', 'already less', 'height', '', '23691836', 'or does it only load the portrait.css file on page load and if the viewport width is already less than its height\n')
('height', 'greater', 'width', '', '10858994', 'i d like to do this with media queries so that if someone on a mac with a big monitor has their browser window sized so that it s very tall height is greater than width they would see a header and footer\n')
('width', 'taller', 'height', '', '9866305', 'this will effectively only show scrollbar when needed if horizontal content is wider than width or vertical content is taller than height\n')
('height', 'larger', 'width', 'memory', '16493127', 'with jquery you can check if height is larger than width and vice versa\n')
('width', 'more knowable', 'height', '', '19154977', 'width tends to be more knowable than height so on desktop you could do the old switcharoo to change their positions\n')
('width', 'less parent', 'height', '', '12129775', 'implement getscrollabletracksviewportheight width to return true if height width is less than parent height width and false otherwise\n')
('width', 'less', 'height', '', '20164790', 'works very well but only happens if the width is less than 600px and the height is less 400px the two conditions have to match\n')
('width', 'smaller', 'height', 'memory', '23111056', 'portait in a mobile device is that orientation where the width is smaller than the height\n')
('height', 'more important', 'width', '', '16253350', 'how can i even get real image size at least height it s more important than width in my case from downloaded image\n')
('width', 'greater', 'height', '', '7028094', 'i m trying to figure out why the java print api can t handle paper sizes where the width is greater than the height\n')
('width', 'moreso', 'height', '', '12619052', 'i am trying to change the size of a thumbnail in wordpress but it keeps making it exactly square even though i want to stretch the width moreso than the height\n')
('width', 'bigger', 'height', 'memory', '21542914', 'i know emacs tries to be intellectual and opens its helper buffers depending on which dimension of the window is bigger so it may appear in vertical split window if current width is bigger than height and in horizontal split otherwise\n')
('height', 'more', 'width', '', '24509043', 'if the first image is large like this one where the height is more and width is less it would look like this\n')
('height', 'always bigger', 'width', 'memory', '7299390', 'i found this how to detect the orientation of a pdf document in iphone sdk - but when i try to get the dimensions of the pdf the height is always bigger than the width no matter what orientation the pdf has.\n')
('width', 'greater', 'height', '', '140501', 'if the width is greater then height 3 4 screen.width then\n')
('height', 'more', 'width', '', '99817', 'that is the height is more than half the width and depth -- little rule of thumb\n')
('width', 'smaller', 'height', 'memory', '8063047', 'portrait orientation is that one where the width smaller than the height\n')
('width', 'greater', 'height', '', '21875138', 'it looks like a page in landscape because the dimensions of the page are created in such a way that the width is greater than the height\n')
('width', 'bigger', 'height', 'memory', '17662173', 'the device width is bigger than its height so it seems to be inverted\n')
('width', 'bigger', 'height', 'memory', '20411480', 'it will also automatically apply a 90 degree rotation transformation if the width is bigger than the height before applying any scaling\n')
('height', 'less', 'width', '', '1230528', 'so how can i determine a smaller width and height to which i will resize the watermark image something much less than 150 width 20 height so that it will appear still as a watermark and wont mask the image completely\n')
('width', 'longer', 'height', '', '12300802', 'landscape and even though the width is given as longer than the height\n')
('width', 'property less', 'height', '', '4833700', '1 the timagelist s height or width property is less than 1 or the height property is greater than 32768 when the timagelist is initially created via the createsize constructor there are no such limitations imposed by the height and width property setters\n')
('height', 'greater', 'width', '', '11907666', 'what s odd is that usually this doesn t happen - so far i ve only encountered this error when the original image has height greater than width and it has been filtered by another app called camera+...the exact same photo before filtering causes no problems and a filtered landscape photo also seems to be fine\n')
('height', 'slightly more tricky', 'width', '', '8099711', 'height is slightly more tricky for it to work you need to have the parent of the overlay div to have a known width\n')
('width', 'less', 'height', '', '3893643', 'most fonts have a character width less than the height so assuming width height will definitely work\n')
('height', 'larger', 'width', 'memory', '21604880', 'that will also works if the height of the window is larger than the width\n')
('height', 'larger', 'width', 'memory', '16260912', 'if the height is larger than the width the window is in portrait mode\n')
('width', 'narrower', 'height', '', '17089419', 'if i display the app on an android phone and the screen in held vertically width is narrower than height then the rendering the page does not occupy full width stuck at 95 or so\n')
('height', 'slightly larger', 'width', 'memory', '12973648', 'the canvas height is slightly larger than the width\n')
('height', 'less', 'width', '', '10860766', 'now get the width and height of the uibuttons and compare if the lastpressedbutton.frame.origin.x will be less than width or -width away\n')
('height', 'greater', 'width', '', '3247171', 'and if the bitmap s height is greater than maxheight or the width is greater than maxwidth i d like to proportionally resize the image so that it fits in maxwidth x maxheight\n')
('width', 'greater', 'height', '', '922429', 'similarly if width is greater than height the top position of the rotated image is incorrect\n')
('width', 'less', 'height', '', '23691923', 'so whenever width is less than height this shall be a portrai eventually will load your css file even if the original screen was initialized at landscape\n')
('width', 'less', 'height', '', '9617762', 'if browser width is less than 1670px and height of div.banner is less than 1253px then let div.title and div.social s parent be div.banner else let the parent of div.title and div.social be the body or browser window\n')
('height', 'higher', 'width', '', '5467603', 'the original image height is higher than its width woo no surprise so far\n')
('width', 'greater', 'height', '', '23662884', 'if width is greater than height return the proportional height otherwise return the target\n')
('height', 'smaller', 'width', 'memory', '8592874', 'if the height is bigger smaller than width don t draw or set visibility false\n')
('width', 'bigger', 'height', 'memory', '21756889', 'in picturebox i saw this image left rotated.but if image width is bigger than height there is no problem\n')
('height', 'greater', 'width', '', '15935838', 'first set height greater than width\n')
('width', 'greater', 'height', '', '25076838', 'the width of the picture is greater than the height\n')
('height', 'here smaller unit', 'width', 'memory', '21230682', 'if a user s screen had a resolution of 1000x800px 100vmin would be equal to 800px and 100vmax would be equal to 1000px as the height here is the smaller unit and the width is the larger unit\n')
('width', 'greater', 'height', '', '25493369', 'all i need is simply to append a w to the end of the div id if the screen width is greater than the height or an h if the height is greater\n')
('width', 'more', 'height', '', '9221263', 'issue is that user may link to an image that is of extremely large height and width which is more than the height and width of the div it is in causing some overflow layout issues\n')
('height', 'less', 'width', '', '24739259', 'then if the preferred width height is less than the actual width height you could manually invoke pack on the frame\n')
('width', 'bigger', 'height', 'memory', '11530679', 'pages are landscape if their width is bigger than their height\n')
('width', 'greater', 'height', '', '24834441', 'for example if width is greater than height then resize width to 500 pixels and scale height accordingly so that original aspect ratio is preserved\n')
('width', 'less', 'height', '', '18461449', 'the element s explicit height or width is less than the height or\n')
('height', 'higher value', 'width', '', '15137697', 'if height has a higher value than width the browser will be in orientation portrait\n')
('height', 'larger', 'width', 'memory', '20851077', 'i m trying to set the height of a image to 150px if the image width is larger than the height and if the image height is larger than the width the width of the image changes to 150px\n')
('width', 'less', 'height', '', '22222537', '480px seemed to be a good as no few devices had more than 480px width or less than 480px height\n')
('width', 'lower', 'height', '', '16953621', 'when i try loading an image whose width is lower than the height there is no problem at all\n')
('width', 'less', 'height', '', '18461603', 'you can use jquery .scroll but overflow css property set to scroll or auto when the element s explicit height or width is less than the height or width of its contents\n')
('width', 'greater', 'height', '', '24733215', 'now additionaly i would like to detect if the printed width is greater than the printed height and then change to landscape printing\n')
('width', 'greater', 'height', '', '5349641', 'if the width is greater than the height of an individual page add a dictionary entry to that page and explicitly set it s rotation\n')
('height', 'bigger', 'width', 'memory', '23045687', 'the reason why i m struggling is that sometimes the width is bigger than the height and sometimes the height is bigger than the width\n')
('width', 'greater', 'height', '', '22627245', 'i have few images thats being displayed now there are some images where the width of the image is greater than the height of the image\n')
('width', 'greater', 'height', '', '22563836', 'i have various different image sizes running through the site - some where the width is greater than height and vice versa\n')
('height', 'larger', 'width', 'memory', '20053503', 'in case the image s width height is larger than the device s screen width height i want to crop the image so it matches the device dimensions see picture below\n')
('width', 'bigger', 'height', 'memory', '8460065', 'i only want it to fit the width 100 and wish to become bigger than the height but not leave the certain container\n')
('height', 'more', 'width', '', '14197905', 'if the width to height ratio of the image is more than the width to height ratio of the screen then you know you ll be using the screen width and calculating the height\n')
('width', 'greater', 'height', '', '10858994', 'so the majority of desktop and laptop screens nowadays have a width greater than the height\n')
('width', 'more', 'height', '', '22459055', 'specifically when window width is no more than 680px iframe height should be\n')
('height', 'greater', 'width', '', '15935838', 'the caption for the vertical slider demo in the ie documentation erroneously indicates that setting height greater than width will display a range slider vertically but this does not work\n')
('width', 'smaller virtual', 'height', 'memory', '17876563', 'if you wan to account for all the possible options real height width bigger smaller than virtual height width and to make sure that the best configuration is delivered the rescaling occurs such that the available space is maximised it is not so straightforward\n')
('height', 'greater value', 'width', '', '17292796', 'if they are equal or the width is bigger i set those to 100 each and set height as auto whereas if the height is the greater value i set that to 100 and width to auto\n')
('width', 'higher screen', 'height', '', '20271056', 'firefox desktop and mobile showing the images with full screen width but cutting out the image parts which is higher than screen height javascript doing his job without problem\n')
('width', 'greater', 'height', '', '11064609', 'in fact the gap doesn t appear at all when width is greater than height only when height is greater than width\n')
('width', 'greater', 'height', '', '13867347', 'we next tried to just look at the actual screen size assuming that when width was greater than height we were in landscape mode\n')
('width', 'greater', 'height', '', '11908536', 'i have an image that has it s width greater than the height and it is still outputting using the second if statement in the jquery\n')
('height', 'side larger', 'width', 'memory', '21121447', 'if the images height side is larger than the width resize the image so that the width matches the divs width and hide the height overflow after vertically centering\n')
('height', 'much larger', 'width', 'memory', '25271665', 'although the uiimageview is square the uiimage s height is much larger than the width\n')
('width', 'larger dimension', 'height', 'memory', '17336778', 'the basic idea behind the approach is that you map the coordinates of the images to the interval by dividing by the width assuming the width is the larger dimension but it does not matter if it is smaller than the height\n')
('width', 'smaller', 'height', 'memory', '21846086', 'as you can already see from these dimensions the captured image s width is smaller than its height whereas the uiimageview s width is larger than its height - the proportions are different\n')
('height', 'larger', 'width', 'memory', '5924568', 'the problem is when the window s height is larger than it s width the grid inside the window gets clipped\n')
('height', 'greater', 'width', '', '1753801', 'when working with a portrait photo the height is greater than the width\n')
('height', 'less', 'width', '', '23180625', 'you need to check if xpos is less than height ypos is less than width and both are greater than or equal to zero\n')
('width', 'greater', 'height', '', '10844814', 'if the width of the bitmap is greater than the height the returned image is in landscape so i rotate it 90 degrees\n')
('width', 'bigger', 'height', 'memory', '14835714', 'now pen style thumb width is much bigger than height show correctly\n')
('height', 'smaller', 'width', 'memory', '15487668', 'i seem to remember reading somewhere that if report height is smaller than width printout is automatically rotated to landscape\n')
('width', 'larger', 'height', 'memory', '24987804', 'in this example the absolute difference in width is larger but the percentage difference in height is higher\n')
('height', 'more', 'width', '', '13280463', 'when i run the app the height is more than that i set in my storyboard width is fine but i change the height of the view nowhere\n')
('width', 'greater', 'height', '', '12596033', 'the logic is that the default orientation for a device who s width is greater than it s height is most likely a tablet and not a mobile phone device\n')
('height', 'greater', 'width', '', '922429', 'it s close - i m finding if height is greater than width the left position of the rotated image is incorrect\n')
('height', 'much bigger', 'width', 'memory', '2136850', 'however after rotating a rectangular image its new width and height is much bigger as these two screenshots should help clarify during rotation and after rotating then rotating again -- the little handles show where the images x y width height extends to\n')
('height', 'more', 'width', '', '22395547', 'if you have an image that its height is more than its width it will be shown as such\n')
('height', 'less', 'width', '', '12571276', 'i want to make an 100x100 pixels thumbnail of it and in this case because the height is less than the width the height should be 100 visible on the new image and the width should keep the aspect ratio of the image\n')
('width', 'greater', 'height', '', '14821620', 'for once particular thumbnail i d like the width to be greater than the height because i want to go for this new layout\n')
('height', 'bigger', 'width', 'memory', '23343876', 'so basically the small and medium sizes are a vertical layout as the height is bigger than the width\n')
('height', 'greater', 'width', '', '4975635', 'if an image s height is greater than the width i want to switch to the height crop else keep the width crop\n')
('height', 'smaller', 'width', 'memory', '14451315', 'the image renders but then when i try to pinch zoom in and out only the height of the picture changes bigger or smaller with the width stuck at the iphone screen width\n')
('height', 'bigger', 'width', 'memory', '24031281', 'but with iframe it is a problem - window height is always bigger than width\n')
('height', 'larger', 'width', 'memory', '24491431', 'but since i want a portrait preview i need to rotate the image and as a consequence i get images with an height much larger than the width the transpose of the original image i guess\n')
('width', 'bigger', 'height', 'memory', '10544319', 'therefore when i get my browser bigger width gets bigger as well as height\n')
('width', 'more', 'height', '', '19814340', 'if the width of the browser is more than height it is land scape otherwise it is portrait\n')
('height', 'greater', 'width', '', '14749702', 'if the image originalsize width height is greater than the svg image width and height\n')
('width', 'greater', 'height', '', '5952010', 'in onsurfacechanged you can check if your width is greater than your height and if it is you can query the orientation using the technique shown here\n')
('width', 'less', 'height', '', '19867860', 'it applies to window objects but also to scrollable frames and elements with the overflow css property set to scroll or auto when the element s explicit height or width is less than the height or width of its contents\n')
('width', 'wider', 'height', '', '2553557', 'if the width is wider than the height make your target size 500 x 375 otherwise make it 375 x 500\n')
('width', 'higher', 'height', '', '16953621', 'but when i try to upload an image with a width higher than the height i see that the lines that output vh vw return zero\n')
('height', 'greater', 'width', '', '21029675', 'as far as i can tell the javascript is only detecting when the height grows greater than the width and vice versa\n')
('width', 'larger window', 'height', 'memory', '7107007', 'landscape mode is when the window width is larger than window height\n')
('height', 'greater', 'width', '', '15906367', 'this assumes that height is greater than the width and vice versa\n')
('width', 'smaller', 'height', 'memory', '19386537', 'i need to apply a condition in the case that an image s width is bigger than equal to or smaller than height but i m in trouble when i try to compare the variables\n')
('width', 'higher', 'height', '', '9095311', 'i need to force the width when i am adding the image to the layout i mean that the image must be keep the aspect ratio but the image must be higher than the height of the screen and the image must be shown incomplete if the height of the image is higher than the height of the screen\n')
('height', 'greater', 'width', '', '15303172', 'when height is greater than width set width and auto stretch height\n')
('width', 'very larger', 'height', 'memory', '15176364', 'the following code is working without any error but my problem is when i create a thumbnail some times thumbnail are non understandable one some conditions such as width is very larger than height i also tried a code for calculate height automatically.but it won t perfectly works\n')
('height', 'higher', 'width', '', '15137697', 'if height has a higher value than width the browser will be in orientation portrait\n')
('height', 'smaller image', 'width', 'memory', '20849539', 'this version gives me a fixed 500px height and an image that looses aspect ratio when viewport is smaller than image width\n')
('height', 'always more', 'width', '', '22434694', 'in retrospect what you re trying to do will not get you to make the imageview circular because the default imageview is rectangular the height is always more than the width and so.\n')
('width', 'less important', 'height', '', '15070586', 'or you can group these statements by width as i think thats less important than height meaning less scrolling down for the user\n')
('width', 'bigger', 'height', 'memory', '15005814', 'you can check the width of the image and if the width is bigger than height you reduce the image for the width instead reduce from the height to fill the container something like that\n')
('height', 'larger', 'width', 'memory', '6894530', 'if the height is larger than the width the window is in portrait mode\n')
('width', 'greater then', 'height', '', '140501', 'if the width is greater then height 3 4 screen.width then\n')
('width', 'greater', 'height', '', '8977162', 'this will check if the width of the browser window is greater than the height orientation landscape will do the opposite\n')
('width', 'greater', 'height', '', '20320486', 'this prevents all stretching and simply places a black bar on the right hand side when the width is greater than height\n')
('height', 'greater', 'width', '', '19056729', 'if uiscreen mainscreen knows that i really want the height to be greater than the width whether or not i actually do how can i either query the actual dimensions or query whether the device is in portrait mode or landscape\n')
('height', 'higher', 'width', '', '23135330', 'if the height is higher than the width then you can say it s portrait or else landscape\n')
('height', 'larger', 'width', 'memory', '8779950', 'if requested width or height of a window is larger than width or height of a screen desktop the function shrinks the values to the screen sizes\n')
('height', 'ypos less', 'width', '', '23180625', 'you need to check if xpos is less than height ypos is less than width and both are greater than or equal to zero\n')
('width', 'greater', 'height', '', '25076838', 'according to the exif-information the orientation is 0 so supposedly the picture is not rotated - but since the width is greater than the height the picture is in fact rotated\n')
('height', 'greater', 'width', '', '19187018', 'i want the div to auto adjust for the picture so if the height is greater than the width then the div should adjust to the image s size\n')
('width', 'larger', 'height', 'memory', '7107007', 'landscape mode is when the window width is larger than window height\n')
('height', 'slightly more', 'width', '', '8099711', 'height is slightly more tricky for it to work you need to have the parent of the overlay div to have a known width\n')
('height', 'better', 'width', '', '9171795', 'rather than using fixed width height it is better to create a layout which allows the textblock to adjust its width\n')
('width', 'larger', 'height', 'memory', '16823146', 'the third url works fine when the image width is larger than the height landscape but when the height is the largest dimension portrait it resizes the height correctly but the width dimension does not get padded to fill the 600px width but instead becomes whatever size is calculated to maintain the aspect ratio\n')
('width', 'less', 'height', '', '12241668', 'if the window width is above 1280 i would like the value for the height to be 515 and if it is below 1280 i would like the height to be 615 and if the width is less than 480 make the height 715\n')
('height', 'bigger', 'width', 'memory', '7681113', 'there is an image restriction that is not documented or at least i couldn t found anything the aspect ratio limit is 1 3 when the height is bigger than the width on the image\n')
('height', 'greater', 'width', '', '15935837', 'i ve found some comments and references that seem to indicate that setting the height greater than the width will cause the browser to change the orientation automatically but in my testing that only works in opera used to work in opera but not anymore\n')
('height', 'more', 'width', '', '12346041', 'in case height is more than width then you have to resize with height\n')
('width', 'bigger', 'height', 'memory', '17292796', 'if they are equal or the width is bigger i set those to 100 each and set height as auto whereas if the height is the greater value i set that to 100 and width to auto\n')
('width', 'bigger', 'height', 'memory', '14525975', 'photoshop opens it and shows it vertical mac preview does too but getimagesize keeps telling me width is bigger than height\n')
('width', 'smaller', 'height', 'memory', '12248396', 'if the width gets smaller the height should get larger accordingly to display the whole content\n')
('height', 'smaller', 'width', 'memory', '8249123', 'in case your form contentpane s width height is smaller than the images width height than a better option would be use\n')
('height', 'greater', 'width', '', '17292796', 'if they are equal or the width is bigger i set those to 100 each and set height as auto whereas if the height is the greater value i set that to 100 and width to auto\n')
('width', 'still higher', 'height', '', '24031281', 'still not managed yet to detect orientation correctly because now for some reason when portrait - width is still higher than height with is 960 at least that what javascript see but in reality it is not going over boundaries which are 768px\n')
('height', 'greater', 'width', '', '19548462', 'if the height is greater than the width turn the display to none\n')
('height', 'less', 'width', '', '18658635', 'when viewport height is less than width of square\n')
('height', 'smaller', 'width', 'memory', '25359208', 'i.e if the browser height goes smaller the image will scale down while not overlapping or going under the text and staying centre same goes for width\n')
('width', 'greater', 'height', '', '6244792', 'then in the javascript you just check to see if the height or width of title is greater than the height or width of main\n')
('width', 'smaller', 'height', 'memory', '17398926', 'what is the reason that text s width is smaller than its height\n')
('width', 'larger', 'height', 'memory', '6894530', 'if the width is larger than the height itâ s in landscape mode.\n')
('width', 'greater', 'height', '', '15077380', 'actually it s not even but rather since its width is greater than its height\n')
('width', 'greater', 'height', '', '7243593', 'it s a bold meaning that its width is greater than its height which makes its portrait view a landscape\n')
('width', 'lesser', 'height', '', '10654937', 'as the simplest solution swap width and height if width is lesser than height so you always get the resolution of landscape mode\n')
('width', 'higher page', 'height', '', '10535356', 'i just want to set the custom page width and height page width is higher than page height\n')
('height', 'greater', 'width', '', '11863772', 'font.getsize text return the width and the height in pixels of the text so my method splits the string in words and verify if the word is greater than the width of the image if not i concatenate the word in a variable\n')
('width', 'more', 'height', '', '16642368', 'this often affects width more than height\n')
('height', 'bigger', 'width', 'memory', '17292796', 'i m then attempting to use jquery to run a check on whether or not the images height is bigger than it s width visa versa or they are equal\n')
('height', 'more', 'width', '', '15978809', 'the problem is when i try to upload a picture that has height more than width such as\n')
('width', 'greater', 'height', '', '11514391', 'so it s even more odd that the width is greater than the height when it should be the other way around\n')
('height', 'greater', 'width', '', '22698229', 'note this holds as long as the condition that the height is always greater than the width is maintained\n')
('height', 'smaller', 'width', 'memory', '9575967', 'the above scaling assumes that the height of the grid location is always smaller than the width of the grid location\n')
('height', 'always bigger', 'width', 'memory', '24031281', 'but with iframe it is a problem - window height is always bigger than width\n')
('height', 'greater', 'width', '', '11617140', 'i m using a resize function to wrap a div with a container when the browser width is less than 801px or the height is greater than the width\n')
('height', 'bigger', 'width', 'memory', '10278925', 'in other words to check if the height is bigger then the width\n')
('height', 'bigger', 'width', 'memory', '7318706', 'width 110px | height relevant to the width if the height is bigger than width\n')
('width', 'greater', 'height', '', '25561230', 'following that if the width is greater than 1000 simply scale both height and width which may already have been scaled due to the height by 1000 width\n')
('height', 'bigger', 'width', 'memory', '7299390', 'i found this how to detect the orientation of a pdf document in iphone sdk - but when i try to get the dimensions of the pdf the height is always bigger than the width no matter what orientation the pdf has.\n')
('height', 'less', 'width', '', '19343510', 'for flex items the auto attribute value calculates the minimum width height of the item to be no less than the width height of its content guaranteeing that the item is rendered large enough to hold the content\n')
('height', 'bigger', 'width', 'memory', '21756889', 'when i select images which height is bigger than width\n')
('height', 'taller', 'width', '', '19614115', 'everything seems good until i previewed the website on an ipad iphone portrait mode where the screen height is much taller than its width\n')

range	minimum	6
('range', 'more', 'minimum', '', '10861750', 'the objective function is guaranteed to be finite and contionuous in the interpolation range along with its first and second derivatives and has no more than one minimum in this range if it has no minimum it is monotonic\n')
('range', 'larger', 'minimum', 'memory', '3821910', 'if the 32-bit float range is larger than -1..1 then you need to find the minimum and maximum values and calculate a scale factor that gets the samples within the int16 range\n')
('range', 'longer', 'minimum', '', '10923040', 'to summarize the problem given time range t1 and t2 on day d how can i determine the remaining time left in d that is longer than the minimum time block m\n')
('range', 'greater', 'minimum', '', '5234591', 'how about for integer values you specify a range and a predicate that specifies the value must be greater than minimum less than maximum instead\n')
('range', 'smaller', 'minimum', 'memory', '1990334', 'a range is contiguous when there is no value one smaller than the minimum and no value one bigger than the maximum and there is no gap within the range\n')
('range', 'wider', 'minimum', '', '3539872', 'for example the language standard only mandates minimum range for types like short int and long but they may be wider than the minimum requirements\n')

isotope	masonry	4
('isotope', 'easier', 'masonry', 'usability', '4917802', 'in its stead you can use isotope - which does filtering a lot easier than masonry\n')
('isotope', 'more complete', 'masonry', '', '17770459', 'they do this using a jquery plugin called isotope which is a more complete version of masonry you pay for\n')
('isotope', 'better', 'masonry', '', '12500664', 'according to this answer the isotope plugin might work better than masonry for media-queried resizes\n')
('isotope', 'more', 'masonry', '', '17770459', 'they do this using a jquery plugin called isotope which is a more complete version of masonry you pay for\n')

button	right-align	1
('button', 'easier', 'right-align', 'usability', '7810180', 'instead of figuring out the individual positions for each image button it is easier to simply right-align them by modifying the anchorpoint to 1.0f 0.5f and then position the images button at exactly the screen width and variable screen height position screen width 100\n')

double	int	143
('int', 'less', 'double', '', '7472356', 'you can also use math.floor double to get the closest int that is less than the double\n')
('double', 'bigger numbers', 'int', 'memory', '25060840', 'clearly calling int x on a double is asking for trouble since double can store bigger numbers than int\n')
('double', 'larger', 'int', 'memory', '20181170', 'many processors and or compilers implement long double types larger than any int type regardless of name and there are processors with 32 byte pointers\n')
('double', 'larger values', 'int', 'memory', '8424026', 'a double variable can hold larger values than an int and is able to store an approximation of the value 4000000000\n')
('int', 'narrower', 'double', '', '19591563', 'i believe the following works as a sort comparison function for positive int provided the int type used is substantially narrower than the double type 32-bit int and 64-bit double and the log10 routine used returns exactly correct results for exact powers of 10 which a good implementation does\n')
('double', 'value much bigger', 'int', 'memory', '20354046', 'you can convert your object into double and then into int but you should take care as double value is much bigger than int\n')
('int', 'type larger', 'double', 'memory', '12323870', 'you need to use 2 even if the number of bits in your int type is larger than the precision of a double since the number of used bits in the most significant value might only be 1\n')
('double', 'wider', 'int', '', '20821194', 'the most urgent one that comes to mind is that a double is wider than an int on your platform and garbage memory is read\n')
('int', 'part less', 'double', '', '9081126', 'the int part is less than 2 and the double part is less than 3\n')
('double', 'greater', 'int', '', '11321381', 'alternatively if fieldsize is equal to sizeof double and sizeof double is greater than sizeof int then you are writing off the end of d_buffer and then something is corrupting your data\n')
('double', 'more', 'int', '', '1400465', 'i am guessing this is because modifying a double is a more complex operation than modifying an int\n')
('int', 'less', 'double', '', '3027395', 'it implicitly converts an int to a double gets the double form of largest int that is less or equal to that double and converts that back to an int\n')
('int', 'much smaller', 'double', 'memory', '4181954', 'don t forget that the range of int is much smaller than the range of double\n')
('int', 'wider', 'double', '', '16964112', 'the widths are positive int not wider than the double significand 53 bits\n')
('double', 'less', 'int', '', '21470294', 'your nummines calculation will always return 0 because when you cast a double that is less than 1 to an int it will be set to 0 which means that the statement in your while loop will only be run a single time hence only a single mine being placed\n')
('double', 'bigger mantissa', 'int', 'memory', '2386794', 'the double has a bigger mantissa the int bits of the real number\n')
('int', 'greater', 'double', '', '22740584', 'if a 64-bit long is written as an int and is greater than 2 53 ieee double has a 52-bit mantissa then reading it as a double will lose precision\n')
('double', 'more complex', 'int', 'usability', '1400465', 'i am guessing this is because modifying a double is a more complex operation than modifying an int\n')
('double', 'greater', 'int', '', '12314984', 'since double is greater that int and long int and long will be turned into double in double long and int double\n')
('double', 'more space ints-an', 'int', 'memory', '1935145', 'you re getting the outofmemory because if you declare int 1000 the memory is allocated immediately additionally double take up more space than ints-an int representation will also save you space\n')
('double', 'slower', 'int', 'performance', '16741309', 'double is a different data type and generally much slower than int\n')
('double', 'wider', 'int', '', '5694078', 'also given that double has a wider range what would one return for those out of range int values\n')
('double', 'trickier', 'int', '', '4194962', 'note that the double is much trickier than the int s\n')
('int', 'slower', 'double', 'performance', '2242618', 'using and at the same time to check equality on a int results in slower code because it takes two comparisons instead of one taking the double amount of time\n')
('double', 'more general', 'int', '', '15770825', 'but this isn t true because double is more general than int and therefore int is the most-specific option in this case\n')
('int', 'smaller range', 'double', 'memory', '1696724', 'int can hold a smaller range than double\n')
('int', 'smaller', 'double', 'memory', '7089680', 'the problem is that the precision of the data type int is smaller as the precision of double the function pow returns double therefore the value of binarychar i will be implizit converted to double and so on.\n')
('double', 'greater', 'int', '', '5693478', 'double has a greater value range than int\n')
('int', 'better results', 'double', '', '5787578', 'if you use int between -128 and 127 you will get much better results than double from -128 to 127 because the former uses caches values the later does not\n')
('double', 'slower', 'int', 'performance', '15298409', 'double is much slower than int\n')
('double', 'higher precision', 'int', '', '19565419', 'you can assign the int s returned from integer.parseint string s to your double variables because double s are higher precision than int s and so type conversion happens automatically without the need for an explicit cast\n')
('int', 'narrower', 'double', '', '19591563', 'the int portions of the logarithms of 31 and 310 use different numbers of bits so there are different numbers of bits left for the significand so they end up being rounded to slightly different values. as long as the int type is substantially narrower than the double type the calculated limit will be much larger than the error in log10\n')
('double', 'bigger', 'int', 'memory', '2386794', 'the double has a bigger mantissa the int bits of the real number\n')
('double', 'more', 'int', '', '15770825', 'but this isn t true because double is more general than int and therefore int is the most-specific option in this case\n')
('double', 'better', 'int', '', '17306689', 'except that double is much better than int for storing the join_angle in radians\n')
('double', 'bigger', 'int', 'memory', '11001264', 'with the cast that bad stuff is undefined behavior most likely double is bigger than int and it overruns the memory for i\n')
('int', 'less memory', 'double', 'memory', '13566079', 'typically an int will use less memory than a double that is why one doesn t just use the largest possible datatype\n')
('int', 'typically smaller', 'double', 'memory', '20732505', 'in contrast accessing the bits of a double as an int is usually in-practice safe even though it s formally ub because 1 an int is typically smaller or equal in size to double and 2 an int usually does not have any invalid bit patterns\n')
('double', 'more flexible', 'int', 'usability', '23555019', 'it seems to be that double is much more flexible than int\n')
('double', 'less', 'int', '', '23227239', 'the double literal 99.9999999999999 can be represented as a double which is less than 100 so the cast to int truncates the decimal part and 99 is the result\n')
('int', 'better', 'double', '', '14285655', 'note how i cast the result to int which is better suited for years than the double precision returned by extract\n')
('double', 'much wider', 'int', '', '1348958', 'the range of double is much wider than the range of int or long\n')
('double', 'faster', 'int', 'performance', '12443760', 'on my machine the double swap loop completes 11 times faster than the int swap loop\n')
('double', 'bigger', 'int', 'memory', '10531075', 'a normal 3 will be treated as int but in the test function you are retrieving double which are bigger than an int on most platforms and you might end up reading wrong locations which inturn leads to exc_bad_access run time signal being generated\n')
('int', 'more efficient', 'double', 'performance', '7998350', 'if you want the modulus use as it gives an int and would be more efficient than double arithmetic\n')
('double', 'more', 'int', '', '3878773', 'a double is a more precise type than an int in a general manner of speaking\n')
('double', 'range more', 'int', 'usability', '2582032', 'double has range more than a 64-bit int but its precision is less dues to its representation since double is 64-bit as well it can t fit more actual values\n')
('int', 'less', 'double', '', '17383440', 'i don t understand how an int 63823 takes up less space than a double 1.0\n')
('double', 'greater', 'int', '', '526070', 'today i noticed that when i cast a double that is greater than the maximum possible int to an int i get -2147483648\n')
('double', 'precision much more', 'int', '', '3632503', 'as for the last question floating point arithmetic particularly double precision is much more complex than int arithmetic so on a reasonably modern pipelined processor each instruction will take longer to execute\n')
('int', 'lower', 'double', '', '13589067', 'so no arguments after the 1st one get automatically converted except as defined by default argument conversions basically any int type with a rank lower than int to int and any floating-point type with a rank lower than double to double thank you pascal cuoq\n')
('int', 'faster', 'double', 'performance', '24159693', 'int subtractions are 2.5 times faster than double subtractions on my machine\n')
('int', 'less', 'double', '', '17383158', 'i don t understand how an int 63823 takes up less space than a double 1.0\n')
('double', 'way greater', 'int', '', '605544', 'the range of double is way greater than the range of 32 or 64 bit int which is why std floor returns a double\n')
('double', 'faster', 'int', 'performance', '594466', 'so i asked myself can a double be faster than a int\n')
('int', 'less space', 'double', 'memory', '14674829', 'int would take up less space than a double\n')
('double', 'more mantissa', 'int', '', '19689402', 'since double has more mantissa bits than int can have significant bits comparisions between double and int are precise in that regard\n')
('int', 'more', 'double', '', '2521374', 'by contrast void doitagain int is more specific than void doitagain double because int is a subtype of double according the the jls\n')
('double', 'value also larger', 'int', 'memory', '511928', 'the largest double value is also larger than the largest int so it would have to be a long\n')
('double', 'more', 'int', '', '19689402', 'since double has more mantissa bits than int can have significant bits comparisions between double and int are precise in that regard\n')
('int', 'better', 'double', '', '22307506', 'imho int looks better than double in your task\n')
('int', 'smaller', 'double', 'memory', '23953851', 'it doesn t matter if second member would be int short or whatever - as long as it is smaller than double sizeof struct will be 16\n')
('double', 'not bigger', 'int', 'memory', '16268270', 'this will work as long as the double is not bigger than what can fit in an int\n')
('double', 'smaller', 'int', 'memory', '24119742', 'this imply that result of pow x y converted to int will be truncated because of double arithmetic and exponentiation that will return double value slightly smaller than int\n')
('double', 'more', 'int', '', '24857068', 'for floats and double it s more difficult as with plain int as these may or not may be in the host machines byte-order\n')
('double', 'bigger', 'int', 'memory', '10951622', 'one of long long and double is bigger than 3 int and a multiple of 8\n')
('int', 'faster', 'double', 'performance', '24159693', 'int multiplications however are only 1.5 times faster than double multiplications\n')
('double', 'less', 'int', '', '526070', 'similarly when i cast a double that is less than the minimum possible int i also get -2147483648\n')
('double', 'better', 'int', '', '21886861', 'double is better than int though as it will help you keep precision\n')
('int', 'more specific', 'double', '', '2521374', 'by contrast void doitagain int is more specific than void doitagain double because int is a subtype of double according the the jls\n')
('int', 'more specific', 'double', '', '19436196', 'i thought when i pass 1 as the argument java would have picked the first argument because int is more specific than double\n')
('double', 'less', 'int', '', '23666565', 'as far as i m aware so long as the spacing between two double is less than 2 then int values stored as double should be exact - and though 10 14 is pushing it this should be an exact int since 10 14 2 46.507 2 53\n')
('double', 'more', 'int', '', '105339', 'for floats and double it s more difficult as with plain int as these may or not may be in the host machines byte-order\n')
('double', 'less', 'int', '', '15949536', 'you really might need to up cast everything into a double and then check to see if the result is greater than or less than an int\n')
('double', 'greater value', 'int', '', '5693478', 'double has a greater value range than int\n')
('double', 'less', 'int', '', '14552079', 'i should point out previously in the code the double is less than 1 i.e 0.987 and is then multiplied by the number of decimal places to make it a real positive int though it s stored as a double still at that point\n')
('double', 'precision much more complex', 'int', 'usability', '3632503', 'as for the last question floating point arithmetic particularly double precision is much more complex than int arithmetic so on a reasonably modern pipelined processor each instruction will take longer to execute\n')
('double', 'more inexact', 'int', '', '14701685', 'about the inexactness problem you should be aware that double can be more inexact than int\n')
('int', 'lower rank', 'double', '', '18709820', 'num is a of type const int which is of lower rank when compared to the type of z which is double\n')
('int', 'better performance', 'double', 'performance', '3676567', 'i m writing a c# class to perform 2d separable convolution using int to obtain better performance than double counterpart\n')
('int', 'significantly faster', 'double', 'performance', '25354205', 'this can t help performance either since pow double int is significantly faster than pow double double in general\n')
('int', 'more', 'double', '', '9447869', 'as soon as the int needs more than 29 bits the atom is changed by the vm into a number type which is really represented as a 29 bit pointer to the actual 64 bit double precision float\n')
('double', 'much more flexible', 'int', 'usability', '23555019', 'it seems to be that double is much more flexible than int\n')
('int', 'less', 'double', '', '14638096', 'int takes less space than double on ram\n')
('int', 'larger', 'double', 'memory', '4391609', 'your upccode int is larger than the long data type so i tried it with double which is a float but works\n')
('int', 'slower', 'double', 'performance', '10107000', 'even dividing int is slower than multiplying floats or double in some cases\n')
('int', 'smaller', 'double', 'memory', '20963734', 'on many systems int is smaller than double so if that s the case on yours this is very likely to be the cause of your crash\n')
('double', 'far greater', 'int', '', '605547', 'another reason is that the range of double is far greater than that of int\n')
('int', 'less', 'double', '', '21528753', 'int needs less memory comparing to double numbers\n')
('int', 'less memory', 'double', 'memory', '21528753', 'int needs less memory comparing to double numbers\n')
('double', 'much slower', 'int', 'performance', '15298409', 'double is much slower than int\n')
('int', 'quicker float', 'double', '', '11286328', 'a solution using int only calculations should be quicker than float double calculations is\n')
('double', 'much more', 'int', '', '23555019', 'it seems to be that double is much more flexible than int\n')
('double', 'bigger', 'int', 'memory', '18580095', 'you could try using double which is bigger than a long and use only the int part\n')
('double', 'larger', 'int', 'memory', '20732505', 'a double is 1 typically larger than an int and 2 has some internal structure\n')
('int', 'less space', 'double', 'memory', '14638096', 'int takes less space than double on ram\n')
('double', 'wider range', 'int', 'usability', '5694078', 'also given that double has a wider range what would one return for those out of range int values\n')
('int', 'more', 'double', '', '7472356', 'or math.ceil double which returns the closest int that is more than the double\n')
('int', 'more bits', 'double', '', '14313668', 'you can work around this issue if you ll advance to big int floating point numbers that store more bits than a double precision number\n')
('double', 'more difficult', 'int', '', '24857068', 'for floats and double it s more difficult as with plain int as these may or not may be in the host machines byte-order\n')
('int', 'type substantially narrower', 'double', '', '19591563', 'the int portions of the logarithms of 31 and 310 use different numbers of bits so there are different numbers of bits left for the significand so they end up being rounded to slightly different values. as long as the int type is substantially narrower than the double type the calculated limit will be much larger than the error in log10\n')
('double', 'less', 'int', '', '3481367', 'that wouldn t work on platforms where a double is less than 64 bits but it would work on many platforms without 64-bit int\n')
('double', 'more complex', 'int', 'usability', '3632503', 'as for the last question floating point arithmetic particularly double precision is much more complex than int arithmetic so on a reasonably modern pipelined processor each instruction will take longer to execute\n')
('double', 'higher magnitude', 'int', '', '4130727', 'not really considering that a double can be a much higher magnitude than an int\n')
('int', 'faster pow', 'double', 'performance', '25354205', 'this can t help performance either since pow double int is significantly faster than pow double double in general\n')
('int', 'slower', 'double', 'performance', '7896213', 'with it is nub on and comparing big int is slower than comparing double\n')
('int', 'smaller rank', 'double', 'memory', '25343540', 'for historical reasons you can not pass an int argument of smaller rank than int or a floating type of smaller rank than double to a variadic function\n')
('double', 'more', 'int', '', '22203178', 'double s length is way more than int that s why you should be checking int first\n')
('double', 'more difficult', 'int', '', '105339', 'for floats and double it s more difficult as with plain int as these may or not may be in the host machines byte-order\n')
('double', 'larger numbers', 'int', 'memory', '5693480', 'because double can contain larger numbers than int or long\n')
('double', 'more general type', 'int', '', '19823940', 'double can in a way be seen as a more general type than int\n')
('double', 'larger', 'int', 'memory', '6765663', 'i understand that the compiler isn t happy because a double might be larger than an int can hold but this particular control is guaranteed to be a value from 1 to 10 so i know that it will be okay\n')
('double', 'slower', 'int', 'performance', '16741312', 'incrementing the value might be a special case but it s possible that on your machine incrementing double is slower than incrementing int\n')
('int', 'types more', 'double', '', '6385312', 'on a 32-bit machine doing addition and comparison on 64-bit int types takes more instructions than doing the equivalent on double s\n')
('double', 'much better', 'int', '', '17306689', 'except that double is much better than int for storing the join_angle in radians\n')
('int', 'smaller', 'double', 'memory', '8103414', 'in vararg functions such as printf int smaller than int are promoted to int and floats smaller than double are promoted to double\n')
('double', 'bigger', 'int', 'memory', '2551657', 'edit actually my solution does not work because double can be very big much bigger than int and also very small like fractions\n')
('double', 'larger type', 'int', 'memory', '12931816', 'the math.round double a method returns a long which is a larger type than int\n')
('int', 'greater', 'double', '', '6297636', 'you should be using math.ceiling which will return the smallest int value that is greater than the double passed in\n')
('int', 'less space', 'double', 'memory', '17383158', 'i don t understand how an int 63823 takes up less space than a double 1.0\n')
('int', 'smaller', 'double', 'memory', '13032415', 'and since float is typically promoted to double with varargs calls if your int is smaller than your double this will break\n')
('double', 'less', 'int', '', '24945410', 'because all int s can be upcast to a double without loss and the pow function on a double is no less efficient that that on an int\n')
('int', 'smaller sizeof', 'double', 'memory', '24146146', 'since sizeof int is very probably smaller than sizeof double this is going to lead to horror\n')
('int', 'slower code', 'double', 'performance', '2242618', 'using and at the same time to check equality on a int results in slower code because it takes two comparisons instead of one taking the double amount of time\n')
('int', 'more', 'double', '', '19436196', 'i thought when i pass 1 as the argument java would have picked the first argument because int is more specific than double\n')
('int', 'less space', 'double', 'memory', '17383440', 'i don t understand how an int 63823 takes up less space than a double 1.0\n')
('int', 'faster', 'double', 'performance', '16298551', 'the difference is that int are still faster than double because it takes very few clock cycles to do arithmetic operations on int\n')
('double', 'much trickier', 'int', '', '4194962', 'note that the double is much trickier than the int s\n')
('int', 'types more instructions', 'double', '', '6385312', 'on a 32-bit machine doing addition and comparison on 64-bit int types takes more instructions than doing the equivalent on double s\n')
('double', 'smaller', 'int', 'memory', '5772391', 'these conversions promote float to double and anything smaller than int to int or unsigned int\n')
('double', 'higher', 'int', '', '2625948', 'because a double is higher it will merge the int into the 0.0\n')
('double', 'larger', 'int', 'memory', '12015986', 'double is larger than an int hence the overflow\n')
('double', 'bigger', 'int', 'memory', '10556878', 'a double is also probably bigger than an int\n')
('double', 'larger 64-bit', 'int', 'memory', '21071959', 'typically a double is 64-bit ieee floating point with roughly 52 bits precision and with range much larger than 64-bit int so magnitude is no problem\n')
('double', 'less efficient', 'int', 'performance', '24945410', 'because all int s can be upcast to a double without loss and the pow function on a double is no less efficient that that on an int\n')
('double', 'bigger', 'int', 'memory', '20354046', 'you can convert your object into double and then into int but you should take care as double value is much bigger than int\n')
('int', 'lower', 'double', '', '18709820', 'num is a of type const int which is of lower rank when compared to the type of z which is double\n')
('double', 'greater', 'int', '', '25636405', 'and the second calculation 33 5.0 the result is actually promoted to double which has greater precision than int and resulted to decimal\n')
('double', 'greater precision', 'int', '', '25636405', 'and the second calculation 33 5.0 the result is actually promoted to double which has greater precision than int and resulted to decimal\n')
('double', 'more precise', 'int', '', '3878773', 'a double is a more precise type than an int in a general manner of speaking\n')
('double', 'smaller', 'int', 'memory', '10789396', 'you could try to add some value to the double to make sure it s bigger or smaller than an int can be\n')
('double', 'greater sizeof', 'int', '', '11321381', 'alternatively if fieldsize is equal to sizeof double and sizeof double is greater than sizeof int then you are writing off the end of d_buffer and then something is corrupting your data\n')
('double', 'higher values', 'int', '', '17379031', 'to prevent the code from overflowing the int value space you should could change the type of res to double long anything that can hold higher values than int\n')

uicollectionview	icarousel	2
('uicollectionview', 'better', 'icarousel', '', '14078238', 'my only problem is that is seems that using uicollectionview is a better approach and i have read some seemingly off-hand comments about icarousel being a poor approach\n')
('uicollectionview', 'better approach', 'icarousel', 'usability', '14078238', 'my only problem is that is seems that using uicollectionview is a better approach and i have read some seemingly off-hand comments about icarousel being a poor approach\n')

scoreloop	openfeint	1
('scoreloop', 'quicker', 'openfeint', '', '8975862', 'further to this i m still opting for scoreloop and i can confirm this behaves the same regarding one score per user but it offers a lot more functionality and does seem to respond much quicker than openfeint did for me\n')

for-loop	loops	113
('for-loop', 'more convenient', 'loops', 'usability', '12515354', 'you should use a for-loop which is more convenient to loops in an arrays\n')
('loops', 'more convenient', 'for-loop', 'usability', '17098497', 'also as an aside objective-c has a foreach loops that is more convenient than manually setting up a for-loop with a counter\n')
('loops', 'better', 'for-loop', '', '24106458', 'your while loops always runs a fixed number of times so from a stylistic point of view you would be better off with a for-loop\n')
('for-loop', 'much simpler', 'loops', 'usability', '4916856', 'using for-loop is much simpler if you use condition as limit for breaking loops\n')
('for-loop', 'header actually more time', 'loops', 'performance', '12865406', 'here the for-loop header takes actually more time than loops body thus profiling results could be distorted.\n')
('loops', 'slower normal', 'for-loop', 'performance', '9845010', 'if you are using any js loops then for each loops is slower than normal for-loop you might wanna take a look at this\n')
('loops', 'faster', 'for-loop', 'performance', '22733212', 'even if a foreach loops were faster than a for-loop there are still operations being carried out that wouldn t be in your manual example\n')
('for-loop', 'more advantages', 'loops', '', '17399107', 'for-loop is widly used and has more advantages over while loops but ther are some cases when while loops is perferable\n')
('loops', 'much slower then', 'for-loop', 'performance', '18788316', 'if the above is true doesn t this mean that the foreach loops is much slower then the common for-loop since it involves making copies of each element of the arrays\n')
('for-loop', 'usually better', 'loops', '', '6710643', 'as for your question a for-loop is usually better when you want a piece of code to run a certain number of times and a while loops is better when the condition for the code to keep running is more general such as having a boolean flag that is only set to true when a certain condition is met in the code block\n')
('loops', 'easier', 'for-loop', 'usability', '23729685', 'instead of using a while loops it is easier to use a for-loop\n')
('loops', 'slightly slower', 'for-loop', 'performance', '22775039', 'the other option is to use a foreach loops which is slightly slower than a for-loop but works almost equivalently for all practical purposes\n')
('for-loop', 'header actually more', 'loops', '', '12865406', 'here the for-loop header takes actually more time than loops body thus profiling results could be distorted.\n')
('loops', 'generally faster', 'for-loop', 'performance', '4929144', 'the reverse while loops is generally faster than a for-loop as well\n')
('for-loop', 'more', 'loops', '', '18117449', 'additionally you should reset i each time you go through loops and a for-loop makes more sense than a while loops especially if you re using c99 as i can be declared within loops\n')
('loops', '3x faster', 'for-loop', 'performance', '15094242', 'says that enhanced for loops is 3x faster than the regular for-loop well that great and its easier to write anyways but what if i need the index\n')
('loops', 'slower', 'for-loop', 'performance', '5664650', 'is the foreach loops slower than the for-loop\n')
('for-loop', 'more', 'loops', '', '8664211', 'the incrementor in the for-loop is more of a while 1 endless loops\n')
('loops', 'more efficient', 'for-loop', 'performance', '2708621', 'my view is that option 1 is clumsy code and involves unnecessary creation of an arrays even though the for-each loops is more efficient than the traditional for-loop in option 2\n')
('for-loop', 'faster', 'loops', 'performance', '25188670', 'as the simple for-loop is faster than a foreach loops\n')
('loops', 'faster', 'for-loop', 'performance', '7169035', 'on windows the while loops above is 20 faster than the original for-loop in google-chrome in ie and firefox both loops perform the same\n')
('loops', 'less clean', 'for-loop', '', '9143874', 'i personally think the while loops looks less clean than the nested for-loop\n')
('for-loop', 'better', 'loops', '', '21630330', 'then you should achive them with a counter and maybe a for-loop is better then while loops\n')
('for-loop', 'more', 'loops', '', '4345604', 'a for-loop is more appropriate than a while loops in your code\n')
('loops', 'better', 'for-loop', '', '6710601', 'if i have to use the value of counter in my program then i think while loops is better than for-loop\n')
('for-loop', 'bigger', 'loops', 'memory', '24578261', 'i have the impression that the implementantion has something to do with a for-loop and some kind of adaptive delay that gets bigger as loops count increases\n')
('for-loop', 'much easier', 'loops', 'usability', '24376207', 'even if you use a lowly for-loop it s much easier to loops over the elements of a list than it is to construct variable names with paste and access the objects with get\n')
('for-loop', 'much faster', 'loops', 'performance', '25279932', 'in some cases hand-writing a for-loop is much faster than the equivalent accelerate functions because the compiler can optimize your loops better than the function\n')
('loops', 'faster', 'for-loop', 'performance', '4929144', 'the reverse while loops is generally faster than a for-loop as well\n')
('loops', 'better', 'for-loop', '', '6710601', 'i found a simple condition where using while loops is better than for-loop\n')
('for-loop', 'probably better', 'loops', '', '5991990', 'thus your for-loop is probably better expressed as following while loops\n')
('loops', 'more', 'for-loop', '', '17098497', 'also as an aside objective-c has a foreach loops that is more convenient than manually setting up a for-loop with a counter\n')
('for-loop', 'less error', 'loops', 'reliability', '3875160', 'they are functionally identical however it can be argued that the for-loop is less error prone because all of loops functionality is right there together\n')
('for-loop', 'better then', 'loops', '', '21630330', 'then you should achive them with a counter and maybe a for-loop is better then while loops\n')
('for-loop', 'faster', 'loops', 'performance', '15041187', 'and normal for-loop is faster than for-in loops\n')
('loops', 'less', 'for-loop', '', '9143874', 'i personally think the while loops looks less clean than the nested for-loop\n')
('for-loop', 'larger', 'loops', 'memory', '8867930', 'a becomes 10 while it is still inside of the for-loop and gets larger than 10 when the while loops goes for a second run\n')
('loops', 'slower', 'for-loop', 'performance', '3765747', 'the foreach loops is slower than the for-loop yet most people don t rewrite all of their code to use the for\n')
('loops', 'faster', 'for-loop', 'performance', '14272602', 'loops recur is faster - it s one of the most efficient constructs in clojure done correctly it should match the speed of an equivalent for-loop in java code\n')
('loops', 'better', 'for-loop', '', '20612281', 'imho loops looks better with a for-loop iterating in the right direction\n')
('for-loop', 'more flexibility', 'loops', 'usability', '20060585', 'a c-style for-loop has more flexibility but ultimately you can write an equivalent loops with python s while or c s while for that matter which touches not only on the â œone obvious wayâ principle but also â œsimple is better than complexâ amongst others\n')
('for-loop', 'more', 'loops', '', '24275384', 'as others have stated the python for-loop is more like a a traditional foreach loops in the sense that it iterates over a collection of items without checking a condition\n')
('for-loop', 'greater', 'loops', '', '9427335', 'the for-loop is using i as a global variable so if your instance.set_marker function is also using i as a global variable and sets its value to something greater than 6 loops will exit\n')
('loops', 'faster', 'for-loop', 'performance', '8789679', 'so we can see that an optimised while loops is faster than a for-loop by 2 operations however it uses more stack space\n')
('for-loop', 'slower', 'loops', 'performance', '8843436', 'in example sendp method included in for-loop which is slower than making other loops to send packets\n')
('loops', 'bigger', 'for-loop', 'memory', '14953701', 'the result amazed me in the way that as loops goes over bigger range the performance of c# decreases as compared to c..for smaller range c# shown well performance over c....but as upper range of for-loop increases the c# performance degrades as compare to c..\n')
('for-loop', 'typically several more machine', 'loops', '', '24598518', 'i noticed some time ago that a for-loop typically generates several more machine instructions than a while loops\n')
('loops', 'much slower', 'for-loop', 'performance', '18788316', 'if the above is true doesn t this mean that the foreach loops is much slower then the common for-loop since it involves making copies of each element of the arrays\n')
('loops', 'slower', 'for-loop', 'performance', '9845010', 'if you are using any js loops then for each loops is slower than normal for-loop you might wanna take a look at this\n')
('for-loop', 'simpler', 'loops', 'usability', '6965355', 'to my mind a for-loop is simpler to understand than traversing the list backwards with a while loops\n')
('loops', 'slower', 'for-loop', 'performance', '18599095', 'you could also use a for each loops to handle this though that type of loops is slower than a standard for-loop depending on application\n')
('for-loop', 'generally better', 'loops', '', '472283', 'the conclusion of the article is that using for-loop is generally better and faster than the foreach loops\n')
('for-loop', 'faster', 'loops', 'performance', '9326919', 'is for-loop is faster than while loops\n')
('loops', 'more', 'for-loop', '', '2708621', 'my view is that option 1 is clumsy code and involves unnecessary creation of an arrays even though the for-each loops is more efficient than the traditional for-loop in option 2\n')
('for-loop', 'more time', 'loops', 'performance', '12865406', 'here the for-loop header takes actually more time than loops body thus profiling results could be distorted.\n')
('loops', 'strictly more', 'for-loop', '', '2098528', 'the class of problems you can solve with while loops is strictly more powerful than those you could have solved with the strict for-loop found in pascal\n')
('for-loop', 'faster', 'loops', 'performance', '15283900', 'to explain why a for-loop is faster than a for in loops is basically understand the underlying data structures used to store the data in memory\n')
('for-loop', 'much faster', 'loops', 'performance', '365630', 'i did test it a while ago with the result that a for-loop is much faster than a foreach loops\n')
('for-loop', 'more simpler', 'loops', 'usability', '5960350', 'loops in c++ are most basic than python the for-loop is more simpler it is based on the three expression initializer expression loops test expression and the counting expression\n')
('for-loop', 'easier', 'loops', 'usability', '24484908', 'for-loop is easier to read than a while loops\n')
('loops', 'slower', 'for-loop', 'performance', '8183143', 'however the while loops remains a little slower than the for-loop\n')
('for-loop', 'faster foreach', 'loops', 'performance', '24097769', 'i prefer using for-loop instead of foreach loops for-loop is preferably faster than foreach loops when you do not have to do something to each element and can solve your problem by just using the index as follows\n')
('loops', 'strictly more powerful', 'for-loop', 'usability', '2098528', 'the class of problems you can solve with while loops is strictly more powerful than those you could have solved with the strict for-loop found in pascal\n')
('for-loop', 'easier', 'loops', 'usability', '12801051', 'secondly you will find a for-loop is easier than a do loops for implementing the logic as you don t need to keep track of loops counter manually\n')
('loops', 'faster', 'for-loop', 'performance', '6049305', 'and the results is that foreach loops is 5-6 times faster than the for-loop\n')
('loops', 'faster', 'for-loop', 'performance', '1165594', 'even if the hypothesis of the while loops being faster than the for-loop were true and it s not the loops you d had to change optimize wouldn t be the outer ones but the inner ones because those are executed more times\n')
('for-loop', 'faster foreach', 'loops', 'performance', '8630885', 'because i heard that for-loop is much faster than foreach loops\n')
('for-loop', 'more', 'loops', '', '5960350', 'loops in c++ are most basic than python the for-loop is more simpler it is based on the three expression initializer expression loops test expression and the counting expression\n')
('loops', 'wider', 'for-loop', '', '848039', 'the scope of the variable in the test of the while loops is wider than the scope of variables declared in the header of the for-loop\n')
('loops', 'slower', 'for-loop', 'performance', '18026738', 'the only browser where the while loops was slower than the for-loop was in opera\n')
('for-loop', 'more', 'loops', '', '4161467', 'i m binding a grid view inside a for-loop which executes more than once.now when loops ends the data in grid view is the data binded at the last run of for-loop i.e all previous binds in the for-loop over overwritten.i dont want this .i want new rows to be inserted at each run of the for-loop ..plz help somebody\n')
('for-loop', 'easier', 'loops', 'usability', '2242654', 'further as a for-loop it is easier to read as everything initialization loops condition expression to be executed after each iteration are all on one line\n')
('loops', 'bigger range', 'for-loop', 'memory', '14953701', 'the result amazed me in the way that as loops goes over bigger range the performance of c# decreases as compared to c..for smaller range c# shown well performance over c....but as upper range of for-loop increases the c# performance degrades as compare to c..\n')
('loops', 'more', 'for-loop', '', '25340570', 'its really strange that the same doesn t work with a while loops as is said that a while loops is more fundamental that a for-loop\n')
('for-loop', 'faster', 'loops', 'performance', '11555489', 'one place where the enhanced for-loop is faster than a naively implemented traditional loops is something like this\n')
('for-loop', 'more', 'loops', '', '23779216', 'note that the for-loop based on the string assignment a_string runs one time more than loops based on the inline assignment a_inline -- notice the last number -3.46945e-18\n')
('loops', 'clearer', 'for-loop', '', '4469925', 'really a while loops would probably have been clearer than a for-loop on reflection\n')
('for-loop', 'cleaner', 'loops', '', '5667009', 'this is a use case where a for-loop is cleaner to use than a while loops\n')
('for-loop', 'more', 'loops', '', '12515354', 'you should use a for-loop which is more convenient to loops in an arrays\n')
('loops', 'more sense', 'for-loop', '', '12983538', 'a while loops makes more sense in this situation or a for-loop without initialization\n')
('for-loop', 'better c#', 'loops', '', '14953701', 'here i started above testing with the aim that c for-loop performance will be better than c# loops but it goes exactly opposite with my understanding and gone with this question and agreed...but when i increase the upper range of for-loop the c performance goes well as compared to c#.\n')
('loops', 'faster', 'for-loop', 'performance', '9143497', 'the other advice i have is that a for-each loops is faster than a for-loop\n')
('for-loop', 'neater', 'loops', '', '229915', 'putting the whole thing in a for-loop makes it neater and ensures that the iterating isread is called each loops\n')
('loops', 'more', 'for-loop', '', '12983538', 'a while loops makes more sense in this situation or a for-loop without initialization\n')
('for-loop', 'more time', 'loops', 'performance', '19792645', 'i have an expensive for-loop that is taking more time than it should due to dynamic casting overhead inside loops\n')
('for-loop', 'more', 'loops', '', '16254536', 'also the for-loop is more readable than the while loops because it puts all loops variable manipulation in one place\n')
('for-loop', 'more readable', 'loops', 'usability', '16254536', 'also the for-loop is more readable than the while loops because it puts all loops variable manipulation in one place\n')
('for-loop', 'more', 'loops', '', '19792645', 'i have an expensive for-loop that is taking more time than it should due to dynamic casting overhead inside loops\n')
('loops', 'version slower', 'for-loop', 'performance', '19186353', 'the nested loops version is the slower of the two due to the extra the interpreter overhead of the for-loop\n')
('loops', 'faster', 'for-loop', 'performance', '2481915', 'i ve done a small experiment as will be shown below and it looks like that a while loops is faster than a for-loop in perl\n')
('for-loop', 'faster', 'loops', 'performance', '21516498', 'also the native for-loop is faster than any other jquery loops method\n')
('for-loop', 'better', 'loops', '', '25207487', 'a for-loop fits better to your requirements than a while loops\n')
('loops', 'better', 'for-loop', '', '18211884', 'usually if you re going to consume all the elements of the iterator in a single loops it is better to use the for-loop approach and it will be better using the enhanced for-loop that already uses iterator behind the scenes\n')
('for-loop', 'more control', 'loops', 'usability', '20629151', 'i think you can best use the for-loop this gives you a little bit more control over loops\n')
('for-loop', 'typically several more', 'loops', '', '24598518', 'i noticed some time ago that a for-loop typically generates several more machine instructions than a while loops\n')
('loops', 'slower', 'for-loop', 'performance', '22775039', 'the other option is to use a foreach loops which is slightly slower than a for-loop but works almost equivalently for all practical purposes\n')
('loops', 'better', 'for-loop', '', '6710601', 'in this case i found while loops is better than for-loop because if i want to achieve the same in for-loop i have to assign the value of counter to another variable\n')
('for-loop', 'astronomically slower', 'loops', 'performance', '17539310', 'in my tests i found that one of the loops i tested titled for-loop is astronomically slower than the other loops\n')
('for-loop', 'more sense', 'loops', '', '18117449', 'additionally you should reset i each time you go through loops and a for-loop makes more sense than a while loops especially if you re using c99 as i can be declared within loops\n')
('for-loop', 'less', 'loops', '', '3875160', 'they are functionally identical however it can be argued that the for-loop is less error prone because all of loops functionality is right there together\n')
('loops', 'cleaner', 'for-loop', '', '5691164', 'your loops would be cleaner as a for-loop\n')
('for-loop', 'slower', 'loops', 'performance', '6839494', 'update i made some changes to my code but was already suspecting what others here have already pointed out sure the enhanced for-loop is slower but outside of very trivial tight loops the cost should be a miniscule fraction of the cost of the logic of loops\n')
('loops', 'quicker', 'for-loop', '', '7056431', 'in theory the while loops is quicker because the for-loop looks up the length attribute of foo every time though loops but in real-world use it s going to make an immeasurably small difference\n')
('loops', 'slower', 'for-loop', 'performance', '24249571', '-in the same laptop but using the hpc cluster of my department with 30 workers the parfor loops is much much slower than the for-loop and than the parfor loops using the local cluster with 12 workers\n')
('for-loop', 'more', 'loops', '', '20060585', 'a c-style for-loop has more flexibility but ultimately you can write an equivalent loops with python s while or c s while for that matter which touches not only on the â œone obvious wayâ principle but also â œsimple is better than complexâ amongst others\n')
('loops', 'better', 'for-loop', '', '6710601', 'but is there any specific situation when while loops is better than for-loop\n')
('for-loop', 'much faster', 'loops', 'performance', '8630885', 'because i heard that for-loop is much faster than foreach loops\n')
('for-loop', 'slower', 'loops', 'performance', '10689140', 'foreach can simplify the code in a for-loop but it is a heavy object and is slower than a loops written using for.\n')
('for-loop', 'preferably faster', 'loops', 'performance', '24097769', 'i prefer using for-loop instead of foreach loops for-loop is preferably faster than foreach loops when you do not have to do something to each element and can solve your problem by just using the index as follows\n')
('for-loop', 'syntax cleaner', 'loops', '', '10190181', 'the range-based for-loop syntax is cleaner and more universal but you can t execute the code in loops for a specified range different than from begin to end\n')
('for-loop', 'more appropriate', 'loops', '', '4345604', 'a for-loop is more appropriate than a while loops in your code\n')
('loops', 'more fundamental', 'for-loop', '', '25340570', 'its really strange that the same doesn t work with a while loops as is said that a while loops is more fundamental that a for-loop\n')
('for-loop', 'more', 'loops', '', '11923223', 'on the other hand for-loop is more like counter based where you want to specify for how many times should loops happened\n')

direct2d	gdi	9
('direct2d', 'slower', 'gdi', 'performance', '4055456', 'a direct2d is slower than gdi\n')
('direct2d', 'code much slower', 'gdi', 'performance', '13281964', 'but my direct2d code is much slower than my gdi code\n')
('gdi', 'faster', 'direct2d', 'performance', '4055456', 'the thing is that gdi is still faster than direct2d if i draw to a bitmap and after it s done i bitblt the result back to the form it paints at 35ms and with the same graphics quality\n')
('direct2d', 'much faster', 'gdi', 'performance', '24042201', 'i ve read that direct2d is much faster than gdi so i figured i would give it a shot for dealing with constantly updated variables\n')
('direct2d', 'faster', 'gdi', 'performance', '24042201', 'i ve read that direct2d is much faster than gdi so i figured i would give it a shot for dealing with constantly updated variables\n')
('direct2d', 'faster', 'gdi', 'performance', '4108046', 'disable antialiasing and the performance of direct2d will be on par or faster than gdi\n')
('direct2d', 'slower', 'gdi', 'performance', '13281964', 'but my direct2d code is much slower than my gdi code\n')
('gdi', 'still faster', 'direct2d', 'performance', '4055456', 'the thing is that gdi is still faster than direct2d if i draw to a bitmap and after it s done i bitblt the result back to the form it paints at 35ms and with the same graphics quality\n')
('direct2d', 'slower pure', 'gdi', 'performance', '13904487', 'a i tried gdi-compatible direct2d using id2d1dcrendertarget+binddc but it is much slower than pure gdi\n')

xslt	xsl-fo	1
('xslt', 'more', 'xsl-fo', '', '512569', 'all in all t4 to me is more of a inside vs code-generation tool to quickly create c# or other files while xslt is more of a data-processing data-transformation tool to turn data from xml into another format typically html or pdf using xsl-fo\n')

angle	concave	1
('angle', 'bigger', 'concave', 'memory', '22340300', 'edit2 okay i just see that if the angle is bigger than 180â it s concave so i have to change the shape for be simple than a triangulation\n')

parsley	robotlegs	3
('parsley', 'more', 'robotlegs', '', '6585643', 'parsley is more robust and adds a lot more features than robotlegs which is why its been used in the world s largest flex applications\n')
('parsley', 'more features', 'robotlegs', 'usability', '6585643', 'parsley is more robust and adds a lot more features than robotlegs which is why its been used in the world s largest flex applications\n')
('parsley', 'more robust', 'robotlegs', 'reliability', '6585643', 'parsley is more robust and adds a lot more features than robotlegs which is why its been used in the world s largest flex applications\n')

dialog	popupwindow	2
('dialog', 'better', 'popupwindow', '', '13891924', 'i give up using popupwindow and use dialog instead after some tests i found dialog is far better than popupwindow there are quite a few problems with popupwindow\n')
('dialog', 'far better', 'popupwindow', '', '13891924', 'i give up using popupwindow and use dialog instead after some tests i found dialog is far better than popupwindow there are quite a few problems with popupwindow\n')

atom-editor	sublimetext	6
('atom-editor', 'better github', 'sublimetext', '', '22286530', 'atom-editor has better github support out of the box but sublimetext has a several git packages\n')
('sublimetext', 'better performance', 'atom-editor', 'performance', '25491307', 'sublimetext has better performance than atom-editor\n')
('atom-editor', 'better', 'sublimetext', '', '22286530', 'atom-editor has better github support out of the box but sublimetext has a several git packages\n')
('sublimetext', 'better', 'atom-editor', '', '25491307', 'sublimetext has better performance than atom-editor\n')
('sublimetext', 'significantly better', 'atom-editor', '', '22471391', 'though similar in ui and ux sublimetext performs significantly better than atom-editor especially in heavy lifting like working with large files complex snr or plugins that do heavy processing on files buffers\n')
('sublimetext', 'better', 'atom-editor', '', '22471391', 'though similar in ui and ux sublimetext performs significantly better than atom-editor especially in heavy lifting like working with large files complex snr or plugins that do heavy processing on files buffers\n')

opencover	partcover	1
('opencover', 'better', 'partcover', '', '6988219', 'you may also find that opencover will work better than partcover as it has 32 and 64 bit support as well as supporting .net2 and .net4 - and copes much better with target processes that spin off more processes to do the actual testing\n')

jackson	xstream	1
('jackson', 'faster', 'xstream', 'performance', '17566034', 'jackson xml module faster than xstream\n')

double-quotes	single-quotes	1
('double-quotes', 'more work', 'single-quotes', '', '17127591', 'first you can use double-quotes or q it just takes more work than single-quotes or q\n')

onload	domcontentloaded	1
('onload', 'event longer', 'domcontentloaded', '', '9078062', 'sometimes it s preferable because onload event takes longer to fire then domcontentloaded\n')

svn	collabnet	2
('svn', 'protocol much faster so', 'collabnet', 'performance', '2352784', 'however svn protocol is much faster so i suggest using collabnet svn for performance reasons\n')
('svn', 'protocol much faster', 'collabnet', 'performance', '2352784', 'however svn protocol is much faster so i suggest using collabnet svn for performance reasons\n')

m2crypto	openssl	2
('m2crypto', 'no longer', 'openssl', '', '18808106', 'm2crypto is no longer maintained and doesn t work with openssl 1.0 and newer\n')
('m2crypto', 'no longer maintained', 'openssl', '', '18808106', 'm2crypto is no longer maintained and doesn t work with openssl 1.0 and newer\n')

qplaintextedit	qtextedit	1
('qplaintextedit', 'smaller', 'qtextedit', 'memory', '11788422', 'i have tried connecting the qscrollbars but the maximum of the qplaintextedit is smaller than the qtextedit s\n')

alarmmanager	timertask	4
('alarmmanager', 'lesser battery', 'timertask', '', '12974736', 'alarmmanager consumes lesser battery power than timertask or thread\n')
('alarmmanager', 'more efficient', 'timertask', 'performance', '17065295', 'alarmmanager should also be more efficient than timertask\n')
('alarmmanager', 'much better', 'timertask', '', '17273214', 'hence the alarmmanager which runs much better than a java timertask thingy\n')
('alarmmanager', 'lesser', 'timertask', '', '12974736', 'alarmmanager consumes lesser battery power than timertask or thread\n')

padrino	ruby-on-rails	3
('padrino', 'less complex', 'ruby-on-rails', 'usability', '14831065', 'as wuliwong said sinatra and padrino are way less complex than ruby-on-rails\n')
('padrino', 'better', 'ruby-on-rails', '', '12682214', 'but i don t know anything about sinatra and padrino is the footprint and speed really that better than ruby-on-rails\n')
('padrino', 'faster', 'ruby-on-rails', 'performance', '12686116', 'sinatra and padrino are not automatically faster than ruby-on-rails\n')

javassist	cglib	6
('javassist', 'slower', 'cglib', 'performance', '9823788', 'also javassist is recognized to be slower than cglib\n')
('javassist', 'better', 'cglib', '', '9167436', 'here in so i found a lot of questions asking something similar and the answers normally said you can use cglib or asm or javassist is better than cglib or bcel is old and is dying or asm is the best because it gives x and y\n')
('javassist', 'significantly slower', 'cglib', 'performance', '21202878', 'note that javassist is significantly slower then for example cglib because it reads in class files directly instead of using reflective access in order to avoid class loading\n')
('javassist', 'slower', 'cglib', 'performance', '9823788', 'this makes for example javassist or proxetta significantly slower than cglib which simply reads the methods via the reflection api and overrides them\n')
('javassist', 'significantly slower then', 'cglib', 'performance', '21202878', 'note that javassist is significantly slower then for example cglib because it reads in class files directly instead of using reflective access in order to avoid class loading\n')
('javassist', 'way better', 'cglib', '', '9823788', 'the javadoc of javassist is way better than that of cglib\n')

networkx	igraph	1
('networkx', 'much easier', 'igraph', 'usability', '22098160', 'networkx is much easier to deal with and usually performance is good enough but for large brute force algorithms like this igraph will probably be at least an order of magnitude faster\n')

bellman-ford	floyd-warshall	1
('bellman-ford', 'faster', 'floyd-warshall', 'performance', '7265454', 'because bellman-ford runs in time o mn the overall asymptotic runtime is still o mn + n 2 log n so if m o n 2 note that this is little-o of n this approach is asymptotically faster than using floyd-warshall\n')

pdfsharp	itext	1
('pdfsharp', 'library more', 'itext', '', '8123876', 'as noted in the comment by quandary the pdfsharp library offers a more relaxed license mit compared to the commercial or agpl license offered by itext\n')

jtextcomponent	documentfilter	1
('jtextcomponent', 'documentlistener', 'documentfilter', '', '9430683', 'for listening changes into jtextcomponent is there documentlistener if you have to need control over inputed char sings whitespace chars or word s you have to implements documentfilter\n')

dir	folder	3
('folder', 'slower', 'dir', 'performance', '6112701', 'things like cmd c dir don t know why - and yes i do cmd c dir in cases i am in some kind of shared network folder with thousands of files and ls is significantly slower than dir\n')
('dir', 'more', 'folder', '', '12606175', 'any ideas how to use the command dir to more than 1 folder in one command\n')
('dir', 'less', 'folder', '', '4225772', 'calculates the size of the first 5 folder in your home dir should work on all platforms fails with an arrayindexoutofboundexception if there are less than five folder in your home dir\n')

highcharts	flot	1
('highcharts', 'more dynamic', 'flot', '', '6178094', 'highcharts is svg and as such it is much more dynamic than flot you can restyle graphs with css attach events perform animations etc..\n')

short	base	3
('short', 'worse design', 'base', '', '9740151', 'in short it s worse design to move things to the base class than it is to downcast to the specific class\n')
('short', 'worse', 'base', '', '9740151', 'in short it s worse design to move things to the base class than it is to downcast to the specific class\n')
('short', 'less', 'base', '', '10307766', 'as the condition reads a loop can not be zipped tighter if it s either too short less than five base or its ends do not match\n')

addition	exponent	1
('addition', 'clearer', 'exponent', '', '3284371', 'in addition for doing powers of two bitshifting is usually a little clearer than doing exponent though choose whatever works for you\n')

velocity	freemarker	8
('velocity', 'simpler', 'freemarker', 'usability', '463420', 'velocity is simpler than freemarker\n')
('freemarker', 'much better', 'velocity', '', '4146126', 'freemarker provides much better native whitespace handling recent velocity releases provide more interesting content controls #define #evaluate # literal block #\n')
('freemarker', 'more', 'velocity', '', '463420', 'freemarker is more powerful than velocity\n')
('freemarker', 'much better native', 'velocity', '', '4146126', 'freemarker provides much better native whitespace handling recent velocity releases provide more interesting content controls #define #evaluate # literal block #\n')
('velocity', 'worse', 'freemarker', '', '10524352', 'velocity is worse than freemarker and stringtemplate has got its own issues\n')
('freemarker', 'more powerful', 'velocity', 'usability', '463420', 'freemarker is more powerful than velocity\n')
('freemarker', 'more advanced', 'velocity', '', '3703341', 'freemarker is more advanced but a little complex as compared to apache velocity\n')
('freemarker', 'more', 'velocity', '', '3703341', 'freemarker is more advanced but a little complex as compared to apache velocity\n')

mousedown	mouseup	1
('mousedown', 'position more', 'mouseup', '', '15815658', 'something like if mousedown position is more than 10px away from mouseup position\n')

xna	libgdx	3
('xna', 'lower', 'libgdx', '', '17584717', 'xna + monogame --- monogame s performance seems only slightly lower than libgdx can build to most platforms\n')
('xna', 'more popular', 'libgdx', 'usability', '19776052', 'xna is more popular and has more tutorials then libgdx\n')
('xna', 'more', 'libgdx', '', '19776052', 'xna is more popular and has more tutorials then libgdx\n')

onsubmit	onclick	1
('onsubmit', 'more reliable', 'onclick', 'reliability', '11028384', 'you can indeed execute scripts on almost any page using content scripts that can manipulate the dom allowing you to add an onsubmit event listener to a form more reliable than onclick on a button as it is fired however the form is submitted - hitting enter\n')

jfreechart	achartengine	1
('jfreechart', 'more features', 'achartengine', 'usability', '13732689', 'android plot and other free chart solutions mentioned here doesn t support annotations the only one is afreechart which is a port of jfreechart for android i am currently using it and it is awesome and has much more features than achartengine\n')

mongoose	mongojs	1
('mongoose', 'slower', 'mongojs', 'performance', '17690970', 'in either case mongoose is going to add a tiny amount of overhead so it s likely to be technically slower than mongojs but not by any meaningful amount like it takes 5.1 seconds to insert 20k records vs 5.0 seconds\n')

web2py	django	15
('web2py', 'more lightweight', 'django', 'memory', '1250937', 'and web2py is more lightweight than django rails whatever on pretty much all counts\n')
('web2py', 'newer', 'django', '', '2795807', 'i prefer web2py because there are more conveniences built into the environment than offered by django but web2py is much newer than django and hindsight always makes it easier make new implementations better\n')
('web2py', 'more', 'django', '', '1250937', 'and web2py is more lightweight than django rails whatever on pretty much all counts\n')
('django', 'more heavy', 'web2py', 'memory', '1477841', 'to answer klochner both seems quite popular but ruby is not a language that i am familiar with and django seems more heavy and complex to me than web2py\n')
('django', 'more customizable', 'web2py', '', '4353033', 'django s admin is better and more customizable than web2py s appadmin\n')
('web2py', 'lower initial', 'django', '', '4352956', 'having said that web2py has a lower initial learning curve than django as it was specifically designed as a learning tool\n')
('web2py', 'more', 'django', '', '7913630', 'web2py has more focus on simple is better than complex but django has more focus on explicit is better than implicit\n')
('web2py', 'much newer', 'django', '', '2795807', 'i prefer web2py because there are more conveniences built into the environment than offered by django but web2py is much newer than django and hindsight always makes it easier make new implementations better\n')
('web2py', 'lower', 'django', '', '4352956', 'having said that web2py has a lower initial learning curve than django as it was specifically designed as a learning tool\n')
('web2py', 'even easier', 'django', 'usability', '5494262', 'i think you ll find that web2py is even easier to learn and use than rails and django\n')
('django', 's better', 'web2py', '', '6338747', 'django s is better web2py s appadmin is for administrators only\n')
('django', 'more', 'web2py', '', '1477841', 'to answer klochner both seems quite popular but ruby is not a language that i am familiar with and django seems more heavy and complex to me than web2py\n')
('web2py', 'gae better', 'django', '', '4566361', 'as i understand it web2py supports gae better out of the box than django\n')
('web2py', 'easier', 'django', 'usability', '196705', 'anyway the most important issue is that web2py is easier than django pylons php and rails\n')
('web2py', 'more focus', 'django', '', '7913630', 'web2py has more focus on simple is better than complex but django has more focus on explicit is better than implicit\n')

gedit	textmate	1
('gedit', 'more', 'textmate', '', '1365849', 'i tried a few ides on ubuntu and it just didn t seem right - gedit is lightweight and i actually enjoy using it more than textmate on os x\n')

uitapgesturerecognizer	uigesturerecognizer	1
('uitapgesturerecognizer', 'more', 'uigesturerecognizer', '', '10949107', 'i added the check for uitapgesturerecognizer in case your class handles more than 1 uigesturerecognizer s and you only want to remove that\n')

rdflib	jena	1
('rdflib', 'more useful', 'jena', 'usability', '23196911', 'since you tagged this with python you might find rdflib more useful than jena but the real question here should be about how to do the conversion not the library request since library requests are off topic for stack overflow\n')

text-align	width	1
('text-align', 'less', 'width', '', '9755894', 'the has text-align center so the will be centred if the size of the is less than the width of the\n')

qtkit	quicktime	1
('qtkit', 'better', 'quicktime', '', '7271789', 'you can do it with qtkit but works better in 32bit quicktime framework\n')

arrays	for-loop	33
('arrays', 'more', 'for-loop', '', '12859396', 'next i can use 3rd 4th and 5th level of arrays means more than for-loop statement will be assign\n')
('for-loop', 'faster', 'arrays', 'performance', '12418192', 'it is clear without any performance tests that native javascript for-loop is faster but there is no big difference for small arrays like 10-20 small items\n')
('arrays', 'faster', 'for-loop', 'performance', '19608875', 'i tried this code with my the big arrays it is around 10 to 20 times faster than a for-loop solution and around 200 times fast than the old code\n')
('arrays', 'slower', 'for-loop', 'performance', '14566564', 'when summing an arrays over a specific axis the dedicated arrays method array.sum ax may actually be slower than a for-loop\n')
('for-loop', 'much better', 'arrays', '', '19520802', 'notice that besides using the filter method or not even with a plain for-loop is much better for performance create a new arrays from scratch instead of mutate the current one multiple times\n')
('arrays', 'longer', 'for-loop', '', '15291406', 'the hits arrays is longer than numtotalhits so your for-loop limit should be numtotalhits instead of hits.length\n')
('arrays', 'method faster', 'for-loop', 'performance', '18444065', 'when you know both objects are arrays method is a faster way to check equality than for-loop\n')
('arrays', 'better speed', 'for-loop', 'performance', '10511218', 'use a for-each loops to go through a range it s not as fast as using a variant arrays but keeps things simple and offers better speed than a for-loop\n')
('for-loop', 'bigger', 'arrays', 'memory', '18884550', 'it turns out i had a hard coded maximum index in my for-loop which was bigger than the arrays i was trying to assign to\n')
('arrays', 'longer', 'for-loop', '', '13821093', 'note that this is one of those cases where matrix division of large arrays takes longer than a for-loop\n')
('arrays', 'faster', 'for-loop', 'performance', '13200688', 'iterating pair-wise you d normally do something like but iterating over an arrays is faster than using a c-style for-loop\n')
('for-loop', 'better', 'arrays', '', '21640491', 'edit using an enhanced for-loop is a lot better than using arrays\n')
('for-loop', 'better', 'arrays', '', '23501241', 'the questions should i use for-loop or is it better to do it recursively next insert will be called after previous is done should i check if saved.length datalength and then return the arrays or is there some better way how to do it\n')
('for-loop', 'nothing more', 'arrays', '', '9251272', 'looping with a for-loop is nothing more than a basic iteration of an arrays using a for-loop\n')
('for-loop', 'quicker', 'arrays', '', '21505023', 'to my knowledge and research so far - javascript s native for-loop is quicker than arrays map for iterating through the arrays\n')
('arrays', 'more', 'for-loop', '', '16164311', 'the longer the arrays gets the more iterations your for-loop will need\n')
('for-loop', 'less', 'arrays', '', '8345962', 'when i try to access it with a for-loop where its index is less than the arrays length i get the following error message typeerror function object is unsubscriptable\n')
('for-loop', 'smaller', 'arrays', 'memory', '8546694', 'to use this in a loops you can write a simple for-loop which always checks if the index stil is smaller than the arrays length\n')
('for-loop', 'more', 'arrays', '', '21524225', 'im going to have a second for-loop that makes more arrays and names these arrays as the strings from my previous arrays\n')
('arrays', 'better', 'for-loop', '', '8617791', 'but for the arrays it is better to use for-loop as shown by alnitak than for-in\n')
('arrays', 'more efficient', 'for-loop', 'performance', '6676226', 'the only way to copy arrays that is more efficient than for-loop coding is system.arraycopy\n')
('for-loop', 'less', 'arrays', '', '9698965', 'but the for-loop is not reading writing the last part of the parent file which is less than the arrays size\n')
('for-loop', 'ndx less', 'arrays', '', '13575677', 'on the last iteration of the outer for-loop ndx is one less than array.length so when you call arrays ndx+1 that is equivalent to arrays array.length which out of bounds since arrays start indexing at 0\n')
('arrays', 'more iterations', 'for-loop', '', '16164311', 'the longer the arrays gets the more iterations your for-loop will need\n')
('for-loop', 'worse', 'arrays', '', '12296053', 'so then i think to go with that approach i would end up with a for-loop and loads of add calls but surely that is even worse than the arrays copy isn t it\n')
('arrays', 'more', 'for-loop', '', '6676226', 'the only way to copy arrays that is more efficient than for-loop coding is system.arraycopy\n')
('for-loop', 'probably closer as', 'arrays', '', '16072349', 'try catch inside for-loop is probably closer as long as you don t mind the unassigned values left in the arrays\n')
('arrays', 'faster', 'for-loop', 'performance', '2963102', 'it returns a byte arrays of all the pixels which can be iterated much faster than a for-loop with a call to getpixel inside nested inside another for-loop\n')
('arrays', 'usually more', 'for-loop', '', '11852754', 'an arrays usually offers more information for alias analysis and after some optimizations the same code will be generated anyway search for-loop strength reduction if curious\n')
('for-loop', 'probably closer', 'arrays', '', '16072349', 'try catch inside for-loop is probably closer as long as you don t mind the unassigned values left in the arrays\n')
('arrays', 'method faster way', 'for-loop', 'performance', '18444065', 'when you know both objects are arrays method is a faster way to check equality than for-loop\n')
('arrays', 'better', 'for-loop', '', '10956586', 'but you will have loops the outer arrays in order to get it to work which would be better done with a for-loop so you reference both at once\n')
('arrays', 'usually more information', 'for-loop', '', '11852754', 'an arrays usually offers more information for alias analysis and after some optimizations the same code will be generated anyway search for-loop strength reduction if curious\n')

uiviewcontroller	uinavigationcontroller	4
('uiviewcontroller', 'smaller', 'uinavigationcontroller', 'memory', '7813178', 'the framespace for the uiviewcontroller becomes smaller because uinavigationcontroller manipulates the view by adding a uinavigationbar which is 44.0f in size\n')
('uinavigationcontroller', 'better rotations', 'uiviewcontroller', '', '13298254', 'the uinavigationcontroller class seems to handle better rotations than uiviewcontroller\n')
('uinavigationcontroller', 'more', 'uiviewcontroller', '', '16219524', 'the uinavigationcontroller is more of a behind-the-scenes organizer for holding and displaying other uiviewcontroller s\n')
('uinavigationcontroller', 'more', 'uiviewcontroller', '', '9389913', 'the app uses a uinavigationcontroller that never has more than 1 uiviewcontroller on it s stack\n')

addition	multiplying	7
('addition', 'much faster', 'multiplying', 'performance', '6831617', 'you can try x1 c1 and then x1 + c1 but i don t think the addition is much faster than multiplying on todays cpus\n')
('multiplying', 'slower', 'addition', 'performance', '7464279', 'we don t actually multiplying it s slower than simple addition and as you can see we destroy temporary register t0 but don t touch s0 s1\n')
('multiplying', 'slower', 'addition', 'performance', '20209624', 'if multiplying is slower than addition then case 2 is slightly slower than case 1\n')
('multiplying', 'deeper', 'addition', '', '23555455', 'so we must show that a gradeschool multiplying circuit is o log n times deeper than an addition circuit\n')
('multiplying', 'more complex', 'addition', 'usability', '23188645', 'the boilerplate code would multiplying rapidly when the express get more complex than addition of two terms\n')
('multiplying', 'slower simple', 'addition', 'performance', '7464279', 'we don t actually multiplying it s slower than simple addition and as you can see we destroy temporary register t0 but don t touch s0 s1\n')
('addition', 'faster', 'multiplying', 'performance', '6831617', 'you can try x1 c1 and then x1 + c1 but i don t think the addition is much faster than multiplying on todays cpus\n')

free	calloc	1
('free', 'harder', 'calloc', '', '17617309', 'malloc free is harder because thereâ s also calloc and realloc\n')

r-tree	quadtree	8
('quadtree', 'better perfomance', 'r-tree', '', '18145430', 'you can also try a quadtree it has some better perfomance over a r-tree\n')
('quadtree', 'simpler data', 'r-tree', 'usability', '20115674', 'a quadtree is a simpler data structure than the r-tree\n')
('quadtree', 'some better', 'r-tree', '', '18145430', 'you can also try a quadtree it has some better perfomance over a r-tree\n')
('r-tree', 'more specifically', 'quadtree', '', '12715054', 'on the other hand the wikipedia article on r-tree seems more specifically targeted towards mapping than the k-d tree or quadtree\n')
('quadtree', 'more', 'r-tree', '', '26519960', 'i use quadtree more than r-tree and find them super flexible\n')
('quadtree', 'simpler', 'r-tree', 'usability', '20115674', 'a quadtree is a simpler data structure than the r-tree\n')
('quadtree', 'some better perfomance', 'r-tree', '', '18145430', 'you can also try a quadtree it has some better perfomance over a r-tree\n')
('r-tree', 'more', 'quadtree', '', '12715054', 'on the other hand the wikipedia article on r-tree seems more specifically targeted towards mapping than the k-d tree or quadtree\n')

packets	multicast	1
('packets', 'better', 'multicast', '', '22075284', 'a third possibility would be to send out some form of discovery packets either by broadcast or better by multicast udp\n')

cocos2d-x	corona	2
('cocos2d-x', 'better', 'corona', '', '10185108', 'i would recommend cocos2d-x as it is in my opinion equally or even better than corona and it is free\n')
('corona', 'easier', 'cocos2d-x', 'usability', '11746599', 'the consensus seems to be that corona is easier to use but that cocos2d-x has the advantages that come from being open source easy to customize merge with other code community etc\n')

wmv	flv	1
('wmv', 'easier', 'flv', 'usability', '2562', 'i found the production of wmv much better and easier than flv because all windows flv encoders i tried are not really good and stable whereas pretty much every tool can natively output wmv\n')

scintilla	avalonedit	1
('scintilla', 'better', 'avalonedit', '', '8711597', 'personally i felt that scintilla performs better than avalonedit\n')

enumerate	xrange	8
('enumerate', 'slower', 'xrange', 'performance', '1352497', 'why is enumerate slower than xrange + lst i\n')
('enumerate', 'also more', 'xrange', '', '7975182', 'enumerate is also more appropriate than xrange\n')
('enumerate', 'faster', 'xrange', 'performance', '1352521', 'if you measure properly you ll see there s essentially no difference enumerate is microscopically faster than xrange in this example but well within noise\n')
('enumerate', 'more pythonic', 'xrange', '', '9594107', 'enumerate is more pythonic but xrange is fine here too\n')
('enumerate', 'more', 'xrange', '', '9594107', 'enumerate is more pythonic but xrange is fine here too\n')
('enumerate', 'more appropriate', 'xrange', '', '7975182', 'enumerate is also more appropriate than xrange\n')
('enumerate', 'microscopically faster', 'xrange', 'performance', '1352521', 'if you measure properly you ll see there s essentially no difference enumerate is microscopically faster than xrange in this example but well within noise\n')
('enumerate', 'also more appropriate', 'xrange', '', '7975182', 'enumerate is also more appropriate than xrange\n')

grouping	sorting	3
('grouping', 'looser constraints', 'sorting', 'usability', '16425985', 'grouping has looser constraints than sorting so in theory it could be marginally faster than sorting but unless you re dealing with a lot of data you re unlikely to see a speed difference\n')
('grouping', 'simpler', 'sorting', 'usability', '10211855', 'instead knowing that we want to grouping by these columns we can make the application code to do so simpler by sorting by these fields\n')
('grouping', 'looser', 'sorting', '', '16425985', 'grouping has looser constraints than sorting so in theory it could be marginally faster than sorting but unless you re dealing with a lot of data you re unlikely to see a speed difference\n')

adfs	acs	3
('adfs', 'more', 'acs', '', '4674246', 'it seems possible to have adfs as the ip-sts send an assertion to more than 1 acs url based upon the acs url or acs index in the authnrequest as long as they are listed in the relaying party trust endpoints list\n')
('adfs', 'more', 'acs', '', '5568668', 'adfs has more powerful claims transformation capabilities than acs\n')
('adfs', 'more powerful', 'acs', 'usability', '5568668', 'adfs has more powerful claims transformation capabilities than acs\n')

tapestry	wicket	1
('tapestry', 'more powerful', 'wicket', 'usability', '2556364', 'in my opinion this is a more elegant solution than jsf and i think tapestry s ioc container makes it more powerful than wicket\n')

modulo	addition	9
('modulo', 'slower integer', 'addition', 'performance', '898763', 'integer multiplication division and modulo are much slower than integer addition and subtraction\n')
('modulo', 'higher precedence', 'addition', '', '15075753', 'modulo can also cause a divide-by-zero and it has a higher precedence than addition\n')
('modulo', 'higher operator', 'addition', '', '23395245', 'the modulo has a higher operator precedence than the addition operator therefore it will happen before the addition\n')
('modulo', 'higher precedence', 'addition', '', '25297793', 'and keep in mind that the modulo has a higher precedence than addition and subtraction\n')
('modulo', 'higher', 'addition', '', '25297793', 'and keep in mind that the modulo has a higher precedence than addition and subtraction\n')
('modulo', 'weaker', 'addition', '', '16363111', 'is the modulo really weaker than the addition\n')
('addition', 'much cheaper', 'modulo', '', '23462464', 'the addition is much cheaper than other operations like modulo and division and array access\n')
('modulo', 'slower', 'addition', 'performance', '8132236', 'division and modulo are indeed costly hardware operations whatever you do this is more related to hardware architecture than to languages or compilers perhaps ten times slower than addition\n')
('modulo', 'higher', 'addition', '', '23395245', 'the modulo has a higher operator precedence than the addition operator therefore it will happen before the addition\n')

safari	opera	2
('safari', 'slower', 'opera', 'performance', '8993541', 'incidentally the scrolling on the windows version of safari is fine albeit a little slower than ie opera and firefox\n')
('opera', 'smaller', 'safari', 'memory', '13137862', 'works in google-chrome firefox a bit weirdish blur effect on hover opera ends look smaller safari ends look smaller\n')

daemons	systemd	1
('daemons', 'safer', 'systemd', 'security', '2277474', 'use daemons mode and then simply touching the wsgi script file when an atomic set of changes have been completed isn t that hard and certainly safer than a systemd which restarts arbitrarily when it detects any single change\n')

gson	xstream	1
('gson', 'more', 'xstream', '', '2788981', 'gson is more about json-based persistence in the vein of xstream which can do json too and sounds a bit too heavyweight for just an applet\n')

nsscanner	nsnumberformatter	1
('nsscanner', 'easier', 'nsnumberformatter', 'usability', '4092589', 'i was originally using nsscanner because it was easier than nsnumberformatter to use but i ran into the same problem it doesn t parse the entire string just the first number in the string\n')

code128	code39	1
('code128', 'better', 'code39', '', '1243627', 'data density in code128 is better than code39 - since it gets mentioned that often in other replies\n')

multitasking	backgrounding	2
('multitasking', 'really more fast', 'backgrounding', '', '3543267', 'btw multitasking is really more fast switching than backgrounding in ios.\n')
('multitasking', 'really more', 'backgrounding', '', '3543267', 'btw multitasking is really more fast switching than backgrounding in ios.\n')

onclick	onchange	1
('onclick', 'more reliable', 'onchange', 'reliability', '6817388', 'here s something that should get you started - this is all based on the assumption that there are only 3 checkboxes on your whole page and that you re interested in all of them - you ll want to make a method like this respond to your checkbox elements onclick events - i ve found that to be more reliable than onchange\n')

lxml	elementtree	5
('lxml', 'faster', 'elementtree', 'performance', '20621248', 'lxml is faster than elementtree but i ve never found an application where the speed boost paid for the hassles of distribution\n')
('lxml', 'better', 'elementtree', '', '1563301', 'lxml -- 100x better than elementtree\n')
('lxml', 'faster more', 'elementtree', 'performance', '7949706', 'but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library\n')
('lxml', 'faster more effective', 'elementtree', 'performance', '7949706', 'but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library\n')
('lxml', 'faster', 'elementtree', 'performance', '7949706', 'but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library\n')

prolog	lisp	1
('prolog', 'easier', 'lisp', 'usability', '406426', 'i also checked prolog and it seems a pretty cool language easy to do relations between data and easier than lisp but i d like to hear what you think\n')

pypy	cpython	45
('pypy', 'higher', 'cpython', '', '7541324', 'pypy has a higher recursion limit than cpython normally\n')
('pypy', 'slower', 'cpython', 'performance', '18958181', 'long-term evidence is showing that pypy runs certain python codes slower than cpython and this drawback seems to be rooted very deeply in pypy\n')
('pypy', 'faster', 'cpython', 'performance', '3163538', 'for python there is a pypy project which it includes jit making possible the code to run faster than in cpython in many cases\n')
('pypy', 'better', 'cpython', '', '18958181', 'if pypy succeeds to be better than cpython in general which is questionable the main weakness affecting its wider adoption will be its compatibility with cpython\n')
('pypy', 'higher recursion', 'cpython', '', '7541324', 'pypy has a higher recursion limit than cpython normally\n')
('pypy', 'slower', 'cpython', 'performance', '26515134', 'i haven t tried comparing the two but this pypy bug seems to suggest that multiprocessing in pypy is slower than in cpython\n')
('pypy', 'slower', 'cpython', 'performance', '25681097', 'as mentioned by ifloop this would be running a cpython c extension module on pypy which often works not always but is slower than on cpython\n')
('pypy', 'more memory', 'cpython', 'memory', '18958181', 'secondly the current version of pypy consumes much more memory than cpython in a rather large set of cases\n')
('pypy', 'now faster', 'cpython', 'performance', '8452592', 'pypy is now faster than cpython in most cases\n')
('pypy', 'faster', 'cpython', 'performance', '8797731', 'so how is it possible for pypy to be faster than cpython also becomes fairly obvious\n')
('pypy', 'faster', 'cpython', 'performance', '8452592', 'pypy is now faster than cpython in most cases\n')
('pypy', 'faster', 'cpython', 'performance', '25713282', 'note that there are plenty of python implementations other than cpython out there - for loopy code pypy tends to be much faster than cpython\n')
('pypy', 'currently more', 'cpython', '', '9934528', 'pypy is currently more than 5x faster than cpython on average\n')
('pypy', 'smaller', 'cpython', 'memory', '8675877', 'i know many of pypy s data structures are actually smaller than cpython s but again that has nothing to do with the jit\n')
('pypy', 'faster', 'cpython', 'performance', '5318157', 'pypy s jit can make python code execute much faster than cpython\n')
('pypy', 'faster', 'cpython', 'performance', '18949049', 'that site does not claim pypy is 6.3 times faster than cpython\n')
('pypy', 'faster', 'cpython', 'performance', '619544', 'part of the compiler toolchain includes an experimental jit generator now in its fifth incarnation and starting to work really well - the goal is for a jited pypy to run much faster than cpython\n')
('pypy', 'faster', 'cpython', 'performance', '2703428', 'just keep in mind most of the time c is faster than python but then again most of the time pypy is faster than cpython\n')
('pypy', 'faster', 'cpython', 'performance', '6726347', 'you could try running it in pypy - for some cases it can be significantly faster than cpython\n')
('pypy', 'faster', 'cpython', 'performance', '7991345', 'i presume it s why is pypy faster than cpython some of the time\n')
('pypy', 'faster', 'cpython', 'performance', '17483632', 'however consider that pypy might do the linear search 100 times faster than cpython then a few times might be dozens\n')
('pypy', 'much more', 'cpython', '', '18958181', 'secondly the current version of pypy consumes much more memory than cpython in a rather large set of cases\n')
('cpython', 'more', 'pypy', '', '12867428', 'cpython runs on more architectures than pypy and has been successfully adapted to run in embedded architectures in ways that may be impractical for pypy\n')
('cpython', 'more architectures', 'pypy', '', '12867428', 'cpython runs on more architectures than pypy and has been successfully adapted to run in embedded architectures in ways that may be impractical for pypy\n')
('pypy', 'more', 'cpython', '', '7067001', 'profiling is known to slow pypy a lot more than cpython\n')
('pypy', 'faster', 'cpython', 'performance', '6636272', 'pypy compiled with jit is almost always faster than cpython frequently by a large margin\n')
('pypy', 'generally faster', 'cpython', 'performance', '7529473', 'i saw that pypy is generally faster than cpython\n')
('pypy', 'less memory', 'cpython', 'memory', '5495318', 'when people talk about pypy using less memory than cpython this is a major part of what they re talking about\n')
('pypy', 'faster', 'cpython', 'performance', '19998762', 'so at this point in time pypy is just over 9 times faster than cpython in this micro benchmark\n')
('pypy', 'faster', 'cpython', 'performance', '21270502', 'but for a really useful explanation you d have to tell us exactly which database and library you re using and which python versionâ cpython 3.3.2 s csv module seems to be a lot faster than cpython 2.7.5 s and pypy 2.1 2.7.2 seems to be faster than cpython 2.7.5 as well but then either one also might run your code faster tooâ and so on\n')
('cpython', 'faster', 'pypy', 'performance', '5843950', 'cpython is faster than pypy on the two tests slowspitfire and waf\n')
('pypy', 'supposedly faster', 'cpython', 'performance', '14294643', 'pypy is supposedly faster than cpython while gevent is based on co-routines and greenlets which supposedly makes for a faster web server\n')
('pypy', 'faster', 'cpython', 'performance', '11125957', 'i finally ran it through pypy and was delighted to discover that when the lists got really deep pypy was running significantly faster than cpython\n')
('pypy', 'faster', 'cpython', 'performance', '14024189', 'if that isn t sufficient a lot of standard python code can be run on the pypy implementation which generally faster than the cpython implementation\n')
('pypy', 'faster', 'cpython', 'performance', '7529473', 'i saw that pypy is generally faster than cpython\n')
('pypy', 'faster', 'cpython', 'performance', '14294643', 'pypy is supposedly faster than cpython while gevent is based on co-routines and greenlets which supposedly makes for a faster web server\n')
('pypy', 'faster', 'cpython', 'performance', '25363585', 'unfortunately as martijn pieters noted there are no accepted solution for python 3.x and only one for python 2.x and according to the amount of memory spent for solving it numerix could have used psyco the library on which pypy is based much faster than cpython\n')
('pypy', 'faster', 'cpython', 'performance', '18047406', 'i ve tried using pypy because i ve heard its faster than the cpython interpreter but still no good\n')
('pypy', 'faster', 'cpython', 'performance', '10727166', 'you might want to try running your trainer under pypy if you aren t already -- it s significantly faster than cpython for some workloads\n')
('pypy', 'better', 'cpython', '', '5923232', 'the waf benchmark has less of a pronounced difference in performance and i d guess that the answer would be more complicated some factors pypy does better some factors cpython does better and overall cpython comes out slightly ahead\n')
('pypy', 'less memory', 'cpython', 'memory', '8675877', 'if the dominant memory usage is program data structures then i wouldn t be at all surprised to find pypy using significantly less memory than cpython whether or not the jit was enabled\n')
('pypy', 'much more memory', 'cpython', 'memory', '18958181', 'secondly the current version of pypy consumes much more memory than cpython in a rather large set of cases\n')
('pypy', 'more secure', 'cpython', '', '10588174', 'edit again one completely different approach would be to use pypy s sandboxing mechanism which should be much more secure than cpython plus a sandboxing module\n')
('pypy', 'better', 'cpython', '', '12575001', 'now there are some implementations like pypy rpython which run a static-typing phase and should favor much better than cpython here\n')
('pypy', 'faster', 'cpython', 'performance', '5843950', 'judging from the benchmarks posted on the pypy speed center it appears as if pypy is faster than cpython for all but two of the tests presented\n')

stemming	fuzzy	2
('stemming', 'better', 'fuzzy', '', '15522125', 'stemming gives better performance than fuzzy search because it is done when indexing and the actual search can be performed as exact match\n')
('stemming', 'better performance', 'fuzzy', 'performance', '15522125', 'stemming gives better performance than fuzzy search because it is done when indexing and the actual search can be performed as exact match\n')

switching	screens	8
('switching', 'better compatability', 'screens', '', '8791721', 'switching to 2.2 framework which has better compatability with screens resolutions and densities\n')
('switching', 'taller', 'screens', '', '3909833', 'however when i switching to landscape mode the listview is taller than the screens\n')
('switching', 'no longer', 'screens', '', '11488206', 'at this point there is nothing i can do since the switching is no longer there... the external screens is just a blank screens for the sake of the exercise\n')
('switching', 'larger', 'screens', 'memory', '5442712', 'i ve already built a view that can take a drawable can use focused pinch-zoom and drag can auto-scale images can switching images dynamically and takes images larger than the screens\n')
('switching', 'larger', 'screens', 'memory', '14789361', 'i am using view flipper to show bunch on images like a slider where i implemented the functionality of swipe left and right to switching images now some of my images are larger than the screens size in terms of height are getting hidden\n')
('screens', 'smaller', 'switching', 'memory', '9591286', 'but when the screens is smaller than 900px we switching from fixed to liquid via media query switching to a liquid width will allow our images to scale down our text to wrap and a whole bunch of other great things\n')
('switching', 'bigger', 'screens', 'memory', '1959842', 'when the switching gets bigger than a couple of screens full split it into functions that handle each state using a state table to look up the function directly\n')
('switching', 'bigger', 'screens', 'memory', '19079736', 'the point of such an architecture is because i have news with some text between which i want to be able to switching with paging effect but the news text can be bigger than the screens\n')

heapsort	quicksort	32
('heapsort', 'way quicker', 'quicksort', '', '7519297', 'after several tests i found out that my heapsort is way quicker than quicksort i think it should be the other way around my selection sort is also faster than insertion sort\n')
('quicksort', 'more efficient', 'heapsort', 'performance', '771892', 'average asymptotic order of quicksort is o nlogn and it s usually more efficient than heapsort due to smaller constants tighter loops\n')
('heapsort', 'quicker', 'quicksort', '', '7519297', 'after several tests i found out that my heapsort is way quicker than quicksort i think it should be the other way around my selection sort is also faster than insertion sort\n')
('quicksort', 'lower', 'heapsort', '', '18454981', 'the difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsort\n')
('quicksort', 'actually worse', 'heapsort', '', '4292700', 'worst case for quicksort is actually worse than heapsort and mergesort but quicksort is faster on average\n')
('quicksort', 'better constant', 'heapsort', '', '18450862', 'why it is said quicksort has better constant factor than heapsort and therefore quicksort is better than heapsort in average\n')
('heapsort', 'faster', 'quicksort', 'performance', '11712414', 'in their respective worst cases heapsort is faster than quicksort\n')
('heapsort', 'smaller sets', 'quicksort', 'memory', '285023', 'i was just going to say radix sort however that could be a bit above what you were looking to implement introsort is generally the accepted sorting solution for data it s a variation of quicksort that switches to heapsort when it reaches smaller sets as it s faster on smaller sets than quicksort\n')
('quicksort', 'worse', 'heapsort', '', '9157094', 'in theory insertion sort and quicksort are worse than heapsort\n')
('quicksort', 'usually faster', 'heapsort', 'performance', '941325', 'in practice however quicksort is usually faster then heapsort\n')
('quicksort', 'faster', 'heapsort', 'performance', '107883', 'for example quicksort average cost t n.log n and heapsort average cost t n.log n are both sorting algorithms with the same average cost - yet quicksort is typically much faster than heapsort\n')
('heapsort', 'better', 'quicksort', '', '21580093', 'it is a variant of heapsort which is particularly suitable for the sorting of very large amounts of data if a relatively high cost per compare operation is needed and on average better than quicksort\n')
('quicksort', 'much faster', 'heapsort', 'performance', '18454981', 'the difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsort\n')
('heapsort', 'better big-o', 'quicksort', '', '6781282', 'heapsort has a better big-o than say quicksort yet quicksort performs much better in practice\n')
('heapsort', 'slower', 'quicksort', 'performance', '23986246', 'quicksort time complexity is typically o n log n but it s worst case is o n 2 which is avoided with the switch to heapsort since heapsort is always o n log n but slower than quicksort so it s only used to avoid o n 2\n')
('heapsort', 'significantly slower', 'quicksort', 'performance', '70423', 'but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average\n')
('heapsort', 'faster', 'quicksort', 'performance', '7532292', 'when you say something like heapsort should be faster than quicksort what makes you say that\n')
('heapsort', 'better choice', 'quicksort', '', '18454981', 'in short - if all we care about are comparisons heapsort is a better choice than quicksort\n')
('quicksort', 'worse', 'heapsort', '', '4292700', 'worst case for quicksort is actually worse than heapsort and mergesort but quicksort is faster on average\n')
('quicksort', 'better', 'heapsort', '', '18450862', 'why it is said quicksort has better constant factor than heapsort and therefore quicksort is better than heapsort in average\n')
('heapsort', 'slower', 'quicksort', 'performance', '70423', 'but there are many citations of real world tests which show that heapsort is significantly slower than quicksort on average\n')
('heapsort', 'slower', 'quicksort', 'performance', '22888581', 'in the event that the quicksort starts to degenerate it uses heapsort which is o n log n worst-case but slightly slower than quicksort on average to guarantee o n log n worst-case runtimes\n')
('heapsort', 'faster', 'quicksort', 'performance', '3330132', 'so for instance heapsort is faster than quicksort in the worst case but slower in the average case\n')
('quicksort', 'usually faster then', 'heapsort', 'performance', '941325', 'in practice however quicksort is usually faster then heapsort\n')
('heapsort', 'better', 'quicksort', '', '6781282', 'heapsort has a better big-o than say quicksort yet quicksort performs much better in practice\n')
('quicksort', 'worse', 'heapsort', '', '15064866', 'in theory quicksort is worse than heapsort\n')
('quicksort', 'faster', 'heapsort', 'performance', '18454981', 'the difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsort\n')
('heapsort', 'better', 'quicksort', '', '18454981', 'in short - if all we care about are comparisons heapsort is a better choice than quicksort\n')
('quicksort', 'simpler', 'heapsort', 'usability', '941325', 'each iteration in quicksort is a lot simpler than heapsort\n')
('heapsort', 'faster', 'quicksort', 'performance', '4775203', 'if i do heapsort i can create the stack while i m sorting but would this be faster than a quicksort and then build the stack afterwords\n')
('quicksort', 'more comparisons', 'heapsort', '', '18454981', 'you can indeed show that on average quicksort will do more comparisons than heapsort roughly 1.44 n log 2 n for quicksort versus n log 2 n versus heapsort\n')
('quicksort', 'worse', 'heapsort', '', '1853219', 'however quicksort s worst-case performance is significantly worse than heapsort s is\n')

matrix	factors	7
('matrix', 'more', 'factors', '', '23217722', 'in the code below i use block multiplication to speed up your code for a 1024x1204 matrix by more than a factors of ten 7.1 s with old code and 0.6s with new using only a single thread without using sse avx\n')
('factors', 'more', 'matrix', '', '11123968', 'eta to answer your question in more general terms let s say we had the number of subjects and levels set up in advance increasing the number of factors is more complicated unless i m mistaken because then it would no longer be a two-dimensional matrix\n')
('matrix', 'worse', 'factors', '', '9356573', 'however it still performs worse by initially a factors of 3 but as the matrix size increases asymptotically worse by a factors of exactly 2\n')
('matrix', 'lower triangular', 'factors', '', '12901850', 'finally note that by default ichol references the lower triangle of the input matrix and returns a lower triangular factors\n')
('matrix', 'lower', 'factors', '', '12901850', 'finally note that by default ichol references the lower triangle of the input matrix and returns a lower triangular factors\n')
('factors', 'more complicated', 'matrix', 'usability', '11123968', 'eta to answer your question in more general terms let s say we had the number of subjects and levels set up in advance increasing the number of factors is more complicated unless i m mistaken because then it would no longer be a two-dimensional matrix\n')
('matrix', 'size asymptotically worse', 'factors', 'memory', '9356573', 'however it still performs worse by initially a factors of 3 but as the matrix size increases asymptotically worse by a factors of exactly 2\n')

ecj	javac	5
('javac', 'more cpu', 'ecj', '', '20068641', 'to recap i want to know why a javac compilation utilizes so much more cpu than ecj\n')
('ecj', 'better', 'javac', '', '14186109', 'however i think that ecj is even better than javac my opinion .\n')
('ecj', 'much smarter tool', 'javac', '', '15169046', 'eclipse compiler for java jdt ecj is much smarter tool than actual javac\n')
('ecj', 'even better', 'javac', '', '14186109', 'however i think that ecj is even better than javac my opinion .\n')
('ecj', 'much smarter', 'javac', '', '15169046', 'eclipse compiler for java jdt ecj is much smarter tool than actual javac\n')

submit	submission	3
('submit', 'more', 'submission', '', '15577279', 'so i have a form that submit to a database and i want to prevent more than one submission if the user clicks the submit button more than once...with a little research this seems easily enough done however none of the solutions i found worked for me as i am using the jquery validationengine plugin to validate the form client side\n')
('submit', 'better', 'submission', '', '25568874', 'you should treat submit as what happens after you ve done any pre-processing so binding to click events then conditionally raising the submit is better than always submission but conditionally stopping the submit\n')
('submit', 'better always', 'submission', '', '25568874', 'you should treat submit as what happens after you ve done any pre-processing so binding to click events then conditionally raising the submit is better than always submission but conditionally stopping the submit\n')

bootcamp	vmware	1
('bootcamp', 'faster', 'vmware', 'performance', '9422814', 'i ve found that bootcamp was slightly faster than vmware non bootcamp image but i still use vmware the majority of the time because i like using the host os for things like mail chat browsing\n')

subtraction	add	4
('subtraction', 'assignment lower', 'add', '', '25073892', 'addition subtraction assignment has lower procedure than simply add operation\n')
('subtraction', 'lower procedure simply', 'add', '', '25073892', 'addition subtraction assignment has lower procedure than simply add operation\n')
('subtraction', 'assignment lower procedure', 'add', '', '25073892', 'addition subtraction assignment has lower procedure than simply add operation\n')
('subtraction', 'worse', 'add', '', '16841814', 'addition and subtraction is worse as these have to be done in sequence of two operations and the second operation requires the first to have completed - this is not the case if the compiler is just producing two add operations on independent data\n')

audiorecord	mediarecorder	2
('audiorecord', 'lower', 'mediarecorder', '', '4059119', 'this class leverages audiorecord which is a lower level approach to using mediarecorder\n')
('audiorecord', 'lower level', 'mediarecorder', '', '4059119', 'this class leverages audiorecord which is a lower level approach to using mediarecorder\n')

unsigned	short	4
('short', 'slower', 'unsigned', 'performance', '4996740', 'btw on some processors unsigned short is much slower than unsigned int because the c standard requires that operations on unsigned types wrap\n')
('short', 'much slower', 'unsigned', 'performance', '4996740', 'btw on some processors unsigned short is much slower than unsigned int because the c standard requires that operations on unsigned types wrap\n')
('short', 'smaller', 'unsigned', 'memory', '19336046', 'as unsigned short int is in some implementations smaller than unsigned int\n')
('unsigned', 'bigger', 'short', 'memory', '4337684', 'an unsigned char is an unsigned value which is typically smaller than and is guaranteed not to be bigger than a short\n')

jqgrid	datatables	4
('datatables', 'better', 'jqgrid', '', '7798213', 'datatables has better customizations as far as clientside bells and whistles where as jqgrid is a little harder to make look as pretty but can do some pretty good serverside interaction from what i understand\n')
('jqgrid', 'better', 'datatables', '', '4361920', 'if you don t have someone around to help with jqgrid you are better off with datatables\n')
('datatables', 'better customizations', 'jqgrid', '', '7798213', 'datatables has better customizations as far as clientside bells and whistles where as jqgrid is a little harder to make look as pretty but can do some pretty good serverside interaction from what i understand\n')
('datatables', 'better', 'jqgrid', '', '15838894', 'it turns out jquery datatables is better suited for customisation and we have adopted this instead of using jqgrid\n')

imagick	gmagick	5
('gmagick', 'newer', 'imagick', '', '8643574', 'gmagick is newer version of imagick with more set of features it is less resource intensive and fast but the problem is there is very few discussion about this wonderful tool on web i recently came across this on\n')
('gmagick', 'better', 'imagick', '', '13630798', 'update graphicsmagick is faster than imagick doesn t means gmagick is better than imagick\n')
('imagick', 'more', 'gmagick', '', '8642900', 'imagick is more resource hungry than gmagick but when i tried to use gmagick it is not working properly\n')
('gmagick', 'newer version', 'imagick', '', '8643574', 'gmagick is newer version of imagick with more set of features it is less resource intensive and fast but the problem is there is very few discussion about this wonderful tool on web i recently came across this on\n')
('imagick', 'more resource', 'gmagick', '', '8642900', 'imagick is more resource hungry than gmagick but when i tried to use gmagick it is not working properly\n')

extjs	gxt	1
('extjs', 'more time', 'gxt', 'performance', '1034539', 'i have worked pretty heavily with both flavors of the gwt extjs libraries though i ve spent more time with gxt recently\n')

timsort	mergesort	1
('timsort', 'more complex algorithm', 'mergesort', 'usability', '10179057', 'timsort is used by python and java for their sort methods and is rather supernaturally fast but it s a more complex algorithm than mergesort which matters if you re working in something like c - so if you just need something that works pretty well and is simple go with mergesort\n')

zlib	libpng	1
('zlib', 'worse', 'libpng', '', '10644164', 'several things i found in the cocos2d forums lead me to believe it s an issue with the zlib implementation on ios but i ve tried using both stb_image and lodepng to avoid zlib and those libraries actually performed even worse than libpng\n')

tcmalloc	glibc	4
('tcmalloc', 'faster', 'glibc', 'performance', '15452794', 'tcmalloc is faster than the glibc 2.3 malloc available as a separate library called ptmalloc2 and other malloc s that i have tested\n')
('glibc', 'less', 'tcmalloc', '', '15566083', 'then we found glibc also have same issue but increase rate is less than tcmalloc\n')
('tcmalloc', 'more aggressive', 'glibc', '', '18098933', 'jemalloc and tcmalloc with some setting changes can be more aggressive than glibc to release memory to the os - but again it depends on the allocation patterns\n')
('tcmalloc', 'faster', 'glibc', 'performance', '5742204', 'tcmalloc is faster than the glibc 2.3 malloc.\n')

webchromeclient	webviewclient	2
('webchromeclient', 'lesser time', 'webviewclient', 'performance', '12154530', 'my observation is that you get the webpage title using webchromeclient in lesser time than using webviewclient\n')
('webchromeclient', 'easier', 'webviewclient', 'usability', '9592792', 'to sum up the webchromeclient is easier to use but the webviewclient allows you more configuration\n')

range	min	6
('range', 'greater', 'min', '', '10851578', 'take a look at your picture - all the range you want have ending time greater than min and starting time less than max\n')
('min', 'greater', 'range', '', '16608301', 'if your range were sorted in some manner then you could look at the extreme ends if the end s min is greater than the targetmax then say look at the range 1 4 backwards from the end etc.\n')
('range', 'more', 'min', '', '10425399', 'but if i take it out of range for more than 1 min it gives an exception\n')
('range', 'less', 'min', '', '3188934', 'if max and min are independent variables the extra subtraction for max-min will waste time but if that expression can be precomputed at compile time or if it can be computed once at run-time to test many numbers against the same range the above expression may be computed efficiently even in the case where the value is within range if a large fraction of values will be below the valid range it may be faster to use because it will exit early if value is less than min\n')
('range', 'greater', 'min', '', '15000781', 'range is 5000 to 50000 what i want to achive is in maxpoint select box i want to display the values which are greater than min points selected value\n')
('range', 'lower', 'min', '', '22336343', 'a variation on pentadecagon you are free to set n arbitrary values on the diagonal in some range min..max containing x and fill the rest of the array with lower than min on one side and higher than max on the other\n')

phpunit	behat	2
('phpunit', 'more', 'behat', '', '14831333', 'for general testing phpunit is a more well-established product while behat is focussed on tests written using bdd methodology behaviour driven design\n')
('phpunit', 'more well-established', 'behat', '', '14831333', 'for general testing phpunit is a more well-established product while behat is focussed on tests written using bdd methodology behaviour driven design\n')

jchart2d	jfreechart	1
('jchart2d', 'way better', 'jfreechart', '', '24244037', 'as a note jchart2d is way better than other libraries as jfreechart for real time applications\n')

cron	jobs	2
('jobs', 'more sophisticated', 'cron', '', '19941712', 'i would suggest scheduling your jobs using something more sophisticated than cron\n')
('cron', 'more', 'jobs', '', '11041968', 'check out the quartz scheduler it does what cron does and more is easily integrated in a web app and allows you to call jobs written in java without any complicated plumbing\n')

jslider	jscrollbar	2
('jslider', 'more', 'jscrollbar', '', '24593045', 'aside you should probably look into using a jslider which seems more natural than using a jscrollbar for value adjustment\n')
('jslider', 'more natural', 'jscrollbar', '', '24593045', 'aside you should probably look into using a jslider which seems more natural than using a jscrollbar for value adjustment\n')

free	realloc	3
('realloc', 'more', 'free', '', '7188085', 'dynamic memory management on an small embedded system is tricky to begin with but realloc is no more complicated than a free and malloc of course that s not what it does\n')
('realloc', 'more complicated', 'free', 'usability', '7188085', 'dynamic memory management on an small embedded system is tricky to begin with but realloc is no more complicated than a free and malloc of course that s not what it does\n')
('free', 'better', 'realloc', '', '4190023', 'a malloc free pair can be better than a realloc if you don t need to keep around the original memory\n')

moles	typemock	3
('moles', 'more', 'typemock', '', '3035730', 'moles is more often compared contrasted to typemock in that it offers a set of facilities outside of moq and or rhinomocks sweet spot\n')
('moles', 'more often', 'typemock', '', '3035730', 'moles is more often compared contrasted to typemock in that it offers a set of facilities outside of moq and or rhinomocks sweet spot\n')
('typemock', 'faster ms', 'moles', 'performance', '3869263', 'i have no concrete figures on that but from my own experience i d estimate that instrumented tests are around 100-400 slower typemock seeming to be faster than ms moles\n')

jackson	gson	29
('jackson', 'more', 'gson', '', '2431212', 'since i am more familiar with jackson here are some aspects where i think jackson has more complete support than gson apologies if i miss a gson feature\n')
('jackson', 'much faster', 'gson', 'performance', '3261073', 'i ve seen questions like this come up before and the general consensus is that jackson is much faster than gson\n')
('jackson', 'more', 'gson', '', '12426957', 'jackson is more suitable if you have a complex deep json tree because gson creates a lot of temporary objects which leads to stop the world gcs\n')
('jackson', '2-4x faster', 'gson', 'performance', '5787646', 'gson is not particularly fast but the jackson library can almost compete with most binary serializers jackson is 2-4x faster than gson in most situations and 10-20x faster on utf-8 because it has special code for utf-8\n')
('jackson', 'faster', 'gson', 'performance', '5553647', 'take a look at the jackson json parser it s faster than the one in android and faster than gson and supports streaming\n')
('jackson', 'more', 'gson', '', '14323861', 'try this lib that s a good one with the jackson we use only in the server side because jackson is more slow in the android than gson at least in our test\n')
('jackson', 'more slow', 'gson', '', '14323861', 'try this lib that s a good one with the jackson we use only in the server side because jackson is more slow in the android than gson at least in our test\n')
('jackson', 'better', 'gson', '', '7736941', 'after searched in google found that jackson has better performance than gson i plan to replace gson with jackson in my project but i got a diffrent result when run test code\n')
('gson', 'faster', 'jackson', 'performance', '14248787', 'further more gson really seems to be faster than jackson json\n')
('gson', 'more faster', 'jackson', 'performance', '7736941', 'it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n')
('gson', 'slower', 'jackson', 'performance', '6559693', 'deserialization performance is similar with gson over 9x slower than jackson and fastjson about 0.5 faster than jackson\n')
('gson', 'better', 'jackson', '', '3754055', 'we plan to use gson extensively in the application as it seems safer and better than jackson\n')
('gson', 'less features', 'jackson', 'usability', '12107360', 'note also that gson comes with less features out of the box than genson or jackson\n')
('gson', 'better', 'jackson', '', '14519479', 'also i want to know if google gson is better than jackson for json parsing\n')
('gson', 'faster', 'jackson', 'performance', '4764950', 'gson 1.6 now includes a low-level streaming api and a new parser which is actually faster than jackson\n')
('jackson', 'faster', 'gson', 'performance', '9296657', 'jackson is faster but the api is 37x more complex than the gson api\n')
('jackson', 'better performance', 'gson', 'performance', '7736941', 'after searched in google found that jackson has better performance than gson i plan to replace gson with jackson in my project but i got a diffrent result when run test code\n')
('gson', 'slower', 'jackson', 'performance', '6559693', 'according to the performance results at for serialization with databind with strings gson.tojson myobject gson is over 10x slower than jackson\n')
('jackson', 'faster', 'gson', 'performance', '3261073', 'i ve seen questions like this come up before and the general consensus is that jackson is much faster than gson\n')
('jackson', 'more complete', 'gson', '', '2431212', 'since i am more familiar with jackson here are some aspects where i think jackson has more complete support than gson apologies if i miss a gson feature\n')
('jackson', 'faster', 'gson', 'performance', '5787646', 'gson is not particularly fast but the jackson library can almost compete with most binary serializers jackson is 2-4x faster than gson in most situations and 10-20x faster on utf-8 because it has special code for utf-8\n')
('gson', 'more', 'jackson', '', '7736941', 'it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n')
('gson', 'less powerful', 'jackson', 'usability', '17110794', 'going to go ahead and say that gson is a lot more user friendly albeit less powerful than jackson\n')
('jackson', 'more suitable', 'gson', '', '12426957', 'jackson is more suitable if you have a complex deep json tree because gson creates a lot of temporary objects which leads to stop the world gcs\n')
('jackson', 'better', 'gson', '', '7590072', 'i found jackson better than gson performance project activity better docs ...\n')
('gson', 'faster', 'jackson', 'performance', '7736941', 'it seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jackson\n')
('gson', 'simpler', 'jackson', 'usability', '9792782', 'gson is simpler jackson is faster\n')
('gson', 'less', 'jackson', '', '12107360', 'note also that gson comes with less features out of the box than genson or jackson\n')
('jackson', 'faster', 'gson', 'performance', '17166058', 'personally i prefer jackson as according to test benchmarks it s faster than gson\n')

cfstring	nsstring	1
('cfstring', 'better functionality', 'nsstring', 'usability', '5868039', 'cfstring has some slightly better functionality than nsstring but is a bit harder to use\n')

execute	prepare	2
('execute', 'statement', 'prepare', '', '1363067', 'any execute statement becomes prepare sooner or later it need to be parsed optimized compiled and then execute\n')
('prepare', 'execution faster', 'execute', 'performance', '3553157', 'prepare execution is faster than direct execution for statements execute more than three or four times because the statement is compiled only once while statements execute directly are compiled each time they are execute\n')

django	turbogears	2
('turbogears', 'easier', 'django', 'usability', '3144382', 'compare the very active django tag on stack overflow with that of pylons or turbogears though and i d argue getting started is simply easier with django irrespective of anything to do with code\n')
('django', 'more', 'turbogears', '', '1442201', 'web2py may be young but the mailing list has 2000 messages month which is similar to django and far more than turbogears\n')

greenplum	postgresql	2
('greenplum', 'better', 'postgresql', '', '1792370', 'greenplum and other similar solutions should work a bit better than postgresql depending on your data sets and use cases\n')
('postgresql', 'gather', 'greenplum', '', '12586673', 'according to the postgresql which i gather greenplum is based on documentation for sequence manipulation functions it should return the value most recently returned by nextval in the current session.\n')

gdi	directx	5
('directx', 'faster', 'gdi', 'performance', '3991925', 'directx is in general much faster than gdi due to the fact that it has full acceleration on most video cards\n')
('directx', 'faster', 'gdi', 'performance', '368466', 'to say directx is faster than gdi is also something of a simplification - wpf and gdi-based rendering technologies just have different performance characteristics\n')
('directx', 'smaller', 'gdi', 'memory', '6727374', 'if you are talking about someone else s there is no promise that they will render larger than the screen since would be wise to clip their painting to what is visible and they may be further constrained by other factors such as the size of a directx surface which is smaller than the gdi limit\n')
('directx', 'way faster', 'gdi', 'performance', '5113541', 'directx is way faster than gdi\n')
('gdi', 'slower', 'directx', 'performance', '58301', 'speed is usually faster than gdi and slower than directx and depends greatly on how you do things seen something to work 60 times faster after rewriting in a sensible way\n')

rtf	doc	3
('rtf', 'somewhat easier', 'doc', 'usability', '813984', 'if the latter is what you want you could use rtf which is somewhat easier than the doc format\n')
('rtf', 'more concise', 'doc', 'usability', '8007466', 'there s a post on the subject on the birt world blog here specifically relating to xls emitters although the tribix emitters mentioned should also enable output to rtf a microsoft format readable by word that is much more concise than doc\n')
('rtf', 'easier', 'doc', 'usability', '813984', 'if the latter is what you want you could use rtf which is somewhat easier than the doc format\n')

layoutparams	viewgroup	1
('layoutparams', 'more', 'viewgroup', '', '23710232', 'unless you know exactly what you are doing do not use the same layoutparams for more than one viewgroup\n')

wordpress	joomla	6
('wordpress', 'better', 'joomla', '', '2350402', 'imho wordpress is better do work and customize than joomla\n')
('wordpress', 'menu better', 'joomla', '', '15242168', 'if that will solved later than wordpress menu is better than joomla\n')
('wordpress', 'more popular', 'joomla', 'usability', '1361077', 'i seem to be getting the impression that wordpress is more popular than joomla nowadays\n')
('joomla', 'easier', 'wordpress', 'usability', '7258066', 'imho creating templates for joomla is the easier than most other cms i know typo wordpress modx as you simply have to replace parts of the static version with joomla tags menu content etc. it still needs some time to get used to the system but its not that hard\n')
('wordpress', 'more', 'joomla', '', '1361077', 'i seem to be getting the impression that wordpress is more popular than joomla nowadays\n')
('wordpress', 'better', 'joomla', '', '15242168', 'if that will solved later than wordpress menu is better than joomla\n')

umbraco	dotnetnuke	2
('umbraco', 'more lean', 'dotnetnuke', '', '4841806', 'i also had good result with umbraco cms it s a bit more lean than dotnetnuke but not as user friendly and definitely not as popular\n')
('umbraco', 'better', 'dotnetnuke', '', '7608578', 'consider umbraco its architecture is definitely better than dotnetnuke s\n')

phong	shading	2
('phong', 'more', 'shading', '', '15802920', 'phong is a more nuanced shading model albeit a more hacky one which says that light is composed of ambient + diffuse + specular components\n')
('phong', 'more nuanced', 'shading', '', '15802920', 'phong is a more nuanced shading model albeit a more hacky one which says that light is composed of ambient + diffuse + specular components\n')

svn	cvs	18
('svn', 'better', 'cvs', '', '245323', 'that being said i think svn is better in every other respect and you probably shouldn t start a new project with cvs\n')
('svn', 'less', 'cvs', '', '10996036', 'wondering mainly if svn uses less disk space or more than the same in cvs\n')
('svn', 'bigger', 'cvs', 'memory', '11879403', 'in this case i converted the cvs to svn and found the file size on the hard drive it was on my own laptop at the time but it was much smaller in svn than in cvs but there could have been some compression applied i dont know but everything on the web said svn would actually be bigger than cvs\n')
('svn', 'better', 'cvs', '', '161216', 'svn was supposed to be better than cvs but in some areas that didn t work well\n')
('svn', 'much better', 'cvs', '', '10859451', 'svn is much better then cvs and git or mercurial are even better again\n')
('cvs', 'better system', 'svn', '', '7871646', 'i can only guess at the reasons and i don t worry much about the occasional downvote but perhaps some readers think i m advocating cvs as a better system than svn or git\n')
('svn', 'better enviroment', 'cvs', '', '1101716', 'for all the reasons linked in the comment and elsewhere svn tends to be a much better enviroment than cvs or vss unless you have some weird requirements - so if you can successfully import your history and save the company money i wouldn t see why the bosses wouldn t go for it\n')
('svn', 'better', 'cvs', '', '159971', 'svn is better than cvs\n')
('svn', 'much better then', 'cvs', '', '10859451', 'svn is much better then cvs and git or mercurial are even better again\n')
('svn', 'more efficient', 'cvs', 'performance', '191616', 'in fact svn does stores binaries a lot more efficient than cvs for more info see the svn-faq\n')
('svn', 'better', 'cvs', '', '1589215', 'svn in much better than cvs and have lot of mature tools for every platform\n')
('svn', 'easier', 'cvs', 'usability', '1580034', 'part of the point of svn was to make the use of branches and merging much easier than in cvs\n')
('cvs', 'more popular', 'svn', 'usability', '782375', 'in addition another coworker said cvs was a lot more popular than svn\n')
('svn', 'less disk', 'cvs', 'memory', '10996036', 'wondering mainly if svn uses less disk space or more than the same in cvs\n')
('svn', 'better', 'cvs', '', '1397047', 'if you use svn then it still okay because svn handles binary files much better than cvs\n')
('cvs', 'more useful features', 'svn', 'usability', '161216', 'the other distributed tools are a lot faster svn is slow as hell even cvs can be faster sometimes have much more useful features than svn are developing rapidly while seeing any new feature in svn takes years\n')
('svn', 'more comparable format', 'cvs', '', '161202', 'the first one can be solved by using svn +ssh which is the more comparable format as cvs uses its own protocol as well\n')
('svn', 'better', 'cvs', '', '160037', 'svn is better than cvs because it was designed to be - it s roughly the same thing with some simplications and new features\n')

ecdsa	rsa	1
('ecdsa', 'smaller', 'rsa', 'memory', '2350959', 'if you re interesting in reducing the size of the resulting cookies you should consider using ecdsa rather than rsa to produce the signatures - ecdsa signatures are considerably smaller than rsa signatures of an equivalent security factor\n')

jmeter	soapui	1
('jmeter', 'more reliable', 'soapui', 'reliability', '18339600', 'i have found jmeter to be more reliable than soapui or loadui\n')

vb6	vb.net	17
('vb.net', 'far more feature', 'vb6', 'usability', '12262553', 'quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n')
('vb.net', 'version less capable', 'vb6', 'usability', '12909426', 'yes they are different but you can hardly say that the vb.net version is less capable than the vb6 version\n')
('vb.net', 'better', 'vb6', '', '5862179', 'fortunately vb.net finally ended all that and is completely pixel based you can still alter you viewport scaling but .net seems to handle that much better than vb6\n')
('vb.net', 'more feature rich', 'vb6', 'usability', '12262553', 'quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n')
('vb.net', 'more', 'vb6', '', '12501075', 'none of the .net libraries are there and there are some syntax differences as vb.net is more strict than vb6 is\n')
('vb6', 'tools more', 'vb.net', '', '1101923', 'however i ve noticed that running the vb6 tools is becoming more and more painful over time so i m looking at the possibility of migrating this code to vb.net 2008\n')
('vb.net', 'better', 'vb6', '', '2983944', 'i assume the same control in vb.net would be datagridview and i m fairly sure that you can probably make it look better than in vb6 but if you want really good looking ones you might want to look at thirdparty grid controls\n')
('vb.net', 'version less', 'vb6', '', '12909426', 'yes they are different but you can hardly say that the vb.net version is less capable than the vb6 version\n')
('vb6', 'application more expensive', 'vb.net', 'usability', '3326639', 'biggest of all is that adding new features to your vb6 application is more expensive than it would be if the application was in a better language like c# or vb.net\n')
('vb.net', 'rubby easier', 'vb6', 'usability', '4309687', 'also developing enterprise application is such new languages java c# vb.net rubby is easier that vb6 because they rely on frameworks every body can write c# java code that function but it requires tricks good practices and some of imagination to write vb6 strong and rehusable code\n')
('vb.net', 'far more', 'vb6', '', '12262553', 'quite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an example\n')
('vb6', 'better use', 'vb.net', '', '18437545', 'if you don t already know vb6 there s little point in learning it now - your time could be put to much better use by learning vb.net c#\n')
('vb6', 'lot easier', 'vb.net', 'usability', '15249588', 'avoiding them by modifying vb6 is lot easier than fixing the issues in vb.net\n')
('vb.net', 'certainly easier', 'vb6', 'usability', '19501727', 'getting your project migrated to vb.net is certainly easier when you keep the old vb6 controls\n')
('vb.net', 'more strict', 'vb6', '', '12501075', 'none of the .net libraries are there and there are some syntax differences as vb.net is more strict than vb6 is\n')
('vb6', 'application more', 'vb.net', 'usability', '3326639', 'biggest of all is that adding new features to your vb6 application is more expensive than it would be if the application was in a better language like c# or vb.net\n')
('vb6', 'more', 'vb.net', '', '7017638', 'especially as vb6 is becoming more and more of a distant memory and the vb.net language takes on a life of its own in conjunction with the core .net framework advancing\n')

feed	rss	5
('feed', 'more', 'rss', '', '19577065', 'google does this because their feed api can parse more than rss\n')
('feed', 'easier', 'rss', 'usability', '5462449', 'if your service already has an rss feed things are even easier with the rss reader integrated in the buzzbox api\n')
('feed', 'more value', 'rss', '', '4832591', 'the specification of atom feed offers more value than the rss one with internationalization content types and other things and every modern feed reader supports it\n')
('rss', 'more', 'feed', '', '5235559', 'you d gain compatibility and durability because rss is more defined things will change less but if the feed doesn t include what you need it won t help you\n')
('feed', 'more', 'rss', '', '4832591', 'the specification of atom feed offers more value than the rss one with internationalization content types and other things and every modern feed reader supports it\n')

ostringstream	std	1
('ostringstream', 'slower', 'std', 'performance', '4340396', 'on ideone the ostringstream is about 3 times slower than std copy + back_inserter + std vector and about 15 times slower than memcpy into a raw buffer\n')

jmock	mockito	3
('jmock', 'better', 'mockito', '', '2668072', 'i suggest that you to move jmock which has a better api or even to mockito whose protocol is even simpler\n')
('jmock', 'better api', 'mockito', '', '2668072', 'i suggest that you to move jmock which has a better api or even to mockito whose protocol is even simpler\n')
('jmock', 'more complex scenarios', 'mockito', 'usability', '2482760', 'for the record jmock as of today supports more complex scenarios than mockito that s why the initial learning curve is steeper\n')

reactiveui	caliburn	1
('reactiveui', 'easier', 'caliburn', 'usability', '17108323', 'personally i really like reactiveui which is fairly unusual but does make getting things right an awful lot easier than caliburn\n')

compiled-language	dynamic-languages	1
('compiled-language', 'better', 'dynamic-languages', '', '3548478', 'because you can determine what code in a compiled-language is likely to do better than a dynamic-languages it has been determined more error free to use a compiled perspective for more things so as you can see with the availability of offset-management and lookup compiled behavior given to you in core perl there is no reason to mess with the symbol table if you don t have to\n')

tga	ppm	1
('tga', 'more common', 'ppm', '', '21354215', 'you could use the tga format which is more common than ppm and allows true grayscale images\n')

irc	xmpp	2
('irc', 'protocol more', 'xmpp', '', '9795702', 'regardless the irc protocol is more simplistic in nature can handle orders of magnitude more client connections than xmpp for the same memory utilization uses less bandwidth on the wire doesn t require authentication although you can add this feature etc\n')
('irc', 'protocol more simplistic', 'xmpp', '', '9795702', 'regardless the irc protocol is more simplistic in nature can handle orders of magnitude more client connections than xmpp for the same memory utilization uses less bandwidth on the wire doesn t require authentication although you can add this feature etc\n')

decimal	octal	3
('decimal', 'often more convenient', 'octal', 'usability', '4676830', 'bitshifts just go easier with hexadecimal than decimal and is often more convenient to read than octal\n')
('octal', 'clearer', 'decimal', '', '8218375', 'hex or maybe octal depending on the machine being emulated will be clearer than using decimal since similar opcodes tend to vary in bits not digits\n')
('decimal', 'often more', 'octal', '', '4676830', 'bitshifts just go easier with hexadecimal than decimal and is often more convenient to read than octal\n')

dropbox	icloud	1
('dropbox', 'more reliable', 'icloud', 'reliability', '22235828', 'instead of dropbox i could use key value store as rest web service which i want to do later but have no time for this for now in my opinion my solution is more reliable than icloud and which is very important i have full control on how itâ s working mainly because itâ s my own code\n')

getline	fgetc	2
('getline', 'version slower', 'fgetc', 'performance', '8854366', 'i confirmed that in debug mode the getline version is slower about 130 âµs vs 60 âµs for the fgetc version\n')
('getline', 'faster', 'fgetc', 'performance', '8854366', 'the fact that using getline with iostreams is faster than fgetc at least in release mode runs counter to the reasoning that copying all that data must be slower than not copying it so i m not sure what all optimization is able to avoid and i didn t really look to find any explanation but it d be interesting to understand what s being optimized away\n')

freebsd	linux	1
('freebsd', 'much better', 'linux', '', '530086', 'just a tip but from personal experience i ve found that freebsd works much better on low-end hardware than a modern linux distro does\n')

firefox	safari	21
('firefox', 'less strict', 'safari', '', '3349260', 'it seems that ie and firefox are less strict than safari\n')
('safari', 'faster', 'firefox', 'performance', '899967', 'in safari we found that the dom level 0 took twice the time off the dom level 2 but was still four times faster than either firefox case\n')
('firefox', 'better', 'safari', '', '7432356', 'the service is still in beta trial and firefox conversion is working better than safari one\n')
('safari', 'more anti-alisaing', 'firefox', '', '5804790', 'in particular a font may be rendered quite differently between the various browsers and operating systems in current use - safari and macos use more anti-alisaing than firefox or ie but ie9 has a new feature called cleartype which also affects font rendering\n')
('safari', 'less fuzzy', 'firefox', '', '3039489', 'font looks sharp in google-chrome safari ie8 not as good as other 2 but less fuzzy than firefox\n')
('safari', 'more', 'firefox', '', '6692565', 'to me it looks like safari gets it more right than firefox text is generally more around a middle line\n')
('safari', 'faster', 'firefox', 'performance', '3220693', 'google-chrome or safari on a mac could be much faster than firefox on a pc especially with newer apis\n')
('firefox', 'more forgiving', 'safari', '', '365945', 'but i haven t yet figured out whether it s me writing sloppy code with firefox perhaps being more forgiving than safari or if it s safari or if it s jquery\n')
('safari', 'taller', 'firefox', '', '7898066', 'i saw that the discrepancy was because in safari the text element is taller than in firefox and includes a slight amount of whitespace on top that doesn t show up in firefox in firefox the top of the text element is exactly when the text starts\n')
('safari', 'higher', 'firefox', '', '10623171', 'in safari it is several pixels higher up than in firefox and google-chrome and significantly lower in opera\n')
('firefox', 'just better', 'safari', '', '463954', 'firefox is just better for web development and i prefer safari overall\n')
('firefox', 'more', 'safari', '', '2474666', 'i just tested geolocation on firefox 3.6 and iphone safari os 3.1.3 the result is interesting firefox is more accurate than safari\n')
('safari', 'slower', 'firefox', 'performance', '18707981', 'on safari everything is slower than on firefox still the object property access is more than two times faster\n')
('safari', 'more right', 'firefox', '', '6692565', 'to me it looks like safari gets it more right than firefox text is generally more around a middle line\n')
('firefox', 'bigger', 'safari', 'memory', '6079275', 'that i gave to every link in the set of links home about us products contact and it seems that firefox is making that 1px margin much bigger than safari or google-chrome and distorting it\n')
('firefox', 'smaller', 'safari', 'memory', '3467818', 'small in firefox is smaller then small in safari so never ever use them\n')
('firefox', 'smaller then', 'safari', 'memory', '3467818', 'small in firefox is smaller then small in safari so never ever use them\n')
('firefox', 'conversion better', 'safari', '', '7432356', 'the service is still in beta trial and firefox conversion is working better than safari one\n')
('safari', 'better', 'firefox', '', '7322272', 'safari behaves better than firefox but an error message â œone error in opening the pageâ â shows up in the status bar if you remove the iframe during the load event\n')
('safari', 'everything slower', 'firefox', 'performance', '18707981', 'on safari everything is slower than on firefox still the object property access is more than two times faster\n')
('firefox', 'more accurate', 'safari', 'performance', '2474666', 'i just tested geolocation on firefox 3.6 and iphone safari os 3.1.3 the result is interesting firefox is more accurate than safari\n')

mockito	jmockit	2
('mockito', 'older library', 'jmockit', '', '7717332', 'mockito s a much older library than jmockit so you could expect that it would have many more features\n')
('mockito', 'better', 'jmockit', '', '5418052', 'comparison between mockito vs jmockit - why is mockito voted better than jmockit\n')

gedit	vim	2
('gedit', 'better', 'vim', '', '18436657', 'if you re just going to use vim the same way you use gedit don t bother - gedit is better than vim at being gedit\n')
('gedit', 'better', 'vim', '', '16252339', 'if you are on linux eg ubuntu you may try gedit for ease of use with some plug-ins but to handle very large files you re better off with vim\n')

fileinputstream	bufferedreader	1
('fileinputstream', 'faster', 'bufferedreader', 'performance', '23964531', 'see the referred post for an example that reads a single file in parallel with fileinputstream which should be significantly faster than using bufferedreader according to these benchmarks\n')

fsunit	xunit.net	1
('fsunit', 'more natural oo', 'xunit.net', '', '1468941', 'i d rather use fsunit or fstest to write tests in f# it feels more natural than oo xunit.net style tests\n')

scgi	fastcgi	1
('scgi', 'simpler', 'fastcgi', 'usability', '15033764', 'you can also use scgi it is a lot simpler than fastcgi\n')

xna	spritebatch	1
('xna', 'more', 'spritebatch', '', '941685', 'in xna when is it appropriate to render your game content using more than one spritebatch\n')

roboguice	robolectric	1
('roboguice', 'better', 'robolectric', '', '17476067', 'you cannot use mocks in conjunction with roboguice it s better to let robolectric provide the context you need here\n')

procedure	ora-06502	2
('procedure', 'more', 'ora-06502', '', '20841260', 'your problem is that your procedure has more parameters then you pass to it on mybatis call so at any point after the missing parameter you should have your ora-06502 pl sql numeric or value error error since the following paramters doesn t have the same type on the order you are passing it\n')
('procedure', 'more parameters', 'ora-06502', '', '20841260', 'your problem is that your procedure has more parameters then you pass to it on mybatis call so at any point after the missing parameter you should have your ora-06502 pl sql numeric or value error error since the following paramters doesn t have the same type on the order you are passing it\n')

http.sys	httplistener	1
('http.sys', 'more customizable', 'httplistener', '', '1374448', 'and also don t forget - http.sys much more customizable than httplistener\n')

glsl	hlsl	1
('glsl', 'better', 'hlsl', '', '3075629', 'opengl is better for playing around and experimenting because you can easily draw triangle without messing with hardware buffers available on larger selection of platforms plus glsl is better than hlsl because it doesn t compile into assembly\n')

case-insensitive	case-sensitive	1
('case-insensitive', 'slower', 'case-sensitive', 'performance', '7652236', 'this tiny overhead on add is vastly outweighed by the savings on lookups since all programmers should know and understand that case-insensitive compares are vastly slower than case-sensitive especially with unicode - the cpu can t just do a block compare of data but must check each pair of characters specially even using a table look-up this is vastly slower\n')

vba	vbscript	2
('vba', 'better', 'vbscript', '', '962399', 'vb6 vba though a little better than vbscript in general still has many similar issues where for their domain they require much more boiler plate to do simple tasks than what i would like and have seen in other scripting languages\n')
('vba', 'more sense', 'vbscript', '', '1001855', 'i believe that the reports are using something more along the lines of vbscript edit oregonghost says vba which actually makes more sense than vbscript than vb.net and very limited at that\n')

jquery-week-calendar	fullcalendar	2
('jquery-week-calendar', 'more features', 'fullcalendar', 'usability', '4660742', 'in some ways the jquery-week-calendar has more features at the moment but fullcalendar has a bigger following and is closing the gap on features\n')
('jquery-week-calendar', 'more', 'fullcalendar', '', '4660742', 'in some ways the jquery-week-calendar has more features at the moment but fullcalendar has a bigger following and is closing the gap on features\n')

xilinx	altera	1
('xilinx', 'better', 'altera', '', '3697715', 'xilinx tools suck but their raw silicon is better than altera\n')

key	hash-collision	1
('key', 'space vastly larger', 'hash-collision', 'memory', '3114315', 'but if your key space is vastly larger than the number of targets you ll have a sizable number of hash-collision where you ll have to check if the target stored there is really the key you re looking\n')

umask	sudo	2
('umask', 'more restrictive', 'sudo', '', '2406721', 'if you forget to use this and your default umask is more restrictive or less restrictive then you will need to re-run the non- sudo\n')
('umask', 'more', 'sudo', '', '2406721', 'if you forget to use this and your default umask is more restrictive or less restrictive then you will need to re-run the non- sudo\n')

colt	jama	2
('colt', 'more powerful', 'jama', 'usability', '879201', 'colt does this already but i have found it is more complicated and more powerful than jama which may explain why simple functions are slower with colt\n')
('jama', 'slower', 'colt', 'performance', '879201', 'colt does this already but i have found it is more complicated and more powerful than jama which may explain why simple functions are slower with colt\n')

slimdx	xna	1
('slimdx', 'better', 'xna', '', '11730008', 'considering the lack of windows 8 love that xna is getting support being dropped apps won t be sellable on the app store -- i d go with slimdx -- it s better than xna anyway -- the only down side is that you can t make xbox apps with it\n')

innodb	myisam	244
('innodb', 'slower', 'myisam', 'performance', '15213134', 'innodb shouldn t be much slower than myisam\n')
('innodb', 'longer', 'myisam', '', '15385253', 'one thing is that if your inserts are not in the order of increasing primary keys innodb can take a bit longer than myisam\n')
('innodb', 'better', 'myisam', '', '7776021', 'innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n')
('innodb', 'better', 'myisam', '', '8388057', 'newer versions of mysql 5.5+ have extended innodb to support all the features that were previously only available on myisam such as fulltext and geospatial indexing and innodb performance is usually considerably better than myisam when configured properly\n')
('innodb', 'much slower 7x', 'myisam', 'performance', '25632749', 'first question is it normal that innodb is much slower 7x slower than myisam for such usage\n')
('innodb', 'more', 'myisam', '', '7776000', 'innodb is more complex while myisam is simpler\n')
('myisam', 'faster', 'innodb', 'performance', '20327983', 'myisam is almost 4 time faster than innodb which is not acceptable in the environment we are working as i mentioned earlier that every second is worth many dollers for us\n')
('myisam', 'generally less suitable', 'innodb', '', '754723', 'plus you have to make your tables myisam which is generally less suitable than innodb\n')
('innodb', 'better crash', 'myisam', '', '13247861', 'innodb has better crash recovery while myisam is poor at recovering\n')
('innodb', 'more', 'myisam', '', '7492861', 'innodb is more resistant to table corruption than myisam\n')
('myisam', 'faster', 'innodb', 'performance', '5676173', 'myisam is faster than innodb for reads myth\n')
('innodb', 'more', 'myisam', '', '5676173', 'innodb is more reliable than myisam\n')
('myisam', 'faster', 'innodb', 'performance', '405022', 'myisam is faster in data warehousing situations such as full table scan reporting etc.. but innodb can actually be faster in many cases with normal oltp queries\n')
('myisam', 'faster', 'innodb', 'performance', '4087592', 'myisam table is much faster than innodb but no rollback is possible\n')
('myisam', 'slightly faster', 'innodb', 'performance', '4233878', 'myisam is slightly faster than innodb and implements the fulltext index which is quite useful for integrating search capabilities\n')
('myisam', 'faster', 'innodb', 'performance', '4546410', 'in my opinion myisam use to be faster than innodb now they are pretty much the same in speed\n')
('innodb', 'slower', 'myisam', 'performance', '5291159', 'oh and just incase you were thinking innodb is slower than myisam - the myisam implementation i tested was twice as slow in all counts\n')
('myisam', 'more prone', 'innodb', '', '14232379', 'myisam is more prone to locking problems than innodb i believe\n')
('innodb', 'much slower', 'myisam', 'performance', '1730317', 'if you find that innodb is much slower for inserts updates bear in mind that it offers a much better level of durability - if you tune it for approximately the same durability as myisam then you ll see good performance hopefully\n')
('myisam', 'faster', 'innodb', 'performance', '20297324', 'also note that some mysql engines are faster than others for example myisam may run faster than innodb at expense of the lack of real foreign keys\n')
('innodb', 'more', 'myisam', '', '9462159', 'innodb is more complex while myisam is simpler\n')
('innodb', 'primarily better', 'myisam', '', '7335774', 'as you are no doubt aware from your searches innodb is primarily better than myisam for high volume inserts not counting non-comparable features like foreign keys or full text searches which are exclusive to innodb and myisam respectively while myisam is primarily useful for tables which are read more often than they are written to\n')
('myisam', 'better', 'innodb', '', '20900198', 'since myisam is better on selecting while innodb is better on writing\n')
('myisam', 'faster', 'innodb', 'performance', '12285797', 'myisam has proved to be faster than innodb for me\n')
('innodb', 'longer', 'myisam', '', '15385004', 'one thing is that if your inserts are not in the order of increasing primary keys innodb can take a bit longer than myisam\n')
('innodb', 'faster', 'myisam', 'performance', '12620218', 'i have been told innodb is faster on executing writes but slower than myisam doing reads i cannot back this up and could not find any article that analyses this i do however have the guy that told me this in high regard feel free to ignore this point or do your own research\n')
('myisam', 'better', 'innodb', '', '6564322', 'myisam is better than innodb when you don t need those advanced features and storage speed is more important than other concerns\n')
('myisam', 'less resources', 'innodb', '', '19705475', 'therefore accessing myisam consumes less resources than innodb\n')
('myisam', 'faster', 'innodb', 'performance', '1647078', 'i am not sure if this is no longer true myisam is faster than innodb for reads\n')
('innodb', 'bigger', 'myisam', 'memory', '2114537', 'innodb tables are about 4x bigger than their myisam counterparts\n')
('myisam', 'longer', 'innodb', '', '12584994', 'myisam supports longer rows than innodb does\n')
('myisam', 'faster', 'innodb', 'performance', '24465773', 'in a thread i came to know that myisam is faster for reads innodb is faster for writes\n')
('innodb', 'better performance', 'myisam', 'performance', '380074', 'innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash\n')
('innodb', 'engine more efficient', 'myisam', 'performance', '9671726', 'it is possible that the config of your innodb engine is more efficient for your searches than the way you have myisam set up\n')
('myisam', 'faster', 'innodb', 'performance', '8171849', 'in general it seems as though the concensus is to primarily use innodb but there are still some areas in which myisam is much faster than innodb\n')
('myisam', 'often faster', 'innodb', 'performance', '14568413', 'myisam is often faster than innodb but isn t safe to use in a production environment for critical data\n')
('innodb', 'better choice', 'myisam', '', '19725362', 'innodb would be a better choice than myisam for a high-write table\n')
('myisam', 'better', 'innodb', '', '14063234', 'also i can t see your table engine but myisam is better for full text searching rather than innodb\n')
('innodb', 'more', 'myisam', '', '15678615', 'innodb is more resistant to table corruption than myisam\n')
('innodb', 'more', 'myisam', '', '24906639', 'innodb is more resistant to table corruption than myisam\n')
('myisam', 'faster', 'innodb', 'performance', '3707592', 'i ve figure out that even though myisam has locking contention it s still faster than innodb in most scenarios because of the rapid lock acquisition scheme it uses\n')
('myisam', 'longer', 'innodb', '', '11056538', 'although 4m isn t that many rows with contention and depending on your structure and database engine it may take a while i think myisam alters take longer than innodb because myisam requires whole table locks and handles concurrency less well\n')
('innodb', 'higher resource', 'myisam', '', '13888408', 'innodb has a higher resource consumption rates then myisam so keep that in mind\n')
('innodb', 'more overhead', 'myisam', 'performance', '365834', 'innodb has more overhead but uses row-level locking so that reads and writes can happen concurrently without the problems that myisam s table locking incurs\n')
('innodb', 'slower', 'myisam', 'performance', '5896369', 'innodb is often slower than myisam being a transactional db engine with acid properties\n')
('innodb', 'slower', 'myisam', 'performance', '9744170', 'innodb is slower than myisam but in which cases\n')
('myisam', 'longer rows', 'innodb', '', '12584994', 'myisam supports longer rows than innodb does\n')
('innodb', 'better', 'myisam', '', '7335774', 'as you are no doubt aware from your searches innodb is primarily better than myisam for high volume inserts not counting non-comparable features like foreign keys or full text searches which are exclusive to innodb and myisam respectively while myisam is primarily useful for tables which are read more often than they are written to\n')
('innodb', 'better', 'myisam', '', '17765637', 'almost always innodb is a better choice than myisam\n')
('myisam', 'faster', 'innodb', 'performance', '1730317', 'it is a massive over simplification in some cases and plain wrong in others to say we know that myisam is faster than innodb\n')
('innodb', 'heavier', 'myisam', '', '262798', 'i know innodb is heavier than myisam but just how much more\n')
('innodb', 'more reliable', 'myisam', 'reliability', '5676173', 'innodb is more reliable than myisam\n')
('innodb', 'newer', 'myisam', '', '13247861', 'innodb is newer while myisam is older\n')
('innodb', 'better', 'myisam', '', '9947851', 'if your database has a large innodb buffer pool and a small key buffer then innodb performance is going to be better than myisam performance especially for large tables\n')
('myisam', 'faster', 'innodb', 'performance', '4246897', 'myisam is still widely used in web applications as it has traditionally been perceived as faster than innodb in situations where most db access is reads\n')
('myisam', 'table much faster', 'innodb', 'performance', '4087592', 'myisam table is much faster than innodb but no rollback is possible\n')
('innodb', 'slower', 'myisam', 'performance', '5676173', 'innodb is transactional so inserts will generally be slower than myisam\n')
('innodb', 'newer', 'myisam', '', '8213500', 'innodb is relatively newer than myisam and is transaction safe\n')
('innodb', 'slower', 'myisam', 'performance', '990830', 'innodb is slower for read only databases because it has features acid compliant row level locking that myisam leaves out\n')
('innodb', 'better', 'myisam', '', '1729806', 'am i right that innodb is better for frequent concurrent updates and inserts than myisam\n')
('myisam', 'faster', 'innodb', 'performance', '9671122', 'i did a search online comparing myisam and innodb but all of the articles i read judged myisam being faster than innodb on select queries\n')
('myisam', 'faster', 'innodb', 'performance', '11390363', 'out of experience i m involved to a project that uses huge amount of data using mysql and we mostly prefer myisam for data that can be generated it allows to achieve much higher performance losing transactions but generally speaking myisam is faster but innodb is more reliable\n')
('myisam', 'more efficient', 'innodb', 'performance', '18088402', 'there are some situations when myisam is infinitely more efficient than innodb when manipulating large data dumps offline because of table lock\n')
('innodb', 'much better', 'myisam', '', '1970160', 'someone just told me that innodb is much better than myisam\n')
('innodb', 'actually faster', 'myisam', 'performance', '389824', 'innodb is actually faster than myisam in quite a few cases so it depends on what your application s mix of selects updates concurrent queries indexes buffer configuration etc\n')
('innodb', 'more complex', 'myisam', 'usability', '7776000', 'innodb is more complex while myisam is simpler\n')
('myisam', 'faster', 'innodb', 'performance', '1959795', 'anyone who thinks myisam is faster is either not tuning innodb correctly or has such small data that who cares\n')
('innodb', 'more', 'myisam', '', '9114324', 'innodb provides more complex keys structure than myisam foreign keys and regenerating keys is really slow in innodb\n')
('myisam', 'really better', 'innodb', '', '6564281', 'but when myisam is really better than innodb\n')
('myisam', 'better performance', 'innodb', 'performance', '5019157', 'i currently have myisam and i would like to stay with it because it had far better performance than innodb in my case but i heard that innodb has acid transactions\n')
('innodb', 'more optimization', 'myisam', '', '12100342', '3 a first of all if you haven t done yet change the storage engine to innodb which has row level locking and in newer versions of mysql has more optimization than myisam has\n')
('innodb', 'better', 'myisam', '', '24803981', 'mostly innodb is better choice than a myisam\n')
('innodb', 'better', 'myisam', '', '3286802', 'therefore innodb can handle higher levels of concurrency better than myisam\n')
('innodb', 'slower', 'myisam', 'performance', '12620218', 'i have been told innodb is faster on executing writes but slower than myisam doing reads i cannot back this up and could not find any article that analyses this i do however have the guy that told me this in high regard feel free to ignore this point or do your own research\n')
('myisam', 'less suitable', 'innodb', '', '754723', 'plus you have to make your tables myisam which is generally less suitable than innodb\n')
('myisam', 'better', 'innodb', '', '8132481', 'you insert in there but never select from there as far as i know today myisam is better than innodb in this case\n')
('innodb', 'more', 'myisam', '', '9675447', 'innodb doesnt read number of rows from stored cached value like myisam does if column is not null cause innodb is more optimized for writing than reading opposing to myisam\n')
('innodb', 'more complex', 'myisam', 'usability', '9462159', 'innodb is more complex while myisam is simpler\n')
('myisam', 'faster', 'innodb', 'performance', '1729806', 'we know that myisam is faster than innodb when we don t have many concurrent updates inserts\n')
('innodb', 'slower', 'myisam', 'performance', '15678536', 'edit for the read-performance this link shows that innodb often is actually not slower than myisam\n')
('innodb', 'better', 'myisam', '', '10308655', 'innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n')
('innodb', 'more strict', 'myisam', '', '7776021', 'innodb is more strict in data integrity while myisam is loose\n')
('innodb', 'indexes better', 'myisam', '', '9776443', 'your table sounds fairly large so i doubt it s being held entirely in memory but it sounds like innodb handles indexes better than myisam anyway plus since you re being so specific it may be caching the result of the query\n')
('innodb', 'more', 'myisam', '', '20327983', 'to our suprise innodb took hours more than myisam\n')
('myisam', 'faster', 'innodb', 'performance', '10332345', '2 - i have read about myisam vs innodb the conclusion for me was that myisam is faster when it comes to read-only whereas innodb is designed for tables that get updated or inserts more frequently\n')
('innodb', 'more strict', 'myisam', '', '15558403', 'innodb is more strict in data integrity while myisam is loose\n')
('innodb', 'better', 'myisam', '', '5248641', 'you can also use compression on the tables to keep them smaller but innodb is vastly better than myisam at data integrity\n')
('myisam', 'actually better', 'innodb', '', '7887458', 'myisam is actually better than innodb for spatial data btw because it also supports r-tree spatial indexes but not as powerful queries as postgis. if you just need points though innodb or myisam b-trees are adequate\n')
('myisam', 'more', 'innodb', '', '14464983', 'myisam is more susceptible to data corruption than innodb and usually innodb performs better because it caches both data and indexes\n')
('myisam', 'faster', 'innodb', 'performance', '12906984', 'myisam has historically been viewed as faster than innodb but for recent versions of innodb that is true for a much much smaller set of use cases\n')
('innodb', 'better', 'myisam', '', '23940847', 'innodb when tuned well performs better than myisam\n')
('innodb', 'better crash', 'myisam', '', '15558403', 'innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n')
('innodb', 'more', 'myisam', '', '23090582', 'innodb is more scalable and myisam doesn t support any of the properties of acid\n')
('myisam', 'better read', 'innodb', '', '19664261', 'myisam delivers better read performance compared to innodb at the cost of being less acid compliant\n')
('myisam', '2x faster then', 'innodb', 'performance', '13494410', 'select queries in myisam runs 2x faster then in innodb but the updates and insert queries are much slower in myisam\n')
('innodb', 'more resistant', 'myisam', '', '15678615', 'innodb is more resistant to table corruption than myisam\n')
('innodb', 'slower', 'myisam', 'performance', '16785740', 'in innodb the count s when where group by or join is not used execute slower than in myisam because the row count is not stored internally\n')
('innodb', 'slower', 'myisam', 'performance', '11505760', 'if you use a where clause though it changes the execution pattern to use indexes so in general innodb will be slower than myisam on full unrestricted counts where as the performance matches up on restricted counts\n')
('innodb', 'slower', 'myisam', 'performance', '15213196', 'innodb does support transactions and referential integrity but the trade-off is that it is a bit slower than myisam\n')
('innodb', 'more strict', 'myisam', '', '13247861', 'innodb is more strict in data integrity while myisam is loose\n')
('innodb', 'stricter', 'myisam', '', '8021206', 'innodb is much much stricter than myisam\n')
('myisam', 'smaller footprints', 'innodb', 'memory', '5676173', 'myisam tables have smaller footprints than innodb ones myth\n')
('innodb', 'more', 'myisam', '', '13247861', 'innodb is more strict in data integrity while myisam is loose\n')
('innodb', 'more', 'myisam', '', '15558403', 'innodb is more strict in data integrity while myisam is loose\n')
('innodb', 'faster', 'myisam', 'performance', '15620322', 'now the response i got from my boss is that i need to prove that innodb will run faster than myisam\n')
('myisam', 'faster', 'innodb', 'performance', '3184908', 'there is a difference between the different storage engines though myisam is faster for a lot of select innodb is faster for a lot of insert update because it uses row locking instead of table locking and the way it handles indexes\n')
('myisam', 'less', 'innodb', '', '7558745', 'myisam uses less memory than innodb and the actual data files are often quite a bit larger for innodb\n')
('innodb', 'better', 'myisam', '', '15729523', 'innodb is a better choice as myisam is really old engine and would fade away in near future\n')
('innodb', 'slower', 'myisam', 'performance', '277511', 'innodb is slower than myisam for most uses but can perform faster in certain conditions due to a better locking mechanism\n')
('innodb', 'better', 'myisam', '', '380074', 'innodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crash\n')
('innodb', 'better', 'myisam', '', '7776000', 'innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n')
('innodb', 'newer', 'myisam', '', '9462159', 'innodb is newer while myisam is older\n')
('innodb', 'more', 'myisam', '', '7776000', 'innodb is more strict in data integrity while myisam is loose\n')
('myisam', 'much faster', 'innodb', 'performance', '10474759', 'myisam is much faster for reads but since it locks the whole table for writes this is where overall throughput drops compared with innodb\n')
('innodb', 'better crash', 'myisam', '', '9462159', 'innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n')
('myisam', 'less memory', 'innodb', 'memory', '7558745', 'myisam uses less memory than innodb and the actual data files are often quite a bit larger for innodb\n')
('innodb', 'higher', 'myisam', '', '579589', 'their conclusion innodb has 30 higher performance than myisam on average\n')
('innodb', 'better', 'myisam', '', '4548313', 'i heard correct me if i am wrong that innodb is better for tables that will be updated a lot because of row locking opposed to myisam s table locking\n')
('innodb', 'better', 'myisam', '', '13628627', 'furthermore i do not have control over the engine â myisam or innodb innodb performs better due to row based locking instead of table as in case of myisam\n')
('innodb', 'better', 'myisam', '', '13247861', 'innodb has better crash recovery while myisam is poor at recovering\n')
('myisam', 'better', 'innodb', '', '6564281', 'sometimes i got asked on some interviews what benefits does innodb have against myisam and when myisam is better than innodb\n')
('myisam', 'often faster', 'innodb', 'performance', '19705475', 'myisam is often faster than innodb in terms of raw performance mostly because it is not acid\n')
('innodb', 'engine more', 'myisam', '', '9671726', 'it is possible that the config of your innodb engine is more efficient for your searches than the way you have myisam set up\n')
('myisam', 'better', 'innodb', '', '5850324', 'it is said that if you have a mostly read based application you should use myisam as it is better than innodb\n')
('myisam', 'faster', 'innodb', 'performance', '1647114', 'ok there are some cases where myisam is faster than innodb but rarely enough that it s worth putting up with the lack of acid-compliance\n')
('myisam', 'faster', 'innodb', 'performance', '4233878', 'myisam is slightly faster than innodb and implements the fulltext index which is quite useful for integrating search capabilities\n')
('innodb', 'better', 'myisam', '', '9913344', 'innodb is usually much better than myisam at tables being available while insert update and delete are happening because innodb uses row level locking for updates whereas myisam uses table level locking\n')
('myisam', 'more performant', 'innodb', '', '6314981', 'not sure why people think myisam is more performant than innodb - it s a conundrum wrapped in an enigma\n')
('myisam', 'more susceptible', 'innodb', '', '14464983', 'myisam is more susceptible to data corruption than innodb and usually innodb performs better because it caches both data and indexes\n')
('innodb', 'much faster', 'myisam', 'performance', '2943437', 'if you have so many records in the table then the first thing is to change the table engine to innodb if its not innodb because for large number of records innodb is much faster as it caches the table data while on the contrary myisam engine only caches the indexes so each time it has to do a full table scan from disk if the data required cannot be fetched from index\n')
('innodb', 'vastly better', 'myisam', '', '5248641', 'you can also use compression on the tables to keep them smaller but innodb is vastly better than myisam at data integrity\n')
('myisam', 'better', 'innodb', '', '6564281', 'but when myisam is really better than innodb\n')
('innodb', 'higher', 'myisam', '', '13888408', 'innodb has a higher resource consumption rates then myisam so keep that in mind\n')
('myisam', 'infinitely more', 'innodb', '', '18088402', 'there are some situations when myisam is infinitely more efficient than innodb when manipulating large data dumps offline because of table lock\n')
('myisam', 'generally faster', 'innodb', 'performance', '3536007', 'myisam generally performs faster because it lacks certain functions innodb has such as rollback... but it has only table locking\n')
('myisam', 'better', 'innodb', '', '8615205', 'since you don t do updates i think myisam would be better than innodb in this scenario\n')
('innodb', 'less time', 'myisam', 'performance', '16397869', 'with innodb there is less time lost from table locking while myisam is faster in table readings\n')
('myisam', 'faster', 'innodb', 'performance', '4548349', 'myisam is faster for certain queries and supports fulltext and spatial indexes while innodb is transactional and more concurrent\n')
('innodb', 'higher throughput', 'myisam', '', '9220735', 'innodb delivered 4.6x higher throughput than myisam while achieving\n')
('innodb', 'faster', 'myisam', 'performance', '14846908', 'innodb not only has the advantages you list but it is also faster than myisam in many benchmarks\n')
('myisam', 'more', 'innodb', '', '14232379', 'myisam is more prone to locking problems than innodb i believe\n')
('innodb', 'better due', 'myisam', '', '13628627', 'furthermore i do not have control over the engine â myisam or innodb innodb performs better due to row based locking instead of table as in case of myisam\n')
('innodb', 'better', 'myisam', '', '1247801', 'innodb supports better locking semantics so if there will be occasional or frequent writes or if you want better data integrity i d suggest starting there and then benchmarking myisam later if you can t hit your performance targets\n')
('innodb', 'newer', 'myisam', '', '10308655', 'innodb is newer while myisam is older\n')
('innodb', 'better choice', 'myisam', '', '15329943', 'so for such an application is it will innodb be a better choice over myisam\n')
('innodb', 'better crash', 'myisam', '', '7776021', 'innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n')
('myisam', 'faster', 'innodb', 'performance', '18971053', 'use myisam usually much faster than innodb if your data base isnt transaction oriented\n')
('innodb', 'more', 'myisam', '', '9462159', 'innodb is more strict in data integrity while myisam is loose\n')
('innodb', 'better', 'myisam', '', '11977129', 'tuning innodb which is the better engine requires adjusting different values than myisam which is often the fast-but-unsafe default\n')
('myisam', 'faster', 'innodb', 'performance', '6174246', 'in some benchmarks i see that myisam is faster than innodb but seems i have a little improvement\n')
('innodb', 'faster', 'myisam', 'performance', '2757616', 'database performance of the innodb is not necessary faster than the myisam engine\n')
('myisam', 'slower', 'innodb', 'performance', '13442619', 'this also affects how it is stored which leads to myisam being slower than innodb on insert due to myisam requiring a full index re-write on every insertion\n')
('innodb', 'more complex', 'myisam', 'usability', '7776021', 'innodb is more complex while myisam is simpler\n')
('innodb', 'faster', 'myisam', 'performance', '389824', 'innodb is actually faster than myisam in quite a few cases so it depends on what your application s mix of selects updates concurrent queries indexes buffer configuration etc\n')
('innodb', 'more', 'myisam', '', '8349825', 'innodb is more concurrent than myisam since it provides row-level locking\n')
('innodb', 'more concurrent', 'myisam', '', '8349825', 'innodb is more concurrent than myisam since it provides row-level locking\n')
('myisam', 'better', 'innodb', '', '8893726', 'myisam is better for high read volumes innodb for high update volumes due to table vs row locking\n')
('innodb', 'newer', 'myisam', '', '15558403', 'innodb is newer while myisam is older\n')
('myisam', 'generally less', 'innodb', '', '754723', 'plus you have to make your tables myisam which is generally less suitable than innodb\n')
('innodb', 'more', 'myisam', '', '8203841', 'innodb is also being developed more than myisam\n')
('innodb', 'higher throughput', 'myisam', '', '405022', 'innodb is harder to tune since it has more knobs but a properly tuned innodb system can often have higher throughput than myisam due to better locking and better i o patterns\n')
('innodb', 'more complex', 'myisam', 'usability', '9114324', 'innodb provides more complex keys structure than myisam foreign keys and regenerating keys is really slow in innodb\n')
('innodb', 'faster', 'myisam', 'performance', '7558597', 'if there are many modifications of the data it s said that innodb works faster because it uses row locking instead of table locking like myisam\n')
('innodb', 'slower', 'myisam', 'performance', '2369500', 'innodb tables are even slower than myisam tables for inserts and the delayed key write option is not available\n')
('innodb', 'better', 'myisam', '', '9776443', 'your table sounds fairly large so i doubt it s being held entirely in memory but it sounds like innodb handles indexes better than myisam anyway plus since you re being so specific it may be caching the result of the query\n')
('innodb', 'faster', 'myisam', 'performance', '10558700', 'beststat is innodb so i have row-level locking and consindering i do a lot of inserts-updates it should be faster than myisam\n')
('myisam', 'better', 'innodb', '', '13482192', 'finally even if somehow you could manage myisam to perform better than innodb that doesn t mean innodb is inadecuate at all\n')
('innodb', 'newer', 'myisam', '', '7776000', 'innodb is newer while myisam is older\n')
('myisam', 'faster', 'innodb', 'performance', '4459983', 'some people have said that for reads myisam is faster but recent improvements in innodb have either alleviated or eradicated this difference\n')
('innodb', 'better choice', 'myisam', '', '15729523', 'innodb is a better choice as myisam is really old engine and would fade away in near future\n')
('innodb', 'much better', 'myisam', '', '8021213', 'generally innodb is much better for preserving your data integrity so stick with it and do not go back to myisam there is also a matter of what each engine is best fore but unless you give us more details there is no point in dwelling on that\n')
('myisam', 'faster', 'innodb', 'performance', '12088160', 'the engine is myisam i ve heard people recommend switching to innodb but many others said myisam is faster with large amounts of data in terms of counting and innodb better for safe transactions\n')
('innodb', 'more resistant', 'myisam', '', '7492861', 'innodb is more resistant to table corruption than myisam\n')
('innodb', 'much slower', 'myisam', 'performance', '25632749', 'first question is it normal that innodb is much slower 7x slower than myisam for such usage\n')
('innodb', 'better crash', 'myisam', '', '7776000', 'innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n')
('innodb', 'less', 'myisam', '', '16397869', 'with innodb there is less time lost from table locking while myisam is faster in table readings\n')
('myisam', 'better', 'innodb', '', '13388561', 'i have heard that myisam performs better than innodb on read-oriented tables\n')
('innodb', 'slower', 'myisam', 'performance', '17641256', 'generally you can have as good performance for reading as in myisam in innodb tables - you just can use count without where clause and you always should have a suitable index for where clauses as in innodb table scan will be slower than in myisam\n')
('innodb', 'better', 'myisam', '', '1970160', 'someone just told me that innodb is much better than myisam\n')
('innodb', 'safer', 'myisam', 'security', '1042989', 'innodb is a safer acid compliant engine with some integrity features that myisam lacks\n')
('myisam', 'better', 'innodb', '', '5675916', '1 in mysql engines myisam is better or innodb\n')
('innodb', 'better', 'myisam', '', '9462159', 'innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n')
('myisam', 'more', 'innodb', '', '6314981', 'not sure why people think myisam is more performant than innodb - it s a conundrum wrapped in an enigma\n')
('myisam', 'infinitely more efficient', 'innodb', 'performance', '18088402', 'there are some situations when myisam is infinitely more efficient than innodb when manipulating large data dumps offline because of table lock\n')
('myisam', '2x faster', 'innodb', 'performance', '13494410', 'select queries in myisam runs 2x faster then in innodb but the updates and insert queries are much slower in myisam\n')
('innodb', 'more strict', 'myisam', '', '9462159', 'innodb is more strict in data integrity while myisam is loose\n')
('innodb', 'more complex', 'myisam', 'usability', '9211731', 'innodb implements mvcc multi-versioning concurrency control so locking is much more complex than with myisam\n')
('innodb', 'more complex', 'myisam', 'usability', '13247861', 'innodb is more complex while myisam is simpler\n')
('innodb', 'better', 'myisam', '', '15558403', 'innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n')
('innodb', 'more scalable', 'myisam', '', '23090582', 'innodb is more scalable and myisam doesn t support any of the properties of acid\n')
('myisam', 'much faster', 'innodb', 'performance', '8171849', 'in general it seems as though the concensus is to primarily use innodb but there are still some areas in which myisam is much faster than innodb\n')
('innodb', 'more', 'myisam', '', '10308655', 'innodb is more strict in data integrity while myisam is not as\n')
('innodb', 'larger', 'myisam', 'memory', '8004971', 'put another way let s say i start with a new innodb table and insert 20 gb of data assuming that 20 gb incorporates all the excess innodb stuff i realize data stored in innodb is larger than myisam then i delete all data then i insert 10 gb of data\n')
('myisam', 'faster', 'innodb', 'performance', '4077800', 'myisam is faster but does not support the use of transactions like innodb does\n')
('innodb', 'better choice', 'myisam', '', '24803981', 'mostly innodb is better choice than a myisam\n')
('innodb', 'better engine', 'myisam', '', '11977129', 'tuning innodb which is the better engine requires adjusting different values than myisam which is often the fast-but-unsafe default\n')
('innodb', 'more', 'myisam', '', '10308655', 'innodb is more complex while myisam is simpler\n')
('innodb', 'more', 'myisam', '', '17195485', 'innodb is affected by the primary key much more than myisam and it could make a noticeable difference\n')
('innodb', 'more', 'myisam', '', '7776021', 'innodb is more complex while myisam is simpler\n')
('myisam', 'faster', 'innodb', 'performance', '990780', 'i heard myisam is faster but others say innodb can be fast also but it takes abit more to optimize it\n')
('innodb', 'safer acid', 'myisam', 'security', '1042989', 'innodb is a safer acid compliant engine with some integrity features that myisam lacks\n')
('innodb', 'slower', 'myisam', 'performance', '1359270', 'however innodb tends to be slower as myisam\n')
('innodb', 'relatively newer', 'myisam', '', '8213500', 'innodb is relatively newer than myisam and is transaction safe\n')
('innodb', 'slower', 'myisam', 'performance', '21863823', 'at the beginning the insert performance of innodb is almost 50 times slower than myisam and tokudb is 40 times slower than myisam\n')
('innodb', 'slower', 'myisam', 'performance', '4747099', 'innodb table is a bit slower than myisam tables but i don t think it is a major problem as you told you are using drupal system is that a kind of mult-sites like a word-press system\n')
('innodb', 'more resistant', 'myisam', '', '24906639', 'innodb is more resistant to table corruption than myisam\n')
('innodb', 'more', 'myisam', '', '13247861', 'innodb is more complex while myisam is simpler\n')
('innodb', 'higher performance', 'myisam', 'performance', '579589', 'their conclusion innodb has 30 higher performance than myisam on average\n')
('myisam', 'faster', 'innodb', 'performance', '8869636', 'if you are not using transactions while storing or updating tables switch table type to myisam its quite faster than innodb with much less overhead\n')
('myisam', 'less', 'innodb', '', '19705475', 'therefore accessing myisam consumes less resources than innodb\n')
('innodb', 'better', 'myisam', '', '8444146', 'innodb scales better than myisam\n')
('innodb', 'more', 'myisam', '', '15558403', 'innodb is more complex while myisam is simpler\n')
('innodb', 'slower', 'myisam', 'performance', '228750', 'also innodb is slower than myisam unless myisam is blocking for a huge select\n')
('innodb', 'more', 'myisam', '', '7776021', 'innodb is more strict in data integrity while myisam is loose\n')
('innodb', 'more complex', 'myisam', 'usability', '15558403', 'innodb is more complex while myisam is simpler\n')
('myisam', 'faster', 'innodb', 'performance', '6679187', 'after testing it seems that myisam is faster than innodb when using when there is no where clause\n')
('innodb', 'newer', 'myisam', '', '7776021', 'innodb is newer while myisam is older\n')
('myisam', 'faster', 'innodb', 'performance', '1774377', 'myisam inserts are going to be faster than innodb so if you re logging data and retrieving it later that will be a win\n')
('innodb', 'more strict', 'myisam', '', '7776000', 'innodb is more strict in data integrity while myisam is loose\n')
('innodb', 'faster', 'myisam', 'performance', '3137522', 'but innodb has improved dramatically in the past few years and in most cases today innodb performs faster than myisam\n')
('innodb', 'more strict', 'myisam', '', '10308655', 'innodb is more strict in data integrity while myisam is not as\n')
('myisam', 'smaller same', 'innodb', 'memory', '14454893', 'as you know myisam table sizes are about three or more times smaller than same innodb tables\n')
('innodb', 'more complex', 'myisam', 'usability', '10308655', 'innodb is more complex while myisam is simpler\n')
('myisam', 'faster', 'innodb', 'performance', '9114209', 'the script was tested using myisam and it indexes products relatively fast much much faster than innodb\n')
('myisam', 'marginally better', 'innodb', '', '7492861', 'there may be some exotic corner cases where myisam performs marginally better for certain workloads table-scans or high-volume insert-only work but the default choice should be innodb unless you can prove you have a case that myisam does better\n')
('myisam', 'better', 'innodb', '', '1318324', '3 mysqlhotcopy inly works on myisam tables and in most applications you are better off with innodb\n')
('myisam', 'faster', 'innodb', 'performance', '9948201', 'myisam has historically been viewed as faster than innodb but for recent versions of innodb that is true for a much much smaller set of use cases\n')
('innodb', 'better crash', 'myisam', '', '10308655', 'innodb has better crash recovery while myisam is poor at recovering data integrity at system crashes\n')
('myisam', 'better', 'innodb', '', '19664261', 'myisam delivers better read performance compared to innodb at the cost of being less acid compliant\n')
('myisam', 'better', 'innodb', '', '7887458', 'myisam is actually better than innodb for spatial data btw because it also supports r-tree spatial indexes but not as powerful queries as postgis. if you just need points though innodb or myisam b-trees are adequate\n')
('innodb', 'slower', 'myisam', 'performance', '6348127', 'generally speaking innodb is slower than myisam as innodb is atomic while myisam is not\n')
('innodb', 'longer', 'myisam', '', '3075441', 'so that means that in practice an innodb write will take 3 times longer than a myisam write\n')
('myisam', 'faster', 'innodb', 'performance', '15620322', 'in general is myisam faster than innodb\n')
('innodb', 'more', 'myisam', '', '365834', 'innodb has more overhead but uses row-level locking so that reads and writes can happen concurrently without the problems that myisam s table locking incurs\n')
('innodb', 'faster', 'myisam', 'performance', '20412828', 'have you considered changing to innodb - it has much better concurrency support and in some contexts will run faster than myisam\n')
('innodb', 'faster', 'myisam', 'performance', '23940847', 'even this blog from 2007 shows benchmark results that innodb is on par with or faster than myisam under most workloads\n')
('innodb', 'more', 'myisam', '', '24803579', 'and now i have learned that innodb uses more memory at-least while reading than myisam engine so i am trying to change the default engine of mysql to use myisam\n')
('innodb', 'slower', 'myisam', 'performance', '25632749', 'first question is it normal that innodb is much slower 7x slower than myisam for such usage\n')
('myisam', 'faster', 'innodb', 'performance', '8153417', 'myisam is still widely used in web applications as it has traditionally been perceived as faster than innodb in situations where most db access is reads\n')
('innodb', 'slower', 'myisam', 'performance', '9114209', 'why is innodb so much slower than myisam in my case\n')
('innodb', 'often slower', 'myisam', 'performance', '5896369', 'innodb is often slower than myisam being a transactional db engine with acid properties\n')
('innodb', 'more memory', 'myisam', 'memory', '24803579', 'and now i have learned that innodb uses more memory at-least while reading than myisam engine so i am trying to change the default engine of mysql to use myisam\n')
('innodb', 'better choice', 'myisam', '', '17765637', 'almost always innodb is a better choice than myisam\n')
('myisam', 'faster', 'innodb', 'performance', '6689067', 'edited to add myisam is faster than innodb because it is simpler\n')

fork	pthreads	2
('fork', 'better', 'pthreads', '', '11662781', 'but when is fork and clone better than pthreads\n')
('fork', 'better', 'pthreads', '', '22140337', 'there is a nice comparison of threads and processes here when is clone and fork better than pthreads\n')

textarea	pre	2
('textarea', 'more', 'pre', '', '15693980', 'textarea has one more line than pre\n')
('textarea', 'more line', 'pre', '', '15693980', 'textarea has one more line than pre\n')

cheerio	jsdom	4
('cheerio', 'faster', 'jsdom', 'performance', '13901897', 'i had the same problem with jsdom and switcht to cheerio which is much faster than jsdom and works even after scanning hundreds of sites\n')
('cheerio', 'easier', 'jsdom', 'usability', '14532393', 'i find request + cheerio to be easier than jsdom for tasks like this\n')
('cheerio', 'faster', 'jsdom', 'performance', '20374129', 'if it is unavoidable node.js has good options - try to use the module cheerio which is faster than heavy weight jsdom\n')
('cheerio', 'much faster', 'jsdom', 'performance', '13901897', 'i had the same problem with jsdom and switcht to cheerio which is much faster than jsdom and works even after scanning hundreds of sites\n')

xom	xstream	1
('xom', 'better', 'xstream', '', '4492941', 'but if convenience is more important than efficiency yes you probably should consider a tree model not dom necessarily xom is better for example or data binding jaxb or xstream\n')

qabstractitemmodel	qstandarditemmodel	1
('qabstractitemmodel', 'more useful', 'qstandarditemmodel', 'usability', '14528353', 'do need implementation of qabstractitemmodel that can be more useful than qstandarditemmodel\n')

vmware	virtualbox	8
('vmware', 'faster', 'virtualbox', 'performance', '630233', 'in my experience i ve found that vmware seems to be faster than virtualbox although i don t have any hard data to back it up\n')
('virtualbox', 'less powerfull', 'vmware', '', '8107257', 'virtualbox free but less powerfull than vmware\n')
('vmware', 'more', 'virtualbox', '', '55578', 'vmware has more features but costs 80 virtualbox on the other hand is more basic but is free for most users see virtualbox licensing faq for details\n')
('virtualbox', 'better', 'vmware', '', '3791405', 'fwiw i have never gotten freebsd to work properly under virtualbox perhaps if you need that you would be better off with vmware which does\n')
('vmware', 'faster', 'virtualbox', 'performance', '12349097', 'from my experience vmware 5 is faster than virtualbox 4.2 rc3 and has better smp performance\n')
('vmware', 'more features', 'virtualbox', 'usability', '55578', 'vmware has more features but costs 80 virtualbox on the other hand is more basic but is free for most users see virtualbox licensing faq for details\n')
('vmware', 'better', 'virtualbox', '', '5763931', 'i am not sure if vmware server will be much better than virtualbox\n')
('vmware', 'faster', 'virtualbox', 'performance', '630233', 'even though vmware has been faster for me i still use virtualbox because it s good enough and is free and im cheap\n')

screens	mdpi	8
('screens', 'slightly taller', 'mdpi', '', '11429933', 'proportionally the hdpi screens is slightly taller than the mdpi screens\n')
('screens', 'size larger', 'mdpi', 'memory', '19835542', 'since the screens size is larger than the common mdpi screens sizes 320x480 the text size looks smaller in this emulator\n')
('screens', 'density less', 'mdpi', '', '13482946', 'if the screens density is less than xhdpi i load smaller sampled sizes of the 96x96 image - as 36x36 for ldpi 48x48 for mdpi 72x72 for hdpi\n')
('screens', 'slightly taller', 'mdpi', '', '11429834', 'proportionally the hdpi screens is slightly taller than the mdpi screens\n')
('screens', 'bigger', 'mdpi', 'memory', '15987663', 'i read in some tutorials that android automatically scales up the images when the screens resolution is bigger than mdpi\n')
('screens', 'taller', 'mdpi', '', '11429834', 'proportionally the hdpi screens is slightly taller than the mdpi screens\n')
('screens', 'resolution bigger', 'mdpi', 'memory', '15987663', 'i read in some tutorials that android automatically scales up the images when the screens resolution is bigger than mdpi\n')
('screens', 'taller', 'mdpi', '', '11429933', 'proportionally the hdpi screens is slightly taller than the mdpi screens\n')

webstorm	aptana	1
('webstorm', 'better', 'aptana', '', '1627531', 'if you re focussing on pure client code then i find webstorm to be an excellent javascript html ide - even better than aptana\n')

passenger	puma	1
('passenger', 'more features', 'puma', 'usability', '15435871', 'phusion passenger 4 enterprise bring many advantages over has more features than puma and rainbows for example it has out of band garbage collection can dynamically adjust the number of processes based on traffic completely automates rolling restarts so you don t need scripting etc\n')

printf	strtod	1
('printf', 'slower', 'strtod', 'performance', '5830907', 'a fairer comparison would be comparing stringstream to the printf sscanf line of functions which would be slower than strtod but still faster than stringstream\n')

rank	min	2
('rank', 'greater value', 'min', '', '21209545', 'a simple way to get the indices of a rank 1 array arr for elements greater than value min is\n')
('rank', 'less', 'min', '', '13146750', 'thus if the rank of an nxm matrix is less than min n m then the matrix is singular\n')

inherited	subclassing	12
('inherited', 'more', 'subclassing', '', '154057', 'inherited is more useful when a new subclassing wants to change the way a method works if you just need to change the data the class uses to work probably an approach like this would do the trick\n')
('inherited', 'mapping more', 'subclassing', '', '15552495', 'but native hibernate support regarding inherited mapping is more powerful than standard jpa and single table per class hierarchy or table per subclassing mapping strategies are more suitable for polymorphic queries and associations than table per concrete class strategy\n')
('subclassing', 'more', 'inherited', '', '5527347', 'similarly as the subclassing gains more methods it inherited the list of superclass in the order in which they were named that precede it\n')
('subclassing', 'more appropriately', 'inherited', '', '6020740', 'i generally use interfaces are too enforce a common behavior that a group of classes share whereas subclassing is more appropriately used in cases where you can achieve serious code re-use through inherited functions properties\n')
('subclassing', 'more', 'inherited', '', '6020740', 'i generally use interfaces are too enforce a common behavior that a group of classes share whereas subclassing is more appropriately used in cases where you can achieve serious code re-use through inherited functions properties\n')
('subclassing', 'more accurately', 'inherited', '', '1331150', 'since ireadwrite implements ireadonly ireadwrite is said to be a subclassing of ireadonly although subclassing is more accurately used to describe a class which inherited a base class rather then implements an interface--for the sake of simplicity they are very nearly the same concept\n')
('inherited', 'more useful', 'subclassing', 'usability', '154057', 'inherited is more useful when a new subclassing wants to change the way a method works if you just need to change the data the class uses to work probably an approach like this would do the trick\n')
('inherited', 'mapping more powerful', 'subclassing', 'usability', '15552495', 'but native hibernate support regarding inherited mapping is more powerful than standard jpa and single table per class hierarchy or table per subclassing mapping strategies are more suitable for polymorphic queries and associations than table per concrete class strategy\n')
('subclassing', 'more', 'inherited', '', '1331150', 'since ireadwrite implements ireadonly ireadwrite is said to be a subclassing of ireadonly although subclassing is more accurately used to describe a class which inherited a base class rather then implements an interface--for the sake of simplicity they are very nearly the same concept\n')
('subclassing', 'more methods', 'inherited', '', '5527347', 'similarly as the subclassing gains more methods it inherited the list of superclass in the order in which they were named that precede it\n')
('subclassing', 'better', 'inherited', '', '20999393', 'depending on how your application is structured this means you may want to have your own base class implementing iresource which creates your custom not found resource for all of its subclassing or better make a wrapper since composition is better than inherited\n')
('subclassing', 'trickier', 'inherited', '', '12945925', 'with subclassing is trickier because any private members of a class are not inherited by the subclassing but protected and public are\n')

sqlcommand	oledbcommand	2
('sqlcommand', 'more', 'oledbcommand', '', '15882849', 'as shown in sample below for sqlcommand which is more or less same as oledbcommand\n')
('sqlcommand', 'less same', 'oledbcommand', '', '15882849', 'as shown in sample below for sqlcommand which is more or less same as oledbcommand\n')

liblinear	libsvm	5
('liblinear', 'more', 'libsvm', '', '13275267', 'you can also try sklearn.linear_model.logisticregression and sklearn.svm.linearsvc both implemented using liblinear that is more scalable than libsvm albeit less memory efficients than other linear models in scikit-learn\n')
('liblinear', 'faster linear', 'libsvm', 'performance', '22134252', 'liblinear is considered faster than linear libsvm and often used for large scale data set\n')
('liblinear', 'faster', 'libsvm', 'performance', '11508788', 'and how do the differences make liblinear faster than libsvm\n')
('liblinear', 'more scalable', 'libsvm', '', '13275267', 'you can also try sklearn.linear_model.logisticregression and sklearn.svm.linearsvc both implemented using liblinear that is more scalable than libsvm albeit less memory efficients than other linear models in scikit-learn\n')
('liblinear', 'faster', 'libsvm', 'performance', '22134252', 'liblinear is considered faster than linear libsvm and often used for large scale data set\n')

put	get	7
('get', 'slower', 'put', 'performance', '3380000', 'since most data-storage mechanisms in-ram in a database etc. get a lot slower as you put more data in them you should ensure you re only timing your http access and not looking at overall crawler throughput including storage\n')
('put', 'method better', 'get', '', '794801', 'right now i would have to say the put method is better since it works and i could not get the webservice to work\n')
('put', 'more difficult', 'get', '', '8805725', 'from an interface design standpoint you want user-agents to make post and put and delete more difficult than get or at least distinctly different so that users can rely on that difference to hint when their actions might cause a change in the resource state because they are responsible for those changes\n')
('get', 'more once', 'put', '', '19144096', 'to get your code to run more than once put it in a while loop\n')
('put', 'less frequent', 'get', '', '6337024', 'you got at least put and delete although they are used much less frequent than get and post as in hardly ever\n')
('get', 'worse', 'put', '', '7779856', 'i m concerned this is going to get worse as we put more tests into the specflow project\n')
('get', 'less', 'put', '', '16422108', 'this should be producing a topological sort but so far i consistently get one value less than i put in as far as number of vertices and none of the number match those i ve inputted\n')

jtable	jlabel	2
('jtable', 'more', 'jlabel', '', '22259109', 'why don t you do a simple test that tries to read and display an image in a jlabel first since using a jtable is more complicated than using a jlabel\n')
('jtable', 'more complicated', 'jlabel', 'usability', '22259109', 'why don t you do a simple test that tries to read and display an image in a jlabel first since using a jtable is more complicated than using a jlabel\n')

redeclaration	ivar	2
('redeclaration', 'cleaner way', 'ivar', '', '13670789', 'this redeclaration allows a cleaner way to access and mutate the property internally without resorting to fragile ivar synthesis which is becoming an antiquity now that the compiler does it for you\n')
('redeclaration', 'cleaner', 'ivar', '', '13670789', 'this redeclaration allows a cleaner way to access and mutate the property internally without resorting to fragile ivar synthesis which is becoming an antiquity now that the compiler does it for you\n')

emgucv	opencv	1
('emgucv', 'blurrier', 'opencv', '', '8214222', 'the results end up very close but the emgucv image comes out a little bit blurrier than the opencv image\n')

findviewbyid	oncreate	1
('findviewbyid', 'earlier', 'oncreate', '', '15314477', 'you can t findviewbyid earlier than oncreate\n')

installation	upgrade	3
('installation', 'slower', 'upgrade', 'performance', '12791808', 'does an eclipse installation perform slower after the upgrade\n')
('installation', 'much better', 'upgrade', '', '765929', 'as for production side of things upgrading your database in transaction msi-style installation is much better than attempting to upgrade at each app startup since you can potentially end up with desynchronized database-application versioning\n')
('upgrade', 'smaller', 'installation', 'memory', '12159596', 'this can enable the user to download an upgrade patch that is much smaller than the installation package for the entire product\n')

sum	aggregate-functions	6
('aggregate-functions', 'more', 'sum', '', '10256374', 'aggregate-functions is more general version of sum\n')
('sum', 'more consistent', 'aggregate-functions', '', '3323081', 'i changed out total for sum which is more consistent with other databases sqlite aggregate-functions\n')
('aggregate-functions', 'more general', 'sum', '', '5653498', 'as an added answer there is also the aggregate-functions which is more general than sum\n')
('aggregate-functions', 'more general', 'sum', '', '10256374', 'aggregate-functions is more general version of sum\n')
('sum', 'more', 'aggregate-functions', '', '3323081', 'i changed out total for sum which is more consistent with other databases sqlite aggregate-functions\n')
('aggregate-functions', 'more', 'sum', '', '5653498', 'as an added answer there is also the aggregate-functions which is more general than sum\n')

buildr	maven	2
('buildr', 'faster', 'maven', 'performance', '7776944', 'i read in a blog article that buildr a ruby based build tool was two times faster than maven for a simple build\n')
('buildr', 'faster', 'maven', 'performance', '145433', 'and even though everybody says ruby is slow buildr was 2-6x faster than maven\n')

mouseover	mouseout	2
('mouseover', 'animation 200ms longer', 'mouseout', '', '12685001', 'the mouseover animation is 200ms longer than the mouseout so if you mouseover and mouseout in less than 200ms total the animations run in parallel and the mouseover one finishes last leaving the color red\n')
('mouseover', 'longer', 'mouseout', '', '12685001', 'the mouseover animation is 200ms longer than the mouseout so if you mouseover and mouseout in less than 200ms total the animations run in parallel and the mouseover one finishes last leaving the color red\n')

mergesort	heapsort	3
('heapsort', 'slower', 'mergesort', 'performance', '22386409', 'heapsort tends to be slower than mergesort for the same reason.\n')
('mergesort', 'faster', 'heapsort', 'performance', '16308408', 'normally quicksort is faster than mergesort which is faster than heapsort\n')
('mergesort', 'slower', 'heapsort', 'performance', '18386733', 'typically mergesort is slower than heapsort and quicksort but that s usually under the assumption that comparisons are fast\n')

mutation	crossover	1
('mutation', 'typically easier', 'crossover', 'usability', '9824732', 'mutation is typically easier to do this with than crossover\n')

bellman-ford	dijkstra	7
('dijkstra', 'algorithm more efficient', 'bellman-ford', 'performance', '19482317', 'after a lot of googling i ve found that most sources say that the dijkstra algorithm is more efficient than the bellman-ford algorithm\n')
('bellman-ford', 'slower', 'dijkstra', 'performance', '12665448', 'bellman-ford as suggested in your question tends to be slower than either dijkstra s or a - it is primarily used when there are negative edge-weights which there are not here\n')
('bellman-ford', 'slower', 'dijkstra', 'performance', '20273939', 'the only issue with applying that technique for the single source shortest path problem is that reweighting with bellman-ford takes o mn time which is slower than dijkstra s o m log n\n')
('bellman-ford', 'better', 'dijkstra', '', '19482317', 'but under what circumstances is the bellman-ford algorithm better than the dijkstra algorithm\n')
('bellman-ford', 'approach better', 'dijkstra', 'usability', '19482317', 'surely there is some situation in which the bellman-ford approach is better than the dijkstra approach\n')
('dijkstra', 'algorithm more', 'bellman-ford', '', '19482317', 'after a lot of googling i ve found that most sources say that the dijkstra algorithm is more efficient than the bellman-ford algorithm\n')
('bellman-ford', 'better', 'dijkstra', '', '19482317', 'surely there is some situation in which the bellman-ford approach is better than the dijkstra approach\n')

compareto	equals	22
('compareto', 'less', 'equals', '', '22743324', 'implement compareto in temporary temporary.compareto left such that it returns a negative integer zero or a positive integer as temporary is less than equals to or greater than the left\n')
('compareto', 'greater', 'equals', '', '22186019', 'the compareto method returns 1 0 or -1 depending on whether value a is respectively greater than equals to or lesser than value b\n')
('compareto', 'less', 'equals', '', '17790456', 'compareto returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '', '13719521', 'compareto method returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '', '8694958', 'icomparable declares the compareto method which returns an integer that specifies a less than equals to or greater than relationship between two objects of the same type\n')
('compareto', 'less', 'equals', '', '22130261', 'i am using the min value because i read that the compareto method returns negative 0 or positive whether the first string is less than equals to or greater than the second\n')
('compareto', 'less', 'equals', '', '1168889', 'compareto compares values and returns an int which tells if the values compare less than equals or greater than\n')
('compareto', 'worse', 'equals', '', '16559648', 'when one of the strings is a prefix of another the performance of compareto is worse as it still needs to determine the lexicographical ordering while equals won t worry any more and return false immediately\n')
('compareto', 'greater', 'equals', '', '21615168', 'you need to call the compareto method which will indicate the result of the comparison by returning an integer less than greater than or equals to 0\n')
('compareto', 'less', 'equals', '', '2045608', 'in the compareto method you can then write the code which will call the getters for the year month and so on until it figures out whether the current object is less than equals to or greater than the object o being passed into the compareto method\n')
('compareto', 'less', 'equals', '', '2504816', 'the interface defines one method compareto that must return a negative integer zero or a positive integer if this object is less than equals to or greater than the other object respectively\n')
('compareto', 'less', 'equals', '', '1814118', 'per the page i linked to compareto returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object.\n')
('compareto', 'less', 'equals', '', '17221209', 'compareto defines whether your base student is greater than less than or equals to your studenttocompare and you can define these with any criteria you please\n')
('compareto', 'greater', 'equals', '', '11146653', 'i am using the compareto method in java to try and check if a certain date is greater than or equals than 24 hours after another date\n')
('compareto', 'less', 'equals', '', '20005392', 'i know that in java there is a compareto method that you can write in a class that will compare two variables and return a value -1 1 or 0 signifing greater than less than and equals to operations\n')
('compareto', 'less', 'equals', '', '14918703', 'compareto return a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '', '15893212', 'if this works it seems that u are still comparing the strings in your ordered list and u should now check if the return value of compareto is less grater equals to 0\n')
('compareto', 'less', 'equals', '', '22085195', 'all i changed was the first compareto comparison to be less than instead of less than or equals to\n')
('compareto', 'less', 'equals', '', '8528899', 'or is it compareto returns negative numbers 0 and positive numbers respectively indicating whether the calling object is less than equals to or greater than the specified object\n')
('compareto', 'less', 'equals', '', '13620180', 'this interface defines the method compareto t which will return a negative number zero or a positive number if the first object is less than equals to or greater than the other one respectively\n')
('compareto', 'less grater', 'equals', '', '15893212', 'if this works it seems that u are still comparing the strings in your ordered list and u should now check if the return value of compareto is less grater equals to 0\n')
('compareto', 'less', 'equals', '', '22751028', 'with this rather than needing to implement a comparator all you need to implement is the int compareto class o method in the class which returns a negative integer zero or a positive integer as this object is less than equals to or greater than the specified object.\n')

pyodbc	adodbapi	1
('pyodbc', 'better', 'adodbapi', '', '11666564', 'i am not sure but by reading the documentation i think you need to download the pyodbc it seems to be better supported than adodbapi\n')

trac	bugzilla	1
('trac', 'better', 'bugzilla', '', '471259', 'trac s issue tracking is little better than bugzilla s...i know a lot of folks love trac but i find it very inflexible\n')

handbrake	ffmpeg	2
('handbrake', 'simpler', 'ffmpeg', 'usability', '15694380', 'you may also use handbrake which is a simpler encoder than ffmpeg\n')
('handbrake', 'simpler encoder', 'ffmpeg', 'usability', '15694380', 'you may also use handbrake which is a simpler encoder than ffmpeg\n')

distinct	union	4
('union', 'faster', 'distinct', 'performance', '3634389', 'however the tables are huge and the union all i read its faster than distinct takes forever to execute even with just two tables let alone 6\n')
('distinct', 'faster', 'union', 'performance', '3877976', 'i am currently using union all and a distinct in the outer query as this proved much faster than using union s for the uniqueness of data\n')
('union', 'faster', 'distinct', 'performance', '22829159', 'a side note since you want all rows using union all is faster since it does not need to perform a distinct to eliminate duplicates\n')
('distinct', 'slower', 'union', 'performance', '1804853', 'keep in mind that union will return a distinct list - duplicates will be removed but it will perform slower than using union all which will not remove duplicates\n')

jlabel	jinternalframe	1
('jlabel', 'smaller', 'jinternalframe', 'memory', '8088885', 'my problem is this i don t want the jlabel or the jscrollpane to stretch to the size of the jinternalframe if the jlabel is smaller than the jinternalframe\n')

owl	rdf	5
('owl', 'richer', 'rdf', '', '6004853', 'owl is richer than languages such as rdf schema rdfs\n')
('owl', 'more expressive', 'rdf', '', '15074623', 'owl and rdfs are more expressive than rdf which means here that you can capture more complex relations for instance you can also represent the link between sets of things rdfs subclassof or use transitive properties hasancestor\n')
('owl', 'more advanced', 'rdf', '', '21358258', 'owl is a more advanced language than rdf\n')
('owl', 'more advanced language', 'rdf', '', '21358258', 'owl is a more advanced language than rdf\n')
('owl', 'more', 'rdf', '', '21358258', 'owl is a more advanced language than rdf\n')

gdk	cairo	2
('gdk', 'more basic', 'cairo', '', '3221088', 'to draw you can use either plain gdk which is more basic or use cairo which is more flexible drawing library nb\n')
('gdk', 'more', 'cairo', '', '3221088', 'to draw you can use either plain gdk which is more basic or use cairo which is more flexible drawing library nb\n')

justmock	typemock	1
('justmock', 'less expensive', 'typemock', '', '12626118', 'justmock less expensive than typemock but still expensive\n')

queryover	nhibernate	2
('queryover', 'much more robust', 'nhibernate', 'reliability', '16040119', 'right now queryover is much more robust in the nhibernate community mainly because it is based on criteria queries which have been around for quite some time\n')
('queryover', 'much more', 'nhibernate', '', '16040119', 'right now queryover is much more robust in the nhibernate community mainly because it is based on criteria queries which have been around for quite some time\n')

rythm	freemarker	1
('rythm', 'faster', 'freemarker', 'performance', '13855484', 'probably you can take a look at rythm template engine which is much faster than freemarker and velocity also much easier to use\n')

tidekit	tidesdk	2
('tidekit', 'better', 'tidesdk', '', '25117498', 'here is the blog post about the comparison how tidekit would be better than tidesdk\n')
('tidekit', 'better', 'tidesdk', '', '24966264', 'here is the blog post about the comparison how tidekit would be better than tidesdk\n')

combinators	fold	1
('combinators', 'more complex', 'fold', 'usability', '7533837', 'i m also looking for more examples and explanations of complex combinators more complex than fold in common programming languages\n')

cassini	iis	5
('iis', 'better performance', 'cassini', 'performance', '1849455', 'while iis does give us better performance than cassini we would still like to be able to hit f5 to run our application from within visual studio\n')
('iis', 'better', 'cassini', '', '11386063', 'iis express is a web server albeit better than cassini iis express is not your problem\n')
('cassini', 'slower', 'iis', 'performance', '1082128', 'for my webapp the integrated visual studio server cassini ist much slower than iis\n')
('cassini', 'much more', 'iis', '', '10254781', 'what i would suggest is to make sure you are using visual studio 2010 sp1 then install iis express which is an upgrade to cassini and is much more like real iis and then switch your project to use iis express and see if you get the same exception\n')
('iis', 'slower', 'cassini', 'performance', '12954150', 'what could be the reason that makes iis slower than cassini\n')

tree	skip-lists	2
('tree', 'better concurrent', 'skip-lists', '', '7989690', 'in a single thread world is different you can use a sorted set a binary tree or your custom data structure that would perform better than concurrent skip-lists\n')
('tree', 'better', 'skip-lists', '', '576296', 'so as you can see the random binary search tree was rather a lot better than the skip-lists\n')

helpers	actioncontroller	2
('helpers', 'more', 'actioncontroller', '', '16974509', 'actionlink helpers is more often used to generate url properly based on the actioncontroller route values etc and anchor tag based on htmlattributes etc\n')
('helpers', 'more often', 'actioncontroller', '', '16974509', 'actionlink helpers is more often used to generate url properly based on the actioncontroller route values etc and anchor tag based on htmlattributes etc\n')

uart	adc	1
('uart', 'higher priority', 'adc', '', '24189309', 'the only problem is that when the mcu is transmitting data uart transmission interrupt has higher priority than the adc reading interrupt the adc is not sampling data hence there will be data loss sample rate is around 500 samples sec\n')

screens	tablet	18
('screens', 'width smaller', 'tablet', 'memory', '22564398', 'this will only be added if the screens width is smaller than 480px else the tablet version would show the mobile version\n')
('tablet', 'higher', 'screens', '', '14034137', 'by contrast a nexus 7 tablet has higher actual screens resolution than an ipad mini but it reports to your web page a smaller screens size\n')
('screens', 'bigger', 'tablet', 'memory', '18123310', 'if the screens is bigger than 1024px it should be green my tablet screens is but the background stays yellow\n')
('screens', 'always smaller', 'tablet', 'memory', '13551919', 'that hopefully explains why a typical 320dp phone screens is always smaller than a 720dp tablet screens although the smaller screens can have more pixel than the larger\n')
('screens', 'smaller', 'tablet', 'memory', '24329917', 'twitter desktop accomodates screensizes from around 1048px wide when you are on a screens that is smaller then that you are probably on a tablet or smartphone and if you open twitter from a browser on your phone you are instantly redirected to and prompted to download the twitter app\n')
('screens', 'smaller then', 'tablet', 'memory', '24329917', 'twitter desktop accomodates screensizes from around 1048px wide when you are on a screens that is smaller then that you are probably on a tablet or smartphone and if you open twitter from a browser on your phone you are instantly redirected to and prompted to download the twitter app\n')
('tablet', 'higher actual', 'screens', '', '14034137', 'by contrast a nexus 7 tablet has higher actual screens resolution than an ipad mini but it reports to your web page a smaller screens size\n')
('screens', 'smaller', 'tablet', 'memory', '17474847', 'what i would like to do is use css media queries to have the title be above the tabs when the screens gets smaller or on a tablet or iphone\n')
('screens', 'smaller', 'tablet', 'memory', '23130737', 'splitactionbar works only on phones because the screens size is much smaller than tablet and it takes space at the bottom for extra space for your action items\n')
('tablet', 'higher', 'screens', '', '24642555', 'i know that obviously a tablet has a higher screens resolution than a phone because it has more pixels dots on the screens from what ive been reading tablet also have a higher dpi dots per inch than phones as well\n')
('screens', 'size much smaller', 'tablet', 'memory', '23130737', 'splitactionbar works only on phones because the screens size is much smaller than tablet and it takes space at the bottom for extra space for your action items\n')
('tablet', 'often lower', 'screens', '', '18306525', 'this is because that tablet often has a lower density of screens pixels\n')
('tablet', 'simply more', 'screens', '', '23608495', 'you will also notice that the fonts are not scaling as the 7 tablet simply has more screens space available vs the 4 phone\n')
('tablet', 'less full', 'screens', '', '20360940', 'as an example my android tablet s stock video player app has a feature that allows it to be less than full screens\n')
('tablet', 'often lower density', 'screens', '', '18306525', 'this is because that tablet often has a lower density of screens pixels\n')
('screens', 'higher', 'tablet', '', '23728938', 'screens resolution i.e higher than tablet i.e col-md and col-lg in bootstrap language should only cover 11 grid with offset of 1\n')
('screens', 'size smaller', 'tablet', 'memory', '18287856', 'basically my layout has 1200px grid width but i figured that there will be a problem with 1024px screens resolution 20 of the population bla bla so i created media queries when the screens size is smaller than 1199px the grid to change its width to 960px and so on for tablet phones etc..\n')
('screens', 'much smaller', 'tablet', 'memory', '24184394', 'the screens is much smaller so you can not present your app the same way as you can on a tablet\n')

filewriter	printwriter	3
('printwriter', 'more effective', 'filewriter', '', '21198091', 'printwriter is more effective than filewriter and filewriter is needed anyhow but this will work also if you want to do multiples people then just for-loop it and dont forget to close\n')
('filewriter', 'better', 'printwriter', '', '20182239', 'i m not sure if printwriter or filewriter is better but printwriter worked for me\n')
('printwriter', 'more', 'filewriter', '', '21198091', 'printwriter is more effective than filewriter and filewriter is needed anyhow but this will work also if you want to do multiples people then just for-loop it and dont forget to close\n')

telnet	ftp	6
('telnet', 'more general', 'ftp', '', '21419290', 'telnet is more general than ftp and is generally used for command and control\n')
('ftp', 'protocol more', 'telnet', '', '1741448', 'ftp protocol is more complex than http or telnet form example\n')
('ftp', 'protocol more complex', 'telnet', 'usability', '1741448', 'ftp protocol is more complex than http or telnet form example\n')
('telnet', 'easier', 'ftp', 'usability', '1059847', 'it is optimized for downloading larger files where the setup overhead is amortized over the size and number of downloads http is very light-weight you can communicate to an http server using telnet much easier than ftp especially before passive ftp and is designed around html -- the concept that in the course of your navigation you will be visiting many different servers and grabbing only a couple of files at a time from each\n')
('ftp', 'better', 'telnet', '', '10818924', 'yes i know ftp is better than telnet but right now i m stuck with telnet\n')
('telnet', 'more', 'ftp', '', '21419290', 'telnet is more general than ftp and is generally used for command and control\n')

argumentexception	invalidoperationexception	2
('argumentexception', 'more', 'invalidoperationexception', '', '16434842', 'i think the argumentexception is more appropriate because the invalidoperationexception documentation says that the object itself on what the method is called has to be in an invalid state right\n')
('argumentexception', 'more appropriate', 'invalidoperationexception', '', '16434842', 'i think the argumentexception is more appropriate because the invalidoperationexception documentation says that the object itself on what the method is called has to be in an invalid state right\n')

testng	junit	22
('testng', 'more contrived', 'junit', '', '6726758', 'here is what it would look like with testng it s a little more contrived with junit since you can t pass parameters directly to test functions\n')
('junit', 'easier', 'testng', 'usability', '24033060', 'i know this can be achieved with junit but in my experience it is easier with testng\n')
('testng', 'better option', 'junit', 'usability', '6349659', 'if you re doing non-unit testing testng might be a better option than junit\n')
('testng', 'better', 'junit', '', '6216983', 'isn t testng supposed to a better than junit\n')
('junit', 'way more', 'testng', '', '3412814', 'to be perfectly honest i junit is way more popular than testng at least here where i work and live\n')
('testng', 'more options', 'junit', 'usability', '10596592', 'testng offers you more options and possibilites how to run your tests and in which order especially something junit can t\n')
('testng', 'more', 'junit', '', '1823057', 'if you have to do a lot of this honestly testng is more flexible but you can absolutely get it done in junit\n')
('testng', 'more', 'junit', '', '430883', 'testng is more flexible than junit and have multiple advantages like support for parallel testing for example\n')
('junit', 'more popular', 'testng', 'usability', '3412814', 'to be perfectly honest i junit is way more popular than testng at least here where i work and live\n')
('testng', 'more flexible', 'junit', 'usability', '1823057', 'if you have to do a lot of this honestly testng is more flexible but you can absolutely get it done in junit\n')
('junit', 'more', 'testng', '', '3411768', 'edit it seems junit has more printed books as references compared to testng on amazon\n')
('junit', 'easier', 'testng', 'usability', '11842853', 'if you are familiar of using junit it is easier to switch into testng\n')
('junit', 'better solution', 'testng', '', '913928', 'if there is a junit extension or similar framework that provides a better solution than testng then please let me know\n')
('testng', 'more', 'junit', '', '10596592', 'testng offers you more options and possibilites how to run your tests and in which order especially something junit can t\n')
('testng', 'more', 'junit', '', '6738770', 'testng has more capabilities and can be helpful with integration tests junit is more focused on unit tests\n')
('testng', 'more capabilities', 'junit', 'usability', '6738770', 'testng has more capabilities and can be helpful with integration tests junit is more focused on unit tests\n')
('junit', 'more direct', 'testng', '', '1686834', 'junit is more direct and simpel to use if you start to learn java testng has more features but maybe is more complex\n')
('testng', 'more configurable', 'junit', '', '6671', 'testng strives to be much more configurable than junit but in the end they both work equally well\n')
('testng', 'more flexible', 'junit', 'usability', '430883', 'testng is more flexible than junit and have multiple advantages like support for parallel testing for example\n')
('testng', 'much friendlier', 'junit', '', '811937', 'testng is much friendlier to this paradigm than junit though\n')
('junit', 'more', 'testng', '', '1686834', 'junit is more direct and simpel to use if you start to learn java testng has more features but maybe is more complex\n')
('junit', 'way more popular', 'testng', 'usability', '3412814', 'to be perfectly honest i junit is way more popular than testng at least here where i work and live\n')

icmp	udp	1
('icmp', 'slower', 'udp', 'performance', '2290931', 'an icmp packet has a header that is 20 bytes and is probably going to be slightly slower than udp\n')

webclient	webrequest	10
('webclient', 'more', 'webrequest', '', '1726749', 'update i ve created a webhelper class that takes the place of webclient but provides more access to the necessary features of the underlying webrequest\n')
('webrequest', 'just more', 'webclient', '', '18410138', 'webrequest just offers you more functonality than webclient\n')
('webrequest', 'just more functonality', 'webclient', '', '18410138', 'webrequest just offers you more functonality than webclient\n')
('webclient', 'more access', 'webrequest', 'usability', '1726749', 'update i ve created a webhelper class that takes the place of webclient but provides more access to the necessary features of the underlying webrequest\n')
('webclient', 'simpler', 'webrequest', 'usability', '449918', 'webclient is simpler to use than webrequest\n')
('webclient', 'much easier', 'webrequest', 'usability', '7779848', 'a webclient is much easier than a webrequest\n')
('webclient', 'shorter', 'webrequest', '', '7688412', 'webclient is a shorter and more concise syntax but behind the scenes it uses a webrequest so in terms of performance it won t be faster it will be equivalent\n')
('webclient', 'sometimes easier', 'webrequest', 'usability', '91317', 'webclient is sometimes easier to use than webrequest\n')
('webclient', 'easier', 'webrequest', 'usability', '7779848', 'a webclient is much easier than a webrequest\n')
('webrequest', 'more functonality', 'webclient', '', '18410138', 'webrequest just offers you more functonality than webclient\n')

diagram	entity-relationship	3
('diagram', 'more abstract', 'entity-relationship', '', '23722201', 'oo class diagram is more abstract and has more features than entity-relationship diagram\n')
('diagram', 'more', 'entity-relationship', '', '23722201', 'oo class diagram is more abstract and has more features than entity-relationship diagram\n')
('diagram', 'more features', 'entity-relationship', 'usability', '23722201', 'oo class diagram is more abstract and has more features than entity-relationship diagram\n')

clutter	gtk	1
('clutter', 'much more', 'gtk', '', '10371167', 'use clutter which is much more suited to animation and integrates with gtk\n')

repeater	datalist	2
('repeater', 'more', 'datalist', '', '24339151', 'repeater is more light than datalist as datalist creates the view by creating a table whereas repeater doesn t\n')
('repeater', 'more light', 'datalist', '', '24339151', 'repeater is more light than datalist as datalist creates the view by creating a table whereas repeater doesn t\n')

pygobject	gio	1
('pygobject', 'nothing more', 'gio', '', '5819202', 'pygobject is nothing more than a thin layer of glue making gobject gio .\n')

rjdbc	rodbc	2
('rjdbc', 'slower', 'rodbc', 'performance', '21188796', 'now the speed of sql server interaction with r has affected because rjdbc is slower than rodbc but its not too bad\n')
('rjdbc', 'better', 'rodbc', '', '5965234', 'rjdbc may also be a more stable option in the linux environment especially now that the fetch code has been re-written in java as of development release 0.2-0 on r-forge its performance is on par with if not better than rodbc\n')

sqoop	hadoop	2
('sqoop', 'older', 'hadoop', '', '14886668', 'sqoop 1 is older fully functional and mature project supporting hadoop 0.20 1.x 0.23 and 2.0.x you can download the bits from here\n')
('sqoop', 'older fully', 'hadoop', '', '14886668', 'sqoop 1 is older fully functional and mature project supporting hadoop 0.20 1.x 0.23 and 2.0.x you can download the bits from here\n')

xfs	ntfs	1
('xfs', 'faster', 'ntfs', 'performance', '23875193', 'extfs4 or xfs are between 25 and 40 faster than ntfs or refs depending on the optimization\n')

repeater	gridview	8
('repeater', 'still faster', 'gridview', 'performance', '21944601', 'the repeater is still faster than the gridview but the difference shouldn t be big if you code it right\n')
('repeater', 'better decision', 'gridview', '', '1123182', 'a repeater might be a better decision than a gridview as they are friendlier for using custom layouts\n')
('repeater', 'faster', 'gridview', 'performance', '21944601', 'the repeater is still faster than the gridview but the difference shouldn t be big if you code it right\n')
('repeater', 'better', 'gridview', '', '721563', 'maybe a repeater is better but you will be fine with a gridview if you are familiar with it\n')
('repeater', 'fewer templates', 'gridview', '', '7328194', 'repeater has fewer templates then gridview\n')
('repeater', 'far better', 'gridview', '', '10578443', 'in simple words we can say performance of repeater is far better than gridview\n')
('repeater', 'fewer', 'gridview', '', '7328194', 'repeater has fewer templates then gridview\n')
('repeater', 'better', 'gridview', '', '10578443', 'in simple words we can say performance of repeater is far better than gridview\n')

jquery	curvycorners	1
('jquery', 'bigger', 'curvycorners', 'memory', '7823163', 'i know another plugin named jquery corner is available however it s file size being massively bigger than curvycorners i decided to with curvycorners\n')

monomac	monobjc	1
('monomac', 'less mature', 'monobjc', '', '15046560', 'when i evaluated monomac it was less mature than monobjc\n')

emacs	vim	18
('emacs', 'more powerful', 'vim', 'usability', '977462', 'emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs\n')
('emacs', 'slower', 'vim', 'performance', '23619870', 'i realized that emacs would load slower than vim but this seems ridiculous for a fresh install\n')
('emacs', 'more', 'vim', '', '9603048', 'i am starting to understand that even though emacs is more powerful than vim vim is at least 10 times easier to use less keystrokes and requires way less modifications\n')
('vim', 'faster', 'emacs', 'performance', '1430434', 'and i tend to think that after a moderate amount of customisation of either one vim will still start up faster than emacs\n')
('emacs', 'more', 'vim', '', '977462', 'emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs\n')
('emacs', 'better', 'vim', '', '1020038', 'it is worth learning both because emacs is better than vim at editing certain languages and doing certain tasks and vice versa\n')
('vim', 'quicker', 'emacs', '', '977462', 'maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent\n')
('vim', 'more steps', 'emacs', '', '1430939', 'cut and paste in vim takes more steps than in emacs iirc\n')
('vim', 'far more likely', 'emacs', '', '1786996', 'on today s machines that s a non-issue but if you ever find yourself dealing with older gear it s my experience that vim is far more likely to work on a wonky terminal than emacs is\n')
('vim', 'more', 'emacs', '', '1430939', 'cut and paste in vim takes more steps than in emacs iirc\n')
('emacs', 'easier', 'vim', 'usability', '6079323', 'for example emacs s macro shortcut f3 and f4 is easier than vim s qq and q\n')
('emacs', 'easier', 'vim', 'usability', '21159279', 'you might want to try emacs - it has an inbuilt tutorial and some people like me find it easier over vim no flames pls\n')
('emacs', 'more powerful', 'vim', 'usability', '9603048', 'i am starting to understand that even though emacs is more powerful than vim vim is at least 10 times easier to use less keystrokes and requires way less modifications\n')
('emacs', 'better', 'vim', '', '977462', 'maybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalent\n')
('emacs', 'better', 'vim', '', '11520215', 'there are definitely some advantages using external editors however emacs is ten million times better than vim\n')
('emacs', 'much older', 'vim', '', '551342', 'since emacs is much older than the extensible vim as opposed to the relatively non-extensible vi it has a much larger collection of extension modes covering almost any purpose you can imagine\n')
('vim', 'weaker', 'emacs', '', '2153892', 'i ve used vim for 10+ years but never really into vim scripting always subjectively beliving that this was one area where vim was weaker than emacs\n')
('vim', 'far more', 'emacs', '', '1786996', 'on today s machines that s a non-issue but if you ever find yourself dealing with older gear it s my experience that vim is far more likely to work on a wonky terminal than emacs is\n')

principles	ocp	1
('principles', 'easier', 'ocp', 'usability', '18428363', 'i think adhering to the dip principles makes it easier to comply with the ocp principles\n')

profiling	instrumentation	2
('profiling', 'better', 'instrumentation', '', '12452402', 'if you re writing a mac app the opengl profiling tool profiling opengl code better than instrumentation\n')
('profiling', 'more info', 'instrumentation', '', '6131971', 'so my question is beyond instrumentation and the profiling using memory leaks which tells you the location of creation of the leaky object but not the root cause are there any other tools i could run that could give me any more info than instrumentation re tracking down the root cause point\n')

scriptaculous	jquery	2
('scriptaculous', 'better', 'jquery', '', '2762721', 'i also kind of get the impression that scriptaculous drag and drop is better than jquery ui drag and drop based on the online demos\n')
('scriptaculous', 'more configurable', 'jquery', '', '5327986', 'i ended up using scriptaculous for most of my animations simply because it provides smoother animations and more configurable than what jquery ui provides\n')

mef	prism	1
('mef', 'easier', 'prism', 'usability', '16455913', 'mef seemed a bit easier than prism and i started to do a hello world mef app with this tutorial\n')

mousemove	mouseenter	1
('mousemove', 'earlier', 'mouseenter', '', '25777344', 'problably the problem is that mousemove event may fire earlier than mouseenter in some cases\n')

add	subtract	2
('add', 'greater 2pi', 'subtract', '', '13225126', 'just take the difference and if it s negative add 2pi and then if it s greater than 2pi subtract 2pi\n')
('add', 'greater', 'subtract', '', '25599703', 'look at it this way based on your logic while x is greater than 100 add 5 while it s greater than 500 subtract 5 .\n')

substr	strsplit	2
('substr', 'more efficient', 'strsplit', 'performance', '17960609', 'joe duffy s blog implies using substr is more efficient than strsplit\n')
('substr', 'more', 'strsplit', '', '17960609', 'joe duffy s blog implies using substr is more efficient than strsplit\n')

gradle	ivy	1
('gradle', 'longer', 'ivy', '', '20470505', 'today gradle comes with a full-fledged dependency management implementation that no longer builds upon ivy except for some traces that haven t been removed yet for backwards compatibility reasons\n')

eclemma	ecobertura	1
('eclemma', 'plugin nicer', 'ecobertura', '', '5265916', 'the eclemma plugin is nicer and more mature then ecobertura\n')

radgrid	gridview	2
('radgrid', 'heavier asp.net', 'gridview', '', '7382971', 'each tab contains multiple radgrids as radgrid is heavier than asp.net gridview\n')
('radgrid', 'heavier', 'gridview', '', '7382971', 'each tab contains multiple radgrids as radgrid is heavier than asp.net gridview\n')

mouseleave	mouseenter	1
('mouseleave', 'div thicker', 'mouseenter', '', '6888665', 'mouseleave div becomes thicker which will cause an almost automatic mouseenter\n')

geddy	connect	3
('geddy', 'not better', 'connect', '', '10828487', 'geddy is not better than connect express the big thing that differs is the structure of it\n')
('geddy', 'better', 'connect', '', '10826795', 'so what makes geddy significantly better than connect\n')
('geddy', 'better', 'connect', '', '10828487', 'geddy is not better than connect express the big thing that differs is the structure of it\n')

qhash	qmap	3
('qhash', 'faster lookups', 'qmap', 'performance', '8907753', 'qhash provides faster lookups than qmap\n')
('qhash', 'faster', 'qmap', 'performance', '7123723', 'qhash is faster but qmap values are sorted by key if you iterate through them\n')
('qhash', 'faster', 'qmap', 'performance', '8907753', 'qhash provides faster lookups than qmap\n')

max	min	151
('min', 'always smaller', 'max', 'memory', '15899919', 'and i need to check for every item if min is always smaller than max\n')
('max', 'greater', 'min', '', '19188551', 'the syntax is min max where min is zero or a positive integer number indicating the minimum number of matches and max is an integer equal to or greater than min indicating the maximum number of matches\n')
('max', 'heap more', 'min', '', '11317711', 'if the top of the max heap has more than k terms pop off the top term and push it into the min heap\n')
('min', 'greater', 'max', '', '3337251', 'and throws out data that is less than the min or greater than the max\n')
('min', 'less', 'max', '', '7961881', 'the bounds are inclusive ie 2 5 and min must be less than max in the above example\n')
('min', 'higher', 'max', '', '22336343', 'a variation on pentadecagon you are free to set n arbitrary values on the diagonal in some range min..max containing x and fill the rest of the array with lower than min on one side and higher than max on the other\n')
('min', 'higher', 'max', '', '21258023', 'for each new number after the first check if it is lower than min or higher than max and in that case save that instead\n')
('min', 'larger', 'max', 'memory', '7013519', 'if the value of min is larger than max a pop-up will occur\n')
('max', 'greather', 'min', '', '4416278', 'age can be in the range of 0..100 but i want also to validate crossing values i mean that max is greather than or equal to min\n')
('min', 'greater', 'max', '', '1702833', 'in addition i noticed that you also have a possible exceptional scenario for your full constructor when the min value is greater than the max value\n')
('min', 'smaller', 'max', 'memory', '4069256', 'until all your provinces are larger than min size and smaller than max size\n')
('min', 'always lesser', 'max', '', '2777894', 'min is always lesser than guess and max is always greater than guess\n')
('min', 'less', 'max', '', '1753093', 'if min is less than is and is is less than max\n')
('min', 'smaller', 'max', 'memory', '20523498', 'is_valid will be true if inputvalue is larger than min or of it is smaller than max\n')
('max', 'greater', 'min', '', '25682238', 'as you can easily understand max have to be greater than min\n')
('min', 'heap larger part', 'max', 'memory', '9841416', 'in the first iteration the min heap holds the larger part and the max heap\n')
('min', 'less', 'max', '', '10851578', 'take a look at your picture - all the range you want have ending time greater than min and starting time less than max\n')
('min', 'less', 'max', '', '12056781', 'say my model has min and max properties and i want to ensure that min is less than max\n')
('min', 'smaller', 'max', 'memory', '3510057', 'i would like to split the image into tiles so that each tiles area must be larger than a min tile area eg 1024 bytes and smaller than max tile area eg 2048 bytes\n')
('min', 'less', 'max', '', '24353790', 'note this works as long as the min is less than the max and the max is greater than equal to nomin+ 2 noincrement\n')
('max', 'greater', 'min', '', '2133147', 'i d just make two properties min max assign them the value of the first item you add to the array then each time you add a new item just check if its datetime is less or greater than the min max ones\n')
('max', 'lesser', 'min', '', '13791305', 'i think that the actual order is alphabetical max is lesser than min starting from spring 3.0.4\n')
('max', 'greater', 'min', '', '8980501', 'so what i m trying to do is grab the max price and min price when the max price entry_date is greater than the min price entry_date\n')
('max', 'smaller', 'min', 'memory', '3261222', 'if the window is smaller than max width the content fills 100 of the page unless it s smaller than min width which would make the horizontal scrollbar appear\n')
('max', 'less', 'min', '', '7675024', 'problem i dont want to allow user to enter max value less than min value and so on\n')
('max', 'greater', 'min', '', '9652038', 'the syntax is where min is a positive integer number indicating the minimum number of matches and max is an integer equal to or greater than min indicating the maximum number of matches\n')
('min', 'less', 'max', '', '23239840', '. script.m file.csv 7 20 the test fails and i get the output min 7 must be less than max 20\n')
('min', 'smaller', 'max', 'memory', '12567613', 'let s check if the first which is equal or larger than min is smaller or equal than max so\n')
('max', 'less', 'min', '', '14651895', 'when i specify a min and max value for the y-axis if any value in the series is less than the min value it will extend below the chart usually extending into the chart below\n')
('min', 'more', 'max', '', '25778963', 'im trying to write a method that returns the number of words from the words parameter that have at least the min but no more than the max c haracters\n')
('max', 'less', 'min', '', '19281978', 'one possible error is that the max value is less than the min value\n')
('max', 'smaller', 'min', 'memory', '5522251', 'for every insert check if the value is bigger than max or smaller than min if so set them to properly\n')
('max', 'field greater', 'min', '', '14347177', 'i d like to set up a validation rule that enforces that the max field is greater than the min\n')
('max', 'lower', 'min', '', '12890768', 'make sure any of the chart s value is not beyond greater than the max or lower than the min the limits you are setting\n')
('max', 'actually lower', 'min', '', '21298095', 'but i can t get this to work when the max is actually lower than the min\n')
('max', 'less', 'min', '', '25194124', 'otherwise once max has replaced min once a value can never be both greater than max and less than min\n')
('min', 'greater', 'max', '', '16630287', 'looks like either the segment exists and it s smaller than what you asked for or you re trying to create a new one but it s smaller than the system min size shmmin or greater than max shmmax\n')
('max', 'radius even smaller', 'min', 'memory', '20449156', 'first of all why your 0 max radius is even smaller than 5 min radius\n')
('max', 'smaller', 'min', 'memory', '11856626', 'my code should make sure the user doesn t select a min value greater than the max value or a max value smaller than the min value using this code\n')
('max', 'greater', 'min', '', '14347177', 'i d like to set up a validation rule that enforces that the max field is greater than the min\n')
('max', 'greater', 'min', '', '2258513', 'you might want to ensure that max is greater than min\n')
('max', 'number smaller', 'min', 'memory', '18501939', 'if the max number is smaller than the min number the number in the max text box will be automatically changed to the same number as the min number in the min text box\n')
('max', 'less', 'min', '', '20037809', 'now when i select max value in second dropdownlist less than min value in first dropdownlist the value of first dropdownlist should reset equal to second\n')
('min', 'greater', 'max', '', '12056781', 'if i change the min textbox to be greater than max the control would be correctly marked as invalid\n')
('min', 'endtime less', 'max', '', '18316146', 'you have no overlaps when min endtime is less than max starttime\n')
('max', 'greater', 'min', '', '19877059', 'main problem why i cant adopt those solution is that every of my random values has different range and i need the values to be uniformly distributed withing the range no frequency occurances at min max for example which happens if i cut off the values which are less greater than min max\n')
('min', 'less', 'max', '', '19792523', 'parameter such that min is less than or equal to max\n')
('min', 'value larger then', 'max', 'memory', '19963226', 'for example the validation i am looking for is when a min value is larger then a max value there needs to be an error but this error can be corrected from either textbox and the error for the textbox needs to be removed when this happens\n')
('max', 'greater', 'min', '', '7131645', 'then for each element update the min or max value if that element is less than or greater than the min or max value respectively\n')
('min', 'more', 'max', '', '15913348', 'then when you are creating each element of the array also check whether it is less than the min or more than the max\n')
('max', 'smaller', 'min', 'memory', '18501939', 'if the max number is smaller than the min number the number in the max text box will be automatically changed to the same number as the min number in the min text box\n')
('max', 'less', 'min', '', '23235989', 'eventually max will equal min but nothing in the code forces max to become less than min\n')
('max', 'lower', 'min', '', '21298095', 'but i can t get this to work when the max is actually lower than the min\n')
('max', 'smaller', 'min', 'memory', '25534508', 'warning mt_rand max -1 is smaller than min 1 in\n')
('max', 'more', 'min', '', '22298376', 'if i have a list of 5 dates the max position should be 4 more than the min position\n')
('min', 'always less', 'max', '', '19366669', 'if min is always less than max then you can also do\n')
('max', 'lower', 'min', '', '20463851', 'take each value and compare it to your current min and max values- if it is higher than the max or lower than the min replace that and then add the value to a running total for average purposes\n')
('max', 'lower', 'min', '', '7603612', 'than for each element if it s larger than max update max if it s lower than min update min\n')
('min', 'less', 'max', '', '3994126', 'during the playback of the file audio is monitored in the receive direction and if a period of non-silence which is greater than min ms yet less than max ms is followed by silence for at least sil ms which occurs during the first analysistime ms then the audio playback is aborted and processing jumps to the talk extension if available\n')
('min', 'higher', 'max', '', '3196075', 'setting min higher than the max or vice-versa will cause a 380 error\n')
('min', 'more', 'max', '', '12317783', '- preceeding symbol template is expected to appear exactly minimum min times but not more than max times\n')
('min', 'less', 'max', '', '17220780', 'returns false if obj min is less than zero or if anobject max is greater than zero true otherwise\n')
('min', 'larger', 'max', 'memory', '3347248', 'when i run the above query the min returned is larger than the max\n')
('min', 'greater', 'max', '', '25194124', 'otherwise once max has replaced min once a value can never be both greater than max and less than min\n')
('max', 'greater', 'min', '', '3385835', 'the trouble is when i enter an invalid value into the textbox the tooltip that appears says exception has been thrown by the target of an invocation instead of max distance must be greater than min distance\n')
('max', 'smaller', 'min', 'memory', '23799906', 'warning mt_rand function.mt-rand max 0 is smaller than min 1 in users avsm www pa-include functions.php on line 332\n')
('min', 'greater', 'max', '', '21277138', 'the function return false if the value is less than the min bound or greater than the max bound\n')
('max', 'greater', 'min', '', '24604160', 'the syntax is where min is zero or a positive integer number indicating the minimum number of matches and max is an integer equal to or greater than min indicating the maximum number of matches\n')
('max', 'less', 'min', '', '1527832', 'the code will also record the edge cases so if the the function produces a value greater than the max or less than the min you.will.know.about.it\n')
('min', 'more', 'max', '', '8437497', 'the idea is that any number less than min or more than max is removed\n')
('min', 'greater', 'max', '', '13729720', 'val - min max - min performs this scaling no number will be greater than max - min once min has been subtracted from it and never less than zero once min has been subtracted from it\n')
('max', 'larger', 'min', 'memory', '2205247', 'it s interesting that this works since the documentation states that max must be larger than min but it looks like -1 is treated more like an empty or null value\n')
('min', 'less', 'max', '', '18316146', 'you have no overlaps when min endtime is less than max starttime\n')
('min', 'bigger', 'max', 'memory', '2185953', '2 also i notice that the inverse of the maximum value of a double precision type is bigger than its min value and inverse of its min value is inf way bigger than its max value\n')
('min', 'less', 'max', '', '7474411', 'another idea was after im done all the inserts then just delete the rows where the schedule_time is greater than the min value in the schedule_time column and the schedule_time is less than the max value in the schedule_time column\n')
('min', 'greater', 'max', '', '10098195', 'a pointer lower than min or greater than max is probably not in the heap and this min and max delimited region is unlikely to intersect with any static area ever\n')
('min', 'greater', 'max', '', '20761166', 'how can i set a date 1 1 2012 on a kendo datepicker which is less than min date 1 1 2013 or greater than max date 1 1 2014 defined in the datepicker options\n')
('min', 'greater', 'max', '', '18609360', 'if the value is smaller than min i want to get the min value and if it s greater than max i want to get the max\n')
('max', 'larger', 'min', 'memory', '20523498', 'since max is larger than min one of the two will always happen\n')
('min', 'value larger', 'max', 'memory', '19963226', 'for example the validation i am looking for is when a min value is larger then a max value there needs to be an error but this error can be corrected from either textbox and the error for the textbox needs to be removed when this happens\n')
('max', 'less', 'min', '', '24376457', 'list.remove max is first run your program goes through the while loop again but min and max will keep the same values they had on the first pass through the loop and as nothing remaining in list is greater than max or less than min the variables won t be changed and so python will end up trying to run list.remove min\n')
('max', 'less', 'min', '', '25131096', 'if that value is greater than max or less than the min we need to reset that value and increment the next index by the step\n')
('max', 'greater', 'min', '', '3013338', 'is it possible to use xml-schema to require the max attribute to be greater than the min attribute\n')
('max', 'greater', 'min', '', '3350828', 'the syntax is min max where min is a positive integer number indicating the minimum number of matches and max is an integer equal to or greater than min indicating the maximum number of matches\n')
('max', 'larger', 'min', 'memory', '20657592', 'produces the same error attributeerror max must be larger than min in range parameter\n')
('min', 'heap larger', 'max', 'memory', '9841416', 'in the first iteration the min heap holds the larger part and the max heap\n')
('min', 'greater', 'max', '', '11856626', 'my code should make sure the user doesn t select a min value greater than the max value or a max value smaller than the min value using this code\n')
('min', 'lesser', 'max', '', '21442187', 'all we are doing here is comparing if min is lesser than the current and max is greater than the current\n')
('min', 'lower', 'max', '', '6450004', 'for example if we consider the table # 2 we see that name 1 belongs to function a and the person s achieved target is below the min then the level attained is none where as for name 2 the attained level for the same function will be level 1 as he has exceeded the min but lower than max\n')
('min', 'greater', 'max', '', '8980854', 'it would still work if p3 was joined to p only but the extra condition prunes out rows we re not interested in there s no point looking for the min price on rows for which the price is greater than the max\n')
('max', 'less', 'min', '', '5304423', 'ie the range includes min but excludes max and values greater than max or less than min wrap around in a circle\n')
('max', 'greater', 'min', '', '8980501', 'i have a table as outlined below and i m trying to get the max and min values for a specific id but only if the max entry date is greater than the min entry date\n')
('max', 'less', 'min', '', '12862860', 'e. not an input meaning end of execution check whether the value is greater than max or less than min\n')
('min', 'less', 'max', '', '3838372', 'then you have to check that beta1 - beta2 alpha1 - alpha2 is greater than min x1_line1 x2_line1 and less than max x1_line1 x2_line1\n')
('max', 'greater', 'min', '', '19448379', 'ask the user for a max value also may be negative must be greater than min though\n')
('max', 'less', 'min', '', '25534656', 'inclusive or false if max is less than min\n')
('max', 'not greater', 'min', '', '10452219', 'do note that sliders won t render if max is not greater than min\n')
('max', 'smaller', 'min', 'memory', '14034211', 'your interval for variable i is probably wrong max is smaller than min\n')
('max', 'bigger', 'min', 'memory', '21570218', 'implement normal different sized circle packing than resize all circles so the biggest is no bigger than planet max size and the distances between them is bigger than min distance x1-x2 2+ y1-y2 2 mindistance for each pair of circles\n')
('max', 'less', 'min', '', '20418036', 'the trials concur with each other if the max is less than twice the min â the trials concur with each other\n')
('max', 'smaller', 'min', 'memory', '20449156', 'first of all why your 0 max radius is even smaller than 5 min radius\n')
('min', 'lower', 'max', '', '25715437', 'when l max 1 omitting l min means the lower bound is 0 or 1 ditto for r max r min\n')
('max', 'smaller', 'min', 'memory', '9760053', 'now you could iterate through the objects to find current limits 9min and max or you could even do it while you calculate the measures each time sth smaller than min happens store new min etc\n')
('max', 'greater', 'min', '', '16453890', '2 check to see if any max is greater than the next entry over s min\n')
('min', 'greater', 'max', '', '3337210', 'this program takes in the max and min that the data can be and throws out data that is less than the min or greater than the max\n')
('min', 'lower', 'max', '', '25568458', 'maybe make sure that min is lower than max first\n')
('max', 'less', 'min', '', '20981926', 'if max is finite and less than min then throw a syntaxerror exception\n')
('min', 'value greater', 'max', '', '1702833', 'in addition i noticed that you also have a possible exceptional scenario for your full constructor when the min value is greater than the max value\n')
('min', 'greater', 'max', '', '13041418', 'you will want to set max jan 1 and min dec 31 and then if the value you are currently inspecting is greater than max you set max equal to the value and likewise for min\n')
('max', 'greater', 'min', '', '12056781', 'if i now change max to be greater than min the min textbox validation state does not get cleared down presumably because min hasn t changed and therefore doesn t get validated again\n')
('max', 'value less', 'min', '', '19281978', 'one possible error is that the max value is less than the min value\n')
('max', 'lower', 'min', '', '14528973', 'this would be simple to implement but the problem is that if i would just draw individual vertical lines there is the possibility to have gaps in the signal namely if the previous min is higher than the next max or the next max is lower than the previous min\n')
('min', 'higher', 'max', '', '14528973', 'this would be simple to implement but the problem is that if i would just draw individual vertical lines there is the possibility to have gaps in the signal namely if the previous min is higher than the next max or the next max is lower than the previous min\n')
('min', 'less', 'max', '', '19366669', 'if min is always less than max then you can also do\n')
('max', 'greater', 'min', '', '20375103', 'max should be greater than min for zoom to happen\n')
('min', 'smaller', 'max', 'memory', '15899919', 'and i need to check for every item if min is always smaller than max\n')
('max', 'lower', 'min', '', '11871319', 'it s likely that tm2 is a value that is larger than the max int32 value or lower than the min int32 value...i would add a check something like.\n')
('min', 'more', 'max', '', '4192638', 'which means minimum of min repetitions but not more than max repetitions\n')
('min', 'less', 'max', '', '9666529', 'this function should check of a series of integers that there are four they are all different and that the min is 3 less than the max - thus that there are four in a row\n')
('max', 'greater', 'min', '', '10452219', 'do note that sliders won t render if max is not greater than min\n')
('min', 'less', 'max', '', '19129034', 'i want to make sure that the user does not enter a zero for the max value and also that the min value is less than the max value not equal to but less than - i need the range of values max - min\n')
('min', 'higher', 'max', '', '21322843', 'i have these two dropdownlist that are supposed to be for age and i want to make it so that you cant make min age higher than max age\n')
('max', 'lower', 'min', '', '4257838', 'if given value is higher than max or lower than min values then keys holding max and min are given respectively\n')
('min', 'greater', 'max', '', '20730444', 'i have two primeface calenders which are used to select from and to dates.i have set the max and min dates for the two calenders which are updated using the ajax dateselect event so that the max date of from is never after the min date of to and the min date of to is never greater than the max date of from .my code is something similar to this\n')
('min', 'lower', 'max', '', '9384963', 'however during debugging i discovered that the min x values area always lower than the max x values regardless of positions and sizes of the rectangles\n')
('min', 'less', 'max', '', '3770761', '1 how would you validate that min is indeed equal or less than max\n')
('min', 'always less', 'max', '', '15535002', 'also make sure that min is always less than or equal to max\n')
('min', 'greater', 'max', '', '10125644', 'can achieve somehwat similar results typing values smaller than min will be corrected to min although you are still prevented from typing values greater than max due to the validator\n')
('max', 'higher', 'min', '', '13746320', '4- you then need to loop over max to check if any rating is higher than any min\n')
('min', 'greater', 'max', '', '3337251', 'and throws out data that is less than the min and greater than the max\n')
('min', 'bigger', 'max', 'memory', '19396950', 'thus after the loop exits you will be able to tell whether the values of min and max are real or just the initial values that haven t been changed another way to do that would be to test after the loop whether min is bigger than max - if it is then the file was empty\n')
('min', 'less', 'max', '', '10875289', 'for a person who sees this there is also nothing wrong min is less than max\n')
('min', 'greater', 'max', '', '5040281', 'you re comparing every value from min with every value from max until you hit a value of min that is greater than a value in max and 55 from min is greater than 22 from max so test will be set to true\n')
('min', 'faster', 'max', 'performance', '21464650', 'then i would add min id to see if its any faster than max id\n')
('min', 'bigger', 'max', 'memory', '21939345', 'because the hue value is cyclic i need to process min max values where the min hue might be bigger than the max hue value\n')
('max', 'less', 'min', '', '924296', 'probably the line drawer was a bresenham modified to skip the points drawn unless they were greater than max or less than min\n')
('min', 'higher', 'max', '', '16002060', 'set a min width 1 pixel higher than the max width of the next query\n')
('max', 'less', 'min', '', '15920835', 'if a and b are opposite sign they cannot overflow - the one greater than zero would need to be greater than max or the one less than zero would need to be less than min\n')
('min', 'higher', 'max', '', '16420269', 'if you want remove lines with level lower than min and higher than max try this\n')
('min', 'larger', 'max', 'memory', '25788852', 'however i do not get a 2 2 matrix if i select any value that is smaller than min predictions or larger than max predictions since the data won t have either a false or true occurrence\n')
('max', 'greater', 'min', '', '2703354', 'the syntax is where min is a positive integer number indicating the minimum number of matches and max is an integer equal to or greater than min indicating the maximum number of matches\n')
('min', 'greater', 'max', '', '15900677', 'you could even do without a predicate xpath xquery comparisons have a set-like semantic this means true iff one min value that is equal or greater than one max value\n')
('min', 'value less', 'max', '', '19129034', 'i want to make sure that the user does not enter a zero for the max value and also that the min value is less than the max value not equal to but less than - i need the range of values max - min\n')
('max', 'lower', 'min', '', '19691372', 'each value entered after would then get checked to see if higher than max or lower than min\n')
('min', 'more', 'max', '', '1753093', 'if i is less than min and more than max\n')
('min', 'greater', 'max', '', '24354764', 'if not we test whether the entered value is less than the min value if it is then we set the value to the min value and if not implying that the value must be greater than the max we set the value to the max attribute\n')
('max', 'lower', 'min', '', '25738882', 'if the current value is large than the max or lower than the min it is either capped or wraps around\n')
('min', 'greater', 'max', '', '10919837', 'the last bit is there because i needed to limit the time selected to no earlier than the min date and no greater than the max date so i had to check the date selected in the matching datepicker control\n')
('min', 'smaller', 'max', 'memory', '9512512', 'your code take all the td s which their values are bigger than the min value and all the td s which their values are smaller than the max value this mean all the td s\n')
('min', 'less', 'max', '', '17858582', 'you can select min if you want or you could limit your allpossibleids to be less than the max table id\n')
('min', 'less', 'max', '', '5304423', 'note that the min param can be assumed to be always numerically less than max\n')

icomparable	equals	1
('icomparable', 'less', 'equals', '', '1421320', 'icomparable is an interface that defines that two instances of the implementing class can be seen as greater than less than or equals to one another\n')

webkit	gecko	10
('gecko', 'slower', 'webkit', 'performance', '4107879', 'anyway i just prefer not to use it because gecko is slower then webkit\n')
('webkit', 'less', 'gecko', '', '20306381', 'it s called web audio api and is currently a draft but is well supported by webkit you ll need to use prefixes and a little less by gecko\n')
('webkit', 'stricter', 'gecko', '', '1078466', 'webkit is stricter than gecko\n')
('gecko', 'more', 'webkit', '', '11043798', 'gecko seems to like anti-aliasing more than webkit\n')
('gecko', 'less memory', 'webkit', 'memory', '16970359', 'gecko is often considered to consume less memory than webkit but this depends a lot on how the browser is implemented\n')
('webkit', 'smaller', 'gecko', 'memory', '184381', 'my understanding is webkit is pretty good smaller than gecko\n')
('webkit', 'better', 'gecko', '', '18404543', 'somehow webkit seems to do better than gecko on the html5 single-page spec scripts and i can t figure out why at this point\n')
('webkit', 'probably better', 'gecko', '', '6186726', 'so the easiest way is to use one either webkit or gecko webkit has probably better support for svg these days plus i can t find package of gecko right now\n')
('gecko', 'slower then', 'webkit', 'performance', '4107879', 'anyway i just prefer not to use it because gecko is slower then webkit\n')
('webkit', 'quicker', 'gecko', '', '14398961', 'i m developing with canvas too and have found that webkit based browsers in general handle canvas operations quicker than gecko in most cases\n')

spdy	ssl	4
('spdy', 'more', 'ssl', '', '9803224', 'plus once spdy becomes more common ssl slow down won t really account for anything much\n')
('spdy', 'more common', 'ssl', '', '9803224', 'plus once spdy becomes more common ssl slow down won t really account for anything much\n')
('ssl', 'handshake more', 'spdy', '', '14248891', 'i m using keep-alive so i think the ssl handshake is more or less totally out but i hope to move to spdy soon so i don t really know how that helps after the initial handshake\n')
('spdy', 'connection worse', 'ssl', '', '11399413', 'if we assume that you live in a poor coverage area and your phone and your tower are constantly dropping the signal then re-establishing a spdy connection is no worse off than re-establishing a tcp connection modulo ssl handshake\n')

multiplication	addition	136
('addition', 'operator lower precedence', 'multiplication', '', '1969120', 'of course it is 10 because the addition operator has a lower precedence than the multiplication operator and so 4 + 3 2 always means 4 + 3 2\n')
('multiplication', 'higher precedence', 'addition', '', '11960104', 'and the value of this expression evaluated according to the precedence rules is 62 because multiplication has higher precedence than addition\n')
('multiplication', 'higher', 'addition', '', '22079195', 'the and operator has higher precedence than or just like multiplication has higher precedence than addition\n')
('multiplication', 'oprator higher', 'addition', '', '13048327', 'that s because the multiplication oprator has higher precedence than addition\n')
('multiplication', 'operator higher', 'addition', '', '18400501', 'for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n')
('multiplication', 'higher precedence', 'addition', '', '23620068', 'because multiplication has a higher precedence than addition\n')
('multiplication', 'better serial', 'addition', '', '15710193', 'for multiplication the technique described at is a reasonably easy thing to implement and is better than serial addition\n')
('multiplication', 'more', 'addition', '', '23427193', 'each operation takes a specific length and typically multiplication will take more than addition\n')
('multiplication', 'operator higher precedence', 'addition', '', '18400501', 'for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n')
('multiplication', 'slower', 'addition', 'performance', '25725291', 'yes pow is slower than multiplication multiplication is slower than addition\n')
('multiplication', 'higher precedence', 'addition', '', '25761401', 'for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition\n')
('multiplication', 'higher precedence', 'addition', '', '5240694', 'usually multiplication has a higher precedence than addition but the grammar you have posted has the reverse that might be part of your problem\n')
('multiplication', 'higher precedence', 'addition', '', '19406232', 'i assume that is parsed correctly because the two operators have different precedences meaning that associativity does not come into play and that your grammar correctly implements precedence although you should note that is a more standard example for showing that multiplication has higher precedence than addition since simple left-to-right parsing of gives the same result as your parser\n')
('multiplication', 'higher', 'addition', '', '9298262', 'and has higher precedence than or just like multiplication has higher precedence than addition\n')
('addition', 'operation more', 'multiplication', '', '12569367', 'i know that addition operation is more trivial than multiplication operation\n')
('multiplication', 'operator higher precedence', 'addition', '', '810193', 'well we know it is the first one because of precedence - the binary multiplication operator has higher precedence than the binary + addition operator and is resolved first\n')
('multiplication', 'more tightly', 'addition', '', '13594857', 'the multiplication has higher precedence and therefore binds more tightly than addition\n')
('multiplication', 'higher', 'addition', '', '19116893', 'note that the type cast has a higher precedence than multiplication which is in turn higher than addition 3 vs\n')
('multiplication', 'higher precedence', 'addition', '', '25555976', 'for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n')
('multiplication', 'higher', 'addition', '', '11960104', 'and the value of this expression evaluated according to the precedence rules is 62 because multiplication has higher precedence than addition\n')
('multiplication', 'higher', 'addition', '', '13594857', 'the multiplication has higher precedence and therefore binds more tightly than addition\n')
('multiplication', 'faster', 'addition', 'performance', '15290006', 'on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n')
('multiplication', 'higher', 'addition', '', '1525321', 'just because multiplication has a higher precedence than addition doesn t mean we need to perform all multiplication in the expression before doing any addition\n')
('multiplication', 'higher', 'addition', '', '14438062', 'division multiplication has higher precedence than addition subtraction and parentheses is required to do addition subtraction before multiplication division\n')
('multiplication', 'higher', 'addition', '', '2972163', 'for instance in arithmetic multiplication has higher precedence than addition\n')
('multiplication', 'more', 'addition', '', '2324403', 'multiplication is more expensive than addition subtraction and division is more expensive still\n')
('multiplication', 'higher precedence', 'addition', '', '7276022', 'multiplication has higher precedence than addition subtraction\n')
('multiplication', 'higher', 'addition', '', '3154138', 'in arithmetic multiplication has higher precedence than addition\n')
('multiplication', 'much harder', 'addition', '', '6726376', 'multiplication is much harder than addition\n')
('multiplication', 'tighter', 'addition', '', '22059800', 'm_expr can expand to a u_expr because unaries bind tighter than multiplication operations and a_expr can expand to a m_expr because multiplication operations bind tighter than addition operations\n')
('multiplication', 'higher', 'addition', '', '465728', 'i know the basics division and multiplication higher than addition and subtraction but i would have to look up something more esoteric\n')
('multiplication', 'higher', 'addition', '', '20767842', 'associativity and precedence specify that the last two statements must be performed in that order since multiplication has higher precedence than addition\n')
('multiplication', 'operator higher precedence', 'addition', '', '18583946', 'in technical terms the x multiplication operator has higher precedence than the + addition operator\n')
('addition', 'more trivial', 'multiplication', '', '12569367', 'i know that addition operation is more trivial than multiplication operation\n')
('multiplication', 'higher', 'addition', '', '20844237', 'since multiplication has a higher precedence than addition the same convention is used\n')
('multiplication', 'higher', 'addition', '', '6267012', 'for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n')
('multiplication', 'more', 'addition', '', '17007125', 'since multiplication has more priority than addition when you give a+1 to the macro it becomes 10 + 10 + 1 21\n')
('multiplication', 'faster', 'addition', 'performance', '8339423', 'on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n')
('multiplication', 'truly faster', 'addition', 'performance', '25564265', 'if the multiplication is truly faster than the addition then i expect somebody well-versed in byte code could explain why the load_fast for num is faster than the five operations for line 12\n')
('multiplication', 'higher precedence', 'addition', '', '13048327', 'that s because the multiplication oprator has higher precedence than addition\n')
('multiplication', 'higher', 'addition', '', '19075387', 'multiplication has higher operator priority than addition in java\n')
('multiplication', 'operator higher', 'addition', '', '810193', 'well we know it is the first one because of precedence - the binary multiplication operator has higher precedence than the binary + addition operator and is resolved first\n')
('multiplication', 'higher precedence', 'addition', '', '20844237', 'since multiplication has a higher precedence than addition the same convention is used\n')
('multiplication', 'higher precedence', 'addition', '', '22178187', 'this line works because of operator precedence multiplication has a higher precedence than addition + so it will be done first\n')
('addition', 'lower', 'multiplication', '', '8477591', 'that is if you have then you are guaranteed that a happens before b and that b happens before c regardless of the fact that a is involved in an addition which is lower precedence than a multiplication\n')
('multiplication', 'higher precedence', 'addition', '', '9649834', 'why with this grammar multiplication have higher precedence than addition\n')
('multiplication', 'higher priority', 'addition', '', '6061406', 'based on the order of operations e.g where multiplication is evaluated with higher priority than addition push the operators and operands onto a stack\n')
('addition', 'faster', 'multiplication', 'performance', '836856', 'also addition is faster than multiplication and multiplication is faster than division\n')
('multiplication', 'higher precedence', 'addition', '', '70881', 'precedence rules specify priority of operators which operators will be evaluated first multiplication has higher precedence than addition pemdas\n')
('multiplication', 'higher precedence', 'addition', '', '18757365', 'for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition +\n')
('multiplication', 'higher', 'addition', '', '2369434', 'multiplication has higher precedence than addition + which is why 2+3 4 is interpreted as 2+ 3 4 both in c and normal math\n')
('multiplication', 'higher precedence', 'addition', '', '6801431', 'multiplication is higher precedence than addition and addition is left-associative so this is equivalent to but knowing that only tells you that the first addition will happen before the second addition and that the multiplication will happen before the second addition\n')
('multiplication', 'higher', 'addition', '', '19406232', 'i assume that is parsed correctly because the two operators have different precedences meaning that associativity does not come into play and that your grammar correctly implements precedence although you should note that is a more standard example for showing that multiplication has higher precedence than addition since simple left-to-right parsing of gives the same result as your parser\n')
('multiplication', 'higher', 'addition', '', '3278151', 'trig functions should have precedence lower than multiplication and higher than addition\n')
('multiplication', 'higher precedence', 'addition', '', '20767842', 'associativity and precedence specify that the last two statements must be performed in that order since multiplication has higher precedence than addition\n')
('addition', 'faster', 'multiplication', 'performance', '4757909', 'but in many cases addition is faster than multiplication\n')
('multiplication', 'tighter', 'addition', '', '12963342', 'so every multiplicative-expression is an additive-expression but not vice-versa and this is what makes multiplication bind tighter than addition\n')
('multiplication', 'generally slower', 'addition', 'performance', '16419043', 'multiplication is generally slower than addition\n')
('multiplication', 'higher', 'addition', '', '70881', 'precedence rules specify priority of operators which operators will be evaluated first multiplication has higher precedence than addition pemdas\n')
('multiplication', 'higher precedence', 'addition', '', '6267012', 'for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n')
('multiplication', 'slower', 'addition', 'performance', '23556810', 'other cpus take three or four cycles to do a multiplication which is a bit slower than addition\n')
('multiplication', 'operator higher', 'addition', '', '9818771', 'they state that the binary multiplication operator has higher priority than the binary addition operator +\n')
('multiplication', 'higher precedence', 'addition', '', '14438062', 'division multiplication has higher precedence than addition subtraction and parentheses is required to do addition subtraction before multiplication division\n')
('multiplication', 'higher precedence', 'addition', '', '10229047', 'that s akin to multiplication has higher precedence than addition so 3 sticks to 4 instead of 5 so the output is 17\n')
('multiplication', 'higher precedence', 'addition', '', '4061944', 'mathematics clearly defines the order of operations as giving multiplication higher precedence than addition\n')
('multiplication', 'shorter solution', 'addition', '', '17664352', 'start with the number you want to reach and if it s divisible by 5 then divide by 5 because multiplication by 5 results in a shorter solution than addition by 3\n')
('multiplication', 'higher', 'addition', '', '10375250', 'in arithmetic books and computer software and more-expensive calculators this means 12+ 34 56 not 12+34 56 because multiplication has higher precedence than addition\n')
('multiplication', 'higher precedence', 'addition', '', '2369434', 'multiplication has higher precedence than addition + which is why 2+3 4 is interpreted as 2+ 3 4 both in c and normal math\n')
('multiplication', 'higher', 'addition', '', '2977437', 'the difference is that in the second pattern the concatenation x followed by y in xy has higher precedence than the choice either x or y in x|y like multiplication has higher precedence than addition so the pattern is equivalent to\n')
('multiplication', 'higher', 'addition', '', '4456107', 'the precedence relationship is the same multiplication is higher then addition\n')
('multiplication', 'higher', 'addition', '', '19324511', 'an expression like binds as not because of associativity but because 2 multiplication has higher precedence that + 2 addition\n')
('multiplication', 'higher', 'addition', '', '18757365', 'for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition +\n')
('multiplication', 'slower', 'addition', 'performance', '8662342', 'if multiplication is slower than addition instead of doing\n')
('addition', 'faster', 'multiplication', 'performance', '3436372', 'in any case if addition is faster than multiplication a better solution might be to use a table and index by it\n')
('multiplication', 'slower', 'addition', 'performance', '23555455', 'proposition when implemented in logic gates using the usual algorithms an integer multiplication circuit is o log n times slower than an addition circuit where n is the number of bits in a word\n')
('multiplication', 'more priority', 'addition', '', '17007125', 'since multiplication has more priority than addition when you give a+1 to the macro it becomes 10 + 10 + 1 21\n')
('multiplication', 'more expensive', 'addition', '', '1907934', 'since multiplication is more expensive than addition you want to let the machine paralleliz it as much as possible so saving your stalls for the addition means you spend less time waiting in the addition loop than you would in the multiplication loop\n')
('multiplication', 'higher', 'addition', '', '7276022', 'multiplication has higher precedence than addition subtraction\n')
('multiplication', 'faster', 'addition', 'performance', '25564265', 'if the multiplication is truly faster than the addition then i expect somebody well-versed in byte code could explain why the load_fast for num is faster than the five operations for line 12\n')
('multiplication', 'stronger', 'addition', '', '25352922', 'the reason for this is that and is strong than or it s like in math where multiplication is stronger than addition 3 5+3 15+3 18\n')
('multiplication', 'higher', 'addition', '', '25761401', 'for example 1 + 2 3 is treated as 1 + 2 3 whereas 1 2 + 3 is treated as 1 2 + 3 since multiplication has a higher precedence than addition\n')
('multiplication', 'more overhead simple', 'addition', 'performance', '10578538', 'as multiplication of ints has more overhead than simple addition\n')
('multiplication', 'higher precedence', 'addition', '', '11993555', 'multiplication has a higher precedence than addition so it is evaluated first\n')
('multiplication', 'operator higher priority', 'addition', '', '9818771', 'they state that the binary multiplication operator has higher priority than the binary addition operator +\n')
('multiplication', 'higher precedence', 'addition', '', '19324511', 'an expression like binds as not because of associativity but because 2 multiplication has higher precedence that + 2 addition\n')
('multiplication', 'longer', 'addition', '', '24960879', 'the multiplication are the bottleneck of the calculation even though they may be one instruction a multiplication takes longer than an addition\n')
('multiplication', 'more time', 'addition', 'performance', '7094585', 'it is well-known that the processor instruction for multiplication takes several times more time than addition division is even worse upd which is not true any more see below\n')
('multiplication', 'more expensive', 'addition', '', '2324403', 'multiplication is more expensive than addition subtraction and division is more expensive still\n')
('multiplication', 'more', 'addition', '', '1907934', 'since multiplication is more expensive than addition you want to let the machine paralleliz it as much as possible so saving your stalls for the addition means you spend less time waiting in the addition loop than you would in the multiplication loop\n')
('multiplication', 'higher precedence', 'addition', '', '18400501', 'for example in the expression 1 + 5 3 the answer is 16 and not 18 because the multiplication operator has a higher precedence than the addition + operator\n')
('addition', 'faster', 'multiplication', 'performance', '15668718', 'the same speed as addition though still faster than multiplication\n')
('multiplication', 'higher', 'addition', '', '6801431', 'multiplication is higher precedence than addition and addition is left-associative so this is equivalent to but knowing that only tells you that the first addition will happen before the second addition and that the multiplication will happen before the second addition\n')
('multiplication', 'higher', 'addition', '', '5240694', 'usually multiplication has a higher precedence than addition but the grammar you have posted has the reverse that might be part of your problem\n')
('multiplication', 'slower', 'addition', 'performance', '16419043', 'multiplication is generally slower than addition\n')
('multiplication', 'harder', 'addition', '', '9714461', 'for integers multiplication is harder than addition may be slower than addition etc but may still be very fast as long as there is sufficient cpu-power dedicated to it\n')
('multiplication', 'higher', 'addition', '', '10820486', 'multiplication has a higher operator precedence than addition so it s done before the two additions when calculating the value for a\n')
('addition', 'operation more trivial', 'multiplication', '', '12569367', 'i know that addition operation is more trivial than multiplication operation\n')
('multiplication', 'faster', 'addition', 'performance', '11945579', 'on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n')
('multiplication', 'higher operator', 'addition', '', '19075387', 'multiplication has higher operator priority than addition in java\n')
('multiplication', 'slower', 'addition', 'performance', '3292862', 'i don t understand why the division multiplication in c++ is so much slower than addition subtraction where the managed c# version is more reasonable to my expectations\n')
('multiplication', 'slower', 'addition', 'performance', '11812274', 'multiplication is a relatively complex operation and is likely to be slower than say addition or comparison\n')
('addition', 'lower precedence', 'multiplication', '', '8477591', 'that is if you have then you are guaranteed that a happens before b and that b happens before c regardless of the fact that a is involved in an addition which is lower precedence than a multiplication\n')
('multiplication', 'oprator higher precedence', 'addition', '', '13048327', 'that s because the multiplication oprator has higher precedence than addition\n')
('multiplication', 'higher', 'addition', '', '13573053', 'either way your example with the numeric expression would multiplying by 3 first because multiplication has higher precedence than addition or subtraction\n')
('multiplication', 'higher precedence', 'addition', '', '19867093', 'division and multiplication have higher precedence than addition so what this is actually doing is\n')
('addition', 'lower precedence', 'multiplication', '', '11659788', 'or has a lower precedence than just as addition in mathematics has a lower precedence than multiplication\n')
('multiplication', 'faster', 'addition', 'performance', '25564265', 'i would also be moderately surprised if the multiplication actually was faster than the addition\n')
('multiplication', 'higher', 'addition', '', '11993555', 'multiplication has a higher precedence than addition so it is evaluated first\n')
('multiplication', 'higher precedence', 'addition', '', '13594857', 'the multiplication has higher precedence and therefore binds more tightly than addition\n')
('multiplication', 'higher', 'addition', '', '22178187', 'this line works because of operator precedence multiplication has a higher precedence than addition + so it will be done first\n')
('multiplication', 'higher', 'addition', '', '23620068', 'because multiplication has a higher precedence than addition\n')
('multiplication', 'higher', 'addition', '', '10229047', 'that s akin to multiplication has higher precedence than addition so 3 sticks to 4 instead of 5 so the output is 17\n')
('multiplication', 'operator higher', 'addition', '', '18583946', 'in technical terms the x multiplication operator has higher precedence than the + addition operator\n')
('multiplication', 'higher then', 'addition', '', '4456107', 'the precedence relationship is the same multiplication is higher then addition\n')
('addition', 'operator lower', 'multiplication', '', '1969120', 'of course it is 10 because the addition operator has a lower precedence than the multiplication operator and so 4 + 3 2 always means 4 + 3 2\n')
('multiplication', 'higher', 'addition', '', '25555976', 'for example multiplication is of higher precedence than addition so 2 + 3 x 4 is equivalent to 2 + 3 x 4 not 2 + 3 x 4\n')
('addition', 'faster', 'multiplication', 'performance', '3436372', 'even if addition is faster than multiplication i think that you will lose more because of the branching\n')
('addition', 'faster', 'multiplication', 'performance', '4757905', 'in the remote case those operations are not simplified assuming that there is a jit that maps the multiplication and add opcodes in a 1 1 relationship to their cpu instruction counterparts in most modern architectures all integer arithmetic operations usually take the same number of cycles so it will be faster multiplying once than add four times just checked it addition is still slightly faster than multiplication 1 clock vs 3 clocks so it still pays using a multiplication here\n')
('addition', 'faster', 'multiplication', 'performance', '4376029', 'because addition is faster than multiplication and can be faster than shift\n')
('multiplication', 'higher precedence', 'addition', '', '1525321', 'just because multiplication has a higher precedence than addition doesn t mean we need to perform all multiplication in the expression before doing any addition\n')
('multiplication', 'higher precedence', 'addition', '', '9710547', 'and has higher precedence than or so the brackets are optional - in the same way as multiplication has higher precedence than addition so\n')
('multiplication', 'higher precedence', 'addition', '', '10375250', 'in arithmetic books and computer software and more-expensive calculators this means 12+ 34 56 not 12+34 56 because multiplication has higher precedence than addition\n')
('multiplication', 'higher precedence', 'addition', '', '2977437', 'the difference is that in the second pattern the concatenation x followed by y in xy has higher precedence than the choice either x or y in x|y like multiplication has higher precedence than addition so the pattern is equivalent to\n')
('multiplication', 'faster', 'addition', 'performance', '15307701', 'on simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than addition\n')
('addition', 'lower precedence', 'multiplication', '', '1969120', 'of course it is 10 because the addition operator has a lower precedence than the multiplication operator and so 4 + 3 2 always means 4 + 3 2\n')
('multiplication', 'higher precedence', 'addition', '', '13573053', 'either way your example with the numeric expression would multiplying by 3 first because multiplication has higher precedence than addition or subtraction\n')
('multiplication', 'harder', 'addition', '', '6726376', 'multiplication is much harder than addition\n')
('addition', 'faster', 'multiplication', 'performance', '3209313', 'at the time this was faster because addition was a lot faster than multiplication but that s no longer the case\n')
('multiplication', 'more time', 'addition', 'performance', '7094585', 'so ideally i want to have approximate relative times of elementary operations execution like multiplication typically takes 5 times more time than addition exponent is about 100 multiplication\n')
('multiplication', 'harder', 'addition', '', '1117702', 'if you think back to grade school you ll recall that multiplication was harder than addition and division was harder than multiplication\n')
('multiplication', 'higher precedence', 'addition', '', '3154138', 'in arithmetic multiplication has higher precedence than addition\n')
('multiplication', 'higher precedence', 'addition', '', '2972163', 'for instance in arithmetic multiplication has higher precedence than addition\n')
('multiplication', 'higher precedence', 'addition', '', '22079195', 'the and operator has higher precedence than or just like multiplication has higher precedence than addition\n')
('multiplication', 'higher operator', 'addition', '', '10820486', 'multiplication has a higher operator precedence than addition so it s done before the two additions when calculating the value for a\n')
('multiplication', 'higher precedence', 'addition', '', '9298262', 'and has higher precedence than or just like multiplication has higher precedence than addition\n')
('multiplication', 'higher', 'addition', '', '9710547', 'and has higher precedence than or so the brackets are optional - in the same way as multiplication has higher precedence than addition so\n')

direct3d	direct2d	3
('direct2d', 'more', 'direct3d', '', '19740472', 'direct2d is more or less dead nowadays and one would use direct3d also to render 2d\n')
('direct2d', 'simpler', 'direct3d', 'usability', '12540800', 'if you are willing to limit yourself to vista or later then direct2d would be a little simpler than direct3d\n')
('direct3d', 'easier', 'direct2d', 'usability', '10881667', 'direct3d appears in principal to be easier than direct2d but has poor text font handling in the latest version\n')

opera	firefox	11
('firefox', 'faster', 'opera', 'performance', '19554859', 'but if firebug donâ t enabled after launch firefox â time equal 2ms that faster than opera and google-chrome and difference between empty filled array disappears\n')
('firefox', 'significantly faster', 'opera', 'performance', '17023332', 'it seems to be slower in google-chrome and firefox but is significantly faster in opera\n')
('firefox', 'even worse', 'opera', '', '1451062', 'the problem with this code is that it doesn t quite work on firefox and works even worse on opera\n')
('firefox', 'just far more access', 'opera', 'usability', '3323922', 'firefox just provides far more access to its own internals and system to the extensions so its technically possible to do more with them than with opera widgets or google-chrome extensions\n')
('opera', 'bigger', 'firefox', 'memory', '17721821', 'on your screenshot div width in opera is bigger than in firefox and google-chrome\n')
('firefox', 'even fewer', 'opera', '', '14056377', 'firefox has even fewer as far as i know and opera has none\n')
('opera', 'worse', 'firefox', '', '9978052', 'only firefox and opera seem to have this issue opera even worse than firefox but i don t care that much about opera\n')
('opera', 'slower', 'firefox', 'performance', '1278273', 'for example i ve read that opera and ie will fix framerates slower than firefox\n')
('opera', 'larger fonts', 'firefox', 'memory', '2292967', 'update under linux gentoo amd64 it s the same - opera reneders slightly larger fonts than firefox but nothing that looks odd\n')
('firefox', 'just far more', 'opera', '', '3323922', 'firefox just provides far more access to its own internals and system to the extensions so its technically possible to do more with them than with opera widgets or google-chrome extensions\n')
('firefox', 'less such', 'opera', '', '19552846', 'for example in the classic browser share example if the firefox is at 45 i want to be rendered inside the pie distance -40 may be and where the slice is less such as opera at 6 - i want it to be shown outside with a connector\n')

ceil	floor	3
('ceil', 'greater', 'floor', '', '1719752', 'the floor times the ceil are greater than the floor xy...that s very much possible\n')
('floor', 'idx lower element', 'ceil', '', '18961058', 'so floor idx is the lower element and ceil idx is the higher\n')
('floor', 'idx lower', 'ceil', '', '18961058', 'so floor idx is the lower element and ceil idx is the higher\n')

engineyard	heroku	4
('engineyard', 'less', 'heroku', '', '12955309', 'engineyard also seems like a great company but i think they hold your hand a little less than heroku\n')
('heroku', 'more full-service', 'engineyard', '', '7269490', 'in choosing heroku is more full-service whereas engineyard is a more traditional service giving you access to boxes but needing sysadmin skills\n')
('heroku', 'more', 'engineyard', '', '7269490', 'in choosing heroku is more full-service whereas engineyard is a more traditional service giving you access to boxes but needing sysadmin skills\n')
('engineyard', 'better', 'heroku', '', '4218386', 'engineyard does provide application-level support too which is a fair bit better than what heroku does\n')

openpgp	x509	1
('openpgp', 'simpler', 'x509', 'usability', '2282055', 'openpgp is simpler than x509 but more limited especially if you wish to have a strong legal meaning behind the certificates\n')

algol	apl	1
('algol', 'less weird', 'apl', '', '3725905', 'as far as the syntax goes i guess it s a bit different from the more classic syntax of the algol family languages but it s no more and possibly less weird than apl\n')

uicontrol	uibutton	4
('uicontrol', 'more customization', 'uibutton', '', '15008437', 'a solution i ve used is a simple subclass of uicontrol which allows more customization than subclassing uibutton and less hassle than nsattributedstring et al\n')
('uicontrol', 'more', 'uibutton', '', '15008437', 'a solution i ve used is a simple subclass of uicontrol which allows more customization than subclassing uibutton and less hassle than nsattributedstring et al\n')
('uicontrol', 'finer control', 'uibutton', 'usability', '4895037', 'sounds like you want to use some of the inherited uicontrol methods such as sendaction to forevent this offers even finer control than with uibutton\n')
('uibutton', 'cleaner', 'uicontrol', '', '12469991', 'instead of working around the 1 label and image you get in a uibutton it s cleaner to start from scratch with a uicontrol and create your tiles\n')

textblock	richtextbox	1
('textblock', 'simpler', 'richtextbox', 'usability', '1287034', 'good advice but in the end i decided a bindable textblock was more useful and simpler than a richtextbox\n')

qmap	qlist	1
('qmap', 'larger', 'qlist', 'memory', '16594128', 'this relates to another question i asked a while back at size of qt containers is qmap much larger than qlist\n')

mbprogresshud	uialertview	2
('mbprogresshud', 'more features', 'uialertview', 'usability', '9816661', 'mbprogresshud has more features than uialertview so it might be better suited and more easily adapted for your purposes\n')
('mbprogresshud', 'more', 'uialertview', '', '9816661', 'mbprogresshud has more features than uialertview so it might be better suited and more easily adapted for your purposes\n')

strncpy	strcpy	13
('strncpy', 'less weird', 'strcpy', '', '5883113', 'the best solution is to write a custom version of strncpy that is less weird or if you know the length of the input just use strcpy\n')
('strncpy', 'not safer', 'strcpy', 'security', '13903306', 'strncpy is not safer method to use as strcpy\n')
('strcpy', 'better', 'strncpy', '', '5463735', 'strcpy could be better replaced by strncpy which does some bound checking\n')
('strncpy', 'safer', 'strcpy', 'security', '17641528', 'strncpy is safer than strcpy\n')
('strncpy', 'safer', 'strcpy', 'security', '1258708', 'strncpy is not safer than strcpy it just trades one type of bugs with another\n')
('strncpy', 'better', 'strcpy', '', '10845959', 'using strncpy 3 is better than strcpy 3 but things like strlcpy 3 are better still\n')
('strncpy', 'less', 'strcpy', '', '5883113', 'the best solution is to write a custom version of strncpy that is less weird or if you know the length of the input just use strcpy\n')
('strncpy', 'safer', 'strcpy', 'security', '3629186', 'in general strncpy is a safer alternative to strcpy\n')
('strncpy', 'safier', 'strcpy', '', '12236011', 'using strncpy is considered safier than strcpy because the second one can easily cause buffer overrun\n')
('strncpy', 'not safer', 'strcpy', 'security', '1258708', 'strncpy is not safer than strcpy it just trades one type of bugs with another\n')
('strncpy', 'not safer method', 'strcpy', 'security', '13903306', 'strncpy is not safer method to use as strcpy\n')
('strncpy', 'safer alternative', 'strcpy', 'security', '3629186', 'in general strncpy is a safer alternative to strcpy\n')
('strncpy', 'safer', 'strcpy', 'security', '18727224', 'strcpy is notoriously unsafe as are it s cousins strcpy_s and strncpy although they are mildly safer than strcpy\n')

aptana	textmate	1
('aptana', 'more', 'textmate', '', '4725870', 'in studio 3 much of this sort of functionality is still coming as aptana is going more of a textmate bundle route for a great deal of their features which i think is really cool\n')

gridview	objectdatasource	1
('gridview', 'nicer', 'objectdatasource', '', '9131691', 'from what i ve read the gridview control plays a lot nicer with the objectdatasource\n')

scipy	sympy	1
('scipy', 'better option', 'sympy', 'usability', '16105354', 'first of all if it was not for the relative complexity of the expressions here scipy would have been definitely the better option over sympy\n')

factories	presenter	1
('factories', 'lighter', 'presenter', 'memory', '14440549', 'which is basically the same thing as the factories then depend on sub-factories but at least they are lighter than presenter views services and they don t need to load the sub-factories until they are needed\n')

typo3	joomla	1
('typo3', 'more professional', 'joomla', '', '683028', 'i didn t work with these applications yet but afaik typo3 and ezpublish both php are considered much more professional than joomla\n')

x86	mips	8
('mips', 'much more orthogonal', 'x86', '', '9219871', 'mips is much more orthogonal than x86 could ever dream of being\n')
('x86', 'more complex instructions', 'mips', 'usability', '454121', 'x86 have more complex instructions than mips\n')
('mips', 'less complex', 'x86', 'usability', '12800438', 'the wording in your question seems to suggest you don t care as much that the output is mips but rather you want the output to be less complex than x86\n')
('mips', 'easier', 'x86', 'usability', '1382636', 'do any of the other common architectures like arm mips sparc etc have an easier than x86 instruction set\n')
('mips', 'much more', 'x86', '', '9219871', 'mips is much more orthogonal than x86 could ever dream of being\n')
('mips', 'more orthogonal', 'x86', '', '9219871', 'mips is much more orthogonal than x86 could ever dream of being\n')
('mips', 'easier', 'x86', 'usability', '16701685', 'if you have not programmed assembly before i suggest you choose mips since it is easier than x86 and then b looking at how to transfer data with the serial port to begin with since this illustrates memory-mapped i o that is used\n')
('mips', 'more straightforward', 'x86', '', '2656592', 'a better bet might be to install spim and to learn mips assembly which is more straightforward than x86 anyways\n')

nsmutablestring	nsstring	5
('nsmutablestring', 'more', 'nsstring', '', '14341239', 'note also that using nsmutablestring is more efficient than creating a new nsstring each time a letter is added\n')
('nsmutablestring', 'more things', 'nsstring', '', '12529478', 'all-in all the reason is that nsmutablestring is able to do more things than nsstring and can do anything nsstring can hence the direction of inheritance\n')
('nsstring', 'more general', 'nsmutablestring', '', '12530092', 'nsstring is more general as it leaves you the oppertunity to create another subclass of it that could add the altering functionality without using the nsmutablestring s implementation why ever you would want that to do\n')
('nsmutablestring', 'more efficient', 'nsstring', 'performance', '14341239', 'note also that using nsmutablestring is more efficient than creating a new nsstring each time a letter is added\n')
('nsstring', 'more', 'nsmutablestring', '', '12530092', 'nsstring is more general as it leaves you the oppertunity to create another subclass of it that could add the altering functionality without using the nsmutablestring s implementation why ever you would want that to do\n')

listview	gridview	6
('listview', 'more', 'gridview', '', '1879340', 'regarding comparison between gridview and listview my experience is that listview is more lightweight as compared to gridview\n')
('gridview', 'more', 'listview', '', '2419913', 'the error is because the gridview is being applied to more than one listview\n')
('listview', 'better', 'gridview', '', '16225337', 'i think the listview is better than gridview in this situation\n')
('listview', 'more lightweight', 'gridview', 'memory', '1879340', 'regarding comparison between gridview and listview my experience is that listview is more lightweight as compared to gridview\n')
('listview', 'better', 'gridview', '', '10809', 'listview much better than the gridview dataview in that they let you write out clean html\n')
('listview', 'better fit', 'gridview', '', '13209588', 'here s another article that describes the listview control and why it s probably a better fit than the gridview\n')

rank	median	1
('rank', 'greater', 'median', '', '23921595', 'we use ave to see which rank are greater than the median for each group and we select where those are true\n')

subtraction	multiplication	8
('subtraction', 'cheaper', 'multiplication', '', '698780', 'addition subtraction for the rectangular bound calculation is cheaper than multiplication\n')
('multiplication', 'higher', 'subtraction', '', '23612128', 'since multiplication has a higher precedence than subtraction you should subtract 0 to your digit character before multiplying it\n')
('subtraction', 'harder', 'multiplication', '', '9714461', 'for floating point operations addition and subtraction are harder than multiplication and division so they may be slower or not again it depends on how much transistor real estate there is dedicated to the fpu\n')
('multiplication', 'more', 'subtraction', '', '18877408', 'in general multiplication is more costlier than subtraction right\n')
('subtraction', 'faster', 'multiplication', 'performance', '15668718', 'subtraction operations and usually significantly faster than multiplication and division\n')
('multiplication', 'costlier', 'subtraction', '', '18877408', 'in general multiplication is more costlier than subtraction right\n')
('multiplication', 'more costlier', 'subtraction', '', '18877408', 'in general multiplication is more costlier than subtraction right\n')
('multiplication', 'higher precedence', 'subtraction', '', '23612128', 'since multiplication has a higher precedence than subtraction you should subtract 0 to your digit character before multiplying it\n')

auto	decltype	3
('auto', 'more concise', 'decltype', 'usability', '12084124', 'in the cases where auto can be used it is more concise than decltype as you don t need to provide the expression from which the type will be inferred\n')
('decltype', 'significantly more', 'auto', '', '21369252', 'decltype is significantly more versatile that auto and can always be used in place of it\n')
('decltype', 'significantly more versatile', 'auto', '', '21369252', 'decltype is significantly more versatile that auto and can always be used in place of it\n')

mongodb	bson	4
('mongodb', 'more', 'bson', '', '19052828', 'mongodb supports no more than 100 levels of nesting for bson document.\n')
('mongodb', 'more flexible', 'bson', 'usability', '4276683', 'mongodb stores everything in memory anyway and works in a similar vein being a key-value based system however i believe mongodb is more flexible as it allows for storing bson objects within themselves\n')
('mongodb', 'more', 'bson', '', '10763863', 'a document in mongodb is more or less like a json structure bson to be specific\n')
('mongodb', 'more', 'bson', '', '4276683', 'mongodb stores everything in memory anyway and works in a similar vein being a key-value based system however i believe mongodb is more flexible as it allows for storing bson objects within themselves\n')

parent	children	133
('children', 'greater', 'parent', '', '6051255', 'this children height can be greater than the parent container\n')
('children', 'greater', 'parent', '', '21966140', 'once you have chosen a root node it is already easy to construct a bst taking into consideration the fact that left children are less than the parent node and all right children are greater than the parent node\n')
('parent', 'process earlier', 'children', '', '23714489', 'i guess the reason you observe this behaviour with just a guess it could be wrong is because the parent process is terminated earlier than its children so your terminal s prompt is printed before some of the children s output\n')
('parent', 'lower id', 'children', '', '23830353', 'this class assumes that nodes have numeric values for id and pid and parent node has lower id than its children which is common in tree structures\n')
('parent', 'always larger', 'children', 'memory', '6640471', 'as you are always swapping it with the larger of the two heap property means that the parent is always larger than its children\n')
('parent', 'header bigger', 'children', 'memory', '13273316', 'the table can contain two or more headers where the parent header gets a bigger colspan and the bottom header conforms by giving the equivalent amount of columns i.e index 4 has two children indexed 1 and 2\n')
('children', 'less restrictive', 'parent', '', '4047317', 'this would generally be the wrong inheritence structure if your saying what i think you are the reason being that children should not be less restrictive than parent\n')
('parent', 'more then', 'children', '', '21099035', 'what i want to do is to search for all parent who has more then n children in other words i would want to get all user records that had an activity more then n times within given period of time eventtimestamp\n')
('children', 'elements larger', 'parent', 'memory', '9945359', 'how can i achieve that my container will adjust the height accordingly of the children items when the height of the children elements is larger then configured minheight of their parent element\n')
('children', 'less', 'parent', '', '21966140', 'once you have chosen a root node it is already easy to construct a bst taking into consideration the fact that left children are less than the parent node and all right children are greater than the parent node\n')
('children', 'more depth', 'parent', '', '4836689', 'then children have one more depth than their parent and children s path starts with the parent path\n')
('children', 'greater', 'parent', '', '4564596', 'i have an issue when the player is small the children combine width is greater than the parent width\n')
('children', 'more efficient', 'parent', 'performance', '7125220', 'as harypyon suggests storing the children is a more efficient way of viewing this problem than storing the parent and then computing the children\n')
('parent', 'node lower id', 'children', '', '23830353', 'this class assumes that nodes have numeric values for id and pid and parent node has lower id than its children which is common in tree structures\n')
('parent', 'more', 'children', '', '6097438', 'what if a parent has more than 100 children\n')
('parent', '#wr more', 'children', '', '10463526', 'since the parent #wr has more children #con_bottom does not fit\n')
('children', 'more', 'parent', '', '11585485', 'there are also different types of trees -- i am going to assume that you are using a normal old tree any number of children no more than one parent one root node\n')
('children', 'higher', 'parent', '', '5253082', 'and since the children in your home block start their own stacking context one level higher than the parent your home li can never be above the items inside it\n')
('parent', 'more content', 'children', '', '289468', 'i have come up with a few ideas such as traversing the html document tree to its leaves adding up the length of the text and only seeing what other text the parent has if the parent gives us more content than the children do\n')
('parent', 'smaller', 'children', 'memory', '10342766', 'also it seems this is only the problem when there are a lot of duplicates the heap doesn t seem completely capable of staying in order the parent is smaller than the children\n')
('parent', 'lower z-index', 'children', '', '20983503', 'because the parent has lower z-index than the .modal-backdrop everything in it will be behind the modal irrespective of any z-index given to the children\n')
('children', 'more', 'parent', '', '7649499', 'can children have more than one parent\n')
('children', 'greater', 'parent', '', '2138363', 'if smallest state of all children is greater than parent s state then update parent\n')
('parent', 'greater', 'children', '', '3716386', 'but its parent is greater than or equal to w so at some level of the tree one of the children of the greatest element is w\n')
('parent', 'more', 'children', '', '10006960', 'i believe that some parent will have more than 2 children\n')
('children', 'higher', 'parent', '', '9381223', 'the z-index for the children should be higher than the parent\n')
('children', 'less', 'parent', '', '7747319', 'just remember in a nested set all children s left values are greater than and right values are less than the parent\n')
('parent', 'id lower number', 'children', '', '17147641', 'the above query only works if the parent id is a lower number than all the children\n')
('parent', 'higher', 'children', '', '22542709', 'i ve tried a bunch of other things as well one of them being hook elements with insertafter but stay in parent - jquery which worked perfectly but if the position was higher than the children inside the parent it didn t know what to do with it and causing a lot of unwanted behavior\n')
('children', 'smaller', 'parent', 'memory', '14903012', 'what if both children are equal and smaller than the parent\n')
('parent', 'bigger', 'children', 'memory', '9653437', 'as a general rule of thumb i keep the parent bigger than the children\n')
('children', 'higher opacity', 'parent', '', '15823916', 'use rgba instead on the container div to set the opacity as the opacity properties is inherited by all children elements even text nodes meaning a descendant of any kind can t have a higher opacity than its parent\n')
('parent', 'smaller', 'children', 'memory', '15460121', 'here a number of methods are described to fix the parent which collapses to smaller than its floating children\n')
('parent', 'higher z-index', 'children', '', '9381223', 'since parent have a higher z-index than its children you need to change the default browser stacking behavior\n')
('parent', 'div better', 'children', '', '12540569', 'now since the pseudo-element is below all of the floated children the parent div happens or better yet seems to contain the floated children as well - which is really what you want\n')
('parent', 'larger', 'children', 'memory', '6640471', 'as you are always swapping it with the larger of the two heap property means that the parent is always larger than its children\n')
('parent', 'easier', 'children', 'usability', '16539735', 'i would prefer the 1st one since maintaining 1 value of parent is easier efficient than maintaining list of all children\n')
('parent', 'larger', 'children', 'memory', '24718764', 'so the problem i have now that the parent div height is larger than his children s height\n')
('children', 'higher z-index', 'parent', '', '9133312', 'by giving .artist-container a higher z-index you are placing it higher in the stacking order than the child image though children always have a higher z-index than their parent\n')
('parent', 'higher z-index', 'children', '', '19232855', 'however if for example you have two parent sibling elements where one has a higher z-index than the other no descendant of the parent with the lower z-index will ever have a higher z-index than children of the parent with the higher z-index even if you set the former s children to z-index 500 or something like that\n')
('children', 'greater', 'parent', '', '12992744', 'index for children will always be greater than the parent as shown in the vector above\n')
('children', 'smaller', 'parent', 'memory', '14903012', 'and the reason why the subtree isn t reached is because you only call heapifyhelper for the children if one of the children is smaller than the parent but when you call heapifyhelper 1 the two children of the node 5 are 9 and 11 both larger than the root value\n')
('parent', 'larger', 'children', 'memory', '25338534', 'again if the parent view is not larger than its children the expansion suffix does not make any difference as well\n')
('children', 'more', 'parent', '', '23390839', 'the problem i have is that some children have more than one parent but because in order to use the recursive parent nicely i need to group the results by id i only see distinct entries\n')
('parent', 'more', 'children', '', '20305169', 'i have one parent resource which can have more than one children of one attrbiute and one than more children of other attribute\n')
('children', 'lower z-index', 'parent', '', '16504832', 'now the children have a lower z-index than the parent\n')
('parent', 'more', 'children', '', '15116711', 'get all the parent that have more than two children\n')
('children', 'faster', 'parent', 'performance', '6880451', 'children is faster than find for example just like parent is faster than parent\n')
('children', 'greater', 'parent', '', '16231641', 'if children height is greater than parent i need to set height of children to parent\n')
('children', 'lower', 'parent', '', '7639612', 'you could do something similar using the score values in sorted sets giving children a score just lower than the parent\n')
('children', 'more', 'parent', '', '20455473', 'so in this labelling scheme left children are 2 i+1 more than their parent where i is the height of the child while right children are 1 more than their parent\n')
('parent', 'higher rate', 'children', '', '15344834', 'i subscribed to the main canvas sizechanged event and applied a scale transform so that the canvas and its children would shrink and grow in a zoom like fashion when the control is resized which is working but for some reason the parent canvas is shrinking at a much higher rate than the children making the children fall off of the canvas at a certain point because of the scale rate\n')
('parent', 'earlier', 'children', '', '23714489', 'i guess the reason you observe this behaviour with just a guess it could be wrong is because the parent process is terminated earlier than its children so your terminal s prompt is printed before some of the children s output\n')
('parent', 'view larger', 'children', 'memory', '25338534', 'suffix expand if the parent view is larger than the combined size of all its children additional space is available then the space is proportioned amongst child views with that suffix\n')
('children', 'larger', 'parent', 'memory', '7725351', 'pushing and popping any item on a heap simply updates the elements in it in such a way that there is no node where its children are larger than the parent for max heap\n')
('children', 'smaller value', 'parent', 'memory', '11353004', 'if a node has two children then the left child has a smaller value than the parent and the right child has a bigger value\n')
('children', 'less', 'parent', '', '7112786', 'however if the keys are not comparable how are we supposed to tell whether the children are greater or less than the parent\n')
('children', 'higher', 'parent', '', '17602524', 'i m trying to stop dragging the children div when his position is equal or higher than the parent position\n')
('children', 'more', 'parent', '', '17891768', 'if your table represents id_1 is a parent of id_2 then both a parent can have many children and children can have more than one parent this is known as a many-to-many relationship\n')
('parent', 'lesser', 'children', '', '21211701', 'the invariant here however is that the parent s index must always be lesser than its children\n')
('parent', 'more', 'children', '', '16727527', 'in that case the update is done directly on the child table parent has more children .\n')
('parent', 'more n', 'children', '', '931234', 'in the same breath i would also like to be able to run a specific number of child processes at any given time say for example n children running concurrently whenever one exits the parent process starts another child if needed but has no more than n children at any given moment\n')
('children', 'elements larger then', 'parent', 'memory', '9945359', 'how can i achieve that my container will adjust the height accordingly of the children items when the height of the children elements is larger then configured minheight of their parent element\n')
('parent', 'view not larger', 'children', 'memory', '25338534', 'again if the parent view is not larger than its children the expansion suffix does not make any difference as well\n')
('children', 'higher', 'parent', '', '13274185', 'when opacity on a parent container the #contentborder div in this case is set to less than 1 any children inherit that and cannot be higher than the parent\n')
('parent', 'more stable', 'children', 'reliability', '10340830', 'this really helps keeps parent branch more stable than children\n')
('parent', 'lower z-index', 'children', '', '17601224', 'if the parent has lower z-index than the modal everything in it will be behind the modal regardless of the children s z-index\n')
('children', 'higher id', 'parent', '', '7128116', 'this is a very simple case which will do that asuming your children always have a higher id than their parent\n')
('children', 'more', 'parent', '', '16955894', 'on mac os x dwarfdump shows this relationship with indentation - children dies are indented a little more than parent dies\n')
('parent', 'smaller', 'children', 'memory', '5422525', 'you need to just change the siftdown function so that the parent is always the smaller than the children\n')
('parent', 'larger', 'children', 'memory', '19287726', 'edit in other words if the parent is larger than the total width of the children that s fine\n')
('parent', 'lower', 'children', '', '20983503', 'because the parent has lower z-index than the .modal-backdrop everything in it will be behind the modal irrespective of any z-index given to the children\n')
('children', 'greater', 'parent', '', '13525425', 'you allow children on either side of a node to contain keys that are neither less than nor greater than the parent\n')
('children', 'wider', 'parent', '', '5099892', 'also the inner children div have to be wider than the parent div for the scrollbars to work\n')
('parent', 'id lower', 'children', '', '17147641', 'the above query only works if the parent id is a lower number than all the children\n')
('parent', 'more', 'children', '', '11575197', 'problem a parent can have more than one children and parent table is dependent on child table\n')
('parent', 'larger', 'children', 'memory', '13440191', 'specifically you compare the new root with the left and right children and keep swapping if the parent is larger than at least one of the children until the heap property is satisfied\n')
('children', 'still larger', 'parent', 'memory', '10163422', 'new h i is guaranteed to be the smallest of the old h i s children which is still larger than old h i s parent\n')
('children', 'higher z-index', 'parent', '', '16504832', 'the parent establishes a stacking context and the children have higher z-index than the parent and cover the parent up so that s all fine\n')
('parent', 'more', 'children', '', '17495022', 'there is a parent table he can add more than one children email ids no\n')
('parent', 'higher vertically', 'children', '', '19784864', 'tip when i place parent blue here higher vertically than children orange here and i notice the bird body with raised wings pattern of a parent on either side then i recognize a many-to-many relationship exists between the parent\n')
('parent', 'wider', 'children', '', '8309782', 'if there are two rectangles and the parent is wider and than it is high then the children should be placed next to each other\n')
('children', 'lesser', 'parent', '', '12639555', 'however it is not possible to rotate in the current situation since both children end up in becoming lesser than a parent\n')
('parent', 'more', 'children', '', '289468', 'i have come up with a few ideas such as traversing the html document tree to its leaves adding up the length of the text and only seeing what other text the parent has if the parent gives us more content than the children do\n')
('children', 'higher opacity', 'parent', '', '13511922', 'i understand that children cannot have a higher opacity than their parent but is there a possible workaround for this\n')
('parent', 'more', 'children', '', '22166062', 'am passing the word asdasdasd to the text area with the id source and triggering the click event.after that trying to check whether the result value which is wrapped under the newly created span tag or not.for that am checking whether its parent with the id result_box has more than one children\n')
('children', 'less', 'parent', '', '14162235', 'i used to think heaps have this property but it just seems that the only requirement is for the children to be less than the parent\n')
('children', 'longer', 'parent', '', '16327453', 'it looks like the parent will become a zombie too if children aren t handled and a child runs longer than the parent\n')
('parent', 'easier efficient', 'children', 'usability', '16539735', 'i would prefer the 1st one since maintaining 1 value of parent is easier efficient than maintaining list of all children\n')
('parent', 'more', 'children', '', '1672672', 'if an element has only 1 child then the child is placed below the parent on the same x co-ordinate if the parent has more than one child then the children are placed with equal spaces apart and the parent needs to be in the middle above the children to two equal length lines join to both the children from the parent\n')
('parent', 'better', 'children', '', '17297629', 'do you keep the parent if they are better than the children\n')
('children', 'more', 'parent', '', '22526420', 'this query lists all parent sharing the same children where there are more than one parent\n')
('parent', 'higher rating', 'children', '', '9453145', 'you may need to also add another bit to the child2 join to remove the possibility of parent having a higher rating than the children\n')
('parent', 'more', 'children', '', '4791130', 'manytoone if you plan to have a tree as a parent can have more than one children\n')
('parent', 'header bigger colspan', 'children', 'memory', '13273316', 'the table can contain two or more headers where the parent header gets a bigger colspan and the bottom header conforms by giving the equivalent amount of columns i.e index 4 has two children indexed 1 and 2\n')
('parent', 'less', 'children', '', '11815084', 'the where clause basically includes only the parent who have less than 4 children or who do not have any children at all b.employee_id is null\n')
('parent', 'less', 'children', '', '7460115', 'in case of min heap when you insert the element which is less than some nodes in the tree the data structure now doesn t follow heap condition in case of min heap value of parent should be less than its children so you have to shift up and up\n')
('children', 'more', 'parent', '', '22380179', 'children can belong to more than one parent\n')
('parent', 'however not larger', 'children', 'memory', '25338534', 'if the parent however is not larger then its children you won t notice any difference between those alignments\n')
('parent', 'div better yet', 'children', '', '12540569', 'now since the pseudo-element is below all of the floated children the parent div happens or better yet seems to contain the floated children as well - which is really what you want\n')
('parent', 'node greater', 'children', '', '3113198', 'the heap property that the parent node is greater than it s child nodes 2i + 1 and 2i + 2 using zero-based arrays holds for all nodes that have children\n')
('children', 'height greater', 'parent', '', '16231641', 'if children height is greater than parent i need to set height of children to parent\n')
('children', 'higher opacity', 'parent', '', '17069172', 'children can t have a higher opacity than their parent as their opacities multiply\n')
('parent', 'however not larger then', 'children', 'memory', '25338534', 'if the parent however is not larger then its children you won t notice any difference between those alignments\n')
('children', 'larger id', 'parent', 'memory', '3027085', 'are the nodes in order like in your example where the children have a larger id than the parent\n')
('children', 'greater', 'parent', '', '19333075', 'both children are greater than the parent\n')
('children', 'more', 'parent', '', '5205777', 'an item can have multiple children and can also have more than one parent\n')
('children', 'larger', 'parent', 'memory', '17625803', 'note that children nodes have value larger than the parent\n')
('parent', 'smaller', 'children', 'memory', '19287726', 'if the parent becomes smaller than the total width of the children as numbers 1 2 3 and 4 dictate the children should shrink to stay within the new parent width\n')
('parent', 'larger', 'children', 'memory', '7275914', 'make sure that the parent container has a width and that this width is at least larger than the children elements\n')
('parent', 'smaller', 'children', 'memory', '13039556', 'when the browser window is smaller than the min-width the child elements are the correct width but the parent keeps getting smaller causing the children to overflow\n')
('parent', 'higher', 'children', '', '17147641', 'this is because the secondary sorting orders by id and if the parent id happens to be higher than any children the parent may not show up on top of the children\n')
('children', 'higher z-index', 'parent', '', '2616927', 'as a side note the children can t have a higher z-index than their parent so everything inside .codbg is -1 behind the page then you need to fix the tab images the problem is not that they re behind the background it s that they re transparent and look darker on top of a darker background\n')
('parent', 'node lower', 'children', '', '23830353', 'this class assumes that nodes have numeric values for id and pid and parent node has lower id than its children which is common in tree structures\n')
('parent', 'more', 'children', '', '19174493', 'i wrote one query but it will fails if a particular parent has more than 10 children\n')
('parent', 'more', 'children', '', '10897471', 'this way it is not ok if the parent has more children let say they are input s\n')
('parent', 'higher', 'children', '', '19027634', 'i thought of using before and after pseudos to display top-to-bottom and bottom shadows on the containing element but these pseudos display within their parent element and positioning parent z-index higher than these children has no effect\n')
('parent', 'greater', 'children', '', '13553331', 'simply put a max heap is a heap where the value of the parent is greater than the value of any of its children\n')
('children', 'higher z-index', 'parent', '', '19843662', 'you would think that you could simply increment each element s z-index by two but that does not work due to the fact that children elements cannot have a higher z-index than their parent if the parent s z-index is set\n')
('parent', 'more', 'children', '', '15024002', 'here a child will be having more than one parent and a parent has more than 2 children\n')
('children', 'deeper', 'parent', '', '20659327', 'it selects all direct children children exactly one level deeper than the parent\n')
('children', 'less opaque', 'parent', '', '7017815', 'as for inheriting opacity - children cannot be less opaque than parent but could be more\n')
('children', 'smaller height', 'parent', 'memory', '11805486', 'if you have children that have a smaller height than their parent floats will bring them to the top whereas inline-block will screw up sometimes\n')
('children', 'higher', 'parent', '', '16192840', 'all children will have higher z than parent\n')
('parent', 'more', 'children', '', '9460541', 'in this case a parent row can be linked to more than one children without duplicating data\n')
('parent', 'node always greater', 'children', '', '9880786', 'the max heap is an array that could be more easily represented with a binary tree where the parent node is always greater than it s children and every time you add a child you added it towards the left so that every time the tree increases it s height it is a full tree\n')
('parent', 'lower', 'children', '', '17601224', 'if the parent has lower z-index than the modal everything in it will be behind the modal regardless of the children s z-index\n')
('parent', 'more', 'children', '', '9460541', 'in other words if a parent row can have more than one children when sending the fields to each child the parent data will be duplicated in each children\n')
('parent', 'larger sizehint', 'children', 'memory', '5552873', 'i was expecting the parent widget to have a little larger sizehint than the children layout\n')
('parent', 'more', 'children', '', '9460541', 'disadvantages again if a parent can have a row that relates to more than one children data will be duplicated as there will be one row per each of them so there is a limitation in this solution\n')
('parent', 'lower index', 'children', '', '19015012', 'parent are always at a lower index than their children so it is ordered\n')
('parent', 'more', 'children', '', '21099035', 'what i want to do is to search for all parent who has more then n children in other words i would want to get all user records that had an activity more then n times within given period of time eventtimestamp\n')
('children', 'more', 'parent', '', '7125220', 'as harypyon suggests storing the children is a more efficient way of viewing this problem than storing the parent and then computing the children\n')

exponent	multiplication	6
('multiplication', 'even easier', 'exponent', 'usability', '18450999', 'multiplication is even easier as you dont have to line up the decimal points you just do the math on the significant digits and simply add the exponent\n')
('exponent', 'faster', 'multiplication', 'performance', '14917576', 'this is analogous to the way you can compute exponent using successive squaring much faster than by repeated multiplication\n')
('multiplication', 'slower', 'exponent', 'performance', '18453999', 'however naive multiplication will get slower and slower as the exponent increases\n')
('exponent', 'faster', 'multiplication', 'performance', '20776795', 'however with really very small parameter 2 in your case exponent is faster than multiplication\n')
('exponent', 'larger', 'multiplication', 'memory', '1019808', 'as int exponent gets larger taking powers might be faster than multiplication\n')
('exponent', 'not faster', 'multiplication', 'performance', '12919354', 'the misunderstanding is that incrementing the exponent is not faster than doing a multiplication\n')

namedtuple	dictionary	2
('namedtuple', 'lighter', 'dictionary', 'memory', '18384001', '2 you probably want a namedtuple - i m pretty sure they re lighter than dictionary and you can access properties using dot notation for which i have an aesthetic preference anyway\n')
('namedtuple', 'lower overhead', 'dictionary', 'performance', '9072260', 'namedtuple have a lower overhead than dictionary since the duplicate keys don t have to be stored per item but have the convenience of named access\n')

ieee	decimal	2
('decimal', 'slower', 'ieee', 'performance', '10562448', 'decimal types libraries are fantastic for financial applications because we re used to dealing with the style of rounding required in financial stuff but there is the cost that they tend to be slower than ieee floating point\n')
('ieee', 'less', 'decimal', '', '5729100', 'the third line displays the data with the maximum useful precision - an ieee 754 64bit floating-point number has slightly less than 16 decimal digits of precision so all those digits of the literal in math.h are pointless perhaps they can be seen as future-proofing against a possible future redefinition in a format with more precision\n')

yum	rpm	2
('yum', 'easier', 'rpm', 'usability', '6616998', 'yum makes it easier to maintain groups of machines without having to manually update each one using rpm\n')
('yum', 'more', 'rpm', '', '24264078', 'i strongly suggest either of the first two options over the latter option as the latter option does not always play nicely with the way rpm and yum handle transactions when more than one rpm are involved\n')

nginx	apache	80
('nginx', 'better', 'apache', '', '9550924', 'although this thread is more than a year old it still merits from the fact that no one mentioned about the not so recent innovations of nginx lighty and other web servers which scale much better than apache at higher concurrency and consume lesser resources\n')
('nginx', 'less memory', 'apache', 'memory', '148194', 'servers like lighthttp and nginx can handle large amounts of traffic in much less memory than apache if you can sacrifice apache s power and flexibility or if you just don t need those things which often you don t\n')
('nginx', 'better', 'apache', '', '20960880', 'i will say that nginx tends to handle heavier loads better than apache though so take a look at that\n')
('nginx', 'usually better', 'apache', '', '21035581', 'note that in any case for increased security and fast static file css js delivery you might want to add a reverse proxy layer nginx usually provides better performance but apache works as well before the nodejs python server\n')
('nginx', 'much faster', 'apache', 'performance', '1315178', 'for example nginx is much faster than apache\n')
('nginx', 'more flexible', 'apache', 'usability', '21286932', 'also you should consider using nginx as server that s more flexible than apache\n')
('nginx', 'faster', 'apache', 'performance', '22224559', 'i will add that i ve often heard that nginx is faster than apache for serving static files to the point that it s sometimes worth using nginx for static files and reverse proxying to apache for dynamic content\n')
('apache', 'better', 'nginx', '', '8103931', '16 cores apache would scale better than nginx while nginx would process more client requests\n')
('nginx', 'better', 'apache', '', '2014241', 'nginx also happens to be better than apache at writing logfiles interestingly\n')
('nginx', 'faster', 'apache', 'performance', '11462284', 'there seems to be a consensus that nginx serves static content faster than apache\n')
('nginx', 'less memory', 'apache', 'memory', '5244789', 'also nginx uses a lot less memory than apache\n')
('apache', 'more flexable', 'nginx', '', '7392125', 'apache is more flexable then nginx but it comes with a high price in performance\n')
('apache', 'mod_php much more stable', 'nginx', 'reliability', '19961943', 'apache mod_php is much more stable and cleaner while nginx will often deliver http bad gateway error coded in 502\n')
('nginx', 'faster', 'apache', 'performance', '13074918', 'as an added benefit nginx can also serve static files much faster than apache and nginx also uses much less ram and can handle much more connections\n')
('nginx', 'better', 'apache', '', '7181330', 'i recommend you to use nginx as an reverse proxy since the configuration is easier and the performance is much better than apache\n')
('nginx', 'lighter', 'apache', 'memory', '10576127', 'nginx is very fast much lighter than apache\n')
('apache', 'more busy', 'nginx', '', '25123234', 'it seems your apache is more busy than your nginx\n')
('apache', 'mod_php much more', 'nginx', '', '19961943', 'apache mod_php is much more stable and cleaner while nginx will often deliver http bad gateway error coded in 502\n')
('apache', 'more', 'nginx', '', '12725137', 'apache is more popular and has more features nginx is smaller and faster and has less features\n')
('apache', 'better solution just', 'nginx', '', '8839295', 'i ve heard it suggested that i use nginx as a reverse proxy in front of apache and node.js is that a better solution than just nginx\n')
('apache', 'more', 'nginx', '', '4113570', 'apache is more popular and has more features nginx is smaller and faster and has less features\n')
('nginx', 'better', 'apache', '', '10204877', 'uwsgi is better if you are using nginx i find nginx far better than apache personally\n')
('nginx', 'more clean', 'apache', '', '10318491', 'the syntax for nginx configuration is different but more clean than apache\n')
('nginx', 'faster', 'apache', 'performance', '12509474', 'i ve read that nginx is faster for static pages but there are questions about its performance with php compared to apache s performance with php\n')
('nginx', 'lower memory', 'apache', 'memory', '21815739', 'i know nginx has lower memory footprint and little faster than apache in serving static files\n')
('nginx', 'lower', 'apache', '', '21815739', 'i know nginx has lower memory footprint and little faster than apache in serving static files\n')
('nginx', 'less resources', 'apache', '', '25819090', 'also when your setting up the server i would say start with nginx it s uses less resources than apache\n')
('nginx', 'faster', 'apache', 'performance', '1315178', 'for example nginx is much faster than apache\n')
('nginx', 'faster', 'apache', 'performance', '19810803', 'nginx is faster than apache handles slow clients better and is generally easier to use\n')
('apache', 'slower', 'nginx', 'performance', '20715542', 'we have a few clients who have very high traffic sites running apache slower than nginx with varnish in front of it and they get way more traffic than you are saying with little to no performance problems\n')
('apache', 'better', 'nginx', '', '9609477', 'apache made a claim that apache 2.4 will offer performance as good or better than nginx\n')
('apache', 'more friendly', 'nginx', '', '12509562', 'apache is more friendly configuration wise htaccess htpasswd rewrite rules etc nginx is fast in regard to static assets\n')
('nginx', 'more efficient', 'apache', 'performance', '9745974', 'nginx or other server is not much more efficient than apache\n')
('nginx', 'better', 'apache', '', '3602188', 'nginx s static file performance is better than apache\n')
('nginx', 'faster', 'apache', 'performance', '8268449', 'very fast static assets nginx is faster than apache at serving static assets css js images ... and uses very little memory to do so\n')
('nginx', 'faster', 'apache', 'performance', '15748792', 'and finally from my experience nginx is faster than apache\n')
('nginx', 'usually better performance', 'apache', 'performance', '21035581', 'note that in any case for increased security and fast static file css js delivery you might want to add a reverse proxy layer nginx usually provides better performance but apache works as well before the nodejs python server\n')
('apache', 'more popular', 'nginx', 'usability', '12725137', 'apache is more popular and has more features nginx is smaller and faster and has less features\n')
('apache', 'significantly more', 'nginx', '', '24338964', 'however my experience is that configuring it in apache is significantly more complex than configuring it in nginx and even with worker it still is not quite as efficient with nginx\n')
('nginx', 'better', 'apache', '', '1469813', 'nginx with its own mod_wsgi seems to perform even better than apache but hey you didn t ask about that\n')
('nginx', 'better performance', 'apache', 'performance', '2583350', 'tornadoweb and nginx are popular web servers for the moment and many benchmarkings show that they have a better performance than apache under certain circumstances\n')
('nginx', 'less', 'apache', '', '1271575', 'nginx uses less memory than apache given the size of your setup i would definitely recommend that\n')
('nginx', 'faster', 'apache', 'performance', '3952446', 'for static file serving i found nginx performance lot faster than apache\n')
('nginx', 'much more', 'apache', '', '14091869', 'serving static files with nginx is much more efficient than with apache\n')
('nginx', 'much more efficient', 'apache', 'performance', '14091869', 'serving static files with nginx is much more efficient than with apache\n')
('nginx', 'more efficient', 'apache', 'performance', '14091869', 'serving static files with nginx is much more efficient than with apache\n')
('nginx', 'faster', 'apache', 'performance', '4109998', 'nginx will definitely work faster than apache\n')
('nginx', 'better', 'apache', '', '15646087', 'also what makes nginx better than apache in this case\n')
('nginx', 'faster', 'apache', 'performance', '25406562', 'nginx is faster than apache and the configuration is easier\n')
('nginx', 'more efficient', 'apache', 'performance', '2899344', 'in fact nginx can use select instead of epoll if you compile it with the --with-select_module option and i bet it will still be more efficient than apache\n')
('nginx', 'better', 'apache', '', '6942102', '4 i d like to understand why nginx might be better than apache when one is long polling and why long polling is better than periodically polling a server\n')
('apache', 'more', 'nginx', '', '7392125', 'apache is more flexable then nginx but it comes with a high price in performance\n')
('nginx', 'better', 'apache', '', '12379123', 'the remote server is set up to allow very few maximum concurrent clients generally nginx handles many concurrent clients better than apache since it doesn t need to fork a new process for every request so if it becomes an issue you might want to look into switching web servers\n')
('apache', 'more', 'nginx', '', '25123234', 'it seems your apache is more busy than your nginx\n')
('nginx', 'faster', 'apache', 'performance', '15152595', 'when i was googling info on nginx it appears to be faster than apache and works well in serving static pages\n')
('nginx', 'better', 'apache', '', '9287841', 'nginx is better suited than apache as it is light and single threaded vs apache thread per request in most normal setups\n')
('nginx', 'better', 'apache', '', '6021813', 'why nginx might be better than apache when one is long polling and why long polling is better than periodically polling a server\n')
('nginx', 'easier configuration', 'apache', 'usability', '9951705', 'any one of the reverse proxy systems can likely do this nginx is popular too and generally has easier configuration than apache but i ve never used it with https\n')
('nginx', 'faster', 'apache', 'performance', '13451844', 'you can serve it from for example nginx varnish which are usually faster than apache\n')
('apache', 'more popular', 'nginx', 'usability', '4113570', 'apache is more popular and has more features nginx is smaller and faster and has less features\n')
('apache', 'faster', 'nginx', 'performance', '8103931', 'paradoxally it does not mean that apache is faster than nginx it just means that on 1 2 3 .\n')
('nginx', 'less', 'apache', '', '25819090', 'also when your setting up the server i would say start with nginx it s uses less resources than apache\n')
('apache', 'significantly more complex', 'nginx', 'usability', '24338964', 'however my experience is that configuring it in apache is significantly more complex than configuring it in nginx and even with worker it still is not quite as efficient with nginx\n')
('nginx', 'lower', 'apache', '', '7463387', 'nginx uses an event based non blocking single thread and the memory usage is relatively much lower than apache\n')
('nginx', 'better', 'apache', '', '24561939', 'nginx + gunicorn is likely to work better than apache + modwsgi at this point in time\n')
('nginx', 'less memory', 'apache', 'memory', '1271575', 'nginx uses less memory than apache given the size of your setup i would definitely recommend that\n')
('nginx', 'more traffic', 'apache', '', '7974735', 'apache s design is thread per client while nginx uses the reactor pattern meaning - nginx can handle much more traffic than apache as a web server about 50 times the number of requests\n')
('apache', 'more', 'nginx', '', '12509562', 'apache is more friendly configuration wise htaccess htpasswd rewrite rules etc nginx is fast in regard to static assets\n')
('nginx', 'better', 'apache', '', '20529263', 'nginx is better at handling requests since it does not spawn a new process for every request unlike apache\n')
('nginx', 'faster', 'apache', 'performance', '535933', 'not only is nginx supposedly faster than apache at delivering static content but this also offloads your rails application for every image stylesheet javascript or whatever other static content\n')
('nginx', 'faster', 'apache', 'performance', '11217047', 'nginx works great by itself and will likely be much faster than apache\n')
('nginx', 'faster', 'apache', 'performance', '21815739', 'i know nginx has lower memory footprint and little faster than apache in serving static files\n')
('nginx', 'still faster', 'apache', 'performance', '23170094', 'nginx is still faster and i might choose it but apache isn t asleep\n')
('nginx', 'faster', 'apache', 'performance', '19719946', 'hi everyone i need help with this i ve already set up nginx + php and it works great faster than apache my problem is how to setup a multiple projects in one ip\n')
('nginx', 'better', 'apache', '', '24360855', 'i want to move to nginx since it s better than apache\n')
('nginx', 'more flexible', 'apache', 'usability', '2912577', 'also nginx s configuration is much more flexible than apache and by having it on the front end it gives you a lot of flexibility\n')
('nginx', 'better', 'apache', '', '8103674', 'if you want to use something in front of it though i suggest you use something like nginx better than apache since nginx is also asynchronous like node and it s performs really well at serving static files\n')
('apache', 'better', 'nginx', '', '8103931', 'now back to the question my guess based on reading tests published here would be that the proper multi-thread apache architecture should scale better than nginx on multi-core cpus\n')
('nginx', 'much faster', 'apache', 'performance', '14473134', 'i am not an expert in deployment but in my experience nginx is much faster and more friendly to django compared to apache\n')
('nginx', 'less memory', 'apache', 'memory', '7224338', 'also have a look at nginx for example it is fast and uses less memory than apache to handle client connections\n')

heapsort	in-place	1
('heapsort', 'slower standard', 'in-place', 'performance', '8311230', 'but heapsort is assumed to be on average somewhat slower than standard in-place quicksort\n')

httplib	urllib	2
('httplib', 'lower level', 'urllib', '', '7505789', 'basically - httplib is lower level while urllib is high-level\n')
('httplib', 'lower', 'urllib', '', '7505789', 'basically - httplib is lower level while urllib is high-level\n')

des	rsa	2
('des', 'faster', 'rsa', 'performance', '10094969', 'by comparison des see section 3.2 and other block ciphers are much faster than the rsa algorithm\n')
('des', 'larger', 'rsa', 'memory', '864659', 'des code is 8 times larger than rsa\n')

guard	autotest	2
('guard', 'more', 'autotest', '', '7222776', 'in other words guard is more a generic framework for every process which needs to do something triggered by a file change autotest is restricted to running tests\n')
('guard', 'better', 'autotest', '', '7222776', 'i recently moved from autotest to guard for a reason it works better than autotest and it has a lot of available guard\n')

cclabelttf	ccmenuitem	1
('cclabelttf', 'more', 'ccmenuitem', '', '16316610', 'if i create the same cclabelttf once then i can t add it to more than one ccmenuitem because it will give runtime error about label already added\n')

phpquery	querypath	1
('phpquery', 'often faster', 'querypath', 'performance', '3659729', 'it is said that phpquery is often faster than querypath because of fewer overall features\n')

jsr286	jsr168	2
('jsr286', 'newer', 'jsr168', '', '9036984', 'the posts you see seem to be logical as jsr286 is a newer spec and there are some features that make jsr268 portlet not a jsr168 portlet\n')
('jsr286', 'newer spec', 'jsr168', '', '9036984', 'the posts you see seem to be logical as jsr286 is a newer spec and there are some features that make jsr268 portlet not a jsr168 portlet\n')

lxml	libxml2	1
('lxml', 'more', 'libxml2', '', '10715774', 'the chapter starts with short course to xml general talk but with the atom syndication feed example then it continues with the standard xml.etree.elementtree and continues with third party lxml that implements more with the same interface full xpath 1.0 based on libxml2\n')

s-function	matlab	1
('s-function', 'faster', 'matlab', 'performance', '20815265', 'my c s-function is faster than my embedded matlab function block in matlab environment but when i use it in rt-lab the embedded is faster\n')

textscan	fread	1
('textscan', 'more powerful', 'fread', 'usability', '1457281', 'then for reading i find textscan to be more powerful than fread fscanf the differences between them all are summarized here\n')

coalesce	isnull	31
('coalesce', 'more', 'isnull', '', '16697158', 'you can also use coalesce which is the more general form of isnull and is actually part of the sql standard\n')
('coalesce', 'more', 'isnull', '', '15523066', 'in this case i would use coalesce which provides more levels than isnull rather than the case stement\n')
('isnull', 'comparatively faster', 'coalesce', 'performance', '18085646', 'you can use isnull also in place of coalesce as isnull is comparatively faster than coalesce\n')
('isnull', 'marginally faster', 'coalesce', 'performance', '6152611', 'isnull is marginally faster than coalesce\n')
('coalesce', 'more portable', 'isnull', 'usability', '5537484', '- coalesce should be more portable than isnull\n')
('isnull', 'quicker', 'coalesce', '', '2287642', 'i understand the difference between these functions but my question is when checking for a single null value would isnull be any quicker than using coalesce\n')
('coalesce', 'more cross-compatible', 'isnull', '', '1037788', 'coalesce is more cross-compatible than isnull or nvl it works on mssql oracle mysql derby et al.\n')
('isnull', 'better', 'coalesce', '', '6186100', 'isnull is better then coalesce because of how datatypes are handled\n')
('coalesce', 'more correct', 'isnull', '', '10668170', 'coalesce is more correct of course you could just embed isnull over and over and over... but put that under a performance microscope and coalesce may just win\n')
('coalesce', 'more', 'isnull', '', '10668170', 'coalesce is more correct of course you could just embed isnull over and over and over... but put that under a performance microscope and coalesce may just win\n')
('isnull', 'faster', 'coalesce', 'performance', '18085646', 'you can use isnull also in place of coalesce as isnull is comparatively faster than coalesce\n')
('coalesce', 'more', 'isnull', '', '7305245', 'coalesce is the more standard alternative of isnull\n')
('isnull', 'better', 'coalesce', '', '18274020', 'on the subject of performance on sql server isnull often performs better than coalesce but the latter is ansi compliant if that is important to you\n')
('isnull', 'faster', 'coalesce', 'performance', '18828697', 'isnull can only have one input however it s been shown to be slightly faster than coalesce\n')
('isnull', 'faster', 'coalesce', 'performance', '18828904', 'isnull is faster than coalesce\n')
('coalesce', 'better', 'isnull', '', '5024166', 'sql server is probably smart enough to translate isnull into the equivalent sarg expression but if you are bent on using a function then coalesce is a better choice because it is part of the sql standard allows for multiple values instead of just two with isnull and avoids using quite possibly the most confusing function name microsoft ever devised in isnull\n')
('coalesce', 'less costly', 'isnull', '', '13366686', 'i ve been told that coalesce is less costly than isnull but research doesn t indicate that\n')
('coalesce', 'less', 'isnull', '', '13366686', 'i ve been told that coalesce is less costly than isnull but research doesn t indicate that\n')
('isnull', 'faster', 'coalesce', 'performance', '2287656', 'isnull will be faster i think because it has lesser function code implementation for itself making it faster than coalesce\n')
('coalesce', 'more standard', 'isnull', '', '7305245', 'coalesce is the more standard alternative of isnull\n')
('isnull', 'often better', 'coalesce', '', '18274020', 'on the subject of performance on sql server isnull often performs better than coalesce but the latter is ansi compliant if that is important to you\n')
('isnull', 'slightly faster', 'coalesce', 'performance', '25415130', 'this is pretty much the ifloop answer but isnull is slightly faster than coalesce\n')
('coalesce', 'better choice', 'isnull', '', '5024166', 'sql server is probably smart enough to translate isnull into the equivalent sarg expression but if you are bent on using a function then coalesce is a better choice because it is part of the sql standard allows for multiple values instead of just two with isnull and avoids using quite possibly the most confusing function name microsoft ever devised in isnull\n')
('isnull', 'more efficient', 'coalesce', 'performance', '2287673', 'to prefer isnull over coalesce when given the choice is that isnull tends to produce query plans that are more efficient than coalesce\n')
('isnull', 'better then', 'coalesce', '', '6186100', 'isnull is better then coalesce because of how datatypes are handled\n')
('isnull', 'faster', 'coalesce', 'performance', '6152611', 'isnull is marginally faster than coalesce\n')
('coalesce', 'more general', 'isnull', '', '16697158', 'you can also use coalesce which is the more general form of isnull and is actually part of the sql standard\n')
('coalesce', 'more levels', 'isnull', '', '15523066', 'in this case i would use coalesce which provides more levels than isnull rather than the case stement\n')
('isnull', 'faster', 'coalesce', 'performance', '13174599', 'in some circumstances isnull is faster than case or coalesce\n')
('isnull', 'faster', 'coalesce', 'performance', '25415130', 'this is pretty much the ifloop answer but isnull is slightly faster than coalesce\n')
('coalesce', 'more', 'isnull', '', '1037788', 'coalesce is more cross-compatible than isnull or nvl it works on mssql oracle mysql derby et al.\n')

autotools	automake	2
('autotools', 'slightly more', 'automake', '', '1035179', 'in the case of autotools it is slightly more complicated because not everybody who compiles the software would need automake and autoconf installed only those that need to change the build system adding new files counts as changing the build system\n')
('autotools', 'slightly more complicated', 'automake', 'usability', '1035179', 'in the case of autotools it is slightly more complicated because not everybody who compiles the software would need automake and autoconf installed only those that need to change the build system adding new files counts as changing the build system\n')

multiplication	division	115
('division', 'slower', 'multiplication', 'performance', '7459618', 'yes division is usually much slower than multiplication\n')
('multiplication', 'much less', 'division', '', '8857056', 'iirc floating-point multiplication is much less expensive than division so this might be faster than both\n')
('multiplication', 'faster', 'division', 'performance', '16212577', 'this because 1 x is simpler than y x and multiplication is faster than division\n')
('multiplication', 'faster', 'division', 'performance', '17883577', 'multiplication is faster than division\n')
('division', 'more time', 'multiplication', 'performance', '21610045', 'i have heard division takes more time then multiplication but beyond that i could not determine whether writing this in one line or multiple assignment lines was more efficient\n')
('division', 'slower', 'multiplication', 'performance', '15745819', 'but i wonder why is division actually slower than multiplication\n')
('division', 'slower', 'multiplication', 'performance', '655581', 'division algorithms are slower than multiplication algorithms in most cases\n')
('multiplication', 'faster', 'division', 'performance', '899887', 'multiplication is faster than division so the second method is faster\n')
('multiplication', 'faster', 'division', 'performance', '2652588', 'even simpler and probably even faster because multiplication is faster than division is dav s answer which is the most natural algorithm.\n')
('multiplication', 'faster', 'division', 'performance', '436535', 'in a 64 bit application this code will be a lot faster than in a 32 bit application in a 32 bit application multiplying two 64 bit numbers take 3 multiplication and 3 additions on 32 bit values - however it might be still faster than a division on a 32 bit machine\n')
('division', 'faster', 'multiplication', 'performance', '22956226', 'therefore i conclude that division is faster than multiplication\n')
('multiplication', 'faster', 'division', 'performance', '13771806', 'i used multiplication for both operations because multiplication is typically faster than division\n')
('division', 'slower', 'multiplication', 'performance', '13106830', 'on some machines division is much slower than multiplication but on most machines j multiplies and j divides will run a lot faster than 2 n-2 multiplication and one division\n')
('division', 'much more complicated', 'multiplication', 'usability', '1117688', 'the cpu operation for float division is much more complicated than multiplication\n')
('multiplication', 'faster integer', 'division', 'performance', '5459132', 'in many processors integer multiplication is vastly faster than integer division\n')
('division', 'more', 'multiplication', '', '22648785', 'however in general one could expect that a division is a more expensive operation than a multiplication\n')
('division', 'slower', 'multiplication', 'performance', '4362064', 'the reason to do this is because even though there is an integer division instruction div idiv in the instruction set it s typically very slow several times slower than multiplication\n')
('division', 'more expensive', 'multiplication', '', '22522575', 'division is much more expensive than multiplication\n')
('division', 'heavier', 'multiplication', '', '9939568', 'division may be heavier than multiplication but a commenter pointed out that reciprocals are just as fast as multiplication on modern cpus in which case this isn t correct for your case so if you do have 1 x appearing somewhere inside a loop and more than once you can assist by caching the result inside the loop and then using y\n')
('multiplication', 'less expensive', 'division', '', '8857056', 'iirc floating-point multiplication is much less expensive than division so this might be faster than both\n')
('division', 'slower', 'multiplication', 'performance', '19938457', 'if the numbers are huge dividing x by b might be betterâ division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n')
('division', 'more expensive', 'multiplication', '', '7147370', 'division is a lot more expensive than multiplication\n')
('multiplication', 'faster', 'division', 'performance', '21188088', 'the compiler or the jit is likely to convert the first case to the second anyway since multiplication is typically faster than division\n')
('multiplication', 'less time', 'division', 'performance', '18706614', 'multiplication takes less time then division so you can try this\n')
('division', 'more expensive', 'multiplication', '', '11481394', 'is division more expensive than multiplication in c++\n')
('division', 'much more', 'multiplication', '', '1117688', 'the cpu operation for float division is much more complicated than multiplication\n')
('division', 'longer', 'multiplication', '', '4125074', 'why does division take so much longer than multiplication\n')
('division', 'more expensive', 'multiplication', '', '4109348', 'division is more expensive than multiplication\n')
('multiplication', 'cheaper', 'division', '', '1840568', 'if a remains the same and b is changing say if your code is in a loop and it s clear that a does not change between two iterations for instance because it s a const variable then the original version can execute faster because multiplication is cheaper than division assuming the compiler moves the computation of 1 .\n')
('multiplication', 'much less expensive', 'division', '', '8857056', 'iirc floating-point multiplication is much less expensive than division so this might be faster than both\n')
('division', 'slower', 'multiplication', 'performance', '655584', 'which one is faster is indeed a cpu-specific issue or at least how much faster is cpu specific yes division is typically seen as slower than multiplication\n')
('multiplication', 'higher presedence', 'division', '', '21060979', 'i read that multiplication has has higher presedence than division\n')
('division', 'worse', 'multiplication', '', '14013678', 'but since division is pretty expensive i think that this is even worse than 2 multiplication\n')
('division', 'slower', 'multiplication', 'performance', '11481493', 'division is generally on the order of 10x slower than multiplication on most processor families\n')
('division', 'usually slower', 'multiplication', 'performance', '19938457', 'if the numbers are huge dividing x by b might be betterâ division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n')
('division', 'faster', 'multiplication', 'performance', '7730288', 'division is about 20 faster than multiplication\n')
('division', 'slower', 'multiplication', 'performance', '10535605', 'i was always taught that division is slower than multiplication but i have no real proof of thisâ has anyone got an opinion on this before i start benchmarking and running test\n')
('multiplication', 'faster', 'division', 'performance', '22836475', 'floating point multiplication is faster than division so if speed is relevant\n')
('multiplication', 'cheaper', 'division', '', '15817184', 'following advise i received multiplication is cheaper than division i revised one code line and interestingly enough 71.2 dropped to 1.7 but the if statement just below shot up to 64.8 â i just don t get it\n')
('division', 'slower operation', 'multiplication', 'performance', '7554853', 'on many machines particularly those without hardware support for division division is a slower operation than multiplication so this approach can yield a considerable speedup\n')
('division', 'slower', 'multiplication', 'performance', '506241', 'division is per se slower than multiplication however i don t know the details\n')
('multiplication', 'generally faster', 'division', 'performance', '899929', 'if the latter yes floating point multiplication is generally faster than division\n')
('multiplication', 'slower hardware', 'division', 'performance', '436535', 'you always need to know the magic number here 0xaaaaaaab and the correct operations after the multiplication shifts and or additions in most cases and both is different depending on the number you want to divide by and both take too much cpu time to calculate them on the fly that would be slower than hardware division\n')
('multiplication', 'better', 'division', '', '14416164', 'the multiplication should perform somewhat better than division\n')
('multiplication', 'faster', 'division', 'performance', '1135698', 'integer multiplication is much faster than division\n')
('multiplication', 'typically faster', 'division', 'performance', '13771806', 'i used multiplication for both operations because multiplication is typically faster than division\n')
('multiplication', 'faster', 'division', 'performance', '3851309', 'as hroptatyr mentioned the multiplication is quite fast and it s much faster than division\n')
('multiplication', 'higher', 'division', '', '21060979', 'i read that multiplication has has higher presedence than division\n')
('division', 'generally slower', 'multiplication', 'performance', '1643009', 'the tostring should be slower than parse since division is generally slower than multiplication\n')
('multiplication', 'less', 'division', '', '1735122', 'multiplication is less expensive than division so\n')
('division', 'typically slower', 'multiplication', 'performance', '21566325', 'removing division operations by passing through the inverse into the shader is another useful tip as division is typically slower than multiplication\n')
('division', 'more expensive', 'multiplication', '', '8886384', 'division is always much more expensive than multiplication\n')
('multiplication', 'faster', 'division', 'performance', '7720907', 'multiplication is usually significantly faster than division\n')
('multiplication', 'less expensive', 'division', '', '1735122', 'multiplication is less expensive than division so\n')
('division', 'longer', 'multiplication', '', '2652547', 'it s just as fast as going the opposite direction if not faster given that division generally takes longer than multiplication\n')
('multiplication', 'faster integer', 'division', 'performance', '23965963', 'according to this author integer multiplication can be 40 times faster than integer division\n')
('multiplication', 'faster', 'division', 'performance', '836856', 'also addition is faster than multiplication and multiplication is faster than division\n')
('multiplication', 'faster', 'division', 'performance', '24232771', 'i do not want to know when or if to use shift operators in my code i am interested in why multiplication is faster than shifting bits to the left whereas division is not\n')
('division', 'more expensive', 'multiplication', '', '23577263', 'the reason for doing so is to reduce hardware cost as division is more expensive than multiplication\n')
('division', 'much slower', 'multiplication', 'performance', '4541290', 'according to stephen canon modern implementations favor taylor expansion over rational function approximation where division is much slower than multiplication\n')
('division', 'more complicated', 'multiplication', 'usability', '21546020', 'for division things are a little more complicated than multiplication see\n')
('multiplication', 'faster', 'division', 'performance', '22488897', 'multiplication is much faster than division\n')
('division', 'shorter', 'multiplication', '', '1965541', 'i haven t benchmarked any of this code but just by examining the code you can see that using integers division by 2 is shorter than multiplication by 2\n')
('multiplication', 'typically faster', 'division', 'performance', '21188088', 'the compiler or the jit is likely to convert the first case to the second anyway since multiplication is typically faster than division\n')
('division', 'slower', 'multiplication', 'performance', '436535', 'can be fast or it can be awfully slow even if division is done entirely in hardware if it is done using a div instruction this instruction is about 3 to 4 times slower than a multiplication on modern cpus\n')
('multiplication', 'faster', 'division', 'performance', '22956226', 'but the research i ve done so far all points to multiplication being faster than division\n')
('division', 'slower', 'multiplication', 'performance', '7460216', 'on most processors division is slower than multiplication for the same data types\n')
('division', 'busier place', 'multiplication', '', '506252', 'both operations are done down at the floating point unit fpu level and even in the world of integral alus the division circuit is a far busier place than a multiplication circuit\n')
('division', 'more', 'multiplication', '', '4109348', 'division is more expensive than multiplication\n')
('multiplication', 'faster', 'division', 'performance', '17069961', 'here s one idea which uses one multiplication and one shift so it ll be faster than a division on most systems\n')
('division', 'more', 'multiplication', '', '21610045', 'i have heard division takes more time then multiplication but beyond that i could not determine whether writing this in one line or multiple assignment lines was more efficient\n')
('multiplication', 'faster', 'division', 'performance', '980962', 'on many processors integer multiplication is faster than integer division\n')
('division', 'worse', 'multiplication', '', '1988545', 'so division is always a bit worse than multiplication\n')
('division', 'slower', 'multiplication', 'performance', '21566325', 'removing division operations by passing through the inverse into the shader is another useful tip as division is typically slower than multiplication\n')
('multiplication', 'far easier', 'division', 'usability', '1917713', 'multiplication is far easier and faster for a cpu to do than division\n')
('division', 'slower', 'multiplication', 'performance', '9714461', 'and division may be slower than multiplication or may still be fast\n')
('division', 'slower', 'multiplication', 'performance', '8776073', 'division is about 10 times slower than multiplication\n')
('multiplication', 'faster', 'division', 'performance', '9113669', 'most optimizing c compilers optimize it out to a multiplication operation which is much faster than division it can be done only if the divisor is constant though\n')
('multiplication', 'usually fewer', 'division', '', '17883291', 'floating point multiplication usually takes fewer cycles than floating point division\n')
('division', 'more expensive', 'multiplication', '', '22648785', 'however in general one could expect that a division is a more expensive operation than a multiplication\n')
('multiplication', 'better', 'division', '', '19350996', 'if you are sure that a floating point multiplication is better than a floating point division then\n')
('multiplication', 'usually fewer cycles', 'division', '', '17883291', 'floating point multiplication usually takes fewer cycles than floating point division\n')
('division', 'longer', 'multiplication', '', '21155463', 'division takes a lot longer than multiplication - just do it with pen and paper to see\n')
('division', 'more complex', 'multiplication', 'usability', '23199400', 'division and square roots for huge number of bits are not much more complex than multiplication\n')
('multiplication', 'more', 'division', '', '7554853', 'or is there something about multiplication that is more convenient than division in programming\n')
('multiplication', 'vastly faster', 'division', 'performance', '5459132', 'in many processors integer multiplication is vastly faster than integer division\n')
('division', 'slower', 'multiplication', 'performance', '1643009', 'the tostring should be slower than parse since division is generally slower than multiplication\n')
('multiplication', 'more', 'division', '', '19938457', 'if the numbers are huge dividing x by b might be betterâ division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding division\n')
('division', 'slower', 'multiplication', 'performance', '14094072', 'is it possible that the division is six times slower than multiplication and\n')
('division', 'more', 'multiplication', '', '23577263', 'the reason for doing so is to reduce hardware cost as division is more expensive than multiplication\n')
('division', 'slower', 'multiplication', 'performance', '24249023', 'because division is often much slower than multiplication if performance is critical you might keep a table with powers of ten and their reciprocals\n')
('multiplication', 'faster', 'division', 'performance', '7935724', 'first of all multiplication is faster than division\n')
('multiplication', 'faster', 'division', 'performance', '1168616', 'this can be a major clock-cycle saver since multiplication is often much faster than a division operation\n')
('multiplication', 'more convenient', 'division', 'usability', '7554853', 'or is there something about multiplication that is more convenient than division in programming\n')
('division', 'generally longer', 'multiplication', '', '2652547', 'it s just as fast as going the opposite direction if not faster given that division generally takes longer than multiplication\n')
('multiplication', 'cheaper', 'division', '', '1027808', 't is not very important as long as alpha is small otherwise you will run into some rather weird nyquist issues aliasing etc. and if you are working on a processor where multiplication is cheaper than division or fixed-point issues are important precalculate omega\n')
('division', 'harder', 'multiplication', '', '1117702', 'if you think back to grade school you ll recall that multiplication was harder than addition and division was harder than multiplication\n')
('multiplication', 'faster', 'division', 'performance', '899929', 'if the latter yes floating point multiplication is generally faster than division\n')
('division', 'slower', 'multiplication', 'performance', '4541290', 'according to stephen canon modern implementations favor taylor expansion over rational function approximation where division is much slower than multiplication\n')
('multiplication', 'faster', 'division', 'performance', '4143288', 'similar to pmg s solution but still faster because multiplication is faster than division -\n')
('multiplication', 'faster', 'division', 'performance', '8658217', 'for the division-to-multiplication case you are assuming that multiplication is faster than division\n')
('division', 'costlier', 'multiplication', '', '12977241', 'well if it is a single calculation you wil hardly notice any difference but if you talk about millions of transaction then definitely division is costlier than multiplication\n')
('division', 'slower operation', 'multiplication', 'performance', '4125154', 'division is inherently a much slower operation than multiplication\n')
('division', 'longer', 'multiplication', '', '18165141', 'why does division take so much longer than multiplication\n')
('division', 'more expensive', 'multiplication', '', '12977120', 'usually division is a lot more expensive than multiplication but a smart compiler will often convert division by a compile-time constant to a multiplication anyway\n')
('multiplication', 'much faster', 'division', 'performance', '1135698', 'integer multiplication is much faster than division\n')
('multiplication', 'much faster', 'division', 'performance', '22488897', 'multiplication is much faster than division\n')
('division', 'much slower', 'multiplication', 'performance', '13106830', 'on some machines division is much slower than multiplication but on most machines j multiplies and j divides will run a lot faster than 2 n-2 multiplication and one division\n')
('multiplication', 'faster', 'division', 'performance', '226515', 'multiplication is faster division is more accurate\n')
('division', 'more complicated', 'multiplication', 'usability', '1117688', 'the cpu operation for float division is much more complicated than multiplication\n')
('division', 'much more expensive', 'multiplication', '', '22522575', 'division is much more expensive than multiplication\n')
('division', 'much more', 'multiplication', '', '22522575', 'division is much more expensive than multiplication\n')
('multiplication', 'slower long', 'division', 'performance', '6498884', 'if multiplication are o n 2 this is slower than long division for large numbers o n 2 vs o n 2 log n\n')
('multiplication', 'less', 'division', '', '18706614', 'multiplication takes less time then division so you can try this\n')
('division', 'slower', 'multiplication', 'performance', '7554853', 'on many machines particularly those without hardware support for division division is a slower operation than multiplication so this approach can yield a considerable speedup\n')

lift	scalatra	1
('lift', 'more powerful', 'scalatra', 'usability', '7510119', 'it fills the gap between scalatra and lift more powerful than scalatra and easier to use than lift\n')

suffix-tree	suffix-array	1
('suffix-tree', 'faster', 'suffix-array', 'performance', '11956604', 'i am interested in this because the factor oracle is easy to construct with 30 lines of c++ suffix-array needs about 60 and suffix-tree needs 150 and it runs faster than suffix-array and suffix-tree\n')

icomparable	compareto	2
('icomparable', 'more', 'compareto', '', '11193158', 'implementing icomparable is a more fine-grain way of comparison as it provides the compareto method which is a greater-than less-than comparison as opposed to equals which is simply a is-equal-or-not comparison\n')
('icomparable', 'more fine-grain', 'compareto', '', '11193158', 'implementing icomparable is a more fine-grain way of comparison as it provides the compareto method which is a greater-than less-than comparison as opposed to equals which is simply a is-equal-or-not comparison\n')

mongoid	mongomapper	2
('mongoid', 'more', 'mongomapper', '', '14064146', 'over the last year it looks like mongoid has been more regularly maintained and updated than mongomapper\n')
('mongoid', 'more regularly', 'mongomapper', '', '14064146', 'over the last year it looks like mongoid has been more regularly maintained and updated than mongomapper\n')

lxml	celementtree	2
('lxml', 'slower', 'celementtree', 'performance', '3605831', 'as a side-effect of implementing proper parent traversal lxml is a bit slower than celementtree for parsing\n')
('lxml', 'faster', 'celementtree', 'performance', '22295513', 'instead doing it with lxml which i found to be the fastest somehow even faster than celementtree\n')

jython	pypy	1
('jython', 'slower', 'pypy', 'performance', '7793515', 'here is a recent benchmark of jython 2.5.2 running on jvm 7 where jython is slower than pypy but faster than cpython\n')

json-rpc	xml-rpc	2
('json-rpc', 'more pythonic', 'xml-rpc', '', '14355078', 'json-rpc is more pythonic than xml-rpc or shudder soap\n')
('json-rpc', 'more', 'xml-rpc', '', '14355078', 'json-rpc is more pythonic than xml-rpc or shudder soap\n')

gethashcode	equals	8
('equals', 'more specific', 'gethashcode', '', '2872561', 'equals on the other hand can test accross a larger number of fields - ie its test is more specific than gethashcode comparisons\n')
('equals', 'implementation much more', 'gethashcode', 'usability', '20598647', 'in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n')
('gethashcode', 'quicker', 'equals', '', '16381', 'gethashcode should be a lot quicker than equals but doesn t need to be unique\n')
('gethashcode', 'quicker', 'equals', '', '13938719', 'not sure about the overhead of calling gethashcode a few million times but comparing two ints is probably going to be a lot quicker than the equals object method\n')
('gethashcode', 'faster equivalent', 'equals', 'performance', '20598647', 'even though gethashcode itself should be fast it s not mostly faster than equivalent equals\n')
('equals', 'more expensive', 'gethashcode', '', '20598647', 'in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n')
('equals', 'implementation much more expensive', 'gethashcode', 'usability', '20598647', 'in the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of cases\n')
('gethashcode', 'more tolerant', 'equals', '', '18076696', 'override both methods but make gethashcode more tolerant than equals that means make unequal objects have the same hash code and not the opposite\n')

lxml.html	beautifulsoup	2
('lxml.html', 'better', 'beautifulsoup', '', '4014590', 'lxml.html deals with badly formed html better than beautifulsoup is actively maintained beautifulsoup isn t and is a lot faster since it uses libxml2 internally\n')
('lxml.html', 'faster', 'beautifulsoup', 'performance', '8698357', 'but if you are allowed to store whole tree into memory you can use lxml.html which is faster than beautifulsoup\n')

iqueryable	ilist	1
('iqueryable', 'better', 'ilist', '', '6841928', 'generally ienumerable and iqueryable are even better than ilist as they re more generic unless you want to limit this with good reason of course\n')

gitolite	gitosis	10
('gitolite', 'more complete', 'gitosis', '', '4173070', 'that being said i find gitolite much more complete than gitosis like all those recent blog posts illustrate\n')
('gitolite', 'better', 'gitosis', '', '17706974', 'i know gitolite better than gitosis\n')
('gitolite', 'easier', 'gitosis', 'usability', '23043305', 'either way gitolite is easier to maintain and more up-to-date than gitosis see how do programs like gitolite work\n')
('gitolite', 'more advanced', 'gitosis', '', '3223137', 'gitolite is far more advanced than gitosis and is quite easy to install directly from your workstation based on ssh communication with your git repository server\n')
('gitolite', 'far more advanced', 'gitosis', '', '3223137', 'gitolite is far more advanced than gitosis and is quite easy to install directly from your workstation based on ssh communication with your git repository server\n')
('gitolite', 'more', 'gitosis', '', '4582514', 'gitolite is maintained has a dozen features more than gitosis and the author actually responds to emails\n')
('gitolite', 'more up-to-date', 'gitosis', '', '23043305', 'either way gitolite is easier to maintain and more up-to-date than gitosis see how do programs like gitolite work\n')
('gitosis', 'longer', 'gitolite', '', '5804015', 'gitosis which is no longer in active development and you should be using gitolite but this answer applies to both of them stores each user s public keys in in your case gitosis .ssh authorized_keys\n')
('gitolite', 'far more', 'gitosis', '', '3223137', 'gitolite is far more advanced than gitosis and is quite easy to install directly from your workstation based on ssh communication with your git repository server\n')
('gitolite', 'better', 'gitosis', '', '7070048', 'for this the best option is gitolite better than gitosis\n')

jedit	notepad++	3
('jedit', 'better plugins', 'notepad++', '', '5705341', 'i have found that jedit has better plugins for providing some of the more ide-oriented capabilities but like boltclock said notepad++ is really just a powerful text editor and does not try to be a one-stop-shop ide\n')
('jedit', 'better', 'notepad++', '', '5705341', 'i have found that jedit has better plugins for providing some of the more ide-oriented capabilities but like boltclock said notepad++ is really just a powerful text editor and does not try to be a one-stop-shop ide\n')
('jedit', 'better', 'notepad++', '', '5681684', 'i think jedit is equal to or better than notepad++\n')

and-operator	or-operator	4
('and-operator', 'higher precedence', 'or-operator', '', '20844229', 'as far as i know the and-operator has the higher precedence than || or-operator in most of the languages\n')
('and-operator', 'higher', 'or-operator', '', '20844229', 'as far as i know the and-operator has the higher precedence than || or-operator in most of the languages\n')
('and-operator', 'stronger', 'or-operator', '', '16360333', 'which will never be true have in mind that the and-operator binds stronger than the or-operator\n')
('and-operator', 'higher precedence ||', 'or-operator', '', '20844229', 'as far as i know the and-operator has the higher precedence than || or-operator in most of the languages\n')

filesystems	ntfs	8
('filesystems', 'trickier', 'ntfs', '', '10080420', 'actual mounting of filesystems is trickier business and really depends on what you are mounting - ntfs fat ext3 xfs nfs cifs webdav etc etc\n')
('ntfs', 'much more', 'filesystems', '', '3551199', 'ntfs is much more complex and time consuming due to the more complex nature of this filesystems\n')
('ntfs', 'much more complex', 'filesystems', 'usability', '3551199', 'ntfs is much more complex and time consuming due to the more complex nature of this filesystems\n')
('filesystems', 'simpler ones', 'ntfs', 'usability', '2983099', 'although i myself have prior experience in implementing filesystems much simpler ones than ntfs xfs or ext2 i would not tackle this job\n')
('ntfs', 'more', 'filesystems', '', '21863136', 'if you need to load from a well-defined filesystems fat or ntfs this is more tricky you have only 450 bytes of space because 60 of the 512 bytes are used by the filesystems internally for code that interprets the data of the filesystems finds the file containing the code and loads it into memory\n')
('ntfs', 'more tricky', 'filesystems', '', '21863136', 'if you need to load from a well-defined filesystems fat or ntfs this is more tricky you have only 450 bytes of space because 60 of the 512 bytes are used by the filesystems internally for code that interprets the data of the filesystems finds the file containing the code and loads it into memory\n')
('filesystems', 'less', 'ntfs', '', '35627', 'when people say that unix filesystems are better they might mean to be saying oh ext3 stores bits in such as way that corruption happens way less than ntfs but they might also be talking about design choices made at the common layer above\n')
('filesystems', 'trickier business', 'ntfs', '', '10080420', 'actual mounting of filesystems is trickier business and really depends on what you are mounting - ntfs fat ext3 xfs nfs cifs webdav etc etc\n')

wav	ogg	1
('wav', 'way bigger', 'ogg', 'memory', '20539275', 'it is even slower since i could only upload wav which is way bigger in size compared with ogg and opus\n')

boolean	int	18
('int', 'better', 'boolean', '', '4545595', 'also your examples about why int would be better than boolean are kinda flawed\n')
('boolean', 'more space', 'int', 'memory', '18429507', 'would a boolean array of size 32 take more space than an int variable for example\n')
('boolean', 'more', 'int', '', '21107085', 'however the second loop causes the additional task of casting each of the values between a.length and 0 to a boolean which is more time consuming than int comparison\n')
('boolean', 'true more meaningful', 'int', '', '19790845', 'boolean true is more meaningful than int or chars 1\n')
('boolean', 'greater', 'int', '', '23406215', 'if the boolean value is true and the length of the string is greater than the int value print the sum of the float and the int\n')
('int', 'more memory', 'boolean', 'memory', '18152578', 'int occupy more memory than boolean so the heap got corrupted\n')
('boolean', 'less space', 'int', 'memory', '22715785', 'a boolean takes less space than an int\n')
('boolean', 'more meaningful', 'int', '', '19790845', 'boolean true is more meaningful than int or chars 1\n')
('boolean', 'less space', 'int', 'memory', '4528318', 'keep in mind that depending on the use and on the system using it while a boolean takes less space because it s just a single bit depending on the implementation an int is the native word size of the hardware\n')
('boolean', 'more efficient', 'int', 'performance', '7221963', 'i always assumed that boolean were more efficient than int at storing an on off value - considering that s their reason for existence\n')
('boolean', 'more time', 'int', 'performance', '21107085', 'however the second loop causes the additional task of casting each of the values between a.length and 0 to a boolean which is more time consuming than int comparison\n')
('boolean', 'true more', 'int', '', '19790845', 'boolean true is more meaningful than int or chars 1\n')
('boolean', 'less', 'int', '', '20412664', 'which is invalid as a boolean cannot be less than an int\n')
('int', 'less space', 'boolean', 'memory', '23069431', 'it is saying this because using the int to store the value 32 bits is going to use less space than a boolean 256 as each allocated boolean will take up 8 bits 8 256 2048\n')
('boolean', 'less', 'int', '', '22715785', 'a boolean takes less space than an int\n')
('boolean', 'less', 'int', '', '4528318', 'keep in mind that depending on the use and on the system using it while a boolean takes less space because it s just a single bit depending on the implementation an int is the native word size of the hardware\n')
('boolean', 'more meaningful', 'int', '', '2469679', 'from the link which is mentioned in question my question is that microsoft says the c# type keywords and their aliases are interchangeable but why we need aliases from my point of view boolean is more meaningful then bool and int32 is more meaningful then int then why aliases\n')
('boolean', 'more', 'int', '', '2469679', 'from the link which is mentioned in question my question is that microsoft says the c# type keywords and their aliases are interchangeable but why we need aliases from my point of view boolean is more meaningful then bool and int32 is more meaningful then int then why aliases\n')

pandas	seaborn	2
('pandas', 'more flexible', 'seaborn', 'usability', '24921847', 'for similar functionality that speaks pandas but has more flexible features you could use the facetgrid object from seaborn\n')
('pandas', 'more', 'seaborn', '', '24921847', 'for similar functionality that speaks pandas but has more flexible features you could use the facetgrid object from seaborn\n')

glassfish	jboss	14
('jboss', 'better product', 'glassfish', '', '14709269', 'even if jboss is the better product in my next project i will shift to glassfish because of the better documentation\n')
('jboss', 'much more', 'glassfish', '', '3025706', 'afaik jboss is much more adopted in production deployments than glassfish but this doesn t necessarily mean it s better\n')
('glassfish', 'more user', 'jboss', '', '9943106', 'in my opinion glassfish is more user friendly than jboss so i decided use glassfish for my project\n')
('jboss', 'better', 'glassfish', '', '14709269', 'even if jboss is the better product in my next project i will shift to glassfish because of the better documentation\n')
('jboss', 'more', 'glassfish', '', '9943106', 'but in my location jboss is more popular than glassfish so i have a idea\n')
('glassfish', 'more', 'jboss', '', '9943106', 'in my opinion glassfish is more user friendly than jboss so i decided use glassfish for my project\n')
('glassfish', 'better', 'jboss', '', '283405', 'i think glassfish is a better j2ee app server to start with than jboss\n')
('glassfish', 'more', 'jboss', '', '12638140', 'well glassfish is more right than jboss and weblogic business-bean-classes should all have their own ejb-local-interface\n')
('jboss', 'more popular', 'glassfish', 'usability', '9943106', 'but in my location jboss is more popular than glassfish so i have a idea\n')
('glassfish', 'more features', 'jboss', 'usability', '14949370', 'glassfish v3 vs jboss 7.0 in using in production environment i know more people use jboss the application server but glassfish has more features and stability over jboss\n')
('glassfish', 'better j2ee', 'jboss', '', '283405', 'i think glassfish is a better j2ee app server to start with than jboss\n')
('jboss', 'implementation smaller', 'glassfish', 'usability', '13494857', 'as for me jboss implementation is smaller than the whole glassfish so i m using\n')
('glassfish', 'more', 'jboss', '', '14949370', 'glassfish v3 vs jboss 7.0 in using in production environment i know more people use jboss the application server but glassfish has more features and stability over jboss\n')
('glassfish', 'more right', 'jboss', '', '12638140', 'well glassfish is more right than jboss and weblogic business-bean-classes should all have their own ejb-local-interface\n')

vba	vb6	3
('vba', 'more functionality', 'vb6', 'usability', '5060785', 'vba is in fact a superset of vb6 not a subset -- vba has more functionality built in than vb6 itself\n')
('vba', 'less', 'vb6', '', '3846475', 'vba being a whole lot less than vb6\n')
('vba', 'more', 'vb6', '', '5060785', 'vba is in fact a superset of vb6 not a subset -- vba has more functionality built in than vb6 itself\n')

ng-controller	ng-include	1
('ng-controller', 'lower', 'ng-include', '', '24390251', 'the priority level of ng-controller is lower than that of ng-include\n')

tokudb	myisam	2
('tokudb', 'slower', 'myisam', 'performance', '21863823', 'at the beginning the insert performance of innodb is almost 50 times slower than myisam and tokudb is 40 times slower than myisam\n')
('tokudb', 'faster', 'myisam', 'performance', '8615317', 'from my personal use i experienced about 5 - 10 times less disk usage due to tokudb s compression and it s much much faster than myisam or innodb\n')

ioexception	filewriter	2
('ioexception', 'more', 'filewriter', '', '22332678', 'for example public static void copy reader r writer w throws ioexception is more useful reusable than public static void copy filereader r filewriter w throws ioexception\n')
('ioexception', 'more useful', 'filewriter', 'usability', '22332678', 'for example public static void copy reader r writer w throws ioexception is more useful reusable than public static void copy filereader r filewriter w throws ioexception\n')

floating-point	fractions	2
('floating-point', 'values more', 'fractions', '', '2132643', 'and using floating-point values is more realistic - you need fractions values because when you rotate something the new coordinates will nearly always be non integral\n')
('floating-point', 'values more realistic', 'fractions', '', '2132643', 'and using floating-point values is more realistic - you need fractions values because when you rotate something the new coordinates will nearly always be non integral\n')

tcl	perl	5
('tcl', 'worse', 'perl', '', '393362', 'tcl is no better nor worse than perl ruby python or any other scripting language in this regard -- they all do basic file operations with equal aplomb\n')
('tcl', 'more', 'perl', '', '23933557', 'tcl is more verbose than perl here\n')
('tcl', 'simpler', 'perl', 'usability', '1197324', 'it is written in tcl which is a language somewhat simpler than perl but broadly in the same family and not difficult to learn\n')
('perl', 'better', 'tcl', '', '18208624', 'i know that perl performs better for some regex but will the tcl performance really be this bad in comparison\n')
('tcl', 'more verbose', 'perl', '', '23933557', 'tcl is more verbose than perl here\n')

subtract	multiplying	4
('subtract', 'faster', 'multiplying', 'performance', '12977648', 'p is sometimes chosen to be 31 because not only is it prime but a compiler resolves it to a bitshift and a subtract which is much faster than a multiplying\n')
('subtract', 'more reliable', 'multiplying', 'reliability', '417342', 'adding and subtract logarithms of factorials then taking the exponential at the end is more reliable than multiplying and dividing factorials directly\n')
('subtract', 'much faster', 'multiplying', 'performance', '12977648', 'p is sometimes chosen to be 31 because not only is it prime but a compiler resolves it to a bitshift and a subtract which is much faster than a multiplying\n')
('subtract', 'weaker', 'multiplying', '', '5269766', 'similarly if you skip the five first elements your loop takes o n-5 time but that too is the same as o n because adding or subtract a constant is even weaker than multiplying by a constant\n')

bitarray	bitset	1
('bitarray', 'more', 'bitset', '', '5005191', '1 might not yet be sparse enough to make this better compared to just a plain bitarray assuming longs storing 64 bits each it doesn t take more than 2 longs to have more than one bitset on average but if the sparsity increases beyond that the space and time savings will show\n')

orientdb	neo4j	3
('orientdb', 'more fancy', 'neo4j', '', '23779937', 'orientdb looks more fancy and advanced but not as popular as neo4j and is not supported on heroku\n')
('orientdb', 'more', 'neo4j', '', '23779937', 'orientdb looks more fancy and advanced but not as popular as neo4j and is not supported on heroku\n')
('orientdb', 'slower', 'neo4j', 'performance', '14565718', 'i found that orientdb is too slow at least much slower than neo4j even on relatively small 150k datasets when searching records by text pattern despite the presence of indices\n')

objectdatasource	sqldatasource	2
('objectdatasource', 'also more efficient', 'sqldatasource', 'performance', '1423595', 'objectdatasource also allows for more efficient paging than a simple sqldatasource i m assuming that s what you re using\n')
('objectdatasource', 'also more', 'sqldatasource', '', '1423595', 'objectdatasource also allows for more efficient paging than a simple sqldatasource i m assuming that s what you re using\n')

magma	cublas	1
('magma', 'higher performance', 'cublas', 'performance', '14543887', 'magma routine magma_gemm has higher performance than cublas in some cases\n')

svn2git	git-svn	1
('svn2git', 'better results', 'git-svn', '', '840730', 'using svn2git might produce better results than git-svn if you have tags or branches.\n')

sata	ssd	1
('sata', 'lower price', 'ssd', '', '7874956', 'as compilation is mostly reading small files i wonder if buying a fast usb key to work on can speed up compilation time compared to a standard sata drive and with a lower price than an ssd drive 16gb keys are 30\n')

calloc	malloc	15
('malloc', 'faster', 'calloc', 'performance', '3449073', 'malloc is faster since calloc initializes the allocated memory to contain all zeros\n')
('calloc', 'more correct', 'malloc', '', '8811894', 'edit i m not a java expert but i think that in java members of new array are initialized to 0 or null so calloc is more correct than malloc in my code\n')
('calloc', 'slower', 'malloc', 'performance', '3449169', 'calloc itself is slower than malloc because you have to spend some time to clear the contents of allocated memory\n')
('calloc', 'still faster', 'malloc', 'performance', '2688522', 'if end up using the memory anyway calloc is still faster than malloc and memset but the difference is not quite so ridiculous\n')
('calloc', 'faster', 'malloc', 'performance', '10696511', 'in terms of speed calloc is likely to be faster than malloc + memset if memory needs to be zeroed out\n')
('calloc', 'larger blocks', 'malloc', 'memory', '12555911', 'those answers was that calloc can allocate larger blocks than malloc can and etc\n')
('calloc', 'faster', 'malloc', 'performance', '3393412', 'calloc is faster than malloc + memset because calloc knows that the mmap d pages are pre-zeroed and memset forces the allocation of physical ram\n')
('calloc', 'slower', 'malloc', 'performance', '9213578', 'also calloc is slower than malloc from operating system memory allocation perspective\n')
('malloc', 'closer', 'calloc', '', '25242094', 'actually calling memset after malloc is closer to calling calloc than the option you suggest\n')
('calloc', 'faster', 'malloc', 'performance', '2688522', 'if end up using the memory anyway calloc is still faster than malloc and memset but the difference is not quite so ridiculous\n')
('calloc', 'faster', 'malloc', 'performance', '2688522', 'this is an enormous amount of extra work and explains why calloc is faster than malloc and memset\n')
('calloc', 'more', 'malloc', '', '8811894', 'edit i m not a java expert but i think that in java members of new array are initialized to 0 or null so calloc is more correct than malloc in my code\n')
('malloc', 'faster', 'calloc', 'performance', '15379960', 'malloc is faster than calloc reason is that malloc processed single dimensional array to pointer format whereas calloc takes double dimensional array and before processed it converts to single dimensional array then to pointer format\n')
('calloc', 'longer', 'malloc', '', '2076025', 'calloc does take longer than malloc because it has to zero out all the memory you asked for before giving it to you\n')
('calloc', 'bigger blocks', 'malloc', 'memory', '4083946', 'for this reason since calloc uses two arguments of type size_t it can allocate bigger blocks than malloc will ever be able to since malloc takes only one argument of type size_t\n')

jsonb	hstore	1
('jsonb', 'more compact', 'hstore', 'usability', '7934577', 'json jsonb fields support any json-encodable data type not just key value pairs but also tend to be faster and for jsonb more compact than hstore\n')

altitude	distance	2
('altitude', 'more precise', 'distance', '', '7121938', 'a negative verticalaccuracy signifies that altitude is invalid whereas normally a smaller but positive value of verticalaccuracy actually means that altitude is more precise since it s the vertical distance that it may be off by - i ll leave the discussion as to why this measure is called verticalaccuracy and not verticalinaccuracy for some other time\n')
('altitude', 'more', 'distance', '', '7121938', 'a negative verticalaccuracy signifies that altitude is invalid whereas normally a smaller but positive value of verticalaccuracy actually means that altitude is more precise since it s the vertical distance that it may be off by - i ll leave the discussion as to why this measure is called verticalaccuracy and not verticalinaccuracy for some other time\n')

free	memmove	1
('free', 'more efficient', 'memmove', 'performance', '388146', 'the compiler is free to choose a method that is more efficient than memmove\n')

macports	homebrew	9
('macports', 'many more', 'homebrew', '', '24198365', 'currently macports has many more packages 18.6 k than there are homebrew formulae 3.1k owing to its maturity\n')
('macports', 'more', 'homebrew', '', '6541578', 'con you can encounter issues related to library versions and dependencies macports has more software than homebrew\n')
('macports', 'more packages', 'homebrew', '', '18254617', 'overriding choice for me is macports as it has many more packages than homebrew and it puts its stuff in opt local to stay out of the way of other programs\n')
('macports', 'more software', 'homebrew', '', '6541578', 'con you can encounter issues related to library versions and dependencies macports has more software than homebrew\n')
('macports', 'many more packages', 'homebrew', '', '24198365', 'currently macports has many more packages 18.6 k than there are homebrew formulae 3.1k owing to its maturity\n')
('homebrew', 'nicer', 'macports', '', '11704224', 'homebrew is generally a bit nicer than macports as it doesn t require lots of sudo action\n')
('homebrew', 'less', 'macports', '', '21198888', 'homebrew has less of a stranglehold on your machine doesn t require as much reading as macports\n')
('macports', 'luckier', 'homebrew', '', '13467237', 'it may be that macports doesn t help i have been luckier with homebrew than macports when installing cgal\n')
('homebrew', 'newer', 'macports', '', '12184308', 'i m using homebrew as it s newer than macports and i don t know enough to choose between them\n')

openmpi	mpich	2
('openmpi', 'more connection', 'mpich', '', '19742014', 'while openmpi supports more connection protocols there is an infiniband-enabled version of mpich called mvapich\n')
('openmpi', 'more', 'mpich', '', '19742014', 'while openmpi supports more connection protocols there is an infiniband-enabled version of mpich called mvapich\n')

xuggle	vlcj	1
('xuggle', 'lower level', 'vlcj', '', '6963013', 'apart from that you might want to give xuggle a try - it works on a much lower level than vlcj but this should give you much more control over what s happening and unlike jmf it s a good actively maintained project.\n')

magnolia	opencms	1
('magnolia', 'newer', 'opencms', '', '15018912', 'however if i d built a new site with a cms on java i d probably go with magnolia cms because the documentation and community is more mature despite that it s newer than opencms\n')

cmmotionmanager	uiaccelerometer	2
('cmmotionmanager', 'slower', 'uiaccelerometer', 'performance', '17659352', 'basically it seems like cmmotionmanager is much larger and slower than uiaccelerometer is\n')
('cmmotionmanager', 'much larger', 'uiaccelerometer', 'memory', '17659352', 'basically it seems like cmmotionmanager is much larger and slower than uiaccelerometer is\n')

yii	codeigniter	8
('yii', 'more', 'codeigniter', '', '6385419', 'personally i d say yii might have the edge as it encourages convention more than codeigniter would\n')
('yii', 'more structured', 'codeigniter', '', '6385419', '2 yii a bit more structured than codeigniter but you have a basic app up within 10 mins and if your familiar with mvc design its a great way to develop portals incredibly quickly\n')
('yii', 'higher learning', 'codeigniter', '', '4515976', 'yii has a higher learning curve than say codeigniter and cakephp\n')
('yii', 'faster', 'codeigniter', 'performance', '8396521', 'i have found one benchmark in which yii is faster than codeigniter and another benchmark in which codeigniter is faster than yii\n')
('codeigniter', 'faster', 'yii', 'performance', '8396521', 'i have found one benchmark in which yii is faster than codeigniter and another benchmark in which codeigniter is faster than yii\n')
('yii', 'more complex', 'codeigniter', 'usability', '24941354', 'i am currently looking at yii and while its more complex than codeigniter the documentation is much more informative and therefore understandable than cakephp s\n')
('codeigniter', 'better', 'yii', '', '8396571', 'so latest codeigniter 2.0 is better than yii according to this benchmarks\n')
('yii', 'higher', 'codeigniter', '', '4515976', 'yii has a higher learning curve than say codeigniter and cakephp\n')

pascal	delphi	2
('pascal', 'code more', 'delphi', '', '10146882', 'from my pov the object pascal paradigm used with fpc object pascal dialect which can coexist with the default object pascal code is more advanced lightweight and integrated than the interface-based plumbing of delphi xe2 compiler with on-the-fly marshalling using rtti\n')
('pascal', 'code more advanced', 'delphi', '', '10146882', 'from my pov the object pascal paradigm used with fpc object pascal dialect which can coexist with the default object pascal code is more advanced lightweight and integrated than the interface-based plumbing of delphi xe2 compiler with on-the-fly marshalling using rtti\n')

opcache	apc	1
('opcache', 'faster', 'apc', 'performance', '24433466', 'i don t want to use apc because opcache is around 10 faster than apc\n')

constexpr	inline	1
('constexpr', 'better', 'inline', '', '24602957', 'you may be interested in looking at the constexpr keyword which i think is better than the inline keyword when you can make use of it\n')

memmove	strncpy	1
('memmove', 'faster', 'strncpy', 'performance', '2884915', 'if you know the lengths of the strings memmove is a sensible choice - and nominally faster than strncpy because it does not have to check for nulls as it goes\n')

post	get	228
('get', 'more appropriate', 'post', '', '24883267', 'on that base a get is more appropriate then a post\n')
('post', 'more secure', 'get', '', '3735534', 'post isn t more secure than get\n')
('post', 'request less efficient', 'get', 'performance', '6219147', 'however a post request is less efficient as a get request - bear that in mind and only use post if you really need to\n')
('post', 'safer', 'get', 'security', '22791339', 'post is a little safer than get because the parameters are not stored in browser history or in web server logs. also data is not displayed in the url\n')
('get', 'method faster', 'post', 'performance', '9644621', 'why get method is faster than post\n')
('get', 'more frequent', 'post', '', '9923433', 'get and head being much more frequent than post\n')
('get', 'request more appropriate', 'post', '', '11287884', 'but do also remember that in your case get request looks more appropriate and as balusc says its not good practice to use post for bookmarkable page-to-page navigation\n')
('post', 'more secure', 'get', '', '7411370', 'post is also more secure than get because you aren t sticking information into a url\n')
('get', 'more secure', 'post', '', '18020715', 'it is just an example that shows a scenario in which get is more secure than post but i don t think it would be a good idea to choose get over post from this attack reason\n')
('post', 'worse', 'get', '', '18455818', 'post has worse performance than get\n')
('get', 'more help', 'post', '', '22719995', 'to get more help with that post information about your table structures and content\n')
('get', 'better', 'post', '', '1772728', 'sometimes get is a better option in those read-only scenarios because it makes your url scheme richer and avoids these sort of post warnings\n')
('get', 'faster type', 'post', 'performance', '15757966', 'is type get faster than type post cause i am curious how both work\n')
('post', 'higher priority', 'get', '', '18140518', 'if you have both post and get params with same name and if you using then it will take post variable only.because post has the higher priority than get\n')
('post', 'more secure', 'get', '', '8388711', 'post is not any more secure than get\n')
('get', 'request earlier', 'post', '', '20961057', 'i am using custom delegate methods but when i run this the get request is performed earlier than the post so i cannot get the key before the get is done\n')
('get', 'more performant', 'post', '', '1849962', 'ajax calls using get are more performant than post according to yahoo\n')
('post', 'safer', 'get', 'security', '15663389', 'post request is a little safer than get because the parameters are not stored in browser history or in web server logs\n')
('post', 'broader', 'get', '', '24353372', 'a post has broader application and is generally used to send persistent data to a server in fact prescriptively get should not be used for this purpose\n')
('get', 'more semantically', 'post', '', '6656594', 'if you use post when get is more semantically correct it is less communicative of the intent of your request since post usually means you are sending a payload\n')
('get', 'more', 'post', '', '12582162', 'i m searching for the best method to get result with database contain more than 100000 post and more than 100000 cat\n')
('post', 'larger', 'get', 'memory', '9745606', 'post requests can be much larger than get requests as get requests are limited by the maximum length of a url\n')
('get', 'request marginally less secure', 'post', '', '1744404', 'the get request is marginally less secure than the post request\n')
('post', 'more', 'get', '', '16195031', 'post makes it more indirect to intercept and read the payload than get but not safer\n')
('get', 'parameter longer', 'post', '', '14532340', 'i noticed once the length of a get parameter is longer than 400 bytes or 2000 bytes for a post parameter g-wan returns 400 error\n')
('post', 'safer', 'get', 'security', '14039155', 'however post data are not much safer than get data anyway\n')
('post', 'more', 'get', '', '22153922', 'another post outlines some more details on this how to get master-master replication with subversion\n')
('post', 'result earlier', 'get', '', '20868786', 'the problem i have noticed is that sometimes the jquery post result is retrieved earlier than the load of the .js file has been completed so i get an error and of course the jquery plugin doesn t work\n')
('post', 'more', 'get', '', '4466537', 'stick with post on any action that does more than get data avoid xss-issues\n')
('get', 'shorter', 'post', '', '16102098', 'generaly get is shorter than post\n')
('post', 'worse performance', 'get', 'performance', '18455818', 'post has worse performance than get\n')
('post', 'more secure', 'get', '', '1008671', 'post is not more secure than get as itâ s also send unencrypted\n')
('post', 'safer', 'get', 'security', '16505451', 'post request are safer than get but that does not mean are invulnerable\n')
('post', 'also more', 'get', '', '20042408', 'post is also more secure than get because you aren t sticking\n')
('get', 'lower limit', 'post', '', '1678683', 'generally when passing lots of data to the server to be processed or stored using post is a good idea since get has a lower limit than that of post\n')
('get', 'method better', 'post', '', '12490278', 'is get method is better than post method if you use a form\n')
('get', 'more', 'post', '', '18020715', 'it is just an example that shows a scenario in which get is more secure than post but i don t think it would be a good idea to choose get over post from this attack reason\n')
('get', 'simpler', 'post', 'usability', '3521290', 'as a pragmatist i m inclined to use get because implementing it is way simpler than post\n')
('post', 'more users', 'get', '', '25411516', 'here s the solution for post variables as well which is probably trickier for more users than the get solution\n')
('get', 'faster', 'post', 'performance', '8515020', 'get is faster than post\n')
('get', 'less', 'post', '', '7292552', 'data should be in post or get.if you dont put your data in your form then you will have to use get which is less secure than post\n')
('post', 'more detailed', 'get', '', '12876876', 'this blog post is more detailed but unfortunately does also not mention where to get the product key\n')
('post', 'more secure', 'get', '', '3544966', 'post is more secure then get and data transfer size limits are also there\n')
('get', 'less', 'post', '', '24430127', 'get is basically for just getting retrieving data a get should not have a body so aside from cookies the only place to pass info is in the url and urls are limited in length get is less secure compared to post because data sent is part of the url\n')
('get', 'easier', 'post', 'usability', '9606511', 'another reason but rather a minor one is that get is easier to exploit that post as there are more ways to trigger get request than to trigger post request\n')
('post', 'more secure', 'get', '', '1597598', 'for example post request are considered more secure than get request as creating a post request is relatively harder than creating a get request\n')
('get', 'much more lax', 'post', '', '7852059', 'the post get may fix the problem - get is much more lax with security than post\n')
('get', 'more appropriate', 'post', '', '7205747', 'get is more appropriate than post for queries because of its safe semantics\n')
('post', 'more secure', 'get', '', '21832271', 'firstly post can seem more secure than get\n')
('post', 'more advantages', 'get', '', '17212144', 'post has a lot more advantages than get\n')
('post', 'more secure', 'get', '', '46614', 'post is also more secure than get because you aren t sticking information into a url\n')
('post', 'also more', 'get', '', '46614', 'post is also more secure than get because you aren t sticking information into a url\n')
('post', 'not better', 'get', '', '6735520', 'post is not better than get\n')
('get', 'easier', 'post', 'usability', '15992008', 'in my opinion the second way to achieve this is better because using get is not thats ecure in my opinion.it s easier than using post\n')
('get', 'less secure', 'post', '', '21579295', 'however in the comparative table i linked get is listed as less secure than post\n')
('post', 'more secure', 'get', '', '6735507', 'using the post method isn t necessarily more secure than get\n')
('get', 'more', 'post', '', '6364373', 'usual way with tagging is to get objects by tag but if tags are used by few applications it may give more than post\n')
('post', 'safer', 'get', 'security', '7148371', 'however note that post is not much safer than get\n')
('post', 'more data', 'get', '', '2539220', 'post get method doesn t have the same lenght limit you can use post to send more data than with get\n')
('get', 'much easier', 'post', 'usability', '22266230', 'using get is much easier than using post for most of developers\n')
('post', 'better', 'get', '', '1008704', 'yes post is better than get because post data is not usualy logged by a proxy or server but it is not secure\n')
('post', 'more', 'get', '', '6342651', 'this post is more to get advises and ideas rather than solving a problem\n')
('post', 'more info', 'get', '', '8836906', 'this blog post provides more info to get started\n')
('post', 'much more', 'get', '', '1241338', 'i m sure there s a work around to use get for emails but the alternative post is much more easier and doesn t require any hacks to get around\n')
('post', 'more compact', 'get', 'usability', '1494219', 'is post more compact than get since get requests have to be url-encoded\n')
('post', 'less', 'get', '', '7652047', 'i also found a post that suggests a less brute force method to get the urlroutingmodule to catch the combres.axd route\n')
('post', 'more elegant', 'get', 'usability', '1030688', 'i think using post is more elegant and has more options for further development than passing them via get\n')
('get', 'less secure', 'post', '', '7292552', 'data should be in post or get.if you dont put your data in your form then you will have to use get which is less secure than post\n')
('get', 'more', 'post', '', '12297727', 'i get far more than 50 post\n')
('post', 'better', 'get', '', '12100416', 'this response thus assumes that a request using the post verb would not use the uri to transfer sensitive information or it would be no better than get\n')
('get', 'more fast', 'post', '', '14083346', 'i had the idea to switch automatically between get and post for example if cookie set because get is more fast and cache able and post is more save\n')
('get', 'better', 'post', '', '12490278', 'is get method is better than post method if you use a form\n')
('get', 'more', 'post', '', '10259488', 'i get somehow category repeated if it has more than 1 post eg\n')
('get', 'more useful', 'post', 'usability', '20773871', 'when taking input we can use either get or post.the input is shown in the url when using get but not when post is used.is there a situation where get is more useful than post\n')
('post', 'more secure', 'get', '', '5287145', 'using post prevents this particular attack but is this actually any more secure than using get\n')
('post', 'more complex', 'get', 'usability', '23586414', 'post is a little more complex than get though\n')
('get', 'more', 'post', '', '24883267', 'on that base a get is more appropriate then a post\n')
('post', 'here more information', 'get', '', '9378699', 'following my comment on your original post here s some more information that will help you get through this\n')
('post', 'not more', 'get', '', '1008671', 'post is not more secure than get as itâ s also send unencrypted\n')
('post', 'more', 'get', '', '2389112', 'why everybody here is saying post is more secure than get when used over https\n')
('post', 'more appropriate', 'get', '', '4157893', 'i can t help with the coding side of your question but if you re passing in a non-url input then the post method would be more appropriate than get\n')
('get', 'much more', 'post', '', '7852059', 'the post get may fix the problem - get is much more lax with security than post\n')
('get', 'smaller', 'post', 'memory', '1860743', 'you ll hit problems with larger submissions and file-uploads as the size limit for a get is much smaller than a post\n')
('post', 'more', 'get', '', '2816936', 'if a post has a more recent reply i want to get the replies created_on value but also get the post post_id and subject\n')
('post', 'more options', 'get', 'usability', '19724396', 'post gives you more options and dosn t have a limit on parameter query string length like get the only negative is post is slower by a couple of milliseconds to create the request\n')
('post', 'more', 'get', '', '19724396', 'post gives you more options and dosn t have a limit on parameter query string length like get the only negative is post is slower by a couple of milliseconds to create the request\n')
('get', 'more', 'post', '', '9557460', 'i want to get all the users that has more than one post but\n')
('get', 'request more', 'post', '', '11287884', 'but do also remember that in your case get request looks more appropriate and as balusc says its not good practice to use post for bookmarkable page-to-page navigation\n')
('get', 'more', 'post', '', '11057732', 'i need to create a menu based on that list but cannot simply list all post and get it because it is a busy blog and has more than 2000 post\n')
('post', 'more', 'get', '', '1494266', 'post has one more letter in it than get so it s less compact\n')
('get', 'more performant', 'post', '', '1850196', 'get is more performant as it is idempotent and does not contain a message body where as post does\n')
('get', 'less secure', 'post', '', '2977506', 'first off get is no less secure than post\n')
('get', 'more logical', 'post', '', '23850341', 'but a get seems more logical than a post anyway\n')
('post', 'better', 'get', '', '2796836', 'using post over https is better than using get and http\n')
('post', 'probably easier', 'get', 'usability', '13225433', 'have a look at this post it is probably easier to get the selected radio button by changing your itemscontrol to use a listbox with the existing datatemplate\n')
('get', 'method faster', 'post', 'performance', '4521727', 'why get method is faster than post\n')
('get', 'quicker', 'post', '', '11603297', 'a get is a bit quicker and than a post in an ajax scenario\n')
('post', 'more', 'get', '', '12266054', 'you can feel like post is more secure than get all you want but it s a false premise\n')
('post', 'request not more', 'get', '', '8277796', 'standard post request is not more secure than get one\n')
('get', 'smaller', 'post', 'memory', '18192221', 'a get request will be slightly smaller than a post although using websockets would give a more accurate figure\n')
('post', 'better', 'get', '', '11761592', 'in this case post may be better than get anyways\n')
('post', 'more', 'get', '', '724272', 'sorry that this post is more of the and for further information... type than a direct answer which i think has now been given-- i just thought it was helpful not to get things lost inside comments\n')
('post', 'request less', 'get', '', '6219147', 'however a post request is less efficient as a get request - bear that in mind and only use post if you really need to\n')
('post', 'more', 'get', '', '1311780', 'there appears to be a common mis-conception that post is more secure than get simply because it seems more obvious how to get a browser to manipulate the post variable\n')
('get', 'better', 'post', '', '1678727', 'when get is better than post\n')
('get', 'less safe', 'post', '', '8566523', 'some people say get can be less safe than post -- but to the seasoned user this doesn t make any significant difference because they can intercept and modify headers of the request\n')
('post', 'more safety', 'get', '', '13484830', 'a post request would not provide any more safety than a get request any half-decent web debugging tool can forge post requests\n')
('post', 'more indirect', 'get', '', '16195031', 'post makes it more indirect to intercept and read the payload than get but not safer\n')
('get', 'presumably more level', 'post', '', '18308085', 'but using post instead of get presumably adds one more level of protection for xsrf types of attack it does not you need some form of explicit xsrf protection token with post or with get\n')
('get', 'less secure', 'post', '', '1744404', 'the get request is marginally less secure than the post request\n')
('get', 'less secure', 'post', '', '24430127', 'get is basically for just getting retrieving data a get should not have a body so aside from cookies the only place to pass info is in the url and urls are limited in length get is less secure compared to post because data sent is part of the url\n')
('get', 'more', 'post', '', '19306690', 'what i m trying to get is a page that displays 20 users per page will have pagination with the fallowing info it should show only users that have more than 2 post published\n')
('get', 'presumably more', 'post', '', '18308085', 'but using post instead of get presumably adds one more level of protection for xsrf types of attack it does not you need some form of explicit xsrf protection token with post or with get\n')
('post', 'more secure', 'get', '', '15523045', 'also note that using post is absolutely not more secure than get because the request parameters aren t immediately visible in url\n')
('post', 'script more', 'get', '', '17341132', 'for eps is the same situation the post script is more readable but you should apply all necessery transformations on object before get its size\n')
('post', 'request not more secure', 'get', '', '8277796', 'standard post request is not more secure than get one\n')
('get', 'easier', 'post', 'usability', '3701546', 'from a hacker s point of view a get forgery is much easier than post forgery at the first you only post a link at the second you need to point to a malware website with hidden iframe and autosubmit forms but both of them fail if tokens are checked\n')
('post', 'more secure', 'get', '', '19343161', 'although post is more secure as compared to get when ssl is present\n')
('get', 'forgery much easier', 'post', 'usability', '3701546', 'from a hacker s point of view a get forgery is much easier than post forgery at the first you only post a link at the second you need to point to a malware website with hidden iframe and autosubmit forms but both of them fail if tokens are checked\n')
('post', 'higher', 'get', '', '9322946', 'post has a higher overhead marginally if we re honest but it all adds up but it doesn t become part of the url so can t be seen by say a casual observer over the user s shoulder - whereas get can\n')
('post', 'more', 'get', '', '3544966', 'post is more secure then get and data transfer size limits are also there\n')
('post', 'more secure', 'get', '', '2389112', 'why everybody here is saying post is more secure than get when used over https\n')
('get', 'always faster', 'post', 'performance', '11008319', 'get is always faster than post\n')
('get', 'method faster', 'post', 'performance', '1211881', 'it is said that get method is faster than post but i don t know why is it\n')
('post', 'safer', 'get', 'security', '1145134', 'and apart from common misleading information where post is safer than get it is not\n')
('get', 'more', 'post', '', '6656594', 'if you use post when get is more semantically correct it is less communicative of the intent of your request since post usually means you are sending a payload\n')
('post', 'also more', 'get', '', '7411370', 'post is also more secure than get because you aren t sticking information into a url\n')
('post', 'more', 'get', '', '4565070', 'using post allows for more data to be transferred since get will append the values to the url itself\n')
('get', 'slightly faster', 'post', 'performance', '25307589', 'get is slightly faster because the values are sent in the header unlike the post the values are sent in the request body in the format that the content type specifies\n')
('post', 'safer', 'get', 'security', '2143377', 'is post safer than get\n')
('post', 'more secure', 'get', '', '1311780', 'there appears to be a common mis-conception that post is more secure than get simply because it seems more obvious how to get a browser to manipulate the post variable\n')
('get', 'more', 'post', '', '14083346', 'i had the idea to switch automatically between get and post for example if cookie set because get is more fast and cache able and post is more save\n')
('post', 'better', 'get', '', '5884242', 'also post is generally considered better than get for ajax calls as it doesn t have the same string length limit slightly more secure too\n')
('post', 'less brute', 'get', '', '7652047', 'i also found a post that suggests a less brute force method to get the urlroutingmodule to catch the combres.axd route\n')
('get', 'more often', 'post', '', '21773039', 'get is more often used on unsecure type of datatransactions like for example a searchform and post is used when you want to make more secure things like a login form\n')
('get', 'earlier', 'post', '', '20961057', 'i am using custom delegate methods but when i run this the get request is performed earlier than the post so i cannot get the key before the get is done\n')
('post', 'better', 'get', '', '17949020', 'and i think post is better than get\n')
('get', 'more', 'post', '', '23850341', 'but a get seems more logical than a post anyway\n')
('post', 'more', 'get', '', '23905175', 'this blog post explains more on how to get an access token on android\n')
('post', 'here more', 'get', '', '9378699', 'following my comment on your original post here s some more information that will help you get through this\n')
('get', 'faster', 'post', 'performance', '11008319', 'get is always faster than post\n')
('post', 'more secure', 'get', '', '20042408', 'post is also more secure than get because you aren t sticking\n')
('get', 'more images', 'post', '', '20499631', 'i m trying to get cloudinary direct uploads working on a rails app using carrierwave and accepts_nested_attributes_for to submit one or more images with a post\n')
('post', 'more', 'get', '', '10331965', 'as powelljf3 said post is more secure then get though it can still be gotten to\n')
('get', 'less', 'post', '', '5199763', 'other than the fact that get has one character less than post i doubt there is any performance difference\n')
('post', 'more secure', 'get', '', '8277796', 'standard post request is not more secure than get one\n')
('get', 'easier', 'post', 'usability', '22266230', 'using get is much easier than using post for most of developers\n')
('post', 'broader application', 'get', 'usability', '24353372', 'a post has broader application and is generally used to send persistent data to a server in fact prescriptively get should not be used for this purpose\n')
('post', 'more', 'get', '', '1030688', 'i think using post is more elegant and has more options for further development than passing them via get\n')
('post', 'more letter', 'get', '', '1494266', 'post has one more letter in it than get so it s less compact\n')
('post', 'better', 'get', '', '1500539', 'since post is better suited to transfer large amounts of data or difficult formatted data it is the established standard for submitting forms but it is in no way safer unsafer or more less secure than get requests\n')
('post', 'more secure', 'get', '', '10331965', 'as powelljf3 said post is more secure then get though it can still be gotten to\n')
('post', 'slightly less susceptible', 'get', '', '1744404', 'the only scenario in which post is slightly less susceptible is that many websites that arenâ t under the attackerâ s control say a third-party forum allow embedding arbitrary images allowing the attacker to inject an arbitrary get request but prevent all ways of injecting an arbitary post request whether automatic or manual\n')
('post', 'also more secure', 'get', '', '20042408', 'post is also more secure than get because you aren t sticking\n')
('post', 'more secure', 'get', '', '25757870', 'last to address other answers while you should use post data when modifying something it is in no way more secure than get\n')
('post', 'more data', 'get', '', '3882214', 'i don t want to use the get request since it says in the guidelines of a restful api that it should use post for this purpose plus i might want to send more data than get can handle\n')
('post', 'more secure', 'get', '', '4294578', 'post data isn t inherently more secure than get data\n')
('get', 'more', 'post', '', '7212715', 'i normally use something like this tag.object.annotate num_post count post .filter num_post__gt 2 to get tags with more than 2 post\n')
('post', 'more information', 'get', '', '17599439', 'the post at has more information on how to get that access token\n')
('post', 'more', 'get', '', '11211762', 'post is more secure than get this is just a quick example\n')
('post', 'more secure', 'get', '', '9330797', 'post is absolutely not more secure than get as to man in middle attacks\n')
('post', 'much more easier', 'get', 'usability', '1241338', 'i m sure there s a work around to use get for emails but the alternative post is much more easier and doesn t require any hacks to get around\n')
('post', 'more', 'get', '', '4218091', 'while the post method can be submitted with forms or ajax calls and it is pretty safe at least more than the get\n')
('post', 'shipping longer', 'get', '', '15689066', 'the problem is that the post shipping takes longer than the call get alert then shows me the session variable not updated\n')
('get', 'more', 'post', '', '8297272', 'maybe i would mostly always choose post over get it s more tidy and refreshing and going back issues with post method are a thing from the past in any major browser they just ask you if you want to resend the data don t they\n')
('get', 'simpler http', 'post', 'usability', '4594163', 'this would make things considerably easier as the android library has native support for json serialization and making http get requests to restful urls is much simpler than http post requests it s not a huge deal but just less stuff you have to worry about\n')
('post', 'request relatively harder', 'get', '', '1597598', 'for example post request are considered more secure than get request as creating a post request is relatively harder than creating a get request\n')
('post', 'better choice', 'get', '', '7381842', 'instead i m using post which isn t exactly bullet proof but still a better choice than get in this case\n')
('post', 'less secure', 'get', '', '2080901', 'i wouldn t call post more or less secure than get\n')
('get', 'less subsequent', 'post', '', '698048', 'an initial get request to a page usually costs less than subsequent post anyway so there s not much reason to avoid it\n')
('get', 'method faster', 'post', 'performance', '16049028', 'usually in ajax get method is faster as it doesn t involve proccessing post fields and as you are only getting information i would stick it\n')
('get', 'more', 'post', '', '6721054', 'however it isn t clear how much the value can be for the standard tumblr api you can t get more than 50 post at a time\n')
('post', 'not more secure', 'get', '', '1008671', 'post is not more secure than get as itâ s also send unencrypted\n')
('post', 'cleaner', 'get', '', '10292008', 'also you can determine if someone is submitting a form or getting the form by checking if _server request_method post which is cleaner than using a get url parameter though i guess there s nothing wrong with the other approach...\n')
('get', 'larger more', 'post', 'memory', '24538442', 'so i have a post system and i want the box to get larger as more post come in\n')
('get', 'more', 'post', '', '12297727', 'so is it enough only to use limit to get more than 50 post\n')
('post', 'script more readable', 'get', 'usability', '17341132', 'for eps is the same situation the post script is more readable but you should apply all necessery transformations on object before get its size\n')
('post', 'more', 'get', '', '8836906', 'this blog post provides more info to get started\n')
('post', 'better', 'get', '', '1678727', 'when post is better than get\n')
('get', 'more', 'post', '', '20773871', 'when taking input we can use either get or post.the input is shown in the url when using get but not when post is used.is there a situation where get is more useful than post\n')
('post', 'higher overhead', 'get', 'performance', '9322946', 'post has a higher overhead marginally if we re honest but it all adds up but it doesn t become part of the url so can t be seen by say a casual observer over the user s shoulder - whereas get can\n')
('post', 'more', 'get', '', '17599439', 'the post at has more information on how to get that access token\n')
('get', 'larger more', 'post', 'memory', '17974157', 'for example on the blog page of my current project i have two widgets in the sidebar one for latest tweets and one for latest music news however as you can see on this page the content of the blog post all test posts... are much longer than the height of the two widgets and would of course get larger as more post are added\n')
('post', 'more data', 'get', '', '4565070', 'using post allows for more data to be transferred since get will append the values to the url itself\n')
('get', 'better option', 'post', 'usability', '1772728', 'sometimes get is a better option in those read-only scenarios because it makes your url scheme richer and avoids these sort of post warnings\n')
('get', 'more', 'post', '', '7205747', 'get is more appropriate than post for queries because of its safe semantics\n')
('post', 'much more', 'get', '', '10277598', 'this means the amount of data you could pass by using post verb is much more than by using a query string and a get method\n')
('post', 'safer', 'get', 'security', '6285401', 'regarding your question about safety -- the answer is post is absolutely no safer than get\n')
('post', 'safer', 'get', 'security', '6368250', 'post requests are no safer than restful requests which are no safer than get requests\n')
('post', 'better', 'get', '', '6735520', 'post is not better than get\n')
('post', 'slightly less', 'get', '', '1744404', 'the only scenario in which post is slightly less susceptible is that many websites that arenâ t under the attackerâ s control say a third-party forum allow embedding arbitrary images allowing the attacker to inject an arbitrary get request but prevent all ways of injecting an arbitary post request whether automatic or manual\n')
('get', 'lower', 'post', '', '1678683', 'generally when passing lots of data to the server to be processed or stored using post is a good idea since get has a lower limit than that of post\n')
('get', 'slightly less secure', 'post', '', '3682493', 'after that is done you can go into security details where get is slightly less secure than post - see the comments for details.\n')
('post', 'more', 'get', '', '16294056', 'if the post has more than 9 pictures related to it i only get data from the first 9\n')
('post', 'larger', 'get', 'memory', '9422310', 'to answer part of your second question with .net if the post is larger than maxrequestlength part of the .net configuration but smaller than maxallowedcontentlength part of the iis configuration you can create a custom http module to get at the portion of the post that came through\n')
('get', 'more tidy', 'post', '', '8297272', 'maybe i would mostly always choose post over get it s more tidy and refreshing and going back issues with post method are a thing from the past in any major browser they just ask you if you want to resend the data don t they\n')
('post', 'better', 'get', '', '6777202', 'i believe post is better than get\n')
('post', 'more secure', 'get', '', '8956020', 'edit2 seems as if i m wrong re post being more secure than get\n')
('get', 'less secure', 'post', '', '3682493', 'after that is done you can go into security details where get is slightly less secure than post - see the comments for details.\n')
('post', 'also more secure', 'get', '', '7411370', 'post is also more secure than get because you aren t sticking information into a url\n')
('get', 'more', 'post', '', '21773039', 'get is more often used on unsecure type of datatransactions like for example a searchform and post is used when you want to make more secure things like a login form\n')
('get', 'request marginally less', 'post', '', '1744404', 'the get request is marginally less secure than the post request\n')
('get', 'less', 'post', '', '2977506', 'first off get is no less secure than post\n')
('post', 'safer', 'get', 'security', '18954610', 'one more thing some guys would misunderstand that post is safer than get as user can not see the sent data\n')
('post', 'more details', 'get', '', '22153922', 'another post outlines some more details on this how to get master-master replication with subversion\n')
('post', 'more recent', 'get', '', '2816936', 'if a post has a more recent reply i want to get the replies created_on value but also get the post post_id and subject\n')
('post', 'larger', 'get', 'memory', '5375742', 'the usual wait time of the post is not too long not too larger than get so i don t think that should be an issue and post always gets back with a 200\n')
('get', 'smaller limits', 'post', 'memory', '25149172', 'get requests have smaller limits than post in the specs\n')
('post', 'more secure', 'get', '', '12266054', 'you can feel like post is more secure than get all you want but it s a false premise\n')
('get', 'better', 'post', '', '19732711', 'get is better for some cases but it seems to me you should use post instead\n')
('post', 'more secure', 'get', '', '11211762', 'post is more secure than get this is just a quick example\n')
('post', 'more', 'get', '', '12876876', 'this blog post is more detailed but unfortunately does also not mention where to get the product key\n')
('get', 'more', 'post', '', '15089866', 'so it is considerably less then what facebook states in their documentation at least looking by the date however by count it seems you get more than 50 post\n')
('post', 'better', 'get', '', '17044607', 'also a post request would be better than a get if you re sending json\n')
('get', 'more', 'post', '', '198565', 'get is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaining\n')
('get', 'more info', 'post', '', '6636839', 'however i ve searched for a couple days and am not getting a definitive answer and i need a better understand of this so i know no better way to get more info than to post here\n')
('post', 'more', 'get', '', '19343161', 'although post is more secure as compared to get when ssl is present\n')
('get', 'more', 'post', '', '19621961', 'however if you want to get more than one post rather use functions mentioned above i think the most important thing is to grab them in one db query and not in ineffective way one-by-one\n')
('get', 'much smaller', 'post', 'memory', '1860743', 'you ll hit problems with larger submissions and file-uploads as the size limit for a get is much smaller than a post\n')
('get', 'more', 'post', '', '1850196', 'get is more performant as it is idempotent and does not contain a message body where as post does\n')
('get', 'slightly less', 'post', '', '3682493', 'after that is done you can go into security details where get is slightly less secure than post - see the comments for details.\n')
('post', 'more secure', 'get', '', '8985967', 'post method are generally consume more secure than get because when we use get method than it can display the data in url bar.if the data is more sensitive data like password then it can be inggeris\n')
('post', 'less secure', 'get', '', '1500539', 'since post is better suited to transfer large amounts of data or difficult formatted data it is the established standard for submitting forms but it is in no way safer unsafer or more less secure than get requests\n')
('post', 'also more secure', 'get', '', '46614', 'post is also more secure than get because you aren t sticking information into a url\n')
('get', 'more appropiate', 'post', '', '198565', 'get is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaining\n')
('get', 'less insecure', 'post', '', '4938414', 'get requests are no less insecure than post requests\n')
('post', 'higher', 'get', '', '18140518', 'if you have both post and get params with same name and if you using then it will take post variable only.because post has the higher priority than get\n')
('post', 'worse', 'get', '', '5797770', 'one reason post is worse for security is that get is logged by default parameters and all data is almost universally logged by your webserver\n')

tcp	arp	2
('tcp', 'shorter', 'arp', '', '1716751', 'it would appear from your question that the period of the tcp message is shorter than the arp refresh time\n')
('tcp', 'message shorter', 'arp', '', '1716751', 'it would appear from your question that the period of the tcp message is shorter than the arp refresh time\n')

fadein	removeclass	2
('fadein', 'better', 'removeclass', '', '3206128', 'for some reason fadein works better than show or simply removing a hidden class via removeclass if you take that approach\n')
('removeclass', 'faster', 'fadein', 'performance', '13281297', 'that s because removeclass is executed faster than fadein method you can remove the class when animation is complete\n')

bazaar	svn	1
('bazaar', 'much more', 'svn', '', '1645672', 'bazaar seems much more like svn with branches just being separate directories so maybe not\n')

jqplot	flot	4
('jqplot', 'better chart', 'flot', '', '9848654', 'jqplot is free in my opinion has better chart than flot it doesnâ t have events\n')
('jqplot', 'better lot', 'flot', '', '6759961', 'by looking at the google groups for qjplot and flot the support for jqplot is better lot s of unanswered questions at the flot group\n')
('jqplot', 'better documentation', 'flot', '', '21896130', 'i found jqplot easier to use with more options and better documentation than flot or graphael\n')
('jqplot', 'better', 'flot', '', '6759961', 'by looking at the google groups for qjplot and flot the support for jqplot is better lot s of unanswered questions at the flot group\n')

cobertura	maven	1
('cobertura', 'better', 'maven', '', '1207519', 'i find cobertura and emma to be largely interchangeable in terms of coverage checking just that cobertura has a better maven plugin and emma has a better eclipse plugin in my opinion\n')

pbkdf2	md5	1
('pbkdf2', 'more computation', 'md5', '', '16044003', 'so we can use pbkdf2 with sha512 to gain a very significant advantage over the phpass algorithm mainly because sha512 is a harder algorithm with more computation than md5\n')

springlayout	gridbaglayout	1
('springlayout', 'more robust', 'gridbaglayout', 'reliability', '10837003', 'not many layout problems can t be conquered using it and its easy to understand as opposed to springlayout groupedlayout etc and far less code and more robust than gridbaglayout\n')

cstring	bstr	1
('cstring', 'more', 'bstr', '', '12632385', 'a cstring is more like a visual basic string or a bstr\n')

railo	coldfusion	1
('railo', 'generally stricter', 'coldfusion', '', '24370779', 'there are many other small differences railo is generally stricter about syntax and semantics than adobe coldfusion and often those decisions are driven by performance concerns in that compatibility with adobe coldfusion would make railo slower\n')

hammer.js	fastclick.js	2
('hammer.js', 'more full-featured', 'fastclick.js', '', '16737168', 'hammer.js is a more full-featured touch library has many swipe commands than fastclick.js most upvoted answer\n')
('hammer.js', 'more', 'fastclick.js', '', '16737168', 'hammer.js is a more full-featured touch library has many swipe commands than fastclick.js most upvoted answer\n')

iostream	cstdio	3
('cstdio', 'more', 'iostream', '', '15501048', 'for those commenting that cstdio is obsolete personally i like it more than iostream\n')
('iostream', 'slower', 'cstdio', 'performance', '9369269', 'iostream is said to be slower than cstdio but i suggest you use a profiling tool here to find the best set of options here\n')
('iostream', 'slower', 'cstdio', 'performance', '5792495', 'yes iostream is slower than cstdio\n')

robocopy	xcopy	10
('robocopy', 'more powerful tool', 'xcopy', 'usability', '5062597', 'if your batch file only needs to run on windows vista or later you can use robocopy instead which is an even more powerful tool than xcopy and is now built into the operating system\n')
('robocopy', 'more robust', 'xcopy', 'reliability', '11546939', 'i have solved it in the past very successfully using robocopy it s much more robust than xcopy\n')
('xcopy', 'better', 'robocopy', '', '23197486', 'xcopy will not be better than robocopy at this\n')
('robocopy', 'much faster', 'xcopy', 'performance', '24962343', 'that would theoretically cut the time in half but it seems that robocopy is much faster than xcopy at least for this use so it took way less time\n')
('robocopy', 'much more powerful', 'xcopy', 'usability', '6912364', 'use robocopy it s much more powerful than xcopy\n')
('robocopy', 'much more robust', 'xcopy', 'reliability', '11546939', 'i have solved it in the past very successfully using robocopy it s much more robust than xcopy\n')
('robocopy', 'much more', 'xcopy', '', '6912364', 'use robocopy it s much more powerful than xcopy\n')
('robocopy', 'more powerful', 'xcopy', 'usability', '6912364', 'use robocopy it s much more powerful than xcopy\n')
('robocopy', 'much more', 'xcopy', '', '11546939', 'i have solved it in the past very successfully using robocopy it s much more robust than xcopy\n')
('robocopy', 'faster', 'xcopy', 'performance', '24962343', 'that would theoretically cut the time in half but it seems that robocopy is much faster than xcopy at least for this use so it took way less time\n')

spaces	delimiter	6
('spaces', 'field', 'delimiter', '', '612937', 'awk uses a comma surrounded by 0 or more spaces as field delimiter\n')
('delimiter', 'more', 'spaces', '', '9647879', 'you are using the wrong delimiter since your text file may contain more than one spaces character between tokens\n')
('delimiter', 'just', 'spaces', '', '11322412', 'if you want to allow for more delimiter than just spaces tab you can add additional separators when using split\n')
('spaces', 'more', 'delimiter', '', '25703773', 'to split the string with regular expression saying spaces one or more spaces one or more as delimiter\n')
('spaces', 'field', 'delimiter', '', '1468030', 'it checks for one or more spaces as field delimiter and also tabs\n')
('delimiter', 'more', 'spaces', '', '23582518', 'as luiggi mendoza commented splitting by s+ instead of would resolve any issue with the number being delimiter by more than one spaces\n')

polygons	distance	3
('distance', 'less intuitive', 'polygons', '', '21541246', 'the one drawback is that distance between vertices might be slightly less intuitive than polygons area but the two are proportional\n')
('distance', 'less', 'polygons', '', '18668955', 'if that distance is less than the radius of the circle then you know that the polygons intersects the circle\n')
('polygons', 'greater', 'distance', '', '1120009', 'calculate the actual minimum distance and continue through the sorted list until the maximum distance between the polygons is greater than the minimum distance found so far\n')

dialog	pop-up	10
('dialog', 'less intrusive', 'pop-up', '', '206134', 'from a practice standpoint - excluding accessibility - modal windows provide an alternative that are less startling as say dialog boxes and feel less intrusive than pop-up windows\n')
('dialog', 'more', 'pop-up', '', '13521463', 'feed dialog is more intrusive in the sense that it has a facebook pop-up window\n')
('pop-up', 'z-index less', 'dialog', '', '16581005', 'because of datebox pop-up z-index is less then your box mean dialog box s z-index it shows behind pop-up panel\n')
('pop-up', 'better', 'dialog', '', '18214671', 'generally a pop-up is a better option for a login dialog and a pop-up would allow you to easily navigate to the main page\n')
('dialog', 'better', 'pop-up', '', '784719', 'use floating divs instead which looks like a modal dialog but are better than the pop-up\n')
('pop-up', 'z-index less then', 'dialog', '', '16581005', 'because of datebox pop-up z-index is less then your box mean dialog box s z-index it shows behind pop-up panel\n')
('pop-up', 'bigger', 'dialog', 'memory', '20348531', 'when typing in the text box the autocomplete pop-up but is bigger than the remaining space in the modal dialog\n')
('pop-up', 'higher', 'dialog', '', '8527360', 'i realize this is an older post but we just ran into the same issue and resolved it by setting the z-index of the bubble pop-up to something higher than the dialog window\n')
('dialog', 'more intrusive', 'pop-up', '', '13521463', 'feed dialog is more intrusive in the sense that it has a facebook pop-up window\n')
('pop-up', 'better option', 'dialog', 'usability', '18214671', 'generally a pop-up is a better option for a login dialog and a pop-up would allow you to easily navigate to the main page\n')

macports	fink	8
('fink', 'more stable', 'macports', 'reliability', '4527378', 'because fink is reputedly more stable than macports and has many more packages\n')
('fink', 'more packages', 'macports', '', '4396834', 'on top of that fink gives you access to more packages than macports\n')
('macports', 'more', 'fink', '', '388422', 'i second macports it is more up to date than fink and closer to the freebsd ports system where i come from\n')
('fink', 'reputedly more stable', 'macports', 'reliability', '4527378', 'because fink is reputedly more stable than macports and has many more packages\n')
('macports', 'less reliable', 'fink', 'reliability', '4396834', 'since i have seen many reports of the macports package manager being less reliable than the fink package manager i would suggest installing fink and then simply doing\n')
('fink', 'reputedly more', 'macports', '', '4527378', 'because fink is reputedly more stable than macports and has many more packages\n')
('fink', 'more packages', 'macports', '', '3822232', 'fink has more packages than macports\n')
('fink', 'more', 'macports', '', '3822232', 'fink has more packages than macports\n')

webclient	httpwebrequest	9
('webclient', 'slower', 'httpwebrequest', 'performance', '22792326', 'using webclient is potentially slightly on the order of a few milliseconds slower than using httpwebrequest directly\n')
('webclient', 'simpler', 'httpwebrequest', 'usability', '2152421', 'you can also use webclient which is much simpler than httpwebrequest but in order to set a cookiecontainer you ll need to derive from webclient and override the protected getwebrequest method\n')
('httpwebrequest', 'better option', 'webclient', 'usability', '4482785', 'so simply httpwebrequest is better option then webclient\n')
('webclient', 'less code', 'httpwebrequest', '', '2760426', 'i d rather use webclient because it requires less code than httpwebrequest httpwebresponse\n')
('webclient', 'much simpler', 'httpwebrequest', 'usability', '2152421', 'you can also use webclient which is much simpler than httpwebrequest but in order to set a cookiecontainer you ll need to derive from webclient and override the protected getwebrequest method\n')
('httpwebrequest', 'better', 'webclient', '', '4482785', 'so simply httpwebrequest is better option then webclient\n')
('webclient', 'easier', 'httpwebrequest', 'usability', '10569872', 'webclient is easier but httpwebrequest is more powerful and allows for more control\n')
('webclient', 'simpler interface', 'httpwebrequest', 'usability', '12083121', 'webclient has a much simpler interface than httpwebrequest and takes care of reading and writing from the streams for you\n')
('httpwebrequest', 'lower level', 'webclient', '', '5912160', 'httpwebresponse and httpwebrequest are a little bit lower level than webclient\n')

ublas	eigen	1
('ublas', 'faster', 'eigen', 'performance', '7380818', 'from my own experience mtl4 is much faster than ublas and it is also faster than eigen\n')

ember.js	sproutcore	2
('ember.js', 'much better', 'sproutcore', '', '10828935', 'i have seen a lot of post where they are claiming that ember.js is much better than sproutcore but looking at the differences i have seen that the widget support is not there in ember.js\n')
('ember.js', 'better', 'sproutcore', '', '10828935', 'i have seen a lot of post where they are claiming that ember.js is much better than sproutcore but looking at the differences i have seen that the widget support is not there in ember.js\n')

modulo	bitwise-and	1
('modulo', 'slower', 'bitwise-and', 'performance', '21889838', 'i read in couple of blogs that in java modulo reminder operator is slower than bitwise-and\n')

xhprof	xdebug	1
('xhprof', 'lighter', 'xdebug', 'memory', '1283195', 'thanks mikushi for the comment another possibility that i haven t used much is the the xhprof extension it also helps with profiling can generate callgraphs -- but is lighter than xdebug which mean you should be able to install it on a production server\n')

redmine	mantis	1
('redmine', 'better', 'mantis', '', '10654685', 'i have been trying out redmine to see if i like it better than mantis\n')

kombu	celery	1
('kombu', 'lower level', 'celery', '', '16328341', 'i did some reading on kombu and it seems to be able to do what i m thinking of although at a much lower level than celery\n')

emacs	aquamacs	2
('emacs', 'more native', 'aquamacs', '', '6205509', 'on unix like environments emacs is more native and you can use slime which is usually available as a os package or as a separate download for aquamacs\n')
('emacs', 'more', 'aquamacs', '', '6205509', 'on unix like environments emacs is more native and you can use slime which is usually available as a os package or as a separate download for aquamacs\n')

fractions	integer	4
('integer', 'bigger results', 'fractions', 'memory', '10459789', 'as python integer is less limited than the float you may get bigger results with the fractions if it makes sense at all\n')
('integer', 'less', 'fractions', '', '10459789', 'as python integer is less limited than the float you may get bigger results with the fractions if it makes sense at all\n')
('integer', 'less limited', 'fractions', '', '10459789', 'as python integer is less limited than the float you may get bigger results with the fractions if it makes sense at all\n')
('fractions', 'larger', 'integer', 'memory', '85416', 'if the number of bits in the mantissa or fractions is larger than the number of bits in your integer type then you ll possibly lose precision when someone types in a number such as\n')

boost	allocator	4
('boost', 'intrusive_ptr better', 'allocator', '', '6603712', 'boost intrusive_ptr performs better than shared_ptr because it doesn t need a second allocator to hold the reference count\n')
('allocator', 'more', 'boost', '', '23855901', 'the latter doesn t do any dynamic memory allocator and is more than 10 times faster than std to_string on boost karma benchmarks\n')
('boost', 'string_ref much faster', 'allocator', 'performance', '23439161', 'just to goof off a version using boost string_ref is much faster still due the reduced allocator\n')
('boost', 'string_ref much faster still', 'allocator', 'performance', '23439161', 'just to goof off a version using boost string_ref is much faster still due the reduced allocator\n')

unsigned	integer	9
('integer', 'rank less', 'unsigned', '', '19274392', 'an object with an integer type other than int and signed int whose integer rank is less than or equal to the rank of int and unsigned int a bit field of type _bool int signed int or unsigned int\n')
('integer', 'faster', 'unsigned', 'performance', '25778917', 'the idea here is threefold readability using operator functions with compatible left and right arguments as well as return value and the use of integer multiplying operators being faster than unsigned operators\n')
('integer', 'larger', 'unsigned', 'memory', '22287228', 'the problem is that the input integer is larger than what would fit in an unsigned long long\n')
('integer', 'more', 'unsigned', '', '20982292', 'according the books the variations of type integer occupy more or less bytes of memory depending on the architecture however the type unsigned short values â â can get up to 65 535 since the type unsigned long 4 294 967 295\n')
('integer', 'division much faster', 'unsigned', 'performance', '4890490', 'in case of unsigned integer division this problem does not arise which is why generally integer division works much faster for unsigned types than for signed types\n')
('integer', 'more useful', 'unsigned', 'usability', '18604489', 'furthermore signed integer types just tend to be more useful than unsigned types\n')
('unsigned', 'int no better', 'integer', '', '2892573', 'as far as the compiler is concerned the conversion from integer 0 to unsigned int is no better than the conversion from integer 0 to pointer\n')
('unsigned', 'bigger', 'integer', 'memory', '12572736', 'an implementation that has no such unsigned type say because pointers are bigger than any integer type won t provide it\n')
('integer', 'wider', 'unsigned', '', '23837701', 'it can only disappoint you if your compiler has an integer type wider than unsigned long long and you use it\n')

istanbul	lcov	2
('istanbul', 'more', 'lcov', '', '21890213', 'istanbul has more complete coverage stats not just lines - branches etc and can export to lcov for tools like code climate\n')
('istanbul', 'more complete', 'lcov', '', '21890213', 'istanbul has more complete coverage stats not just lines - branches etc and can export to lcov for tools like code climate\n')

scalacheck	quickcheck	1
('scalacheck', 'richer', 'quickcheck', '', '9351767', 'scalacheck s api is also a bit richer than quickcheck s api\n')

nstableview	nssplitview	1
('nstableview', 'shorter', 'nssplitview', '', '241621', 'a pattern i also use is to make the nstableview slightly shorter than the nssplitview and have buttons at the bottom add delete etc\n')

fixed-point	floating-point	6
('fixed-point', 'faster', 'floating-point', 'performance', '13997412', 'armv7 is usually better but for arm fixed-point arithmetic is usually a lot faster than floating-point implementations\n')
('fixed-point', 'arithmetic less precision', 'floating-point', '', '9581376', 'it s not necessarily true that the matlab fixed-point arithmetic provides less precision it can be used to provide more precision than ieee floating-point types\n')
('fixed-point', 'more exact', 'floating-point', '', '3737403', 'fixed-point can be much more exact than floating-point as long as the number s exponents remain in range\n')
('fixed-point', 'faster software', 'floating-point', 'performance', '14769407', 'anthony williams fixed-point maths library provides a complete analogue of the standard maths library for a fixed data type that is typically around 5 times faster than software floating-point on the same target\n')
('fixed-point', 'arithmetic less', 'floating-point', '', '9581376', 'it s not necessarily true that the matlab fixed-point arithmetic provides less precision it can be used to provide more precision than ieee floating-point types\n')
('fixed-point', 'more precision ieee', 'floating-point', '', '9581376', 'it s not necessarily true that the matlab fixed-point arithmetic provides less precision it can be used to provide more precision than ieee floating-point types\n')

uipageviewcontroller	uitableview	1
('uipageviewcontroller', 'more detailpageviewcontroller', 'uitableview', '', '21461847', 'in my app i have a rootpageviewcontroller which contains the uipageviewcontroller and one or more detailpageviewcontroller with a uitableview as a childview\n')

background-color	transparency	1
('background-color', 'more', 'transparency', '', '19879489', 'you just set the div with border-radius so that it is a circle and background-color is the more transparency color in the circle\n')

super	extends	1
('super', 'lower', 'extends', '', '4343237', 'super is a lower bound and extends is an upper bound\n')

qvector	qlist	1
('qvector', 'better', 'qlist', '', '16991903', 'qvector is better than qlist in this case because it s easy to resize it\n')

cos	sin	5
('cos', 'faster', 'sin', 'performance', '16432028', 'so if we have a vector and want to calculate a component-wise function over it say sin and cos it is faster to use vvsincos from accelerate because it will pipeline the calculations of sin and cos for all the entries in the vector which is faster than using a for-loop over the vector\n')
('cos', 'better', 'sin', '', '14175641', 'cos itself seems to be consistently a tick 0 01 better than sin but the case distinction to reconstruct the sign has an extra test\n')
('cos', 'cheaper', 'sin', '', '18793975', 'if i want to calculate a sin and a cos is it cheaper to calculate a sin and a cos or calculate a sin then a sqrt 1-sin 2 to get the cos\n')
('cos', 'slower', 'sin', 'performance', '6977614', 'after reading a question related with the performance of sin cos why is std sin and std cos slower than sin and cos\n')
('sin', 'faster', 'cos', 'performance', '18602020', 'or maybe flip them on my machine sin seems faster than cos\n')

show	hide	5
('hide', 'faster', 'show', 'performance', '15525831', 'i suppose it is because you hide them faster than you show them so for a slight second the overal page height is shorter than it should\n')
('show', 'more details', 'hide', '', '12538109', 'ironically enough its object model show more details than it hide - good for learning but bad for abstraction\n')
('hide', 'less', 'show', '', '21408336', 'it doesn t show at all if hide is called less than 0.5s after show and it show for at least 0.5s this prevents very fast flickering stuff that you might see with naive implementations\n')
('show', 'longer', 'hide', '', '2374164', 'it displays things normally on the screen of course but when you go to print preview in ie7 the only thing that show is longer description. so in other words it hide that first column and it also hide the second column\n')
('show', 'longer description.', 'hide', '', '2374164', 'it displays things normally on the screen of course but when you go to print preview in ie7 the only thing that show is longer description. so in other words it hide that first column and it also hide the second column\n')

mp4	webm	4
('webm', 'more robust', 'mp4', 'reliability', '24958247', 'webm is usually more robust than mp4 which can be all over the place\n')
('mp4', 'smaller', 'webm', 'memory', '23775693', 'i tried mp4 and webm and sometimes the file size after i convert to mp4 is smaller than webm but it is also sometimes larger than the original file size\n')
('webm', 'usually more robust', 'mp4', 'reliability', '24958247', 'webm is usually more robust than mp4 which can be all over the place\n')
('webm', 'usually more', 'mp4', '', '24958247', 'webm is usually more robust than mp4 which can be all over the place\n')

configobj	configparser	3
('configobj', 'easier', 'configparser', 'usability', '186990', 'i ve heard that configobj is easier to work with than configparser\n')
('configobj', 'more flexible', 'configparser', 'usability', '14096897', 'check out configobj its the slickest method i ve found so far and definitely more flexible than configparser\n')
('configobj', 'easier', 'configparser', 'usability', '3444436', 'i have heard that configobj is easier to use than configparser even though it is not a built-in library\n')

nginx	lighttpd	6
('nginx', 'even more', 'lighttpd', '', '803700', 'it s simple and nginx is even more ridiculously fast and lightweight than lighttpd\n')
('nginx', 'even more ridiculously', 'lighttpd', '', '803700', 'it s simple and nginx is even more ridiculously fast and lightweight than lighttpd\n')
('nginx', 'easier', 'lighttpd', 'usability', '3726590', 'i actually found the setup of nginx much easier than lighttpd not to mention that you can install a macport of nginx port install nginx +ssl that does not contain the ssl-breaking bug that lighttpd suffers from here\n')
('nginx', 'faster', 'lighttpd', 'performance', '3436202', 'shortly put running some benchmarks on a page doing some database operations and serving static dynamic content has shown that plain cherrypy was twice as fast than nginx and memcached and about half faster than lighttpd\n')
('nginx', 'better', 'lighttpd', '', '2711216', 'according to this benchmark nginx is a little bit better than lighttpd for serving bigger static contents so nginx would be a good choice for static flv video contents\n')
('nginx', 'faster', 'lighttpd', 'performance', '3475275', 'nginx seems to be the webserver getting the majority of the buzz lately it may be able to serve faster than lighttpd maybe not\n')

tcplistener	tcpclient	1
('tcplistener', 'nothing more', 'tcpclient', '', '9608101', 'on the server side you re using tcplistener which is nothing more than a socket or tcpclient factory\n')

tcpdf	fpdf	6
('tcpdf', 'better', 'fpdf', '', '6280801', 'i suggest you to give a look to tcpdf which is far better than fpdf also because it is actively developed\n')
('tcpdf', 'slower', 'fpdf', 'performance', '11405245', 'tcpdf was always slower than fpdf\n')
('tcpdf', 'much better', 'fpdf', '', '9000297', 'somewhat good news you could move to tcpdf which is much better at handling utf8 and is more modern in general than fpdf\n')
('tcpdf', 'far better', 'fpdf', '', '6280801', 'i suggest you to give a look to tcpdf which is far better than fpdf also because it is actively developed\n')
('tcpdf', 'better', 'fpdf', '', '7739169', 'i ve used tcpdf in the past and found it a lot better than fpdf\n')
('tcpdf', 'slower', 'fpdf', 'performance', '2285314', 'if anyone has some information on this problem i d really appreciate it - either things you did to make tcpdf faster or just confirmation that it runs slower than fpdf so i can forget about it and just stick with fpdf\n')

simpletest	phpunit	8
('phpunit', 'much nicer code', 'simpletest', '', '4625909', 'subjective phpunit provides much nicer code coverage reports than simpletest\n')
('phpunit', 'much nicer code', 'simpletest', '', '8715966', 'subjective phpunit provides much nicer code coverage reports than simpletest\n')
('phpunit', 'more popular', 'simpletest', 'usability', '2757869', 'phpunit is more popular and up to date as simpletest hasn t had a new release for some time though for testing webforms it s still very useful as phpunit does not have good support for that\n')
('simpletest', 'easier', 'phpunit', 'usability', '34338', 'i found simpletest was even easier than phpunit to set up\n')
('phpunit', 'more', 'simpletest', '', '2757869', 'phpunit is more popular and up to date as simpletest hasn t had a new release for some time though for testing webforms it s still very useful as phpunit does not have good support for that\n')
('phpunit', 'much nicer', 'simpletest', '', '4625909', 'subjective phpunit provides much nicer code coverage reports than simpletest\n')
('phpunit', 'much nicer', 'simpletest', '', '8715966', 'subjective phpunit provides much nicer code coverage reports than simpletest\n')
('simpletest', 'slightly easier', 'phpunit', 'usability', '4624172', 'simpletest is slightly easier to grasp but phpunit is the best in my opinion at least so if you want to start learning and using a framework start with the one you re going to use when you ll be a master in tdd\n')

saaj	jax-ws	1
('saaj', 'lower level', 'jax-ws', '', '2205637', 'one could use saaj soap with attachments api for java which runs at a lower level than jax-ws\n')

ravendb	couchdb	1
('ravendb', 'more', 'couchdb', '', '4163673', 'ravendb more than couchdb but that s neither here nor there\n')

lemmatization	stemming	1
('lemmatization', 'relatively more', 'stemming', '', '22454669', 'lemmatization is relatively more complicated as compare to stemming that is why it s harder to find some ready and free solution\n')

tostring	string.format	3
('tostring', 'marginally more efficient', 'string.format', 'performance', '12319077', 'for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n')
('tostring', 'marginally more', 'string.format', '', '12319077', 'for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n')
('tostring', 'more efficient', 'string.format', 'performance', '12319077', 'for formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostring\n')

uiview	calayer	5
('uiview', 'more', 'calayer', '', '3911370', 'does that mean the the view controller has multiple uiview or that the uiview has more than one calayer\n')
('calayer', 'better', 'uiview', '', '4882069', 'is calayer better than uiview in terms of performance\n')
('calayer', 'smaller', 'uiview', 'memory', '15638505', 'i want to add a calayer inside an uiview and this calayer will be smaller than the uiview\n')
('uiview', 'even more', 'calayer', '', '24280489', 'in fact each uiview has even more than 1 corresponding calayer\n')
('calayer', 'lighter', 'uiview', 'memory', '5538394', 'i am using calayer s because as suggested in documentation calayer s are lighter than uiview and i have hundreds of them\n')

qnetworkaccessmanager	qtcpsocket	2
('qnetworkaccessmanager', 'higher level', 'qtcpsocket', '', '5990009', 'qnetworkaccessmanager is higher level than qhttp and qtcpsocket so they have abstracted away the sockets connection state\n')
('qnetworkaccessmanager', 'higher', 'qtcpsocket', '', '5990009', 'qnetworkaccessmanager is higher level than qhttp and qtcpsocket so they have abstracted away the sockets connection state\n')

haskell	scheme	4
('haskell', 'earlier', 'scheme', '', '392733', 'some background i m learning haskell now having earlier worked with scheme and cl and a little foray into clojure\n')
('scheme', 'more approachable', 'haskell', '', '3363108', 'scheme is perhaps more approachable than haskell however\n')
('scheme', 'perhaps more approachable', 'haskell', '', '3363108', 'scheme is perhaps more approachable than haskell however\n')
('scheme', 'perhaps more', 'haskell', '', '3363108', 'scheme is perhaps more approachable than haskell however\n')

hyperthreading	processors	6
('hyperthreading', 'poorer performances', 'processors', '', '5195665', 'first step would be to investigate why a processors with hyperthreading simultaneous multithreading could lead to poorer performances than a processors without this technology\n')
('hyperthreading', 'greater', 'processors', '', '14507745', 'in computer 1 the eigen3 performance is worse because the number of total processors virtual + physical - â due to hyperthreading is greater than the number of physical processors\n')
('hyperthreading', 'more', 'processors', '', '21875112', 'you may find that hyperthreading helps more on code that is using large amounts of memory so that the processors is regularly blocked on fetching from memory\n')
('hyperthreading', 'more logical', 'processors', '', '2904283', 'a quad core intel cpu s with hyperthreading enabled has 4 physical cores yet 8 logical processors hyperthreading creates 4 more logical processors\n')
('hyperthreading', 'better older', 'processors', '', '10403526', 'more modern processors handle hyperthreading better than older processors\n')
('hyperthreading', 'more', 'processors', '', '2904283', 'a quad core intel cpu s with hyperthreading enabled has 4 physical cores yet 8 logical processors hyperthreading creates 4 more logical processors\n')

microcontroller	avr	1
('microcontroller', 'cheaper', 'avr', '', '4156810', 'i see that the microcontroller used in commercial devices are much cheaper than the avr or pic\n')

jruby	mri	15
('mri', 'faster', 'jruby', 'performance', '10747331', 'jvm hosted languages are generally going to be faster than traditional mri ruby and both java and scala are generally faster than jruby when it comes to raw cpu capabilities\n')
('jruby', 'more', 'mri', '', '3928025', 'in fact on windows jruby passes more rubyspec tests than ruby meaning mri or yarv itself\n')
('jruby', 'better', 'mri', '', '12071741', 'i know that rails jruby handles concurrency better than mri but i don t know how to do it\n')
('jruby', 'heavier', 'mri', '', '2224831', 'the jruby runtime alone is already pretty heavy much heavier than mri\n')
('jruby', 'faster', 'mri', 'performance', '15548793', 'for example jruby is faster than mri jruby 1.7 is faster than jruby 1.6 jruby 1.7 running on hotspot is faster than jruby 1.7 running on j9 jruby 1.7 running on hotspot 1.7 is faster than jruby 1.7 running on hotspot 1.6 jruby 1.7 running on hotspot 1.7 with the c2 compiler is faster than jruby 1.7 running on hotspot 1.7 with the c1 compiler and so on\n')
('jruby', 'better performance', 'mri', 'performance', '14584499', 'with these options jruby on rails gives about the same or better performance than mri\n')
('jruby', 'more', 'mri', '', '12822575', 'i ve noticed however that jruby is more sensitive to memory leaks than mri\n')
('jruby', 'better', 'mri', '', '13448080', 'for longer-running applications like a web application rubinius or jruby will generally perform better than mri\n')
('jruby', 'concurrency better', 'mri', '', '12071741', 'i know that rails jruby handles concurrency better than mri but i don t know how to do it\n')
('jruby', 'more performant', 'mri', '', '10284169', 'once the jvm has warmed up rails requests under jruby are usually significantly more performant than under mri both in terms of raw execution speed and garbage collection\n')
('jruby', 'more sensitive', 'mri', '', '12822575', 'i ve noticed however that jruby is more sensitive to memory leaks than mri\n')
('jruby', 'faster', 'mri', 'performance', '7987382', 'and it sounds strange but jruby scales very well and it s faster than mri with java 7\n')
('jruby', 'faster', 'mri', 'performance', '8920123', 'jruby is faster than 1.9 mri matz ruby interpreter the standard in certain areas\n')
('jruby', 'faster', 'mri', 'performance', '11058633', 'lastly if you are frequently finding yourself running long running process i advice you to try jruby which is works much better with long running processes due to jvm lot faster than mri\n')
('jruby', 'more rubyspec', 'mri', '', '3928025', 'in fact on windows jruby passes more rubyspec tests than ruby meaning mri or yarv itself\n')

qgraphicsscene	qgraphicsview	2
('qgraphicsscene', 'larger', 'qgraphicsview', 'memory', '8881046', 'by default when you scale a qgraphicsscene larger than the qgraphicsview in which it is displayed it will show the necessary scroll bars\n')
('qgraphicsscene', 'larger', 'qgraphicsview', 'memory', '17923539', 'if i set a pixmap to a qgraphicsscene that is larger that the window it will add scrollbars so is it possible to get what is displayed in the qgraphicsview\n')

mergesort	in-place	4
('mergesort', 'more', 'in-place', '', '497849', 'another reason is that mergesort needs more memory because it s hard to implement it as an in-place sort\n')
('mergesort', 'more memory', 'in-place', 'memory', '497849', 'another reason is that mergesort needs more memory because it s hard to implement it as an in-place sort\n')
('mergesort', 'more', 'in-place', '', '16594411', 'mergesort is more difficult to implement in-place but the out-of-place version is very cache-friendly - i suspect real-world implementations accept the o n space overhead - ram is cheap but memory bandwidth is a major bottleneck so trading memory for cache-efficiency and speed is often a good deal\n')
('mergesort', 'more difficult', 'in-place', '', '16594411', 'mergesort is more difficult to implement in-place but the out-of-place version is very cache-friendly - i suspect real-world implementations accept the o n space overhead - ram is cheap but memory bandwidth is a major bottleneck so trading memory for cache-efficiency and speed is often a good deal\n')

persistent	transient	2
('transient', 'less overhead', 'persistent', 'performance', '8792019', 'my intuition is that transient properties would incurr less overhead than persistent properties because they do not need to be persistent and read from the database so converting them to persistent properties will likely only make things slightly worse\n')
('persistent', 'so more', 'transient', '', '2349847', 'memcache data lives in memory and isn t persistent so is for more transient data\n')

m3u	mp3	1
('m3u', 'file nothing more', 'mp3', '', '3107988', 'an m3u file is nothing more than a text file listing mp3 and or other format digital audio files to be interpreted by player software as a series of audio files to be played in succession\n')

clob	xmltype	2
('clob', 'safer', 'xmltype', 'security', '11264861', 'a clob is a safer way to handle the soap request than an xmltype because the data returned may be longer than 32767 bytes\n')
('clob', 'safer way', 'xmltype', 'security', '11264861', 'a clob is a safer way to handle the soap request than an xmltype because the data returned may be longer than 32767 bytes\n')

vbscript	vb6	2
('vbscript', 'much more', 'vb6', '', '1124848', 'vbscript is much more convenient than creating an activex on vb6 or c# vb.net\n')
('vbscript', 'much more convenient', 'vb6', 'usability', '1124848', 'vbscript is much more convenient than creating an activex on vb6 or c# vb.net\n')

bit-shift	xor	2
('bit-shift', 'operators more information', 'xor', '', '22549562', 'the official tutorial on bitwise and bit-shift operators has more information about other related operators and xor left shift right shift\n')
('bit-shift', 'operators more', 'xor', '', '22549562', 'the official tutorial on bitwise and bit-shift operators has more information about other related operators and xor left shift right shift\n')

icmp	mtu	1
('icmp', 'greater', 'mtu', '', '17880950', 'what happen when icmp is disabled in an router and when packet size greater than mtu how the router fragments that packet\n')

jta	jms	1
('jta', 'more', 'jms', '', '5528145', 'you ll have to use jta if you need transactional access to more than one jms session\n')

ng-view	ng-controller	1
('ng-view', 'more', 'ng-controller', '', '25096138', 'unlike the ng-view it s possible that there are more than one ng-controller in the same page\n')

spreadsheetml	presentationml	2
('spreadsheetml', 'more', 'presentationml', '', '2481595', 'the one thing to keep in mind is that spreadsheetml is more similiar to presentationml than it is to wordprocessingml in file structure inside the package for every sheet there is a seperate file\n')
('spreadsheetml', 'more similiar', 'presentationml', '', '2481595', 'the one thing to keep in mind is that spreadsheetml is more similiar to presentationml than it is to wordprocessingml in file structure inside the package for every sheet there is a seperate file\n')

notepad++	sublimetext	2
('sublimetext', 'more customizable', 'notepad++', '', '12729127', 'i prefer sublimetext because it s a little more customizable than notepad++ but they re both great options and lighter than dreamweaver\n')
('notepad++', 'more broken', 'sublimetext', '', '10467472', 'notepad++ which is often recommended are even more broken than sublimetext 2 which i find to be pretty good actually\n')

onfocus	onclick	1
('onfocus', 'more appropriate', 'onclick', '', '23768046', 'also the onfocus event would be more appropriate than onclick because it handles other scenarios such as pressing the tab key to change the active input\n')

onresume	onpause	1
('onresume', 'more', 'onpause', '', '9647275', 'and you should not access vehicledataprovider before onresume in the life cylcle and no more after onpause\n')

tee	cat	2
('tee', 'then more data', 'cat', '', '25335034', 'tee then writes more data t and tries to read from the pipe then goes to sleep until cat writes more data\n')
('tee', 'then more', 'cat', '', '25335034', 'tee then writes more data t and tries to read from the pipe then goes to sleep until cat writes more data\n')

pbkdf2	scrypt	1
('pbkdf2', 'better option bcrypt', 'scrypt', 'usability', '13424062', 'pbkdf2 is arguably a better option than bcrypt scrypt having been much more thoroughly studied and tested\n')

random	prng	4
('random', 'less', 'prng', '', '7480271', 'then you use it as seed in random which is less good that one is a non-cryptographic prng and its output may exhibit some structure which will not register in a statistical measurement tool but might be exploited by an intelligent attacker\n')
('random', 'less good', 'prng', '', '7480271', 'then you use it as seed in random which is less good that one is a non-cryptographic prng and its output may exhibit some structure which will not register in a statistical measurement tool but might be exploited by an intelligent attacker\n')
('prng', 'more memory', 'random', 'memory', '16537763', 'but a large period prng takes up more memory for maintaining the internal state and also takes more time for generating a random number due to complex transitions and post processing\n')
('prng', 'more', 'random', '', '16537763', 'but a large period prng takes up more memory for maintaining the internal state and also takes more time for generating a random number due to complex transitions and post processing\n')

parfor	matlabpool	1
('parfor', 'less worker', 'matlabpool', '', '10800861', 'if you want to batch and parfor at the same time open one less worker with matlabpool than you otherwise would\n')

dsa	rsa	11
('rsa', 'older', 'dsa', '', '10115891', 'i guess rsa is older and dsa is newer\n')
('dsa', 'more compact', 'rsa', 'usability', '4599528', 'use dsa it tends to be more compact than rsa\n')
('dsa', 'less', 'rsa', '', '16525310', 'however in this case dsa key size is less than rsa key size\n')
('rsa', 'much slower', 'dsa', 'performance', '24689036', 'this is why rsa is much slower than dsa\n')
('rsa', 'slower', 'dsa', 'performance', '12594809', 'i have made some testing and it came out that rsa is lot slower than dsa\n')
('rsa', 'slower', 'dsa', 'performance', '24689036', 'this is why rsa is much slower than dsa\n')
('dsa', 'shorter', 'rsa', '', '2917821', 'dsa signatures are signficantly shorter than rsa ones\n')
('dsa', 'slower', 'rsa', 'performance', '7911156', 'however dsa verification expect verification calls to be 100x issue is about 10x slower than rsa verification\n')
('dsa', 'smaller', 'rsa', 'memory', '7911156', 'dsa has signature that is independent of key strength and is much smaller than rsa signature for equivalent security rsa 1024 1568 vs dsa 192\n')
('rsa', 'lot slower', 'dsa', 'performance', '12594809', 'i have made some testing and it came out that rsa is lot slower than dsa\n')
('dsa', 'faster', 'rsa', 'performance', '5868759', 'a dsa signature generation could be somewhat faster than a rsa signature generation maybe up to twice faster\n')

exception-handling	try-catch	3
('try-catch', 'more', 'exception-handling', '', '12951427', 'in general try-catch is more robust does not require you to define an exact position of where to test could be a block and provides info about the exception-handling\n')
('try-catch', 'more robust', 'exception-handling', 'reliability', '12951427', 'in general try-catch is more robust does not require you to define an exact position of where to test could be a block and provides info about the exception-handling\n')
('exception-handling', 'heavier', 'try-catch', '', '4571666', 'will hide the exception-handling and since dealing with exception-handling is heavier compared to a simple if t why isn t the normal new t not considered less good practice considering we will have to use try-catch to check if a simple allocation succeeded and if we don t just watch the program die\n')

kurtosis	variance	1
('kurtosis', 'more', 'variance', '', '14691778', 'for this measure higher kurtosis means more of the variance is the result of infrequent extreme deviations as opposed to frequent modestly sized deviations\n')

metaphone	soundex	7
('metaphone', 'more', 'soundex', '', '3940042', 'in php you should use metaphone it is more accurate than soundex\n')
('metaphone', 'better', 'soundex', '', '20066405', 'double metaphone - this algo will give you a better match than soundex at the cost of speed it is really good for spelling correction though\n')
('metaphone', 'much more accurate', 'soundex', 'performance', '9014069', 'general consensus including the php docs is that metaphone is much more accurate than soundex when dealing with the english language\n')
('metaphone', 'much more', 'soundex', '', '9014069', 'general consensus including the php docs is that metaphone is much more accurate than soundex when dealing with the english language\n')
('metaphone', 'more accurate', 'soundex', 'performance', '9014069', 'general consensus including the php docs is that metaphone is much more accurate than soundex when dealing with the english language\n')
('metaphone', 'more accurate', 'soundex', 'performance', '3940042', 'in php you should use metaphone it is more accurate than soundex\n')
('metaphone', 'better', 'soundex', '', '123076', 'edit double metaphone was specifically designed to be better than soundex and work in languages other than english\n')

wicket	jsf	2
('wicket', 'easier', 'jsf', 'usability', '2852664', 'i would advise you to try wicket it is very easy to learn much easier than jsf and it let s you re-use many existing components as well\n')
('wicket', 'faster', 'jsf', 'performance', '5381240', 'i m in the hate it part so anything i said is biased plus in our test prototypes developing in wicket was faster than jsf\n')

paperclip	carrierwave	5
('carrierwave', 'newer gem', 'paperclip', '', '8425110', 'carrierwave is a newer gem than paperclip and it looks a lot more flexible\n')
('carrierwave', 'newer', 'paperclip', '', '8425110', 'carrierwave is a newer gem than paperclip and it looks a lot more flexible\n')
('paperclip', 'more', 'carrierwave', '', '6050820', 'seems like paperclip is more file oriented and carrierwave is more object oriented\n')
('carrierwave', 'better', 'paperclip', '', '9966327', 'new to carrierwave already loving it so much better than paperclip\n')
('carrierwave', 'more popularity', 'paperclip', '', '9404822', 'carrierwave seems to be gaining more popularity than paperclip but most people seem to be on paperclip\n')

vim	textmate	4
('vim', 'more', 'textmate', '', '7923617', 'vim is more powerful and textmate is worth the price tag\n')
('vim', 'more powerful', 'textmate', 'usability', '7923617', 'vim is more powerful and textmate is worth the price tag\n')
('vim', 'much worse', 'textmate', '', '6181929', 'i like the idea of the of editing inside the terminal and like the key bindings of vim but the text highlighting in my vim is much worse than in textmate\n')
('vim', 'worse', 'textmate', '', '6181929', 'i like the idea of the of editing inside the terminal and like the key bindings of vim but the text highlighting in my vim is much worse than in textmate\n')

puremvc	robotlegs	1
('puremvc', 'faster', 'robotlegs', 'performance', '20356474', 'puremvc is generally much faster than robotlegs in terms of performance\n')

jxtable	jtable	3
('jxtable', 'better', 'jtable', '', '5796139', 'also is jxtable better than jtable for such an application\n')
('jxtable', 'more powerful', 'jtable', 'usability', '3231289', 'use swing-x components there is a jxtable which is more powerful than jtable\n')
('jxtable', 'more', 'jtable', '', '3231289', 'use swing-x components there is a jxtable which is more powerful than jtable\n')

flac	mp3	2
('flac', 'file newer', 'mp3', '', '2483418', 'if a flac file is newer than the corresponding mp3 file or the corresponding mp3 file doesn t exist then i want to run a bunch of commands to convert the flac file to an mp3 file and copy the tags across\n')
('flac', 'file newer', 'mp3', '', '2483182', 'if a flac file is newer than the corresponding mp3 file or the corresponding mp3 file doesn t exist then i want to run a bunch of commands to convert the flac file to an mp3 file and copy the tags across\n')

https	ssl	5
('ssl', 'always safer switch', 'https', 'security', '22101820', 'as last resort resolution i don t suggest this for security issues using ssl is always safer switch your registry to use http instead of https\n')
('https', 'more', 'ssl', '', '20815358', 'https is more flexible than ssl an application can configure the level of security it needs\n')
('https', 'more flexible', 'ssl', 'usability', '20815358', 'https is more flexible than ssl an application can configure the level of security it needs\n')
('ssl', 'always safer', 'https', 'security', '22101820', 'as last resort resolution i don t suggest this for security issues using ssl is always safer switch your registry to use http instead of https\n')
('https', 'more', 'ssl', '', '24386103', 'it could be a sni problem if you use any kind of load balancer https proxy or more than 1 ssl certificate on the same ip\n')

hmac	hash	2
('hmac', 'much faster', 'hash', 'performance', '20265257', 'after looking it s seems that hmac is much faster and better in term of security even if the underlying hash function sha1 is broken which is not the case when using rsa-sha1\n')
('hmac', 'better', 'hash', '', '1757465', 'hmac is better than a plain hash because it is not vulnerable to hash length extension attacks\n')

magento	expressionengine	1
('magento', 'any better', 'expressionengine', '', '9080288', 'thinking you can format magento blocks any better in a cms such as expressionengine and use magento just for the backend will put you on a hiding to nothing to end up with a fairly useless setup that isn t going to go anywhere\n')

war	jar	2
('war', 'more', 'jar', '', '7628932', 'i recently got this error with tomcat 7.0.21 on windows 7 when a war contained jars which had duplicate class definitions a class was defined in more than 1 jar within the war s web-inf lib directory\n')
('war', 'more packaging', 'jar', '', '10373580', 'i set up a maven multi module project one with packaging war two more with packaging jar\n')

uitableview	uipickerview	4
('uipickerview', 'nothing more', 'uitableview', '', '14856860', 'the uipickerview is nothing more than a uiview with one or more uitableview and background and selector views\n')
('uitableview', 'much more', 'uipickerview', '', '1440450', 'uitableview is much more customizable than uipickerview\n')
('uitableview', 'more customizable', 'uipickerview', '', '1440450', 'uitableview is much more customizable than uipickerview\n')
('uitableview', 'much more customizable', 'uipickerview', '', '1440450', 'uitableview is much more customizable than uipickerview\n')

geocode	geocoding	1
('geocode', 'more', 'geocoding', '', '7987892', 'can the geocode gem support more than one geocoding step\n')

nsstring	uilabel	1
('nsstring', 'less', 'uilabel', '', '23756258', 'but the problem i am facing if text is doted inside the label it calculates nsstring size less than uilabel size in the below code\n')

struct	typedef	2
('struct', 'clearer', 'typedef', '', '16279245', 'one camp most notably the linux kernel people thinks that struct a is clearer than the typedef\n')
('struct', 'foo easier', 'typedef', 'usability', '8422898', 'struct foo is easier to parse then typedef d foo as the name-lookup is simpler\n')

caliburn	viewmodel	1
('caliburn', 'even easier', 'viewmodel', 'usability', '11127247', 'with caliburn it is even easier since you just need to bind a property on your viewmodel to selecteditem\n')

stateful	stateless	9
('stateless', 'cluster often simpler then', 'stateful', 'usability', '10669327', 'dealing with a stateless cluster is often simpler then dealing with a stateful cluster\n')
('stateful', 'more appropriate', 'stateless', '', '1177422', 'do you have any situation where stateful is more appropriate than stateless\n')
('stateless', 'faster', 'stateful', 'performance', '4258298', 'for certain kinds of transactions a stateless session may perform slightly faster than a stateful session\n')
('stateless', 'better', 'stateful', '', '17227882', 'in ejb3 there is no such thing as stateless is better than stateful session beans\n')
('stateless', 'faster', 'stateful', 'performance', '5497077', 'for certain kinds of transactions a stateless session may perform slightly faster than a stateful session\n')
('stateless', 'better', 'stateful', '', '19457354', 'but keep in mind that in many cases being stateful or not stateless is no problem and not all stateless applications are by definition better than stateful ones\n')
('stateful', 'more', 'stateless', '', '1177422', 'do you have any situation where stateful is more appropriate than stateless\n')
('stateless', 'cluster often simpler', 'stateful', 'usability', '10669327', 'dealing with a stateless cluster is often simpler then dealing with a stateful cluster\n')
('stateful', 'service typically harder', 'stateless', '', '25236081', 'a stateful service is typically harder to develop and scale than stateless services\n')

multiplying	modulo	2
('multiplying', 'less', 'modulo', '', '17397158', 'also integer multiplying is less expensive so you may just do the divide first and calculate the modulo 10\n')
('multiplying', 'less expensive', 'modulo', '', '17397158', 'also integer multiplying is less expensive so you may just do the divide first and calculate the modulo 10\n')

llvm	clang	1
('llvm', 'code faster', 'clang', 'performance', '4628751', 'llvm compiles code faster than gcc may create code that runs faster and the clang frontend provides more accurate error messages than gcc â so there are definitely reasons for switching\n')

floyd-warshall	dijkstra	4
('floyd-warshall', 'more efficient', 'dijkstra', 'performance', '25250266', 'short answer floyd-warshall is more efficient in this case than naive application of dijkstra s\n')
('floyd-warshall', 'faster', 'dijkstra', 'performance', '11439561', 'no practically floyd-warshall is faster than dijkstra s for all pair shortest path generally\n')
('floyd-warshall', 'more', 'dijkstra', '', '25250266', 'short answer floyd-warshall is more efficient in this case than naive application of dijkstra s\n')
('floyd-warshall', 'better', 'dijkstra', '', '11778525', 'indeed floyd-warshall s algorithm is better than dijkstra s in this case the complexity for dijkstra is o m n 2 and in this problem m is much much higher than n so the o n 3 time complexity of floyd-warshall is better\n')

beautifulsoup	elementtree	2
('beautifulsoup', 'more', 'elementtree', '', '22599300', 'beautifulsoup is more forgiving in terms of well-formed xml structure see i had to edit the xml a bit to make things work for elementtree and it s actually much easier to work with\n')
('beautifulsoup', 'more forgiving', 'elementtree', '', '22599300', 'beautifulsoup is more forgiving in terms of well-formed xml structure see i had to edit the xml a bit to make things work for elementtree and it s actually much easier to work with\n')

aptana	dreamweaver	1
('aptana', 'better', 'dreamweaver', '', '8664117', 'i had previously used aptana 3 for a couple days and may have come to the conclusion that it is better than dreamweaver at actual html css coding\n')

imageview	textview	11
('imageview', 'smaller', 'textview', 'memory', '21051095', 'however the imageview has a smaller width than the textview\n')
('textview', 'length less', 'imageview', '', '17632868', 'i want to have another textview underneath these two but i am having a problem when the textview length is less than the imageview\n')
('imageview', 'taller', 'textview', '', '6869485', 'the imageview is bit taller than the textview and so what i do is add padding margins to the bottom of textview to get it align and look like the imageview and textview horizontal centers are aligned\n')
('imageview', 'bit taller', 'textview', '', '6869485', 'the imageview is bit taller than the textview and so what i do is add padding margins to the bottom of textview to get it align and look like the imageview and textview horizontal centers are aligned\n')
('imageview', 'bigger', 'textview', 'memory', '7799656', 'i have an imageview that is bigger than a textview and i want to center the textview on top of the imageview both vertically and horizontally\n')
('imageview', 'bigger', 'textview', 'memory', '24720677', 'assuming the imageview is always bigger than the textview it ll drive the parent height\n')
('textview', 'higher', 'imageview', '', '20312493', 'in this case if textview is higher then imageview imageview aspect ratio should be intact with max width possible and if imageview i higher then textview again width should be maximal and parent should have height as imageview\n')
('textview', 'less', 'imageview', '', '17632868', 'i want to have another textview underneath these two but i am having a problem when the textview length is less than the imageview\n')
('imageview', 'smaller width', 'textview', 'memory', '21051095', 'however the imageview has a smaller width than the textview\n')
('imageview', 'always bigger', 'textview', 'memory', '24720677', 'assuming the imageview is always bigger than the textview it ll drive the parent height\n')
('textview', 'higher then', 'imageview', '', '20312493', 'in this case if textview is higher then imageview imageview aspect ratio should be intact with max width possible and if imageview i higher then textview again width should be maximal and parent should have height as imageview\n')

realloc	malloc	5
('realloc', 'worse', 'malloc', '', '7188551', 'realloc is worse than malloc in that you will need to have the old and new pointers valid during the realloc\n')
('malloc', 'often more memory', 'realloc', 'memory', '21358484', 'malloc often gives you more memory that you ask and stores the actual value in a special location that realloc can access at a later time\n')
('realloc', 'faster', 'malloc', 'performance', '3108761', 'a realloc can occur significantly faster than a malloc memcpy and free\n')
('realloc', 'more memory', 'malloc', 'memory', '4190023', 'that s why realloc can temporarily require more memory than a malloc free pair\n')
('malloc', 'often more', 'realloc', '', '21358484', 'malloc often gives you more memory that you ask and stores the actual value in a special location that realloc can access at a later time\n')

pygtk	wxpython	2
('pygtk', 'lighter', 'wxpython', 'memory', '2502963', 'also pygtk is lighter than wxpython but i ended up bitting the bullet and using wxpython for the same purpose recently it is heavy but it didn t have any affect on the script performance\n')
('wxpython', 'better', 'pygtk', '', '3165474', 'thanks to opencv i managed to rewrite everything with wxpython which i know better than pygtk\n')

coalesce	sum	1
('coalesce', 'less', 'sum', '', '960774', 'i m pretty sure the linker will coalesce equivalent strings so the total will be less than the sum of the parts for these sections but i guess typically not by much\n')

imshow	contourf	1
('imshow', 'more sense', 'contourf', '', '20146989', 'as an example of the second option i ll use imshow here because it makes more sense than contourf for random data but contourf would have identical usage other than the interpolation option.\n')

bottle	flask	1
('bottle', 'better', 'flask', '', '10777923', 'i d totally go with flask unless one dependency bottle is better than three flask jinja2 and werkzeug\n')

sorcery	devise	3
('sorcery', 'less obscure', 'devise', '', '23384179', 'check out sorcery it s more lightweight and less obscure than devise\n')
('sorcery', 'more', 'devise', '', '23384179', 'check out sorcery it s more lightweight and less obscure than devise\n')
('sorcery', 'more lightweight', 'devise', 'memory', '23384179', 'check out sorcery it s more lightweight and less obscure than devise\n')

comparator	comparable	1
('comparator', 'class better', 'comparable', '', '13545953', 'a comparator class is better since use of comparable would mean using\n')

passenger	thin	2
('passenger', 'less', 'thin', '', '21745505', 'memory optimizations - phusion passenger uses less memory than thin and unicorn\n')
('passenger', 'less memory', 'thin', 'memory', '21745505', 'memory optimizations - phusion passenger uses less memory than thin and unicorn\n')

prefuse	jung	2
('prefuse', 'better layout', 'jung', '', '4670846', 'somehow the layout algorithms in prefuse seem to display a better layout than in jung rendering is also better i think though most of the layout algorithms in prefuse are based on jung implementation\n')
('jung', 'rendering also better', 'prefuse', '', '4670846', 'somehow the layout algorithms in prefuse seem to display a better layout than in jung rendering is also better i think though most of the layout algorithms in prefuse are based on jung implementation\n')

vhdl	verilog	7
('vhdl', 'more', 'verilog', '', '177565', 'vhdl is more popular in europe and verilog is dominating in the us\n')
('vhdl', 'more feature-rich', 'verilog', '', '178555', 'yes vhdl was once much more feature-rich than verilog but later revisions of the language verilog 2001 verilog 2005 systemverilog etc.. have cherry-picked most of the interesting features and there is far more robust toolchain support for verilog and its variant these days in addition to it being the dominant language in use in the us in my experience vhdl is only used here when dealing with extreme legacy blocks and in academic contexts partially due to the tools support mentioned previously\n')
('verilog', 'shorter fact equivalent', 'vhdl', '', '15961408', 'my experience is that designers can use whichever they prefer usually and most agree that verilog is easier to use and the code is shorter fact than equivalent vhdl\n')
('vhdl', 'more widely-used', 'verilog', '', '4987325', 'by these numbers and only these numbers vhdl seems to be more widely-used than verilog\n')
('verilog', 'less common', 'vhdl', '', '764074', 'pacoblaze was written in verilog which like adam said less common than vhdl\n')
('verilog', 'easier', 'vhdl', 'usability', '15961408', 'my experience is that designers can use whichever they prefer usually and most agree that verilog is easier to use and the code is shorter fact than equivalent vhdl\n')
('vhdl', 'more popular', 'verilog', 'usability', '177565', 'vhdl is more popular in europe and verilog is dominating in the us\n')

dotnetzip	sharpziplib	4
('dotnetzip', 'more permissive', 'sharpziplib', '', '3860490', 'i used it because it is small 6 kb compiled with just the extraction making it far smaller than dotnetzip which is more than 150 kb and is more permissive than sharpziplib\n')
('dotnetzip', 'much easier', 'sharpziplib', 'usability', '10643602', 'dotnetzip is much easier to use than sharpziplib example of zipping all files in folder\n')
('dotnetzip', 'more flexible', 'sharpziplib', 'usability', '3046580', 'dotnetzip offers native support and has a quite friendly api and is my opinion more flexible than sharpziplib\n')
('dotnetzip', 'more', 'sharpziplib', '', '3860490', 'i used it because it is small 6 kb compiled with just the extraction making it far smaller than dotnetzip which is more than 150 kb and is more permissive than sharpziplib\n')

irrlicht	ogre	3
('irrlicht', 'better', 'ogre', '', '19394943', 'irrlicht is no way better than ogre 3d or am not trying to prove that\n')
('irrlicht', 'cleaner', 'ogre', '', '151399', 'irrlicht has a cleaner api lower system requirements and works better across platforms than ogre in my opinion\n')
('irrlicht', 'cleaner api', 'ogre', '', '151399', 'irrlicht has a cleaner api lower system requirements and works better across platforms than ogre in my opinion\n')

oxygene	delphi	1
('oxygene', 'much better', 'delphi', '', '15781281', 'right now oxygene is much better as it supports a broader set of language and platform features than delphi .net ever did\n')

valgrind	gprof	1
('valgrind', 'more information', 'gprof', '', '11952551', 'another important difference is that valgrind can report a lot more information than gprof does but that s not specifically related to using it\n')

ratingbar	textview	2
('ratingbar', 'smaller', 'textview', 'memory', '19805199', 'the thing is like ratingbar is smaller than the textview i don t get a correct aligment\n')
('ratingbar', 'smaller', 'textview', 'memory', '19805576', 'unfortunately i dont understand what you mean by stating ratingbar is smaller than textview\n')

stargazer	latex	1
('stargazer', 'more general', 'latex', '', '22337804', 'stargazer is at least in my experience more general than latex from hmisc\n')

murmurhash	md5	1
('murmurhash', 'way faster', 'md5', 'performance', '17963853', 'but as that reference points out murmurhash is way faster than md5 and sha functions although it doesn t do a direct comparison to the object.gethashcode method i mentioned above\n')

carrierwave	fog	1
('carrierwave', 'much faster', 'fog', 'performance', '9817544', 'i ve read that carrierwave is much faster without using fog\n')

tokudb	innodb	1
('tokudb', 'faster', 'innodb', 'performance', '5691542', 'i use tokudb on tables of up to 18 billion rows and nothing else comes close it s at least 100 times faster than innodb for random inserts on big tables\n')

glut	sdl	6
('glut', 'much more easier', 'sdl', 'usability', '4115361', 'glut is much more easier while many of people use sdl or sfml they re more flexible and feature-full than glut\n')
('glut', 'better', 'sdl', '', '2842963', 'if you re building a simple demo of a rendering mechanism glut is way better than sdl it takes care of a lot of the details that sdl would otherwise require\n')
('glut', 'much more', 'sdl', '', '4115361', 'glut is much more easier while many of people use sdl or sfml they re more flexible and feature-full than glut\n')
('sdl', 'more likely', 'glut', '', '2842963', 'however if you re developing a serious application sdl is more likely to be the tool you need to use as glut abstracts more than a real application would normally want to\n')
('glut', 'way better', 'sdl', '', '2842963', 'if you re building a simple demo of a rendering mechanism glut is way better than sdl it takes care of a lot of the details that sdl would otherwise require\n')
('sdl', 'more', 'glut', '', '2842963', 'however if you re developing a serious application sdl is more likely to be the tool you need to use as glut abstracts more than a real application would normally want to\n')

httpd.conf	.htaccess	2
('httpd.conf', 'faster', '.htaccess', 'performance', '9329982', 'using apaches httpd.conf is faster since accessing the .htaccess adds a small overheadâ apache checks every directoryâ and parent directoryâ for the file and it will be loaded for every request\n')
('httpd.conf', 'better results', '.htaccess', '', '21095965', 'instead of mucking with httpd.conf you might get better results with .htaccess\n')

ogre3d	irrlicht	1
('ogre3d', 'more mature', 'irrlicht', '', '4617930', 'ogre3d seems to be more mature than irrlicht judging by the amount of applications and games that is\n')

d3.js	raphael	8
('d3.js', 'better', 'raphael', '', '15222464', 'as it stands d3.js is not just better than raphael and processing in many cases but is also a viable replacement for jquery underscore.js and other frameworks\n')
('raphael', 'older', 'd3.js', '', '17030537', 'the only place where raphael defeats d3.js is fallback raphael supports older versions of ie where as d3.js is based on current web standards ie 9\n')
('raphael', 'older versions', 'd3.js', '', '17949657', 'raphael supports older versions of ie whereas d3.js is based on current web standards\n')
('d3.js', 'much harder', 'raphael', '', '15222464', 'd3.js is much harder to learn than raphael but in both cases you will also have to learn svg to be able to create better animations\n')
('raphael', 'older', 'd3.js', '', '22607139', 'this should be possible maybe be aware snap.svg isn t so compatible with older browsers in which case you could look at raphael which is snaps older brother d3.js is very well established as well\n')
('raphael', 'older brother', 'd3.js', '', '22607139', 'this should be possible maybe be aware snap.svg isn t so compatible with older browsers in which case you could look at raphael which is snaps older brother d3.js is very well established as well\n')
('raphael', 'older', 'd3.js', '', '17949657', 'raphael supports older versions of ie whereas d3.js is based on current web standards\n')
('raphael', 'older versions', 'd3.js', '', '17030537', 'the only place where raphael defeats d3.js is fallback raphael supports older versions of ie where as d3.js is based on current web standards ie 9\n')

adventureworks	northwind	1
('adventureworks', 'better', 'northwind', '', '597847', 'talk about sql server 2005 adventureworks is better than northwind\n')

boxlayout	gridbaglayout	4
('boxlayout', 'easier', 'gridbaglayout', 'usability', '1905090', 'boxlayout is far easier than gridbaglayout because you don t have to learn how to specify constraints\n')
('gridbaglayout', 'easier', 'boxlayout', 'usability', '23051038', 'although madprogrammers comment to use a gridbaglayout is an easier solution but knowing about glue and struts can be helpful for customizing the layout of a boxlayout\n')
('boxlayout', 'far easier', 'gridbaglayout', 'usability', '1905090', 'boxlayout is far easier than gridbaglayout because you don t have to learn how to specify constraints\n')
('gridbaglayout', 'easier solution', 'boxlayout', 'usability', '23051038', 'although madprogrammers comment to use a gridbaglayout is an easier solution but knowing about glue and struts can be helpful for customizing the layout of a boxlayout\n')

btrace	profiler	2
('btrace', 'overhead far less', 'profiler', 'performance', '13726773', 'in my experience btrace overhead is far less noticeable than any profiler depending on activity of course - if you want to trace execution of all methods this will be expensive no matter what\n')
('btrace', 'overhead far less noticeable', 'profiler', 'performance', '13726773', 'in my experience btrace overhead is far less noticeable than any profiler depending on activity of course - if you want to trace execution of all methods this will be expensive no matter what\n')

screens	hdpi	5
('screens', 'less', 'hdpi', '', '11429933', 'so as i said - mdpi also doesn t means that your screens resolution is less than hdpi screens resolution\n')
('screens', 'greater dpi', 'hdpi', '', '5428091', 'edit - now that i think about it i m not sure why your image would appear smaller unless your screens had a greater dpi than hdpi\n')
('hdpi', 'more', 'screens', '', '6366076', 'even if i create three versions for ldpi mdpi and hdpi there are more than screens resolutions in that table if there is no matching image it will scale my image and may not retain the aspect ratio\n')
('screens', 'larger', 'hdpi', 'memory', '4885845', 'if in java code the values would be in pixels so 50px on mdpi screens will look larger than on hdpi screens\n')
('screens', 'resolution less', 'hdpi', '', '11429933', 'so as i said - mdpi also doesn t means that your screens resolution is less than hdpi screens resolution\n')

swt	styledtext	2
('swt', 'package harder', 'styledtext', '', '23455654', 'but adding a class to swt package seems harder first because there is different jars depending on the operating system used org.eclipse.swt.cocoa org.eclipse.swt.gtk .... and also because copy pasting the code of styledtext is not that easy since there is call to external methods waiting for a strict styledtext\n')
('swt', 'package harder first', 'styledtext', '', '23455654', 'but adding a class to swt package seems harder first because there is different jars depending on the operating system used org.eclipse.swt.cocoa org.eclipse.swt.gtk .... and also because copy pasting the code of styledtext is not that easy since there is call to external methods waiting for a strict styledtext\n')

sorting	filtering	7
('sorting', 'longer', 'filtering', '', '7274114', 'but right now the sorting step is taking way longer than the filtering step so i would like to combine them in some way\n')
('filtering', 'less expensive', 'sorting', '', '2911817', 'filtering is a lot less expensive than sorting\n')
('sorting', 'cheaper', 'filtering', '', '1172381', 'if your author field is selective and sorting is cheaper than filtering\n')
('sorting', 'more', 'filtering', '', '25252630', 'sorting is more important to me than filtering so if i have to have both sorting and filtering target the same representation of the data i ll just give up on filtering working\n')
('filtering', 'faster', 'sorting', 'performance', '6654141', 'in terms of your speed query i d propose that your pseudomedian filtering is faster because it doesn t involve sorting\n')
('filtering', 'slower just', 'sorting', 'performance', '7274258', 'if almost all elements fail the filtering then it s considerably slower than just sorting everything since you ll end up selecting thousands of times\n')
('sorting', 'more important', 'filtering', '', '25252630', 'sorting is more important to me than filtering so if i have to have both sorting and filtering target the same representation of the data i ll just give up on filtering working\n')

putimagedata	drawimage	11
('drawimage', 'faster', 'putimagedata', 'performance', '13668442', 'drawimage seems to be much faster than putimagedata\n')
('drawimage', 'slower', 'putimagedata', 'performance', '17406346', 'the only problem that as far as i know using drawimage is slower than using putimagedata and it was required in old browser versions like firefox 2 or such\n')
('putimagedata', 'more performant', 'drawimage', '', '22793378', 'is putimagedata ... more performant than drawimage ...\n')
('putimagedata', 'slower', 'drawimage', 'performance', '7074620', 'that beeing said putimagedata is much slower than drawimage at least when i tested them earlier this year\n')
('drawimage', 'faster', 'putimagedata', 'performance', '7722892', 'as of right now drawimage is much faster than putimagedata\n')
('drawimage', 'function really faster', 'putimagedata', 'usability', '14511199', 'i have seen that the drawimage function is really faster than the putimagedata\n')
('putimagedata', 'slower', 'drawimage', 'performance', '7380496', 'right now putimagedata is much slower than drawimage as you can see here\n')
('drawimage', 'much faster', 'putimagedata', 'performance', '7722892', 'as of right now drawimage is much faster than putimagedata\n')
('putimagedata', 'much slower', 'drawimage', 'performance', '7380496', 'right now putimagedata is much slower than drawimage as you can see here\n')
('drawimage', 'faster', 'putimagedata', 'performance', '14511199', 'i have seen that the drawimage function is really faster than the putimagedata\n')
('putimagedata', 'much slower', 'drawimage', 'performance', '7074620', 'that beeing said putimagedata is much slower than drawimage at least when i tested them earlier this year\n')

timsort	quicksort	4
('timsort', 'faster', 'quicksort', 'performance', '7786914', 'if that is so you might find that timsort runs faster than quicksort\n')
('timsort', 'less comparison', 'quicksort', '', '21807889', 'if it is true then timsort will always take less comparison than quicksort because on real life data there is some pattern except data is truly random\n')
('timsort', 'better', 'quicksort', '', '12455892', 'you can take a look at timsort which for non completely random data performs better than quicksort they have the same asymptotic complexity but timsort has lower constants\n')
('timsort', 'better', 'quicksort', '', '23340978', 'java s array .sort is from about java 6 actually timsort the fastest general purpose #sort out there much better than quicksort in many situations\n')

operator-precedence	logical-or	3
('operator-precedence', 'logical-and higher', 'logical-or', '', '21345748', 'according to the mdn operator-precedence logical-and has a higher precidence over logical-or suggesting that the condition is evaluated as if were a single statement which then moves on to determine the boolean condition of false || true which is then true\n')
('operator-precedence', 'higher precidence', 'logical-or', '', '21345748', 'according to the mdn operator-precedence logical-and has a higher precidence over logical-or suggesting that the condition is evaluated as if were a single statement which then moves on to determine the boolean condition of false || true which is then true\n')
('operator-precedence', 'logical-and higher precidence', 'logical-or', '', '21345748', 'according to the mdn operator-precedence logical-and has a higher precidence over logical-or suggesting that the condition is evaluated as if were a single statement which then moves on to determine the boolean condition of false || true which is then true\n')

jmock	junit	1
('jmock', 'things easier', 'junit', 'usability', '10572775', 'the later version of jmock makes things easier by integrating with the junit lifecycle as a runner\n')

imagemagick	libjpeg	1
('imagemagick', 'slower', 'libjpeg', 'performance', '965313', 'basically imagemagick was only slightly slower than libjpeg\n')

outputstream	inputstream	3
('outputstream', 'much less', 'inputstream', '', '17035499', 'what i did not expect is that outputstream is much less bytes than inputstream although i have yet to make any modification on doc\n')
('outputstream', 'less bytes', 'inputstream', '', '17035499', 'what i did not expect is that outputstream is much less bytes than inputstream although i have yet to make any modification on doc\n')
('outputstream', 'much less bytes', 'inputstream', '', '17035499', 'what i did not expect is that outputstream is much less bytes than inputstream although i have yet to make any modification on doc\n')

ubuntu	linux	5
('ubuntu', 'fuser', 'linux', '', '4925111', 'one one ubuntu distro fuser -n tcp 3000 will report a process if i own the process yet on another linux distro i think centos it won t report the process even if i own it\n')
('ubuntu', 'closer', 'linux', '', '68674', 'ubuntu is getting closer but there are still numerous things with linux that will keep the grandmothers of the world from using it\n')
('ubuntu', 'fuser -n', 'linux', '', '4925111', 'one one ubuntu distro fuser -n tcp 3000 will report a process if i own the process yet on another linux distro i think centos it won t report the process even if i own it\n')
('ubuntu', 'easier other', 'linux', 'usability', '1383228', 'although if you aren t interested in using adobe cs you can use ubuntu distro which is easier than other linux distro and quiet popular so you won t have any problem finding solution\n')
('linux', 'distribution far more', 'ubuntu', '', '3281759', 'sometimes a linux distribution contains far more than an operating system but is informally referred to by a single name such as ubuntu and so the line between what the operating system is the linux kernel and standard libraries perhaps and the applications that merely ship with that operating system the gnome and kde environments on linux is pretty gray\n')

declarative	imperative	9
('imperative', 'fewer', 'declarative', '', '12196486', 'traditionally there was a huge difference in speed imperative has fewer overheads because it s more directly like the computer works but some more modern compilers of declarative code seem to be in the top few of the speed tables a lot of the time - compiled verses interpreted makes a much bigger difference than imperative vs declarative which is why python etc are often slower even though they re imperative\n')
('imperative', 'machine much cheaper', 'declarative', '', '8909591', 'while it is possible to explore non-imperative computer concepts it doesn t seem to be worth the effort at the current time - building a declarative machine as an interpreter on top of an imperative machine is much cheaper and faster than a true declarative machine\n')
('declarative', 'code better', 'imperative', '', '14346528', 'angular is built around the belief that declarative code is better than imperative when it comes to building uis and wiring software components together.\n')
('declarative', 'simpler', 'imperative', 'usability', '19199806', 'declarative programming is not always simpler than imperative programming\n')
('declarative', 'better', 'imperative', '', '14346528', 'angular is built around the belief that declarative code is better than imperative when it comes to building uis and wiring software components together.\n')
('declarative', 'code easier', 'imperative', 'usability', '382518', 'declarative code is easier to make bug-free than imperative code\n')
('declarative', 'bigger difference', 'imperative', 'memory', '12196486', 'traditionally there was a huge difference in speed imperative has fewer overheads because it s more directly like the computer works but some more modern compilers of declarative code seem to be in the top few of the speed tables a lot of the time - compiled verses interpreted makes a much bigger difference than imperative vs declarative which is why python etc are often slower even though they re imperative\n')
('imperative', 'fewer overheads', 'declarative', '', '12196486', 'traditionally there was a huge difference in speed imperative has fewer overheads because it s more directly like the computer works but some more modern compilers of declarative code seem to be in the top few of the speed tables a lot of the time - compiled verses interpreted makes a much bigger difference than imperative vs declarative which is why python etc are often slower even though they re imperative\n')
('declarative', 'way cleaner', 'imperative', '', '21401916', 'i know that declarative way is cleaner but sometimes imperative programming makes your business safer\n')

lift	wicket	1
('lift', 'less verbose', 'wicket', '', '3241030', 'lift s ajax support is far less verbose than wicket s\n')

affinity	cpu	2
('affinity', 'more', 'cpu', '', '22259309', 'the cpu affinity is more like a suggestion to the kernel regarding which cpu to use\n')
('affinity', 'better', 'cpu', '', '15037998', 'cpu affinity it s better for the cpu to have a load average of 1.0 and processes to have affinity to a single core\n')

jpgraph	phpgraphlib	2
('jpgraph', 'far more', 'phpgraphlib', '', '14926288', 'jpgraph has far more capabilities than phpgraphlib\n')
('jpgraph', 'far more capabilities', 'phpgraphlib', 'usability', '14926288', 'jpgraph has far more capabilities than phpgraphlib\n')

web.py	django	5
('web.py', 'more', 'django', '', '11982403', 'web.py is more low-level comparing with django\n')
('web.py', 'more suitable', 'django', '', '18149831', 'i m new to sever-side programming.some people told me that web.py is more suitable for beginners like me than django\n')
('web.py', 'more', 'django', '', '18149831', 'i m new to sever-side programming.some people told me that web.py is more suitable for beginners like me than django\n')
('web.py', 'easier', 'django', 'usability', '4759565', 'web.py has a templating language of it s own it looks easier than django s\n')
('web.py', 'more low-level', 'django', '', '11982403', 'web.py is more low-level comparing with django\n')

iodbc	unixodbc	1
('iodbc', 'better luck', 'unixodbc', '', '17328798', 'the iodbc included with os x has some things that are listed as deprecated and i ve had better luck with unixodbc in the past\n')

icefaces	richfaces	10
('richfaces', 'better ajax', 'icefaces', '', '3252727', 'richfaces has better ajax support than icefaces\n')
('icefaces', 'better', 'richfaces', '', '1014688', 'that said i found icefaces to be a useful product and much better than richfaces especially in terms of the quality of the documentation\n')
('icefaces', 'more', 'richfaces', '', '3252727', 'icefaces provides more good looking components than richfaces\n')
('icefaces', 'more good', 'richfaces', '', '3252727', 'icefaces provides more good looking components than richfaces\n')
('icefaces', 'more semantic support', 'richfaces', 'usability', '69545', 'there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n')
('richfaces', 'better', 'icefaces', '', '3252727', 'richfaces has better ajax support than icefaces\n')
('icefaces', 'more semantic', 'richfaces', '', '69545', 'there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n')
('richfaces', 'more good', 'icefaces', '', '1465066', 'richfaces looks more good option to work than icefaces bcoz it has inbuilt support its easy to learn its long time support guarantee for seam+richfaces combination\n')
('richfaces', 'more', 'icefaces', '', '1465066', 'richfaces looks more good option to work than icefaces bcoz it has inbuilt support its easy to learn its long time support guarantee for seam+richfaces combination\n')
('icefaces', 'more', 'richfaces', '', '69545', 'there is icefaces which provides more semantic support than richfaces .also you can try nitobi suite which also provides similar kinda solution.if you are not satisfied with any of these i suggest try to write your own part extending the sun faces\n')

microchip	avr	5
('avr', 'more', 'microchip', '', '6824099', 'as far as easy goes they are both equivalent in terms of difficulty both provide assembly and c except that the gnu toolchain for avr is more complex than microchip because it requires use of unix command line etc\n')
('microchip', 'more successful', 'avr', '', '6824099', 'microchip is more successful in industry and has better tools than avr\n')
('microchip', 'better tools', 'avr', '', '6824099', 'microchip is more successful in industry and has better tools than avr\n')
('avr', 'more complex', 'microchip', 'usability', '6824099', 'as far as easy goes they are both equivalent in terms of difficulty both provide assembly and c except that the gnu toolchain for avr is more complex than microchip because it requires use of unix command line etc\n')
('microchip', 'more', 'avr', '', '6824099', 'microchip is more successful in industry and has better tools than avr\n')

font-size	fontfamily	1
('font-size', 'lesser', 'fontfamily', '', '6409986', 'the actual visible size is determined by the font-size and to a lesser extend by the fontfamily\n')

push	pull	15
('pull', 'request more features', 'push', 'usability', '12109797', 'i create new branch add those new features and than i once again made pull request but now the features i implemented in the master branch are also in my new branch so my second pull request has more features than i want to push to the original project\n')
('push', 'better', 'pull', '', '20215538', 'alone push is better in the accepted answer can t quite work as a push-operation in some class can require a new pull at the pushed object\n')
('pull', 'model better', 'push', '', '2350342', 'the reason the pull model works better than the push model in this case is as follow\n')
('pull', 'better', 'push', '', '2350342', 'the reason the pull model works better than the push model in this case is as follow\n')
('pull', 'better', 'push', '', '7555572', 'is the performance of pull better than push in this scenario\n')
('push', 'better', 'pull', '', '3585336', 'how are push notification better than pull notification on iphones\n')
('push', 'safer force', 'pull', 'security', '4674677', 'tortoise now has an option push new branch that may be safer than force pull or push\n')
('pull', 'better', 'push', '', '7742259', 'pull subscriptions perform much better than push subscriptions in a wan scenario\n')
('push', 'far more scalable', 'pull', '', '912233', 'why do you think that push is far more scalable then pull for starters\n')
('push', 'far more', 'pull', '', '912233', 'why do you think that push is far more scalable then pull for starters\n')
('push', 'higher throughput', 'pull', '', '10728510', 'push models have higher throughput than pull models\n')
('pull', 'more', 'push', '', '1768222', 'i have found that pull is more scalable than push\n')
('pull', 'request more', 'push', '', '12109797', 'i create new branch add those new features and than i once again made pull request but now the features i implemented in the master branch are also in my new branch so my second pull request has more features than i want to push to the original project\n')
('pull', 'more scalable', 'push', '', '1768222', 'i have found that pull is more scalable than push\n')
('pull', 'model definitely easier', 'push', 'usability', '9999184', 'a heartbeat mechanism pull model is definitely easier to implement but a push model is far more efficient\n')

qabstracttablemodel	qabstractitemmodel	1
('qabstracttablemodel', 'more specialized interface', 'qabstractitemmodel', '', '20298589', 'well obviously you created an implementation qabstracttablemodel which has a little bit more specialized interface than qabstractitemmodel\n')

width	margin	25
('width', 'clipping earlier', 'margin', '', '15982149', 'so it would also be possible to have all three textblock columns starsized but that means width clipping does occur earlier and there is more margin\n')
('margin', 'wider', 'width', '', '16430191', 'another option is not to float the main content column but instead assuming it s the right column to give it a large left margin that is slightly wider than the width of the left column\n')
('margin', 'more', 'width', '', '13059986', 'you re negative margin is more than half the viewport width of an iphone therefore it is dragging it out of view\n')
('margin', 'greater', 'width', '', '5555847', 'a common solution is to float your fixed-width column left or right and give the other column a margin equal or greater than the width of the fixed-width column\n')
('margin', 'slightly wider', 'width', '', '16430191', 'another option is not to float the main content column but instead assuming it s the right column to give it a large left margin that is slightly wider than the width of the left column\n')
('margin', 'bigger', 'width', 'memory', '6746105', 'the box is never too small infact the margin of the adjacent div is bigger than the width of ul div\n')
('margin', 'less', 'width', '', '19968815', 'just so you know you want the total width object width + padding + margin + border of both columns to be less than the width of the container\n')
('margin', 'less', 'width', '', '22302383', 'instead of the reaching 100 width the margin is causing less width for them due to the 20px x 12\n')
('margin', 'animation longer', 'width', '', '23095425', 'my guess is that they are technically happening simultaneously but that the margin animation takes longer to complete than the width animation\n')
('margin', 'greater', 'width', '', '5494802', 'the title goes in a h1 for example and the text in a p or div so set these two elements to have a left margin greater than the width of image a\n')
('margin', 'greater', 'width', '', '18518651', 'you can try giving an id to each one of the divs or style them for margin that is greater than or equal to the image width.assuming you image width is 50px this code shall work\n')
('margin', 'size greater', 'width', 'memory', '7190768', 'the first-child column has 10 pixels or whatever the margin size is greater content area width than it s siblings\n')
('margin', 'size greater content', 'width', 'memory', '7190768', 'the first-child column has 10 pixels or whatever the margin size is greater content area width than it s siblings\n')
('margin', 'greater', 'width', '', '1567157', 'give the sample text div a right margin greater than the width of the right-floated element\n')
('margin', 'less', 'width', '', '17646403', 'this means they won t float next to one another unless you set the width of each so that the combined width + margin + border + padding of both blocks is equal to or less than the width of the container\n')
('margin', 'bigger', 'width', 'memory', '26513621', 'when i launch it with firefox or internet explorer the box gets immediately to a huge distance from the margin much bigger than the width of the screen and now i noticed that if i run it with stackoverflow s snippet function the box does not move\n')
('width', 'nicer', 'margin', '', '604314', 'edit someone else suggested css and i believe that using the height and width directives from css will give you the same result as using the same attributes of the tag but doesn t limit you strictly to images and a will play nicer with any margin or padding directives you might use\n')
('width', 'less', 'margin', '', '14087592', 'essentially my logic is when the window is re-sized and the width is less than 810px then remove all css styling and add margin top items 2 through infinity\n')
('margin', 'more', 'width', '', '25428575', 'and if they aren t next to eachother that means your padding and margin is more than the 5 width of total width so reduce them\n')
('margin', 'bigger', 'width', 'memory', '9126839', 'anyway i just set the margin to a value a little bigger than the width of the image and overlap is eliminated only in the very specific case we want\n')
('margin', 'greater', 'width', '', '15830195', 'i m using the function window .resize to detect if the total width of all open windows plus some margin is greater than the window s width then hide the first chat window or show the last one if there s space for more windows\n')
('margin', 'larger', 'width', 'memory', '10486251', 'by giving the middle indicators div a left and right margin slightly larger than the width of the left and right button divs you allow it to float up between the two and take up as much space as possible\n')
('width', 'more', 'margin', '', '15199420', '50 width is more than enough for the images to fit even with the image margin\n')
('margin', 'greater', 'width', '', '17308362', 'once the negative margin is equal or greater than the width of that element further negative margin has no effect\n')
('width', 'more div', 'margin', '', '17188618', 'how to place 2 div side by side one div is of 75 width and the other is 25 width.one more div with margin 0 auto\n')

quicksort	radix-sort	3
('quicksort', 'more popular', 'radix-sort', 'usability', '24519734', 'which of the two consumes more memory is not defined and depends on the input sequence to be sorted as well as on algorithm tuning parameters see the comments to one of the answers to why quicksort is more popular than radix-sort\n')
('quicksort', 'more common', 'radix-sort', '', '3539265', 'why quicksort or introsort or any comparison-based sorting algorithm is more common than radix-sort\n')
('quicksort', 'more', 'radix-sort', '', '24519734', 'which of the two consumes more memory is not defined and depends on the input sequence to be sorted as well as on algorithm tuning parameters see the comments to one of the answers to why quicksort is more popular than radix-sort\n')

hex	binary	18
('hex', 'representation better way', 'binary', '', '484066', 'it seems the from a readability and usability standpoint the hex representation is a better way of defining binary numbers\n')
('hex', 'easier', 'binary', 'usability', '23532067', 'but when anyone human looks at it they look at it in hex using a hex editor which is much easier than reading binary\n')
('hex', 'numbers larger', 'binary', 'memory', '12679024', 'those hex values seem a bit odd they re powers of two in decimal but in any case 0x128 the 0x is a standard prefix for hex numbers is the larger of the numbers in magnitude and its binary representation is 100101000\n')
('hex', 'representation better', 'binary', '', '484066', 'it seems the from a readability and usability standpoint the hex representation is a better way of defining binary numbers\n')
('hex', 'much more', 'binary', '', '21578250', 'and because hex is much more readable and useful than binary - it s often used and shown\n')
('hex', 'somewhat more readable', 'binary', 'usability', '1712946', 'hex is somewhat more readable than binary if i happen to be loading a data dump in a text editor etc\n')
('hex', 'just less', 'binary', '', '484849', 'hex is just less verbose and can express anything a binary number can\n')
('hex', 'easier', 'binary', 'usability', '15667899', '- i usually find debugging memory in hex x command is easier than binary so i will not use my solution\n')
('hex', 'more readable', 'binary', 'usability', '1712946', 'hex is somewhat more readable than binary if i happen to be loading a data dump in a text editor etc\n')
('binary', 'even simpler', 'hex', 'usability', '12081779', 'the conversion from hex to binary is even simpler since you can simply expand each hex digit into the corresponding binary for example 0xa4 - 1010 0100\n')
('hex', 'more', 'binary', '', '12081888', 'converting between decimal and hex is more involving and at least to me it s been easier if i have to do it in my head to first convert the decimal into binary representation and then the binary number into hex\n')
('hex', 'alot shorter', 'binary', '', '16513841', 'one important reason is because hex is alot shorter and easier to read than binary is for humans\n')
('binary', 'friendlier most', 'hex', '', '21591637', 'i ve been using images to store data since editing binary data through paint.net is much friendlier than most hex editors\n')
('hex', 'string significantly longer', 'binary', '', '2558762', 'a hex string is significantly longer than the corresponding binary string\n')
('hex', 'much more readable', 'binary', 'usability', '21578250', 'and because hex is much more readable and useful than binary - it s often used and shown\n')
('hex', 'somewhat more', 'binary', '', '1712946', 'hex is somewhat more readable than binary if i happen to be loading a data dump in a text editor etc\n')
('hex', 'just less verbose', 'binary', '', '484849', 'hex is just less verbose and can express anything a binary number can\n')
('hex', 'easier', 'binary', 'usability', '13960625', 'hex is easier for most people to convert to and from binary in their heads since binary numbers are usually expressed in blocks of eight because that s the size of a byte and eight is exactly two hex digits but hex notation would have been clunky and misleading in dennis time implying the ability to address 16 bits\n')

csc	vbc	1
('csc', 'smarter', 'vbc', '', '9209810', 'so yes at least in this respect csc is smarter than vbc\n')

gyroscope	accelerometer	4
('gyroscope', 'sensor more accurate', 'accelerometer', 'performance', '16760584', 'so after googling this i found that using gyroscope sensor is more accurate than the accelerometer\n')
('gyroscope', 'more', 'accelerometer', '', '16772950', 'also i have tried the accelerometer sensor and it worked but i m asking to check whether the gyroscope is more accurate to this function or the accelerometer\n')
('gyroscope', 'more accurate', 'accelerometer', 'performance', '16772950', 'also i have tried the accelerometer sensor and it worked but i m asking to check whether the gyroscope is more accurate to this function or the accelerometer\n')
('gyroscope', 'sensor more', 'accelerometer', '', '16760584', 'so after googling this i found that using gyroscope sensor is more accurate than the accelerometer\n')

exponent	modulo	12
('exponent', 'smaller', 'modulo', 'memory', '2927816', 'edit as gregs points out in the comments you cannot be sure that the private exponent of the key you want to encrypt is smaller than the modulo of the key you want to use to encrypt with\n')
('exponent', 'smaller', 'modulo', 'memory', '2927816', 'the private exponent is always smaller than the modulo so you should be able to encrypt it using the raw rsa operation if you make sure to remove the prepended zero\n')
('exponent', 'lower', 'modulo', '', '25461270', '1024 bit private exponent large number lower than the modulo\n')
('exponent', 'shorter', 'modulo', '', '23875419', 'little wonder you get errors the exponent is normally shorter than the modulo which is always the same size as the key size\n')
('exponent', 'longer', 'modulo', '', '7835481', 'the private exponent must not be longer than the modulo\n')
('exponent', 'shorter', 'modulo', '', '5377967', 'i must also add that designing the rsa key so that the private exponent is substantially shorter than the modulo to speed up operations is a security risk if the exponent is smaller than 29 of the modulo length then the key can be cracked\n')
('exponent', 'substantially shorter', 'modulo', '', '5377967', 'i must also add that designing the rsa key so that the private exponent is substantially shorter than the modulo to speed up operations is a security risk if the exponent is smaller than 29 of the modulo length then the key can be cracked\n')
('exponent', 'smaller', 'modulo', 'memory', '6662179', 'in rsa signing a message m means exponentiation with the private exponent d the result r is the smallest integer 0 and smaller than the modulo n so that\n')
('exponent', 'always smaller', 'modulo', 'memory', '2927816', 'the private exponent is always smaller than the modulo so you should be able to encrypt it using the raw rsa operation if you make sure to remove the prepended zero\n')
('exponent', 'normally shorter', 'modulo', '', '23875419', 'little wonder you get errors the exponent is normally shorter than the modulo which is always the same size as the key size\n')
('exponent', 'smaller', 'modulo', 'memory', '5377967', 'i must also add that designing the rsa key so that the private exponent is substantially shorter than the modulo to speed up operations is a security risk if the exponent is smaller than 29 of the modulo length then the key can be cracked\n')
('modulo', 'better', 'exponent', '', '15114205', 'so no choice of the public exponent for this modulo is better than 19 using the public exponent to decrypt will work for at least half of the messages when eâ² 9 16 and in many cases for almost all the messages when eâ² 1 16\n')

nmock	moq	2
('nmock', 'older expectation', 'moq', '', '12625646', 'this is another reason why i d prefer rhinomocks and moq over nmock nmock uses the older expectation style whereas rhinomocks and moq both support the arrange act assert approach where you specify you expected interactions as assertions at the end of the test like this\n')
('nmock', 'older', 'moq', '', '12625646', 'this is another reason why i d prefer rhinomocks and moq over nmock nmock uses the older expectation style whereas rhinomocks and moq both support the arrange act assert approach where you specify you expected interactions as assertions at the end of the test like this\n')

monodevelop	sharpdevelop	2
('monodevelop', 'better', 'sharpdevelop', '', '1640244', 'i like the monodevelop ide even better than sharpdevelop but i m not sold on installing and using mono s compiler just yet nor do i know if it can even handle the latest vb.net c# language features\n')
('monodevelop', 'more', 'sharpdevelop', '', '17615657', 'monodevelop is more of a replacement of an ide for mac and linux in windows the recommended thing is to use visual studio or sharpdevelop\n')

sudo	passwd	3
('sudo', 'slighly more', 'passwd', '', '15868282', 'automating sudo is slighly more complex if you need to pass the passwd but still can be done\n')
('sudo', 'better', 'passwd', '', '982185', 'sudo is better in most respects but still requires a passwd which asroot does not\n')
('sudo', 'slighly more complex', 'passwd', 'usability', '15868282', 'automating sudo is slighly more complex if you need to pass the passwd but still can be done\n')

allegro	sdl	1
('allegro', 'better', 'sdl', '', '8957972', 'i was also looking at sdl allegro sfml i didnt see much tutorials help on this but heard its better than sdl\n')

chaco	matplotlib	1
('chaco', 'faster', 'matplotlib', 'performance', '20483834', 'enthought-dev is chaco faster than matplotlib\n')

codelite	codeblocks	1
('codelite', 'better', 'codeblocks', '', '3067921', 'we sort of settled on it but later found codelite and liked it better than codeblocks\n')

hash	salt	21
('salt', 'more protection', 'hash', '', '9220557', 'however using a salt offers more protection against rainbow tables precalculated hash tables so they re still worth using\n')
('salt', 'better', 'hash', '', '1995717', 'the more randomness and more characters your salt has the better for the hash but anything that s several characters long and random works\n')
('hash', 'harder especially', 'salt', '', '7003476', 'most attacks involve generating hash for common passwords so for reasonably complicated passwords it becomes harder especially with salt some people use usernames as salt others use randomly generated numbers\n')
('salt', 'nothing more', 'hash', '', '12807370', 'this salt is nothing more than a random arbitrary string that you concatenate to the passwords and it will make your hash password unique\n')
('salt', 'probably faster', 'hash', 'performance', '4834231', 'you ll probably need to get data anyway so the unique salt is probably faster too because you won t need to calculate the hash over username\n')
('salt', 'probably faster too', 'hash', 'performance', '4834231', 'you ll probably need to get data anyway so the unique salt is probably faster too because you won t need to calculate the hash over username\n')
('hash', 'longer', 'salt', '', '482268', 'you can safely store the salt in the db because working out a string from its hash is just as hard when you know some of the string as it is when you know none of it provided the password itself is longer than the salt and long enough and strong enough to take a long time to crack by brute force at least 6 chars with at least one case change and a number or non-alphanumeric i d say\n')
('salt', 'harder', 'hash', '', '5641994', 'the lack of salt is harder to expoit here than with password hash since the hash is not directly known\n')
('salt', 'not more', 'hash', '', '8646455', 'so when i see that the salt is stored in the hash password and that you use that hash password as salt i think crypt + salt is not more secure against a brute force on output hackers who managed to steal hash passwords\n')
('salt', 'sha-512 higher level', 'hash', '', '12064628', 'salt sha-512 offers a higher level of security and implementing a scheme where you stretch the hash is even better do some high number of iterations of sha-512 - starting with the password+salt of course\n')
('salt', 'also more', 'hash', '', '4732381', 'prepending a salt is also more powerful than directly setting the seed values because in addition to changing the internal state of the hash if the salt is not a multiple of the digest block size then it can also perturb the alignment with which the input is fed into the hash function\n')
('salt', 'passwords more', 'hash', '', '4269273', 'i get the impression that most people think that hashing salt passwords is the more secure way of handling passwords but i can t figure out a way to comply with current company operations when using hash passwords\n')
('salt', 'also more powerful', 'hash', 'usability', '4732381', 'prepending a salt is also more powerful than directly setting the seed values because in addition to changing the internal state of the hash if the salt is not a multiple of the digest block size then it can also perturb the alignment with which the input is fed into the hash function\n')
('salt', 'trimmed', 'hash', '', '15396796', 'example the salt field might only allow a 64 characters while the generated salt might be longer therefore when you save the salt it gets trimmed which ultimately changes the hash password\n')
('salt', 'passwords more secure', 'hash', '', '4269273', 'i get the impression that most people think that hashing salt passwords is the more secure way of handling passwords but i can t figure out a way to comply with current company operations when using hash passwords\n')
('salt', 'more', 'hash', '', '9220557', 'however using a salt offers more protection against rainbow tables precalculated hash tables so they re still worth using\n')
('salt', 'sha-512 higher', 'hash', '', '12064628', 'salt sha-512 offers a higher level of security and implementing a scheme where you stretch the hash is even better do some high number of iterations of sha-512 - starting with the password+salt of course\n')
('salt', 'not more secure', 'hash', '', '8646455', 'so when i see that the salt is stored in the hash password and that you use that hash password as salt i think crypt + salt is not more secure against a brute force on output hackers who managed to steal hash passwords\n')
('salt', 'field better option', 'hash', 'usability', '15540208', 'restructuring of the database to just add an salt field is better option or the only one really if your going to do it properly but you could use your currant hash field to store the salt as other person posted\n')
('hash', 'harder', 'salt', '', '19884074', 'i don t know how safe could it be and how difficult is for the hacker to determinate the technique i use the thing is that the result has the same length as the hash and is harder to determinate a salt so if for any reason in the history hacker uses a rainbow table and catches a probable result it will be the wrong\n')
('salt', 'field better', 'hash', '', '15540208', 'restructuring of the database to just add an salt field is better option or the only one really if your going to do it properly but you could use your currant hash field to store the salt as other person posted\n')

seam	jsf	6
('seam', 'more powerful', 'jsf', 'usability', '7062618', 'seam is more powerful with jsf but not necessarily richfaces or icefaces for they mostly just extend the component set which is anyway fall down to standard html components when rendered by jsf\n')
('seam', 'more general', 'jsf', '', '1252126', 'jsf is a web ui framework whereas seam is a more general web application framework that integrates not just jsf but conversational contexts workflow jbpm and object persistance preferably ejb3\n')
('seam', 'more', 'jsf', '', '7062618', 'seam is more powerful with jsf but not necessarily richfaces or icefaces for they mostly just extend the component set which is anyway fall down to standard html components when rendered by jsf\n')
('seam', 'certainly far better', 'jsf', '', '1253366', 'seam certainly is far better than using plain jsf refer the link posted by damo a couple of answers above\n')
('seam', 'more', 'jsf', '', '1252126', 'jsf is a web ui framework whereas seam is a more general web application framework that integrates not just jsf but conversational contexts workflow jbpm and object persistance preferably ejb3\n')
('jsf', 'better', 'seam', '', '6377582', 'well for that you ll need jsf that is better integrated with seam and jsf does not handle file uploads that actually everyone use so you have to put also icefaces that actually are better managed by maven that you currenty are not using... neverending story\n')

goose	boilerpipe	1
('goose', 'faster', 'boilerpipe', 'performance', '14164350', '2 readability library content is passable slower on average than goose but faster than boilerpipe\n')

nodevalue	innerhtml	1
('nodevalue', 'faster', 'innerhtml', 'performance', '21311670', 'nodevalue is a little more confusing to use but faster than innerhtml\n')

jung	jgraph	1
('jung', 'easier', 'jgraph', 'usability', '11692277', 'i ve created an application with this library instead of jgraph because i thought that jung is easier to learn than jgraph for newbies even if it provide less features\n')

pyquery	lxml.html	1
('pyquery', 'much faster', 'lxml.html', 'performance', '16679703', 'there is a project pyquery that is much faster as it uses lxml.html library speed comparasion can be found here\n')

max	rank	6
('max', 'faster', 'rank', 'performance', '886136', 'while i think gbn s answer is probably sufficient i m wondering whether use of an over clause to establish a max date per id attribute with which to reduce the select in a where clause wouldn t be faster than a rank\n')
('max', 'usually slower only', 'rank', 'performance', '18858163', 'you might replace the max subquery with a rank max is usually slower only when cus_id is the pi rank might be worse\n')
('rank', 'lower', 'max', '', '24588036', 'if no rank is lower than its number there are no gaps in the table the query returns the max number + 1\n')
('rank', 'less', 'max', '', '9870286', 'if your rank is less than 4 it takes 0 instead it s the max part\n')
('rank', 'greater', 'max', '', '21983695', 'so i want to generate rank for second set of values but starting with value greater than max from first set\n')
('max', 'usually slower', 'rank', 'performance', '18858163', 'you might replace the max subquery with a rank max is usually slower only when cus_id is the pi rank might be worse\n')

quadtree	octree	1
('quadtree', 'better', 'octree', '', '2856593', 'quadtree is better for big open spaces and octree is better for in-door spaces with many levels\n')

texreg	stargazer	2
('texreg', 'more', 'stargazer', '', '24193452', 'yet from my point of view texreg is more efficient that stargazer and easier to customize than xtable\n')
('texreg', 'more efficient', 'stargazer', 'performance', '24193452', 'yet from my point of view texreg is more efficient that stargazer and easier to customize than xtable\n')

properties	accessor	3
('properties', 'more', 'accessor', '', '10794303', 'it means a declared properties is more than a pair of accessor methods getter setter\n')
('properties', 'nothing more', 'accessor', '', '10910531', 'a properties is nothing more than syntactic shorthand for a get set accessor\n')
('properties', 'more', 'accessor', '', '10794303', 'that suggests another aspect where a declared properties is more than a pair of accessor methods that is more static type checking although it is undesirable here\n')

fossil	git	2
('fossil', 'easier', 'git', 'usability', '4435582', 'fossil is another one that s easy to use i would say easier than git to learn but it uses an sqlite file to store your code and i m not sure if it scales to really big projects\n')
('fossil', 'more', 'git', '', '2120804', 'from the article it sounds like fossil isn t a database any more than git is a database\n')

mod-alias	mod-rewrite	1
('mod-alias', 'faster', 'mod-rewrite', 'performance', '2096899', 'evidently though mod-alias can be somewhat faster than mod-rewrite all other things being equal of course\n')

keyboard	mouse	8
('keyboard', 'more important', 'mouse', '', '923190', 'also in this case keyboard input is essential and more important than mouse interaction\n')
('keyboard', 'events more similar', 'mouse', '', '10389173', 'this approach using purely images screenshots and generating mouse and keyboard events is more similar to manual testing activities performed by real people which have just monitor mouse and keyboard\n')
('keyboard', 'faster', 'mouse', 'performance', '414289', 'the keyboard is almost always faster than the mouse\n')
('keyboard', 'more', 'mouse', '', '161193', 'for example do you use keyboard more than mouse\n')
('keyboard', 'events more', 'mouse', '', '10389173', 'this approach using purely images screenshots and generating mouse and keyboard events is more similar to manual testing activities performed by real people which have just monitor mouse and keyboard\n')
('keyboard', 'much better', 'mouse', '', '3982894', 'it recommends using ctr cmd + 1 to use the keyboard this is much better than having to use the mouse but i m still looking for a just do the right thing most of the time automatic solution\n')
('mouse', 'slower', 'keyboard', 'performance', '6731523', 'this is a radical concept i know but the mouse is slower than keyboard shortcuts\n')
('keyboard', 'faster', 'mouse', 'performance', '1295425', 'i prefer the command line because i have a shell window open in the source anyway to run builds and tests and along with file name completion using the keyboard is faster than using the mouse for me\n')

buildout	plone	2
('buildout', 'older', 'plone', '', '12998588', 'i ve even tried to pin archetypes and atcontentypes so that the buildout uses older versions example those used in plone 4.2 by adding the following to my pinnedversions.cfg file which gets called after everything else\n')
('buildout', 'older versions', 'plone', '', '12998588', 'i ve even tried to pin archetypes and atcontentypes so that the buildout uses older versions example those used in plone 4.2 by adding the following to my pinnedversions.cfg file which gets called after everything else\n')

profiler	perf	2
('profiler', 'more detailed', 'perf', '', '410465', 'a profiler gives you more detailed information which can help to diagnose and fix perf problems\n')
('profiler', 'more', 'perf', '', '410465', 'a profiler gives you more detailed information which can help to diagnose and fix perf problems\n')

filesystems	fat	5
('fat', 'easier problem', 'filesystems', 'usability', '8219726', 'granted fat is an easier problem but they claim to support many filesystems and it would be my first choice\n')
('filesystems', 'more', 'fat', '', '7419841', 'since the filesystems is more than likely fat or fat32 protecting it permission based way would be more convoluted\n')
('filesystems', 'more complex', 'fat', 'usability', '2398216', 'most modern filesystems are also considerably more complex than fat which would add further difficulty to the implementation\n')
('fat', 'easier', 'filesystems', 'usability', '8219726', 'granted fat is an easier problem but they claim to support many filesystems and it would be my first choice\n')
('filesystems', 'more likely', 'fat', '', '7419841', 'since the filesystems is more than likely fat or fat32 protecting it permission based way would be more convoluted\n')

named	shadowing	5
('shadowing', 'more flexible', 'named', 'usability', '25226751', 'when you re not worrying about shadowing this is more flexible if the named of the object changes\n')
('shadowing', 'more', 'named', '', '25226751', 'when you re not worrying about shadowing this is more flexible if the named of the object changes\n')
('named', 'more', 'shadowing', '', '15715314', 'not using the same named is a more common practice to avoid confusion and shadowing\n')
('named', 'more common', 'shadowing', '', '15715314', 'not using the same named is a more common practice to avoid confusion and shadowing\n')
('named', 'nicer', 'shadowing', '', '7541844', 'i believe the reasoning behind it is that it allows the parameters to be named nicer by preventing shadowing of member variables\n')

expression-blend	silverlight	2
('expression-blend', 'much more', 'silverlight', '', '3743941', 'expression-blend has much more advanced wpf silverlight visual designer than visual studio including wysiwyg animation editor etc\n')
('expression-blend', 'much more advanced', 'silverlight', '', '3743941', 'expression-blend has much more advanced wpf silverlight visual designer than visual studio including wysiwyg animation editor etc\n')

h.264	mp4	5
('h.264', 'better support', 'mp4', 'usability', '9734251', '- you can also consider using webm which is a free alternative to h.264 and has better support on some platforms than fragmented mp4\n')
('h.264', 'better', 'mp4', '', '9734251', '- you can also consider using webm which is a free alternative to h.264 and has better support on some platforms than fragmented mp4\n')
('mp4', 'format better', 'h.264', '', '16599515', 'it doesn t support avi at the moment but imho mp4 format is better suited for h.264 anyway\n')
('h.264', 'more', 'mp4', '', '11314411', 'h.264 is more often encapsulated in mp4 container and vp8 in mkv\n')
('h.264', 'more often', 'mp4', '', '11314411', 'h.264 is more often encapsulated in mp4 container and vp8 in mkv\n')

koala	facebooker2	2
('koala', 'better', 'facebooker2', '', '5201993', 'is fb_graph or koala gem better than facebooker2\n')
('koala', 'better', 'facebooker2', '', '5453213', 'relevant discussion here as well is fb_graph or koala ruby gem better than facebooker2 using the facebook graph\n')

cvsnt	svn	1
('cvsnt', 'simply much better', 'svn', '', '559225', 'just a wild guess here but if you re using cvsnt on the server this observation might be based on the fact that cvsnt simply is much better at merging than svn because it has the notion of mergepoints\n')

ubuntu	debian	9
('debian', 'more stable', 'ubuntu', 'reliability', '4333375', 'as for debian being more stable than ubuntu for using as server it can be true in very rare occasions where the package is very obscure\n')
('ubuntu', 'nicer', 'debian', '', '7764101', 'ubuntu has nicer frontend and could be more suitable for windows emigrants while debian is more for backend guys\n')
('ubuntu', 'nicer frontend', 'debian', '', '7764101', 'ubuntu has nicer frontend and could be more suitable for windows emigrants while debian is more for backend guys\n')
('ubuntu', 'newer', 'debian', '', '8931660', 'since ubuntu 10.10 is newer than debian squeeze if you can do it on squeeze you can certainly do it on ubuntu\n')
('ubuntu', 'far less', 'debian', '', '5009964', 'ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n')
('ubuntu', 'less conservative', 'debian', '', '5009964', 'ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n')
('debian', 'more recent', 'ubuntu', '', '20931360', 'i m in debian wheezy which is much more recent than ubuntu 10.04\n')
('ubuntu', 'far less conservative', 'debian', '', '5009964', 'ubuntu is far less conservative than debian so you will get closer to the bleeding edge\n')
('ubuntu', 'more resources', 'debian', '', '1316580', 'ubuntu heavily relies on python scripting and generally consumes more resources than debian\n')

division	modulo	8
('division', 'better', 'modulo', '', '8914667', 'using an extra variable to avoid the costly division and the resulting time was 18.9s so significantly better than the modulo with a statically known constant\n')
('division', 'higher', 'modulo', '', '13440423', 'is the same as because division has higher priority than modulo\n')
('division', 'faster', 'modulo', 'performance', '48103', 'a side effect of many division routines is the modulo - so in few cases should division actually be faster than modulo\n')
('division', 'higher priority', 'modulo', '', '13440423', 'is the same as because division has higher priority than modulo\n')
('modulo', 'really more', 'division', '', '10063634', 'python respects this definition whereas in most other programming language the modulo is really more like a reaminder after division operator\n')
('modulo', 'more', 'division', '', '16247449', 'inverse modulo for 300 time take 1.422 seconde more than executing division sub and multiplication 10k time even the core of inverse modulo is build with same division and sub and multiplication functions and for this number it just do 150 time inside while help plz why\n')
('modulo', 'much faster', 'division', 'performance', '20258656', 'since bit wise operations can be done very fast and division operations are relatively slow this type of modulo is much faster than doing a division\n')
('modulo', 'much harder', 'division', '', '12786755', 'programmers like to use this property to speed up programs because it s easy to chop off some number of bits but performing a modulo is much harder it s about as hard as doing a division\n')

eclemma	cobertura	1
('eclemma', 'better', 'cobertura', '', '11801652', 'also forgot to mention junit testing framework and a great eclipse plugin eclemma for code coverage much better than cobertura ecobertura and easier to use and of course you can try maven as the other post mentionned or try ant as build tool\n')

ejml	jama	1
('ejml', 'faster', 'jama', 'performance', '10110317', 'ejml looks really good it works almost 2x faster than jama on my data.\n')

crypt	md5	1
('crypt', 'better solution', 'md5', '', '19040830', 'i should also mention that crypt has this built-in and may be a better solution than md5\n')

memmove	strcpy	1
('memmove', 'faster', 'strcpy', 'performance', '12429831', 'marcus yes memmove is faster than strcpy and faster than python but why\n')

kerberos	ldap	1
('kerberos', 'more', 'ldap', '', '242546', 'one might want to define kerberos access to more than one ldap server\n')

svn	perforce	9
('perforce', 'much nicer', 'svn', '', '3969786', 'if you have the money ericgorr is right perforce is much nicer to work with then svn\n')
('perforce', 'faster', 'svn', 'performance', '2794083', 'perforce is soooo much faster than svn because all the check-outs are stored on the server so it doesn t have to check every file on an update\n')
('perforce', 'better', 'svn', '', '44752', 'make sure you re using a source control system that supports branching and merging i ve had experience with perforce and svn and while perforce is better svn is free\n')
('perforce', 'less examples', 'svn', '', '15797795', 'if you want to a little bit further you can imagine use more powerfull scm clearcase perforce ... but maven integration is fewer not well documented and community provide less examples than svn or git\n')
('perforce', 'more advanced', 'svn', '', '1768520', 'perforce offers more advanced branching and merging capabilities than svn\n')
('svn', 'more intuitive', 'perforce', '', '26851', 'if anything i find working with svn easier and more intuitive than perforce\n')
('perforce', 'more comfortable', 'svn', 'usability', '26851', 'perforce does have support for many other oses but our non-windows devs feel more comfortable with svn too\n')
('svn', 'much better', 'perforce', '', '2794083', 'svn works much better when disconnected from the network - with perforce you have to tell the server when you ve done a checkout\n')
('perforce', 'more', 'svn', '', '1768520', 'perforce offers more advanced branching and merging capabilities than svn\n')

django-userena	pinax	2
('django-userena', 'better', 'pinax', '', '9572536', 'i was thinking of using the accounts app but django-userena seems better so i created a project zero with pinax and tried to integrate django-userena with it\n')
('django-userena', 'better so', 'pinax', '', '9572536', 'i was thinking of using the accounts app but django-userena seems better so i created a project zero with pinax and tried to integrate django-userena with it\n')

pow	sqrt	2
('pow', 'faster fast', 'sqrt', 'performance', '11810686', 'my question is is fast implementation of pow x 0.5f faster than fast sqrt x\n')
('sqrt', 'more accurate', 'pow', 'performance', '16882012', 'first of all sqrt x should be faster and more accurate than pow x 0.5 why do you think it s in the library\n')

uinavigationbar	uinavigationcontroller	1
('uinavigationbar', 'more', 'uinavigationcontroller', '', '6305055', 'the ardalahmet solution is not the right one if you need different backgrounds for each uinavigationbar when you have more than one uinavigationcontroller such as in a uitabbar because it using uinavigationbar categories\n')

imagemagick	magick++	1
('imagemagick', 'more correct', 'magick++', '', '7678511', 'now i m trying to do the same thing with imagemagick to be more correct with magick++\n')

onload	onreadystatechange	2
('onload', 'function more', 'onreadystatechange', 'usability', '14729732', 'it looks like the onload function is a more modern convenience method and the old way of checking the result is using onreadystatechange instead\n')
('onload', 'function more modern', 'onreadystatechange', 'usability', '14729732', 'it looks like the onload function is a more modern convenience method and the old way of checking the result is using onreadystatechange instead\n')

zsh	bash	7
('zsh', 'better', 'bash', '', '13227684', 'so no big surprise zsh being better than bash\n')
('zsh', 'simpler', 'bash', 'usability', '22107375', 'update turns out that zsh implementation based on builtin compctl is much simpler than the bash implementation based on builtin complete\n')
('zsh', 'more configurable', 'bash', '', '8542249', 'it seems that zsh is more configurable than bash but also more complicated\n')
('zsh', 'less', 'bash', '', '1254726', 'how can you get similar highlightings to zsh s less than bash s less in ubuntu\n')
('zsh', 'more', 'bash', '', '10172702', 'zsh is more extensible and has a much greater focus on searching and completion than bash\n')
('zsh', 'more extensible', 'bash', 'usability', '10172702', 'zsh is more extensible and has a much greater focus on searching and completion than bash\n')
('zsh', 'more', 'bash', '', '8542249', 'it seems that zsh is more configurable than bash but also more complicated\n')

button	checkbox	12
('button', 'more', 'checkbox', '', '11662905', 'unlike radio button the user can select more than one checkbox at once or select none of them at all\n')
('button', 'more suitable rather', 'checkbox', '', '15388986', 'if you want the users to select only one option perhaps a dropdown or radio button list is more suitable rather than checkbox\n')
('checkbox', 'more useful', 'button', 'usability', '20774279', 'i saw he used checkbox which to seems much more useful than button since you can take multiple objects out at a time\n')
('button', 'better', 'checkbox', '', '25790632', 'you ll want to have multiple radio button each with it s own value to set some property to although this is weird for a yes no you are better off with a checkbox but if you had multiple values this is how radio button work\n')
('checkbox', 'more column', 'button', '', '23243749', 'currently i am able to generate checkbox in column what i need is one more column with button same as checkbox in each row\n')
('button', 'better', 'checkbox', '', '14786816', 'actually i found out why using two radio button with same names and different values true and false is better than checkbox\n')
('button', 'more', 'checkbox', '', '3591491', 'i can verify that by unchecking the checkbox it does flip the value because i enable disable the next button depending on the myproperty value - i have more than one checkbox btw\n')
('checkbox', 'more', 'button', '', '15964168', 'when i reload my html pages its button select and checkbox are goes added more and more.because all the html data fetch from a data base and after added new things in the page i store all the html of the page in data base and when i display this page agiain becuase of jquery mobile its button select and checkbox are increased check here visit jsfiddle.net sharma9853 gbe6p 7\n')
('button', 'more', 'checkbox', '', '4808581', 'how to restrict user to select not more than 10 asp.net checkbox on button click event if user select more than 10 checkbox then alert box will pop up that you can not select more than 10 checkbox\n')
('button', 'better idea', 'checkbox', '', '21157659', 'if it s only one colour you want selecting you can use a radio button instead which would be a better idea than a checkbox\n')
('button', 'list more suitable', 'checkbox', '', '15388986', 'if you want the users to select only one option perhaps a dropdown or radio button list is more suitable rather than checkbox\n')
('button', 'list more', 'checkbox', '', '15388986', 'if you want the users to select only one option perhaps a dropdown or radio button list is more suitable rather than checkbox\n')

greedy	backtracking	1
('greedy', 'less', 'backtracking', '', '2833879', 'the capturing group 1 in the first pattern is greedy it first matches everything and takes as less as it backtracking\n')

cypher	gremlin	4
('cypher', 'still faster', 'gremlin', 'performance', '25576741', 'neo4j and cypher is still faster and obviously this has no effect on the gremlin queries on neo4j but that might be just a issue with the gremlin implementation for neo4j\n')
('cypher', 'much more clear', 'gremlin', '', '13824962', 'cypher seems much more clear to me than gremlin and in general it seems that the guys in neo4j are going with cypher\n')
('cypher', 'much more', 'gremlin', '', '13824962', 'cypher seems much more clear to me than gremlin and in general it seems that the guys in neo4j are going with cypher\n')
('cypher', 'faster', 'gremlin', 'performance', '17332011', 'recently we noticed that cypher queries run faster than gremlin so we decided to convert our queries\n')

server-side	client-side	26
('client-side', 'faster', 'server-side', 'performance', '1598764', 'while not really a console skulpt.org runs python code client-side with no plugins or anything which makes it a lot faster than a server-side prompt\n')
('client-side', 'script way less', 'server-side', '', '16814826', 'ps again i am aware that relying on client-side script is way less secure compared with handling all execution from within the server-side\n')
('client-side', 'script way less secure', 'server-side', '', '16814826', 'ps again i am aware that relying on client-side script is way less secure compared with handling all execution from within the server-side\n')
('client-side', 'validation faster', 'server-side', 'performance', '24450617', 'client-side validation is faster than server-side because the validation takes place on client side on browser and the networking time from client to server is saved\n')
('client-side', 'script more', 'server-side', '', '9866616', 'i am curious to know if detecting the visitor browser with client-side script is more reliable than server-side script\n')
('server-side', 'easier', 'client-side', 'usability', '24469630', 'now if you aren t generating your html server-side and are instead writing it by hand you can make your life just a dash easier with a client-side transformation like this\n')
('client-side', 'javascript much more', 'server-side', '', '1322011', 'that said client-side javascript is much more common and if you were using server-side javascript you would probably know the answer to your question\n')
('client-side', 'better', 'server-side', '', '9174795', 'are client-side binding grids better than the server-side ones\n')
('client-side', 'validation more responsive', 'server-side', '', '12484431', 'client-side validation is more responsive to the user but always back it up with proper server-side checks\n')
('server-side', 'slower', 'client-side', 'performance', '9306245', 'since you don t want to repeat yourself it s very tempting to put all your validation on one side or the other but there are tradeoffs either way and it is true that server-side validation is going to be slower than client-side\n')
('server-side', 'tabletools more', 'client-side', '', '18486205', 'since eventually i d have a button that runs some script on the smeow values and send it to a different request i had a look at the tabletools plugin but it doesn t really play well with server-side tabletools is more focused on the client-side source\n')
('server-side', 'validation more', 'client-side', '', '24450617', 'server-side validation is more secure than the client-side as the user cannot see the code even he does a view-source\n')
('client-side', 'more responsive', 'server-side', '', '14265942', 'client-side will also be more responsive than server-side because there s no request-response but that s really only a perceived performance issue for high-latency connections\n')
('client-side', 'also faster', 'server-side', 'performance', '5365998', 'as a general rule of thumb at least in security you should trust no user so i think it would be the wise choice to validate the data client-side it s also faster and then if the first validation passed validate it server-side to double-check or to have a safety net if the user has javascript turned off something you don t see that often\n')
('client-side', 'script more reliable', 'server-side', 'reliability', '9866616', 'i am curious to know if detecting the visitor browser with client-side script is more reliable than server-side script\n')
('server-side', 'better', 'client-side', '', '12896810', 'server-side checks are better than client-side\n')
('server-side', 'more valuable', 'client-side', '', '1141264', 'not all of the reasons given are necessarily valid but one important one is that unless you re google server-side cpu cycles are a lot more valuable than client-side cycles so it s easier to have the client compile optimize what is quite often dynamically generated html javascript rather than the server\n')
('server-side', 'earlier', 'client-side', '', '18131172', 'the problem is that the server-side selectedindexchanged event triggers earlier than the client-side change event so the data never reaches the server-side\n')
('client-side', 'more reliable', 'server-side', 'reliability', '9866616', 'i am curious to know if detecting the visitor browser with client-side script is more reliable than server-side script\n')
('client-side', 'javascript much more common', 'server-side', '', '1322011', 'that said client-side javascript is much more common and if you were using server-side javascript you would probably know the answer to your question\n')
('client-side', 'shorter', 'server-side', '', '10490295', 'if getting these in sync is an issue make the client-side timer shorter than the server-side one\n')
('client-side', 'validation more', 'server-side', '', '12484431', 'client-side validation is more responsive to the user but always back it up with proper server-side checks\n')
('server-side', 'validation more secure', 'client-side', '', '24450617', 'server-side validation is more secure than the client-side as the user cannot see the code even he does a view-source\n')
('server-side', 'more powerful', 'client-side', 'usability', '1204968', 'my guess is that server-side implementation may turn out to be more flexible and more powerful than client-side as i can add functionality to the server easily as long as the client understands it\n')
('server-side', 'probably more common', 'client-side', '', '12135445', 'storing that info on the server-side is probably more common with the client-side only given his the session cookie\n')
('server-side', 'probably more', 'client-side', '', '12135445', 'storing that info on the server-side is probably more common with the client-side only given his the session cookie\n')

agda	haskell	2
('agda', 'more', 'haskell', '', '3771477', 'coq is probably the most prominent language of the style but agda has a more haskell-y feel as well as being written in haskell itself\n')
('agda', 'more haskell-y', 'haskell', '', '3771477', 'coq is probably the most prominent language of the style but agda has a more haskell-y feel as well as being written in haskell itself\n')

bigloo	ecl	2
('bigloo', 'more functional', 'ecl', 'usability', '9873521', 'this one is more for bigloo - is it more functional than ecl\n')
('bigloo', 'more', 'ecl', '', '9873521', 'this one is more for bigloo - is it more functional than ecl\n')

irq	cpu	1
('irq', 'more', 'cpu', '', '18322925', 'cannot sleep run atomically in soft irq context and are guaranteed to never run on more than one cpu of a given processors for a given tasklet\n')

salt	md5	3
('salt', 'stronger', 'md5', '', '9542772', 'encrypt the passwords with one-way encryption algorithm with a random salt like the common opinionï¼š sha-256 is stronger than md5\n')
('salt', 'more fancy', 'md5', '', '1459923', 'decode the passwords yourself and re-encode them with a salt i recommend something a little more fancy than md5\n')
('salt', 'slower', 'md5', 'performance', '7063356', 'bcrypt is considered the most secure way to implement password hashing with salt because it is slow - much slower than an md5\n')

goto	break	11
('goto', 'moreso', 'break', '', '10918235', 'in the cleanup even in normal case scenario i would regard the use of goto as being clearer than the do while 0 constructs among other things because the target labels themselves practically cry out look at me far moreso than the break and do while 0 constructs\n')
('break', 'better', 'goto', '', '17883705', 'nevertheless in my opinion break is not much better than goto its both not a good programming style\n')
('break', 'cleaner solution', 'goto', '', '12792176', 'to any seasoned developer of a c-like language break will both read better as well as provide a cleaner solution than goto\n')
('break', 'worse', 'goto', '', '12794377', 'but break is no better or worse than goto\n')
('break', 'better', 'goto', '', '723329', 'labeled break like in java would be better than goto for this purpose\n')
('break', 'more resemblance', 'goto', '', '4384579', 'but actually break has more resemblance to return both instructions jump out of a block of code which is pretty much structured in comparison to goto\n')
('goto', 'more', 'break', '', '7073940', 'it is the equivalent of a goto but is more restrictive in that labels may be used only in break or continue statements\n')
('goto', 'simpler', 'break', 'usability', '24476', 'if you re in a nested loop and need to break out of all loops a goto can make this much cleaner and simpler than break statements and if-checks\n')
('break', 'little more', 'goto', '', '21104206', 'the bad we use a break that is little more than a tamed goto something like goto the end of the loop\n')
('goto', 'more restrictive', 'break', '', '7073940', 'it is the equivalent of a goto but is more restrictive in that labels may be used only in break or continue statements\n')
('break', 'more', 'goto', '', '4384579', 'but actually break has more resemblance to return both instructions jump out of a block of code which is pretty much structured in comparison to goto\n')

dateadd	strtotime	1
('dateadd', 'better', 'strtotime', '', '3750603', 'that said the date class is much better in php5.3 -- it even has dateadd subtract functions which would also solve your problem much better than strtotime .\n')

suds	soappy	1
('suds', 'better', 'soappy', '', '5788942', 'finally if soappy just isn t working for you try suds it s better documented than soappy\n')

ember.js	backbone.js	8
('ember.js', 'more', 'backbone.js', '', '12996823', 'i already know that ember.js is a more heavy weight approach in contrast to backbone.js\n')
('ember.js', 'package actually more', 'backbone.js', '', '10105437', 'but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n')
('ember.js', 'more heavy', 'backbone.js', 'memory', '12996823', 'i already know that ember.js is a more heavy weight approach in contrast to backbone.js\n')
('ember.js', 'larger', 'backbone.js', 'memory', '12999399', 'ember.js is larger than backbone.js but thanks to expires cache-control this only matters on the the first load\n')
('ember.js', 'simpler', 'backbone.js', 'usability', '9755245', 'ember.js would make things even simpler than backbone.js\n')
('ember.js', 'more complete imo', 'backbone.js', '', '10105437', 'but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n')
('ember.js', 'more', 'backbone.js', '', '10105437', 'both give you the ability to implement things in a variety of ways which can be confusing but ember.js provides more of the code that you would have to write yourself in backbone.js as standard which for me personally is more important for rapid prototyping than the wealth of backbone.js examples available\n')
('ember.js', 'package actually more complete', 'backbone.js', '', '10105437', 'but on the other hand although new the ember.js package is actually more complete imo than backbone.js\n')

graphicsmagick	imagemagick	8
('graphicsmagick', 'more extensive', 'imagemagick', '', '5487679', 'graphicsmagick provides more extensive api documentation than imagemagick\n')
('imagemagick', 'better', 'graphicsmagick', '', '12307515', 'i do know imagemagick better than graphicsmagick\n')
('graphicsmagick', 'more', 'imagemagick', '', '5487679', 'graphicsmagick provides more extensive api documentation than imagemagick\n')
('graphicsmagick', 'faster', 'imagemagick', 'performance', '2997695', 'graphicsmagick also seems to be faster than imagemagick using better multitasking\n')
('graphicsmagick', 'faster', 'imagemagick', 'performance', '15074956', 'the origin server would get the images from s3 process them using graphicsmagick since it s much faster than imagemagick then serve them\n')
('graphicsmagick', 'faster', 'imagemagick', 'performance', '14804613', 'graphicsmagick converted much faster than imagemagick although i did not test conversion with cuda processing\n')
('graphicsmagick', 'higher', 'imagemagick', '', '3722370', 'graphicsmagick is not that much faster -- and the outputted file sizes are significantly higher than imagemagick\n')
('graphicsmagick', 'better', 'imagemagick', '', '7623344', 'for me graphicsmagick is performing far better than imagemagick\n')

subset-sum	np-complete	2
('subset-sum', 'problem hard more', 'np-complete', '', '17125649', 'the subset-sum problem is hard more precisely it s np-complete which means that your variant is hard too it s not np-complete because it s not a decision problem but it is np-hard\n')
('subset-sum', 'problem hard more precisely', 'np-complete', '', '17125649', 'the subset-sum problem is hard more precisely it s np-complete which means that your variant is hard too it s not np-complete because it s not a decision problem but it is np-hard\n')

dojo	dwr	1
('dojo', 'better choice', 'dwr', '', '4623300', 'they merged with dojo which in my opinion is a better choice than dwr\n')

panels	scrollable	3
('scrollable', 'smaller inner', 'panels', 'memory', '19957747', 'i am trying to create a jpanel that is resizable scrollable and contains x smaller inner panels\n')
('panels', 'larger', 'scrollable', 'memory', '5682770', 'the panels itself is larger than the form and is scrollable autoscroll true\n')
('scrollable', 'smaller', 'panels', 'memory', '19957747', 'i am trying to create a jpanel that is resizable scrollable and contains x smaller inner panels\n')

lapack	openblas	1
('lapack', 'slower', 'openblas', 'performance', '21647126', 'if you are on linux and have chosen blas and lapack from a repo it is very likely that they are much slower than openblas\n')

memset	calloc	3
('memset', 'slower', 'calloc', 'performance', '16536738', 'malloc + memset is slower than calloc under certain conditions\n')
('memset', 'slower', 'calloc', 'performance', '17898722', 'see also why malloc + memset is slower than calloc\n')
('memset', 'slower', 'calloc', 'performance', '2688466', 'my question is why is malloc + memset so much slower than calloc\n')

integer	floating-point	25
('floating-point', 'faster', 'integer', 'performance', '3042066', 'today s floating-point units are pretty fast and may actually divide faster than an integer unit\n')
('floating-point', 'more complicated', 'integer', 'usability', '12982942', 'floating-point arithmetics is by far more complicated than integer arithmetics\n')
('floating-point', 'slower', 'integer', 'performance', '18883825', 'as a rule of thumb floating-point is about 2x slower than integer on\n')
('integer', 'math faster', 'floating-point', 'performance', '5069628', 'generally integer math is faster than floating-point math\n')
('floating-point', 'variables much more strange', 'integer', '', '24415732', 'floating-point representation in memory can t add third link - because floating-point variables is much more strange than integer ones\n')
('floating-point', 'faster', 'integer', 'performance', '25024535', 'floating-point division is typically faster than integer division on the cpu\n')
('floating-point', 'slower', 'integer', 'performance', '514184', 'they take up more space and floating-point math is slower than integer math\n')
('floating-point', 'slower', 'integer', 'performance', '5069643', 'on somewhat limited processors like those in high-end cell phones floating-point may be somewhat slower than integer but it s generally within an order of magnitude or better so long as there is hardware floating-point available\n')
('floating-point', 'math slower', 'integer', 'performance', '514184', 'they take up more space and floating-point math is slower than integer math\n')
('floating-point', 'divide faster', 'integer', 'performance', '2149859', 'floating-point divide is faster than integer fewer bits to divide assuming your cpu has floating-point unit\n')
('floating-point', 'bigger numbers', 'integer', 'memory', '14995249', 'nsdecimalnumber and the floating-point types may be able to store bigger numbers than the integer types though with decreasing precision\n')
('floating-point', 'more strange', 'integer', '', '24415732', 'floating-point representation in memory can t add third link - because floating-point variables is much more strange than integer ones\n')
('integer', 'faster', 'floating-point', 'performance', '288727', 'which uses all integer arithmetic is usually faster than its floating-point equivalent likely significantly faster in the case of a floating-point type equivalent to t-sql s decimal type\n')
('floating-point', 'longer', 'integer', '', '4178780', 'an individual floating-point division instruction will take longer than an integer one\n')
('integer', 'greater', 'floating-point', '', '798046', 'i know c++ have functions that return largest or smallest integer that is greater or lower than a like ceil or floor.is there a function that implement digit limitation of floating-point variable\n')
('floating-point', 'faster', 'integer', 'performance', '1900794', 'depending on context floating-point code may be as fast as or faster than integer code or it may be four times slower\n')
('floating-point', 'better results', 'integer', '', '16154311', 'i did this very successfully with scipy.ndimage in the floating-point domain way better results than integer image processing like this\n')
('floating-point', 'variables much more', 'integer', '', '24415732', 'floating-point representation in memory can t add third link - because floating-point variables is much more strange than integer ones\n')
('floating-point', 'division typically faster', 'integer', 'performance', '25024535', 'floating-point division is typically faster than integer division on the cpu\n')
('floating-point', 'slower', 'integer', 'performance', '5069643', 'historically floating-point could be much slower than integer arithmetic\n')
('integer', 'arithmetic much faster', 'floating-point', 'performance', '9236157', 'but another added benefit of this approach is that it could make your program run faster since fixed-point integer arithmetic is much faster than floating-point arithmetic\n')
('integer', 'faster', 'floating-point', 'performance', '9236157', 'but another added benefit of this approach is that it could make your program run faster since fixed-point integer arithmetic is much faster than floating-point arithmetic\n')
('integer', 'simpler', 'floating-point', 'usability', '141340', 'but integer arithmetic arguably is inherently simpler than floating-point\n')
('integer', 'arithmetic usually faster', 'floating-point', 'performance', '288727', 'which uses all integer arithmetic is usually faster than its floating-point equivalent likely significantly faster in the case of a floating-point type equivalent to t-sql s decimal type\n')
('floating-point', 'higher rank', 'integer', '', '10221622', 'because the floating-point value is of a higher rank than an integer it will promote the integer to a float\n')

scala	typesafe	1
('scala', 'less reliable', 'typesafe', 'reliability', '17532715', 'scala does not provide an alternative and any alternative that was provided would likely be less reliable as typesafe does not have the resources that sun oracle ibm etc\n')

boxlayout	grouplayout	1
('boxlayout', 'example better', 'grouplayout', '', '22849876', 'as a concrete example this boxlayout example is better done using grouplayout illustrated here and here\n')

pyquery	beautifulsoup	3
('pyquery', 'more intuitive', 'beautifulsoup', '', '2752712', 'pyquery uses the css selector syntax familiar from jquery which i find more intuitive than beautifulsoup s\n')
('pyquery', 'significantly faster', 'beautifulsoup', 'performance', '21335822', 'also pyquery is significantly faster than beautifulsoup in many cases for processing results\n')
('pyquery', 'faster', 'beautifulsoup', 'performance', '21335822', 'also pyquery is significantly faster than beautifulsoup in many cases for processing results\n')

content-length	content-type	1
('content-length', 'greater', 'content-type', '', '25000107', '...web api relies on system.net.http library for getting request headers and this library gives a null for httprequestmessage s content.headers.contenttype in this case and web api sees that content-length is greater than 0 but no content-type header and hence returns a 415 unsupported media type\n')

fireworks	photoshop	3
('fireworks', 'easier', 'photoshop', 'usability', '410176', 'i find fireworks has an easier time dealing with vectors because they re first class objects while in photoshop they re actually a combination of a vector mask and a colour fill\n')
('fireworks', 'easier time', 'photoshop', 'usability', '410176', 'i find fireworks has an easier time dealing with vectors because they re first class objects while in photoshop they re actually a combination of a vector mask and a colour fill\n')
('photoshop', 'more familiar', 'fireworks', '', '1870710', 'i have fireworks 8 as well as photoshop cs3 on my windows pc but i m more familiar with fireworks\n')

margin	height	13
('margin', 'less', 'height', '', '25738542', 'also be aware that if the height of the printable area that is page height minus top and bottom margin is less than the height of your cell content then it s impossible for the browser to avoid breaking it unless it can somehow warp the fabric of space maybe firefox has a -moz- property for that\n')
('margin', 'smaller', 'height', 'memory', '8026900', 'i assume margintop can t be solved since im setting margin top to -820 in order to get at a point of top 275 therefore screens smaller than 1200px height the div will go much higher...\n')
('height', 'bigger', 'margin', 'memory', '22379684', 'your listview item s height is looking bigger because your are applying 17dp padding and 4dp margin at the top and 7dp padding and 4dp margin at the bottom of the textview ...so its taking total 32dp extra space excluding your textview\n')
('height', 'greater', 'margin', '', '10208968', 'if the height is greater than 66px i want to apply a negative top margin equal to half of its height\n')
('margin', 'greater', 'height', '', '7495299', 'the margin will be greater than the height of the iframe\n')
('margin', 'greater', 'height', '', '1144224', 'in conjunction with a negative margin equal to or greater than the height of the top and bottom borders if any to further remove the element\n')
('height', 'smaller', 'margin', 'memory', '17396678', 'the problem with your logic is that it doesn t incorporate the maximum distance the child is allowed to move in the top direction it will jump in 50 pixel steps and in case the newly calculated child height is smaller than the parent it just stops where it would also need to limit the margin to the maximum similar to what you are already doing for the bottom direction\n')
('height', 'much larger', 'margin', 'memory', '25144600', 'the first row has a height that is much larger than the margin bottom of its .content div so that the margin-bottom is contained and should not effect anything outside of its container\n')
('height', 'larger', 'margin', 'memory', '25144600', 'the first row has a height that is much larger than the margin bottom of its .content div so that the margin-bottom is contained and should not effect anything outside of its container\n')
('height', 'more', 'margin', '', '18125383', '#footer s height is more than 800px so the #container should lose its top margin value by touching #footer and continue scrolling the page without that floating div\n')
('height', 'less', 'margin', '', '7533484', 'it is treating the floated ul as position absolute but only when its height is less than or equal to the negative top margin on its containing parent\n')
('height', 'larger', 'margin', 'memory', '25303351', 'sometimes when enough content items is added this div height is larger than windows and part of div content is not visible at all it stays bellow page margin\n')
('height', 'greater', 'margin', '', '11165394', 'you also need to set a height that is greater than the negative top margin so part of the element will be visible so the user can hover over it\n')

scipy	pyfftw	2
('scipy', 'better', 'pyfftw', '', '15165621', 'edit more recent scipy does a better job of not always padding to powers of 2 length so is closer in output to the pyfftw case\n')
('scipy', 'better job', 'pyfftw', '', '15165621', 'edit more recent scipy does a better job of not always padding to powers of 2 length so is closer in output to the pyfftw case\n')

ostream	ostringstream	2
('ostream', 'more general', 'ostringstream', '', '12054458', 'ostream is more general subclasses support writing to different places ostringstream is a specific one writing to a string\n')
('ostream', 'more', 'ostringstream', '', '12054458', 'ostream is more general subclasses support writing to different places ostringstream is a specific one writing to a string\n')

terracotta	hazelcast	2
('terracotta', 'bigger community', 'hazelcast', 'memory', '5271450', 'we started with ehcache terracotta server array cause it s well-known backed by terracotta and has bigger community support than hazelcast\n')
('terracotta', 'bigger', 'hazelcast', 'memory', '5271450', 'we started with ehcache terracotta server array cause it s well-known backed by terracotta and has bigger community support than hazelcast\n')

prism	caliburn	1
('prism', 'more', 'caliburn', '', '12522366', 'prism is more of a modularity framework and caliburn is more of a mvvm framework i know both have overlapping features but it would be great to take best features from two frameworks when they are combined\n')

oncreate	ondestroy	1
('oncreate', 'more', 'ondestroy', '', '13288579', 'otherwise if oncreate is being called more than ondestroy receiver is registered multiple time and the app mis-behaves\n')

ivr	asterisk	2
('ivr', 'better not', 'asterisk', '', '5966362', 'microsoft has the microsoft speech api sapi however if you want simple ivr it is better not to reinvent the wheel and customize an asterisk implementation which i guess falls under the great ivr library for c++ category it s c not c++ but if you know c++ you should be able to understand the c . using asterisknow you may not even need to write any custom code it may do what you want already\n')
('ivr', 'better', 'asterisk', '', '5966362', 'microsoft has the microsoft speech api sapi however if you want simple ivr it is better not to reinvent the wheel and customize an asterisk implementation which i guess falls under the great ivr library for c++ category it s c not c++ but if you know c++ you should be able to understand the c . using asterisknow you may not even need to write any custom code it may do what you want already\n')

tiff	png	2
('tiff', 'better', 'png', '', '4362006', 'tiff â any bit depth any compression lossy or lossless everything including the kitchen sink â and no better than png\n')
('png', 'smaller', 'tiff', 'memory', '9806763', 'jpg or png should get you smaller than tiff\n')

adplus	procdump	1
('adplus', 'simpler sysinternals', 'procdump', 'usability', '2731984', 'if you have a customer who is willing to work with you a bit it might shed some light on the situation to get a crash dump with adplus or maybe simpler with sysinternals procdump when the error message is showing\n')

debian	linux	1
('debian', 'worse', 'linux', '', '22438068', 'personally i develop on the windows but deploy on debian where couldn t find the scrapyd package at all at the time i was working on it and noticed that performance of scrapy is considerably worse than on linux box so you might reconsider your target\n')

android-query	picasso	2
('android-query', 'more', 'picasso', '', '19800655', 'if picasso doesn t satisfy you for any reason you can also try android-query which does much more than picasso it s not only for images but the same rules apply\n')
('android-query', 'much more', 'picasso', '', '19800655', 'if picasso doesn t satisfy you for any reason you can also try android-query which does much more than picasso it s not only for images but the same rules apply\n')

swift	objective-c	14
('objective-c', 'faster', 'swift', 'performance', '24078665', 'my view is that if in some cases objective-c is faster than swift it doesn t mean that all over performance of swift is slower\n')
('swift', 'runtime smaller', 'objective-c', 'performance', '24150239', 'the swift runtime is smaller than the objective-c runtime\n')
('swift', 'more', 'objective-c', '', '24050500', 'we ve seen that swift uses a more static method dispatch than objective-c which unless a class dervices from foundation nsobject prevents the style of swizzling based on remapping method implementations at runtime\n')
('swift', 'more faster', 'objective-c', 'performance', '24078665', 'and also apple does might not confidently announce that swift is more faster than objective-c in all the cases\n')
('swift', 'faster', 'objective-c', 'performance', '24765759', 'i don t think that as of today you can run these tests and determine with any certainty whether swift 1.0 is faster or slower than objective-c\n')
('swift', 'faster', 'objective-c', 'performance', '24019229', 'as craig revealed within the announcement of swift it is said to be faster than objective-c by far\n')
('swift', 'more', 'objective-c', '', '24078665', 'and also apple does might not confidently announce that swift is more faster than objective-c in all the cases\n')
('swift', 'smaller', 'objective-c', 'memory', '24150239', 'the swift runtime is smaller than the objective-c runtime\n')
('swift', 'better', 'objective-c', '', '24049884', 'so i ve started learning swift because it looks way better than objective-c\n')
('swift', 'less dynamic', 'objective-c', '', '24174697', 'swift seems to be less dynamic than objective-c in these stuffs\n')
('swift', 'fewer situations', 'objective-c', '', '24021418', 'swift will incur this penalty in fewer situations than objective-c will for instance method calls to swift-only protocol methods do not hit objc_msgsend but if the protocol is declared in objective-c or if the swift protocol is decorated with objective-c such that it can be adopted by objective-c objects as well then method calls to methods in that protocol adopted by swift objects appear to be dispatched via objc_msgsend\n')
('swift', 'slower', 'objective-c', 'performance', '24765759', 'i don t think that as of today you can run these tests and determine with any certainty whether swift 1.0 is faster or slower than objective-c\n')
('swift', 'easier', 'objective-c', 'usability', '4850967', 'download xcode free and learn objective-c or swift swift is easier to learn than objective-c\n')
('swift', 'more static', 'objective-c', '', '24050500', 'we ve seen that swift uses a more static method dispatch than objective-c which unless a class dervices from foundation nsobject prevents the style of swizzling based on remapping method implementations at runtime\n')

odp.net	system.data.oracleclient	1
('odp.net', 'better', 'system.data.oracleclient', '', '7935618', 'agreed that using odp.net is better than deprecated system.data.oracleclient\n')

translation	transliteration	1
('translation', 'more', 'transliteration', '', '7975143', 'the issue here is that an automatic translation from sql to linq will often have to perform more transliteration than translation - generating examples of how not to write linq queries\n')

ant	maven	46
('maven', 'definitely better integration', 'ant', '', '8742257', 'maven definitely has better integration with flex than ant\n')
('ant', 'more powerful', 'maven', 'usability', '2850172', 'ant is much more powerful than maven in many respects but maven excels in dependency management and ease of deployment\n')
('maven', 'better', 'ant', '', '1190551', 'while i personally think maven is a better tool than ant in the long run our experience will make maven3 a better tool than maven2\n')
('ant', 'more complex', 'maven', 'usability', '2435935', 'does this make ant more complex than maven\n')
('maven', 'more', 'ant', '', '4970153', 'also maven projects come with a different directory structure and seems to be doing much more than what ant does in the spring source tutorial\n')
('maven', 'more', 'ant', '', '5913844', 'maven is more of a meta-program that can use ant scripts and run your junit tests\n')
('maven', 'more', 'ant', '', '6989690', 'maven can t be compared with ant as in maven vs ant maven is more than a build script than ant is\n')
('maven', 'better', 'ant', '', '18851107', 'while you can munge together a solution with ant maven is a better solution for managing dependencies than ant\n')
('maven', 'earlier', 'ant', '', '23112507', 'can maven examine and resolve internal dependencies of non-mavenized jar library defined earlier by ant\n')
('maven', 'usage lower', 'ant', 'usability', '1077627', 'maven usage is lower compared to ant but just how much lower is not really known\n')
('maven', 'better tool', 'ant', '', '1190551', 'while i personally think maven is a better tool than ant in the long run our experience will make maven3 a better tool than maven2\n')
('ant', 'more', 'maven', '', '24474576', 'ant pre-dates more modern tools like maven and gradle that have this feature baked in\n')
('maven', 'more', 'ant', '', '4970153', 'but as i checked-out some example apps from spring source repo and it seems that maven is more preferred and powerful than ant\n')
('ant', 'better', 'maven', '', '1347793', 'this question is similar in nature to whether ant is better than maven or c# better than java\n')
('ant', 'more modern', 'maven', '', '24474576', 'ant pre-dates more modern tools like maven and gradle that have this feature baked in\n')
('maven', 'better solution', 'ant', '', '18851107', 'while you can munge together a solution with ant maven is a better solution for managing dependencies than ant\n')
('ant', 'better', 'maven', '', '304069', 'however some things ant handles better than maven and if there s not a maven plugin for it it may be difficult to handle in maven\n')
('ant', 'simpler', 'maven', 'usability', '13443342', 'so i suggest you build a p2 repository can be done in ant but seems simpler in maven tycho and split the projects to several repositories\n')
('maven', 'more sophisticated', 'ant', '', '22056239', 'a hood technique is to tag milestone releases of your projects giving then a version number and then manage dependencies with maven or a similar tool a bit more sophisticated than ant\n')
('maven', 'easier', 'ant', 'usability', '20756425', 'you can take a look on gradle which for me could provide more freedom than maven but is easier to use than ant\n')
('ant', 'better', 'maven', '', '13922438', 'i also find ant with ivy to be better documented than maven although that s not too difficult\n')
('maven', 'more', 'ant', '', '10834500', 'maven is more like a replacement for ant\n')
('maven', 'jar bigger then', 'ant', 'memory', '18609318', 'the size of maven jar is bigger then ant jar i don t know why help me please\n')
('maven', 'less reliable', 'ant', 'reliability', '1010593', 'troubleshooting the build maven is less reliable than ant especially the non-core plugins\n')
('ant', 'better', 'maven', '', '13064741', 'if you want to stick to lower level basic file operations ant is better bet than maven\n')
('maven', 'jar bigger', 'ant', 'memory', '18609318', 'the size of maven jar is bigger then ant jar i don t know why help me please\n')
('maven', 'slower', 'ant', 'performance', '4373083', 'also note that while maven is no slower than ant for multi-module projects of this sort importing your maven project into an ide will generally result in far faster builds than maven can perform itself\n')
('maven', 'more preferred', 'ant', '', '4970153', 'but as i checked-out some example apps from spring source repo and it seems that maven is more preferred and powerful than ant\n')
('maven', 'less', 'ant', '', '1010593', 'troubleshooting the build maven is less reliable than ant especially the non-core plugins\n')
('maven', 'younger tool', 'ant', '', '1732320', 'first maven is a much younger tool than ant or make so you have to expect that its going to take time to get to the maturity level of those applications\n')
('maven', 'definitely better', 'ant', '', '8742257', 'maven definitely has better integration with flex than ant\n')
('maven', 'more', 'ant', '', '2435935', 'but maven and ant are so different that there is no real point at comparing them and maven is still much more than ant + dependency management\n')
('ant', 'much more', 'maven', '', '2850172', 'ant is much more powerful than maven in many respects but maven excels in dependency management and ease of deployment\n')
('maven', 'more', 'ant', '', '2230024', 'the quotation you brought up just claim that maven does more than ant so that it s not fair to compare the two\n')
('maven', 'better', 'ant', '', '20756425', 'maven is better for managing dependencies but ant is ok with them too if you use ant+ivy and build artefacts\n')
('maven', 'pretty easier', 'ant', 'usability', '16960689', 'i think updating dependencies with maven is pretty easier than dealing with ant but of course you could select the other way if you feel more conifrtable\n')
('maven', 'more', 'ant', '', '10787570', 'maven is more or less an update concept of ant\n')
('maven', 'better', 'ant', '', '13496917', 'trust me i did this before for another job where the system architect decided that maven was better than ant and all of our projects must be converted from ant to maven\n')
('ant', 'better bet', 'maven', '', '13064741', 'if you want to stick to lower level basic file operations ant is better bet than maven\n')
('maven', 'really better job', 'ant', '', '599070', 'and it turns out maven really does a better job of managing dependencies for ant build.xml files than does ivy\n')
('ant', 'clearer', 'maven', '', '989209', 'i find the ant one much clearer than the maven one\n')
('ant', 'more', 'maven', '', '413752', 'i d definitely use ant or maven - my preference is ant because it s more flexible and i think it would suit your development style more than maven as well\n')
('ant', 'more', 'maven', '', '183290', 'as you ve already said ant is more a replacement for gnu make while maven is primary a buildout dependency-management application\n')
('maven', 'really better', 'ant', '', '599070', 'and it turns out maven really does a better job of managing dependencies for ant build.xml files than does ivy\n')
('ant', 'less verbose', 'maven', '', '2812325', 'alternate build tools ant lots of configuration gradle conventions again less verbose than maven\n')
('ant', 'much more powerful', 'maven', 'usability', '2850172', 'ant is much more powerful than maven in many respects but maven excels in dependency management and ease of deployment\n')

flotr	highcharts	2
('flotr', 'better license', 'highcharts', '', '11477001', 'you should be able to do this in flotr which has a better license than highcharts by just throwing what they showed in this blog post on its side\n')
('flotr', 'better', 'highcharts', '', '11477001', 'you should be able to do this in flotr which has a better license than highcharts by just throwing what they showed in this blog post on its side\n')

subreports	ireport	1
('subreports', 'better', 'ireport', '', '1936127', 'if your report is complicated and have many subreports and subdatasets its better to go this approach since ireport will make it quicker and easier for you to design and maintain later\n')

illegalargumentexception	nullpointerexception	4
('nullpointerexception', 'longer', 'illegalargumentexception', '', '199290', 'decoding nullpointerexception is going to take a bit longer than illegalargumentexception filepath must be supplied or whatever\n')
('illegalargumentexception', 'more specific', 'nullpointerexception', '', '22074', 'in my mind illegalargumentexception seems more specific than using a nullpointerexception since it s telling me that the problem was with an argument i passed to the method and not with a value that may have been generated while performing the method\n')
('illegalargumentexception', 'better', 'nullpointerexception', '', '7391541', 'since it s an exported method clients should get an exception on their abstraction level so illegalargumentexception is better than nullpointerexception\n')
('illegalargumentexception', 'more', 'nullpointerexception', '', '22074', 'in my mind illegalargumentexception seems more specific than using a nullpointerexception since it s telling me that the problem was with an argument i passed to the method and not with a value that may have been generated while performing the method\n')

max	median	1
('max', 'less', 'median', '', '21074836', 'so after calculating median of first k elements delete the first element directly from heap min or max according to whether it is greater or less than median using pointers and then use heapify at that position\n')

tablesorter	datatables	1
('tablesorter', 'simpler', 'datatables', 'usability', '12522533', 'one thing you could look into is using tablesorter - which is much simpler than datatables - with a drag and drop plugin like sortable for jquery ui or this\n')

couchbase	couchdb	3
('couchbase', 'more', 'couchdb', '', '9508840', 'couchbase looks more like a memcache server with a persistence layer powered by couchdb and maybe it does not fit your needs\n')
('couchbase', 'more scalable option', 'couchdb', 'usability', '11960001', 'i d like to add that couchbase is a faster and more scalable option than couchdb the 2.0 version introduces views at a high level it s a distributed memcached membase server merged with couchdb but of course more sophisticated than just mashing them together\n')
('couchbase', 'faster', 'couchdb', 'performance', '11960001', 'i d like to add that couchbase is a faster and more scalable option than couchdb the 2.0 version introduces views at a high level it s a distributed memcached membase server merged with couchdb but of course more sophisticated than just mashing them together\n')

richfaces	primefaces	5
('primefaces', 'better', 'richfaces', '', '13392568', 'i haven t tried any of these in a jsf 2 application but i would recommend using the primefaces one at least the documentation is better than richfaces\n')
('richfaces', 'more', 'primefaces', '', '3403729', 'richfaces is more developed and tested generally since primefaces came out later than rf\n')
('primefaces', 'more', 'richfaces', '', '4121333', 'primefaces has more components but lack combobox available in richfaces\n')
('richfaces', 'more developed', 'primefaces', '', '3403729', 'richfaces is more developed and tested generally since primefaces came out later than rf\n')
('primefaces', 'more components', 'richfaces', '', '4121333', 'primefaces has more components but lack combobox available in richfaces\n')

weblogic	jboss	3
('weblogic', 'more complex', 'jboss', 'usability', '5919293', 'i had worked on jboss for a year and on weblogic for more than a year now my experience with the web logic is good compared to jboss weblogic is more stable and robust it can handle more than 3000 concurrent requests without throwing a single exception where jboss failed to do so and admin console for the weblogic is excellent but i think weblogic is more complex then jboss\n')
('weblogic', 'more', 'jboss', '', '5919293', 'i had worked on jboss for a year and on weblogic for more than a year now my experience with the web logic is good compared to jboss weblogic is more stable and robust it can handle more than 3000 concurrent requests without throwing a single exception where jboss failed to do so and admin console for the weblogic is excellent but i think weblogic is more complex then jboss\n')
('weblogic', 'more stable', 'jboss', 'reliability', '5919293', 'i had worked on jboss for a year and on weblogic for more than a year now my experience with the web logic is good compared to jboss weblogic is more stable and robust it can handle more than 3000 concurrent requests without throwing a single exception where jboss failed to do so and admin console for the weblogic is excellent but i think weblogic is more complex then jboss\n')

xquery	schematron	1
('xquery', 'more', 'schematron', '', '21823929', 'but xquery will be more than schematron and i use xquery heavily to validate xml values and i should be able to produce html reports well\n')

teamcity	cruisecontrol	1
('teamcity', 'far easier', 'cruisecontrol', 'usability', '226593', 'for a one man shop teamcity is far easier to setup and configure than cruisecontrol\n')

ironpython	ironruby	7
('ironpython', 'better performance', 'ironruby', 'performance', '1670651', 'however as things stand right now ironpython is much more mature and has much better performance than ironruby so you may prefer to use that\n')
('ironruby', 'team smaller', 'ironpython', 'memory', '2778756', 'also i believe the ironruby team is smaller than the ironpython team\n')
('ironpython', 'more time', 'ironruby', 'performance', '1972630', 'ironpython has had more time to focus on performance improvements but ironruby has made significant performance improvements as of late\n')
('ironpython', 'more', 'ironruby', '', '1972630', 'ironpython has had more time to focus on performance improvements but ironruby has made significant performance improvements as of late\n')
('ironruby', 'smaller', 'ironpython', 'memory', '2778756', 'also i believe the ironruby team is smaller than the ironpython team\n')
('ironpython', 'much more', 'ironruby', '', '1670651', 'however as things stand right now ironpython is much more mature and has much better performance than ironruby so you may prefer to use that\n')
('ironpython', 'much more mature', 'ironruby', '', '1670651', 'however as things stand right now ironpython is much more mature and has much better performance than ironruby so you may prefer to use that\n')

scala-ide	sbt	1
('scala-ide', 'tighter integration', 'sbt', '', '11480225', 'it d be really nice if scala-ide supported tighter integration with sbt\n')

uitabbarcontroller	uinavigationcontroller	1
('uitabbarcontroller', 'more', 'uinavigationcontroller', '', '1117074', 'i am writing an app based on uitabbarcontroller which has more than 10 viewcontrollers with corresponding uinavigationcontroller\n')

logical-or	associativity	2
('logical-or', 'operator higher', 'associativity', '', '15163782', 'i looked it up and the logical-or operator has a higher precedence than the conditional operator and the conditional operator has right-to-left associativity\n')
('logical-or', 'operator higher precedence', 'associativity', '', '15163782', 'i looked it up and the logical-or operator has a higher precedence than the conditional operator and the conditional operator has right-to-left associativity\n')

wtforms	formencode	1
('wtforms', 'much easier', 'formencode', 'usability', '4610027', 'i also recommend wtforms it s much easier to use than formencode and have builtin sqlalchemy extensions\n')

canopy	ptvs	1
('canopy', 'more complete integration', 'ptvs', '', '19575436', 'the upcoming canopy 1.2 release in a couple of weeks will include more complete integration with ptvs and visual studio that will automate this and remove the need for canopy to be the default python environment\n')

caf	wav	1
('caf', 'better', 'wav', '', '1618687', '2 caf seems a little better than wav but not much\n')

jpopupmenu	jmenuitem	1
('jpopupmenu', 'more just', 'jmenuitem', '', '2581314', 'the jpopupmenu has this behavior but i need more than just jmenuitem\n')

alloca	malloc	1
('alloca', 'smaller resource', 'malloc', 'memory', '7950970', 'while alloca gives you automatic de-allocation on function exit the stack is usually a smaller resource than the malloc heap and if you exhaust the heap it gives you back null\n')

font-size	width	4
('font-size', 'larger', 'width', 'memory', '15319528', 'as you can see the font-size of the text is bit larger than the width of the noisy lines\n')
('font-size', 'greater', 'width', '', '24730789', 'when you are using fittext at that time if the font-size is greater than 100px than you have to set the exact width as per your font-size\n')
('font-size', 'wider', 'width', '', '8490195', 'i initialize the loop with this value and increment the font-size with 1 until the string is wider than the width of the containing element\n')
('width', 'wider', 'font-size', '', '9526369', 'from there on the width slowly increases again as the part of the string still on line 1 linearly gets wider as the font-size increases\n')

vsts	tfs	1
('vsts', 'more', 'tfs', '', '1961714', 'unless something has changed a lot with 2010 the basic vsts install is more or less the same as the pro version of vs - and then you install the team explorer on top to gain the tfs specific client-side extensions\n')

eventlet	gevent	2
('eventlet', 'way slower', 'gevent', 'performance', '12669971', 'but this popular wsgi benchmark says eventlet is way slower than gevent\n')
('eventlet', 'slower', 'gevent', 'performance', '12669971', 'but this popular wsgi benchmark says eventlet is way slower than gevent\n')

move	drag	2
('drag', 'smaller', 'move', 'memory', '24920106', 'it ends up in a state of confusion...you basically cannot release the drag of the table it keeps getting bigger and smaller as you move your mouse - but you can never let go and release it to get the size you want\n')
('move', 'more difficult', 'drag', '', '9984591', 'this is easy to implement with buttons select items click up or down buttons to move - just loop through and apply the move to each selected item but much more difficult with drag reordering\n')

fgetc	fread	1
('fgetc', 'slower', 'fread', 'performance', '14003138', 'the fgetc loop variant was consistently 45x slower than the fread loop\n')

redmine	bugzilla	1
('redmine', 'more', 'bugzilla', '', '323542', 'i think you ll find that your team will like either trac or redmine more than bugzilla or mantis\n')

16-bit	64bit	4
('16-bit', 'no longer', '64bit', '', '6388799', 'most machines now end up with sizeof int sizeof long because 16-bit is no longer convenient but we have long long to get 64bit if needed\n')
('16-bit', 'no longer convenient', '64bit', 'usability', '6388799', 'most machines now end up with sizeof int sizeof long because 16-bit is no longer convenient but we have long long to get 64bit if needed\n')
('16-bit', 'less efficient', '64bit', 'performance', '942017', 'in fact for x86 64 processors performing 32-bit or 16-bit operations are less efficient than 64bit or 8-bit operations due to the operand prefix byte that has to be decoded\n')
('16-bit', 'less', '64bit', '', '24587308', 'that s obviously quite a bit more than the 16-bit that s mandated for an int but equally obviously less than the 64bit mandated for a long long\n')

ng-show	ng-switch	1
('ng-show', 'faster', 'ng-switch', 'performance', '19748236', 'note that some people feel that ng-show is a little faster than ng-switch and ng-if for file-based templates\n')

httphandler	httpmodule	3
('httphandler', 'more', 'httpmodule', '', '4628975', 'you can have only one httphandler but can plug in more than one httpmodule to examine and handle the requests\n')
('httpmodule', 'still better', 'httphandler', '', '10348554', 'i m not sure httpmodule is still better then httphandler\n')
('httpmodule', 'still better then', 'httphandler', '', '10348554', 'i m not sure httpmodule is still better then httphandler\n')

wireless	ethernet	1
('wireless', 'more', 'ethernet', '', '10007514', 'if you are working on physical machine that has cable and wireless connectivity then you will have more than one ethernet adaptor choise\n')

qwindow	qwidget	3
('qwindow', 'more low level', 'qwidget', '', '23931807', 'qwindow is more low level than qwidget\n')
('qwindow', 'more', 'qwidget', '', '23931807', 'qwindow is more low level than qwidget\n')
('qwindow', 'more low', 'qwidget', '', '23931807', 'qwindow is more low level than qwidget\n')

viewdidload	viewdidappear	2
('viewdidload', 'earlier', 'viewdidappear', '', '14063610', 'so viewdidload is called slightly earlier than viewdidappear the only difference is that when viewdidappear the view have been already drawn instead in viewdidload the view has still to be drawn\n')
('viewdidload', 'earlier', 'viewdidappear', '', '25648503', 'you could try the block of code in the viewdidload method which is called earlier than viewdidappear\n')

rar	zip	3
('rar', 'more memory', 'zip', 'memory', '3339409', 'i ve heard that rar decompression requires much more memory than zip decompression\n')
('rar', 'decompression much more', 'zip', '', '3339409', 'i ve heard that rar decompression requires much more memory than zip decompression\n')
('rar', 'decompression much more memory', 'zip', 'memory', '3339409', 'i ve heard that rar decompression requires much more memory than zip decompression\n')

inherited	properties	11
('inherited', 'better', 'properties', '', '1287890', 'less is a css extension that enables reuse and encapsulation of values color values for instance improves inherited allows a better nesting of related properties and operations also\n')
('inherited', 'more', 'properties', '', '6071295', 'however i could not find it the documentation so it may inherited more than properties\n')
('inherited', 'much more powerful', 'properties', 'usability', '183126', 'now in .net for desktop controls you can use inherited which is much more powerful than the old tag properties anyway\n')
('inherited', 'easier', 'properties', 'usability', '766479', 'multiple inherited makes it easier to compose classes from small mixin base classes that implement functionality and have properties to remember state\n')
('properties', 'better choice', 'inherited', '', '23018184', 'since the paddle object has properties that are shared by both player and enemy composition is a better choice than inherited\n')
('properties', 'more', 'inherited', '', '5736117', 'if you need a globally accessible variable or properties that s more suited to a base class that your classes inherited from\n')
('properties', 'also more clear', 'inherited', '', '16587246', 'using dedicated methods for getting and setting properties is also more clear in inherited\n')
('inherited', 'much more', 'properties', '', '183126', 'now in .net for desktop controls you can use inherited which is much more powerful than the old tag properties anyway\n')
('properties', 'also more', 'inherited', '', '16587246', 'using dedicated methods for getting and setting properties is also more clear in inherited\n')
('inherited', 'better nesting', 'properties', '', '1287890', 'less is a css extension that enables reuse and encapsulation of values color values for instance improves inherited allows a better nesting of related properties and operations also\n')
('properties', 'easier', 'inherited', 'usability', '9216497', 'this should handle all cases of setting the properties makes them easier to implement in your inherited classes and cleans things up\n')

addition	subtract	1
('addition', 'greater', 'subtract', '', '11563070', 'if you continue to use your method of performing this task then you need to manually check if the addition of the two lower order decimal digits has caused a carry by checking if the result of the addition is greater than 10 and if it is subtract 10 from the number and then add 1 to the higher order digit calculation\n')

shellsort	quicksort	1
('shellsort', 'slower', 'quicksort', 'performance', '128055', 'if you use shellsort no extra memory is needed at all though shellsort will be much slower than quicksort\n')

pagespeed	yslow	2
('pagespeed', 'better', 'yslow', '', '584890', 'in my testing so far google s pagespeed addon is far and above much better than yslow\n')
('yslow', 'more reliable', 'pagespeed', 'reliability', '19182412', 'i use firefox with firebug and yslow and think it s more reliable than pagespeed\n')

multiplication	multiplying	8
('multiplication', 'slightly more', 'multiplying', '', '79771', 'multiplication is slightly more complex as it needs an integer multiplying followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44\n')
('multiplication', 'easier', 'multiplying', 'usability', '9815550', 'multiplication is the easier of the tasks just remember to multiplying each block of one number with the other and carry the zeros\n')
('multiplying', 'faster', 'multiplication', 'performance', '12021618', 'mathematically left shifting is the same as multiplying a number by a power of 2 but as the operation is done only by shifting it is much faster than doing multiplication\n')
('multiplying', 'first probably simpler', 'multiplication', 'usability', '14028965', 'multiplying first is probably simpler than using floating point if you only want an integer result and if you know that the multiplication will never overflow\n')
('multiplication', 'slightly more complex', 'multiplying', 'usability', '79771', 'multiplication is slightly more complex as it needs an integer multiplying followed by a scale back such as 0.72 2 becomes 72 200 becomes 14400 becomes 144 scaleback becomes 1.44\n')
('multiplication', 'longer', 'multiplying', '', '9519571', 'if i make a mistake and multiplying a number by 1.0 instead of 1 and i do not use any compiler optimization then my multiplication will last much longer than multiplying a number by 1\n')
('multiplication', 'slightly harder', 'multiplying', '', '2198143', 'multiplication is slightly harder just multiplying two scaled numbers and then divide by your scale factor\n')
('multiplication', 'slightly harder just', 'multiplying', '', '2198143', 'multiplication is slightly harder just multiplying two scaled numbers and then divide by your scale factor\n')

mouseout	mouseleave	4
('mouseout', 'better choice', 'mouseleave', '', '6667203', 'there can be times when mouseout is a better choice than mouseleave\n')
('mouseleave', 'more accurate', 'mouseout', 'performance', '7477202', 'some browsers implement the mouseenter mouseleave events that i ve noticed are more accurate than mouseout\n')
('mouseleave', 'better', 'mouseout', '', '14359122', 'also see i ve replaced mouseout with mouseleave which should work better than mouseout text will not jump up and down\n')
('mouseout', 'better', 'mouseleave', '', '6667203', 'there can be times when mouseout is a better choice than mouseleave\n')

ivar	accessor	2
('ivar', 'faster', 'accessor', 'performance', '16664597', 'nonatomic properties don t use locks but direct ivar is faster because it skips the accessor call\n')
('ivar', 'directly faster', 'accessor', 'performance', '14113098', 'technically accessing the ivar directly is faster than using accessor but there are very few situations in which it will make a significant performance difference and would probably be a case of premature optimization\n')

scheme	lisp	29
('lisp', 'many more characters', 'scheme', '', '11683143', 'i noted that while in languages like c variable identifiers can only be alphanumberics and underscores common lisp allows many more characters to be used like and at least scheme does\n')
('lisp', 'more uniform', 'scheme', '', '5372482', 'overall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialect\n')
('lisp', 'more verbose', 'scheme', '', '19383232', 'common lisp has a separate namespace for functions which makes operation like this more verbose than with scheme\n')
('scheme', 'somewhat simpler', 'lisp', 'usability', '563472', 'it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp\n')
('scheme', 'simpler smaller', 'lisp', 'usability', '2973943', 'scheme is also a good language for that purpose and it is simpler smaller than lisp\n')
('scheme', 'smoother access', 'lisp', 'usability', '4587918', 'however gambit scheme has smoother access to c c++ code libraries which far outnumber common lisp s libraries\n')
('scheme', 'simpler language common', 'lisp', 'usability', '5691342', 'i don t see why sbcl should be so fast - scheme is a far simpler language than common lisp\n')
('scheme', 'fewer', 'lisp', '', '4587918', 'scheme has fewer libraries than common lisp\n')
('scheme', 'intentionally more compact', 'lisp', 'usability', '3041805', 'scheme is intentionally more compact than common lisp and you ll find that you can learn the language very quickly\n')
('scheme', 'older', 'lisp', '', '13225458', 'scheme is older than common lisp\n')
('scheme', 'fewer batteries', 'lisp', '', '4587918', 'that said it is a scheme which has fewer batteries included as compared to common lisp\n')
('scheme', 'better common', 'lisp', '', '170948', 'here is a solution in scheme because i know that better than common lisp and have an interpreter for checking my work\n')
('lisp', 'much more', 'scheme', '', '5372482', 'overall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialect\n')
('lisp', 'many more', 'scheme', '', '11683143', 'i noted that while in languages like c variable identifiers can only be alphanumberics and underscores common lisp allows many more characters to be used like and at least scheme does\n')
('scheme', 'intentionally more', 'lisp', '', '3041805', 'scheme is intentionally more compact than common lisp and you ll find that you can learn the language very quickly\n')
('scheme', 'fewer libraries', 'lisp', '', '4587918', 'scheme has fewer libraries than common lisp\n')
('scheme', 'more user-friendly', 'lisp', 'usability', '2115070', 'i ve also found scheme ides much more user-friendly than lisp s plt scheme is a good one\n')
('scheme', 'smaller', 'lisp', 'memory', '2973943', 'scheme is also a good language for that purpose and it is simpler smaller than lisp\n')
('scheme', 'simpler common', 'lisp', 'usability', '563472', 'it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp\n')
('scheme', 'fewer', 'lisp', '', '4587918', 'that said it is a scheme which has fewer batteries included as compared to common lisp\n')
('scheme', 'somewhat simpler not', 'lisp', 'usability', '563472', 'it s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lisp\n')
('scheme', 'older common', 'lisp', '', '13225458', 'scheme is older than common lisp\n')
('scheme', 'smoother', 'lisp', '', '4587918', 'however gambit scheme has smoother access to c c++ code libraries which far outnumber common lisp s libraries\n')
('scheme', 'less memory', 'lisp', 'memory', '2741553', 'for a counterexample i think scheme programs ran faster and used less memory than the lisp programs that preceded them mdash\n')
('lisp', 'approach more', 'scheme', 'usability', '16651843', 'i ve noticed that the common lisp approach is more conservative than the approach scheme has\n')
('lisp', 'approach more conservative', 'scheme', 'usability', '16651843', 'i ve noticed that the common lisp approach is more conservative than the approach scheme has\n')
('lisp', 'much more uniform', 'scheme', '', '5372482', 'overall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialect\n')
('scheme', 'fewer libraries common', 'lisp', '', '4587918', 'scheme has fewer libraries than common lisp\n')
('lisp', 'more', 'scheme', '', '3526596', 'my impression common lisp is more for getting stuff done scheme is more for education and fun\n')

nsprogress	nsoperation	1
('nsprogress', 'more', 'nsoperation', '', '19188476', 'but i ve had difficulty implementing this it seems as though nsprogress is meant more for long operations that execute all their code on one background thread but have separate sections that make it easy to determine when progress has been made if this is the case then the use of the term suboperation is a bit misleading as it brings to mind the use of nested nsoperation\n')

flac	wav	1
('flac', 'smaller', 'wav', 'memory', '8301955', 'flac is smaller than wav\n')

wicket	vaadin	7
('wicket', 'better', 'vaadin', '', '4853850', 'this is only a guess and is not based on actual performance testing probably wicket will be doing better than vaadin\n')
('wicket', 'probably more resources', 'vaadin', '', '4853850', 'wicket probably has more resources than vaadin\n')
('wicket', 'probably more', 'vaadin', '', '4853850', 'wicket probably has more resources than vaadin\n')
('wicket', 'more resources', 'vaadin', '', '4853850', 'wicket probably has more resources than vaadin\n')
('wicket', 'app significantly easier', 'vaadin', 'usability', '3559475', 'with this in mind customizing the css of a wicket app is significantly easier than vaadin for the simple reason that you control the markup\n')
('vaadin', 'easier', 'wicket', 'usability', '4865721', 'i would say vaadin would be easier over wicket as the default ui elements look really good\n')
('wicket', 'easier', 'vaadin', 'usability', '3559475', 'with this in mind customizing the css of a wicket app is significantly easier than vaadin for the simple reason that you control the markup\n')

qtreewidget	qtreeview	1
('qtreewidget', 'more', 'qtreeview', '', '25554005', 'if your exchange data between 2 widget i suggest to use qtreewidget more than qtreeview because data in qtreewidget can edit dynamic data row and value\n')

modulus	primes	1
('modulus', 'more', 'primes', '', '9195786', 'it is perfectly possible to use rsa with a modulus n that is composed of more than two primes factors p and q but two things have to be noted\n')

concave	convex	3
('concave', 'hull far more difficult', 'convex', '', '6941020', 'but determining a concave hull is far more difficult than a convex hull\n')
('concave', 'hull far more', 'convex', '', '6941020', 'but determining a concave hull is far more difficult than a convex hull\n')
('convex', 'simpler', 'concave', 'usability', '14583110', 'the check for convex polygons your triangle is simpler than for concave ones see first linked article\n')

addition	subtraction	1
('addition', 'slower', 'subtraction', 'performance', '23414385', 'this is a hold over from older compilers and interpreters on old chip architecture that would do addition slightly slower than subtraction\n')

grouplayout	springlayout	2
('grouplayout', 'more effective', 'springlayout', '', '7128912', 'in it developers seem to agree that grouplayout is a more effective replacement of springlayout\n')
('grouplayout', 'more', 'springlayout', '', '7128912', 'in it developers seem to agree that grouplayout is a more effective replacement of springlayout\n')

calloc	realloc	1
('calloc', 'easier', 'realloc', 'usability', '7762023', 'the various alternatives calloc realloc work roughly the same way calloc is easier to use when dealing with arrays and zero-fills the data while realloc is useful when you need to resize a block of memory\n')

ubuntu	centos	8
('ubuntu', 'system newer system', 'centos', '', '21462120', 'this is because your ubuntu system has newer system libraries than your centos one\n')
('centos', 'more', 'ubuntu', '', '17406652', 'centos is more consistent and reliable because it is enterprise while ubuntu is geared towards desktops and personal computers\n')
('centos', 'more consistent', 'ubuntu', '', '17406652', 'centos is more consistent and reliable because it is enterprise while ubuntu is geared towards desktops and personal computers\n')
('ubuntu', 'system newer', 'centos', '', '21462120', 'this is because your ubuntu system has newer system libraries than your centos one\n')
('ubuntu', 'less desirable', 'centos', '', '263966', 'in this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versions\n')
('ubuntu', 'better', 'centos', '', '8709321', 'i believe that ubuntu is better than centos when it comes to mono as it is much easier to setup and seems to be better supported\n')
('ubuntu', 'less', 'centos', '', '263966', 'in this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versions\n')
('ubuntu', 'slower', 'centos', 'performance', '10574176', 'is there anything obvious in ubuntu that would otherwise be making sfphpview- render run slower than centos\n')

dotcover	ncover	1
('dotcover', 'less expensive', 'ncover', '', '4006956', 'as of now i think dotcover and resharper combined are less expensive than ncover\n')

stanford-nlp	opennlp	1
('stanford-nlp', 'easier', 'opennlp', 'usability', '6603262', 'i looking to use a suite of nlp tools for a personal project and i was wondering whether stanford s stanford-nlp is easier to use or opennlp\n')

google-chrome	safari	34
('google-chrome', 'main.v8.js', 'safari', '', '4332352', 'i also have .js files being redirected to javascript engines as well for main.js in google-chrome it tries main.v8.js in safari main.nitro.js in firefox main.gecko.js\n')
('safari', 'more', 'google-chrome', '', '5093790', 'i read somewhere that safari has more stringent requirements on cross domain scripting - it and google-chrome share the same code base\n')
('safari', 'more', 'google-chrome', '', '10271789', 'safari is more funny than google-chrome i can easily make google-chrome cache my page but safari does not\n')
('safari', 'better', 'google-chrome', '', '7138980', 'i think safari renders the moves better than google-chrome\n')
('safari', 'still older version', 'google-chrome', '', '19180704', 'safari still uses the older version while google-chrome uses a more current one\n')
('safari', 'more', 'google-chrome', '', '19977926', 'safari is more secure than ie or google-chrome\n')
('google-chrome', 'newer version', 'safari', '', '8073648', 'it s not even a webkit issue unless google-chrome s got a newer version than safari\n')
('safari', 'way more consistently', 'google-chrome', '', '19182824', 'the browser does not matter though safari gets way more consistently working results than google-chrome\n')
('safari', 'larger', 'google-chrome', 'memory', '4465683', 'total width of button in safari web inspector 6px larger than in google-chrome web inspector\n')
('google-chrome', 'more', 'safari', '', '2305116', 'in any case vorbis clearly has the most coverage google-chrome has more of the market than safari now opera is about half of safari and obviously firefox is huge and it doesn t really have the strong opposition that theora has\n')
('safari', 'smaller', 'google-chrome', 'memory', '4835787', 'safari will display fonts without a specified size significantly smaller than in google-chrome\n')
('google-chrome', 'slower mobile', 'safari', 'performance', '11364222', 'the one used by google-chrome and is slower than mobile safari s nitro javascript engine\n')
('safari', 'smaller', 'google-chrome', 'memory', '24042145', 'safari 5.1.10 6534.59.10 middle handles a smaller viewport but in sort order with a smaller viewport computes new image sizes even smaller than google-chrome\n')
('safari', 'more likely', 'google-chrome', '', '15194990', 'so if something works on safari it s more likely to work straightaway on google-chrome more than it is on firefox - but that s just a family resemblance at the end of the day you ll still have to test each as every webkit browser product and version still uses a different version of webkit\n')
('safari', 'more secure', 'google-chrome', '', '19977926', 'safari is more secure than ie or google-chrome\n')
('safari', 'more stringent', 'google-chrome', '', '5093790', 'i read somewhere that safari has more stringent requirements on cross domain scripting - it and google-chrome share the same code base\n')
('safari', 'slower', 'google-chrome', 'performance', '10400859', 'my ipad 1 safari js benchmarked 38 times slower than google-chrome on my pc\n')
('safari', 'better', 'google-chrome', '', '8566225', 'i guess firefox and safari handle huge numbers of elements better than google-chrome\n')
('safari', 'wider', 'google-chrome', '', '21788551', 'in safari the background of my menu navigation drop-down menu s is much wider than in google-chrome firefox\n')
('safari', 'bolder', 'google-chrome', '', '24101663', 'safari renders open sans bolder than in google-chrome so you would need to apply a lighter font weight for safari open sans google web fonts rendering in google-chrome\n')
('safari', 'more', 'google-chrome', '', '15194990', 'so if something works on safari it s more likely to work straightaway on google-chrome more than it is on firefox - but that s just a family resemblance at the end of the day you ll still have to test each as every webkit browser product and version still uses a different version of webkit\n')
('google-chrome', 'also earlier', 'safari', '', '179520', 'google-chrome also uses an earlier version of webkit than the current safari so pages should be checked in both browsers\n')
('safari', 'more funny', 'google-chrome', '', '10271789', 'safari is more funny than google-chrome i can easily make google-chrome cache my page but safari does not\n')
('google-chrome', 'also earlier version', 'safari', '', '179520', 'google-chrome also uses an earlier version of webkit than the current safari so pages should be checked in both browsers\n')
('google-chrome', 'slower', 'safari', 'performance', '11364222', 'the one used by google-chrome and is slower than mobile safari s nitro javascript engine\n')
('safari', 'better', 'google-chrome', '', '8173799', 'safari comes in at just under 41ms performing better than google-chrome but still not great\n')
('safari', 'faster', 'google-chrome', 'performance', '6688552', 'this seems to me like a bandwidth error or something like that originally i ve got the error when i played with the html 5 audio api and if i loaded the audio file 10-15 times sequentially then i ve got the error but now i ve discovered that i get the error without the audio api too just by reloading the site a lots of times also safari gives me the error much faster than google-chrome wtf\n')
('safari', 'less noticeable', 'google-chrome', '', '7138980', 'the safari controller bar is the quicktime bar which is smaller and dark so the movement is less noticeable than google-chrome which has a big blue progress bar\n')
('google-chrome', 'harder', 'safari', '', '20360593', 'dus anyone knows if there is something wrong with my json or if google-chrome is harder to get than safari\n')
('safari', 'smoother', 'google-chrome', '', '10793683', 'safari 5.1 still renders smoother than google-chrome but it is now clear that google has done much improvement\n')
('safari', 'still older', 'google-chrome', '', '19180704', 'safari still uses the older version while google-chrome uses a more current one\n')
('google-chrome', 'more', 'safari', '', '19264379', 'google-chrome has more of the market than safari not and invitation for flame wars just a personal opinion without any weight -\n')
('safari', 'way more', 'google-chrome', '', '19182824', 'the browser does not matter though safari gets way more consistently working results than google-chrome\n')
('safari', 'diff2 faster', 'google-chrome', 'performance', '3478660', 'conclusion diff1 is faster in firefox opera and safari diff2 is faster in ie and google-chrome\n')

add-on	xpcom	2
('add-on', 'way better approach', 'xpcom', 'usability', '12964786', 'you could try using c-types with ff which is a regular dll being called by javascript in your add-on this is way better approach that using xpcom because if the interfaces you use in there can change in each ff version indeed you will have to do multiple dlls each for your add-on supported ff versions\n')
('add-on', 'way better', 'xpcom', '', '12964786', 'you could try using c-types with ff which is a regular dll being called by javascript in your add-on this is way better approach that using xpcom because if the interfaces you use in there can change in each ff version indeed you will have to do multiple dlls each for your add-on supported ff versions\n')

memmove	memcpy	14
('memcpy', 'slower', 'memmove', 'performance', '18176857', 'why does memcpy perform slower than memmove on my system\n')
('memcpy', 'faster', 'memmove', 'performance', '18176857', 'from reading other so questions such as this or this gives the impression that memcpy should work faster than memmove and intuitively this should be so\n')
('memmove', 'more', 'memcpy', '', '9161130', 'note that memmove has more overhead than memcpy because it has to determine which direction of copying is safe\n')
('memcpy', 'faster', 'memmove', 'performance', '19585930', 'so in what platform and how memcpy can be significantly faster than memmove if there is none why providing two similiar functions instead of just memmove and lead to a lots of bug\n')
('memcpy', 'faster', 'memmove', 'performance', '4480146', 'if you know buffers cannot overlap memcpy is fine and may in any given library use optimizations that allow it to be faster than memmove\n')
('memmove', 'slower', 'memcpy', 'performance', '22793669', 'memmove on the laptop runs slower than memcpy but oddly enough runs at the same speed as the memmove on the server\n')
('memmove', 'slower', 'memcpy', 'performance', '17552734', 'while memmove will be only slightly slower than memcpy due to the assumptions it needs to make about the source and destination in memcpy they cannot overlap it should still be far superior to any standard loop\n')
('memmove', '2x faster', 'memcpy', 'performance', '22793669', 'edit memmove is 2x faster than memcpy on the server\n')
('memmove', 'greater', 'memcpy', '', '8205192', 'it is entirely possible that in most implementations the cost of a memmove function call will not be significantly greater than memcpy in any scenario in which the behavior of both is defined\n')
('memmove', 'slower', 'memcpy', 'performance', '1201337', 'this means that memmove might be very slightly slower than memcpy as it cannot make the same assumptions\n')
('memmove', 'more overhead', 'memcpy', 'performance', '9161130', 'note that memmove has more overhead than memcpy because it has to determine which direction of copying is safe\n')
('memcpy', 'faster', 'memmove', 'performance', '19585930', 'the question is about is there really any platform where memcpy is faster than memmove\n')
('memmove', 'slower', 'memcpy', 'performance', '22793669', 'bad news is that the asmlib version of memmove is slower than the glibc version it is now running at the 300ms mark on par with the glibc version of memcpy\n')
('memcpy', 'more efficient', 'memmove', 'performance', '6283024', 'as an aside my c c++ is rusty but is not memcpy more efficient than memmove if you know you don t have overlapping memory\n')

bazaar	git	9
('bazaar', 'slower', 'git', 'performance', '706457', 'an incredibly rough eye balling of the numbers they posted showed bazaar to be 2-4x slower than either git or mercurial in the use cases tested\n')
('git', '10x more', 'bazaar', '', '11664386', 'i would not mind changing to for example bazaar or git if needed i am a bit afraid of git to be honest everything i read about git seems 10x more technical than anything i read about mercurial or bazaar and installing it on windows seems to imply installing all sorts of secondary software it seems but that is another matter\n')
('bazaar', 'slower', 'git', 'performance', '897862', 'mercurial is significantly faster than bazaar it s slower than git though by a much smaller difference\n')
('bazaar', 'imho easier', 'git', 'usability', '77883', 'bazaar is imho easier to learn than git\n')
('git', '10x more technical', 'bazaar', '', '11664386', 'i would not mind changing to for example bazaar or git if needed i am a bit afraid of git to be honest everything i read about git seems 10x more technical than anything i read about mercurial or bazaar and installing it on windows seems to imply installing all sorts of secondary software it seems but that is another matter\n')
('git', 'better', 'bazaar', '', '16159369', 'it works fine and fits all my needs but recently i found that git works better than bazaar so i decided to use it but i face a problem with git usability because most git s gui not user friendly as bazaar explorer so i want your advice based on a practical experience which best git s gui user friendly or which one is most similar to bazaar explorer\n')
('bazaar', 'easier', 'git', 'usability', '1011950', 'bazaar is easier to extend in an api way git is easier to extend in a unix way pipes\n')
('bazaar', 'slower', 'git', 'performance', '706428', 'i hear all this stuff about bazaar being slower than git\n')
('bazaar', 'slower', 'git', 'performance', '1372564', 'a lot of articles about bazaar will tell you it is a lot slower than git or mercurial\n')

asihttprequest	cfnetwork	2
('asihttprequest', 'better', 'cfnetwork', '', '6836365', 'you can use asihttprequest which is quite better than cfnetwork\n')
('asihttprequest', 'quite better', 'cfnetwork', '', '6836365', 'you can use asihttprequest which is quite better than cfnetwork\n')

tinyint	boolean	2
('tinyint', 'more space', 'boolean', 'memory', '1731950', 'does tinyint in mysql take up more space than boolean\n')
('boolean', 'better', 'tinyint', '', '21227175', 'for all thing with boolean is better tinyint 1 or enum y n\n')

opus	speex	1
('opus', 'better', 'speex', '', '7271348', 'it will continue to be available but since opus is better than speex in all aspects users are encouraged to switch\n')

percentile	median	1
('percentile', 'more productive', 'median', '', '3877986', 'as one good programmer can be more productive than two average programmers i vaguely remember an old ibm study concluding someone in the top percentile was 27x more productive than median it s useful to see the same programmers doing it both ways\n')

ansible	puppet	1
('ansible', 'earlier stage chef', 'puppet', '', '22212327', 'ansible is in an earlier stage than chef puppet and other tools out there when it comes to community support\n')

uibezierpath	uiimage	1
('uibezierpath', 'class easier', 'uiimage', 'usability', '9974036', 'the uibezierpath class seems easier to use so how could i get that drawing in a uiimage\n')

nsurlsession	nsurlconnection	1
('nsurlsession', 'slower', 'nsurlconnection', 'performance', '25105001', 'it s not my experience that nsurlsession is any slower than nsurlconnection is\n')

netrw	nerdtree	4
('nerdtree', 'better', 'netrw', '', '23161254', 'last question is nerdtree really much better than netrw\n')
('netrw', 'more', 'nerdtree', '', '8950449', 'vim includes netrw which is already a filebrowser and i like it a lot more than nerdtree\n')
('netrw', 'more', 'nerdtree', '', '19765721', 'in the netrw plugin it would be easy but this one is not used any more as nerdtree just replaced it\n')
('nerdtree', 'better', 'netrw', '', '23161453', 'is nerdtree really much better than netrw\n')

libtiff	libjpeg	2
('libtiff', 'narrower', 'libjpeg', '', '3932742', 'the situation is critical if on some platform libtiff provides a narrower functionality and does not link to libjpeg which will not be available on that platform at all so the above command for linking will fail due to unsatisfied library dependency\n')
('libtiff', 'narrower functionality', 'libjpeg', 'usability', '3932742', 'the situation is critical if on some platform libtiff provides a narrower functionality and does not link to libjpeg which will not be available on that platform at all so the above command for linking will fail due to unsatisfied library dependency\n')

floor	sqrt	1
('floor', 'larger', 'sqrt', 'memory', '19306324', 'the other suggestion keep repeating until x stops changing does not work either because for non-perfect squares x will alternate between the floor and the ceiling of the root â because of integer mathematics the term n x will alternate when x is slightly smaller or slightly larger than sqrt n\n')

glkbaseeffect	opengl-es	2
('glkbaseeffect', 'shader', 'opengl-es', '', '9821580', 'among other things the apple template code will include creation of a glkbaseeffect which provides some shader functionality that seems to be required in order to be able to draw with opengl-es 2.0\n')
('glkbaseeffect', 'shader functionality', 'opengl-es', 'usability', '9821580', 'among other things the apple template code will include creation of a glkbaseeffect which provides some shader functionality that seems to be required in order to be able to draw with opengl-es 2.0\n')

vbo	normals	1
('vbo', 'model worse', 'normals', '', '9655339', 'when i use vertex array model looks perfect but when i switch to vbo model looks worse because of vertex normals\n')

twitter4j	scribe	1
('twitter4j', 'easier', 'scribe', 'usability', '15810279', 'i have an app that uses the public part of the twitter api the on who not requires to login but with the update the login is required so i need to implement oauth i ve seen there are libraries like twitter4j who makes this easier but my app has a lot of code and i don t wanna rewrite it not now so i ve think to use scribe or oauth-signpost but i dont realy know how to\n')

coalesce	nvl	4
('coalesce', 'stricter', 'nvl', '', '10416747', '2 however coalesce requires all arguments to be of the same data type thus being stricter than nvl which will first attempt an implicit conversion\n')
('coalesce', 'more', 'nvl', '', '9716167', 'coalesce is more efficient than nvl as it only evaluates the second argument if the first is null whereas nvl evaluates both arguments every time\n')
('coalesce', 'more portable', 'nvl', 'usability', '16041281', 'the coalesce function is used here because it is more portable than nvl or ifnull\n')
('coalesce', 'more efficient', 'nvl', 'performance', '9716167', 'coalesce is more efficient than nvl as it only evaluates the second argument if the first is null whereas nvl evaluates both arguments every time\n')

antialiasing	transparent	3
('antialiasing', 'less', 'transparent', '', '23305649', 'minus doesn t truly work for antialiasing less than 100 transparent pixels\n')
('antialiasing', 'much better however', 'transparent', '', '1445339', 'and it seems working fine antialiasing is much better however this beats the idea of a transparent background in the process\n')
('antialiasing', 'much better', 'transparent', '', '1445339', 'and it seems working fine antialiasing is much better however this beats the idea of a transparent background in the process\n')

piston	tastypie	5
('piston', 'better luck', 'tastypie', '', '2397232', '- similar to piston but i ve had better luck with tastypie\n')
('tastypie', 'more', 'piston', '', '10464883', 'tastypie is more tightly coupled to the orm than piston but there are methods that you can define in a tastypie resource to specify how to handle create read update delete\n')
('tastypie', 'better', 'piston', '', '15662815', 'edit i found out that piston was proposing query throttling but everywhere people say that tastypie is better than piston\n')
('tastypie', 'nicer', 'piston', '', '12758060', 'i recommend to take a look on tastypie which turned out to work even nicer than piston it helps you also with things like versioning your api and mamange multiple endpoints nicly\n')
('tastypie', 'more tightly', 'piston', '', '10464883', 'tastypie is more tightly coupled to the orm than piston but there are methods that you can define in a tastypie resource to specify how to handle create read update delete\n')

compiled-language	interpreted-language	19
('interpreted-language', 'slower', 'compiled-language', 'performance', '4079920', 'php is an interpreted-language so will run a little slower than a compiled-language\n')
('compiled-language', 'better performance', 'interpreted-language', 'performance', '6361528', 'writing in a compiled-language java or c++ in your examples would almost certainly give better performance than an interpreted-language like php\n')
('interpreted-language', 'much slower', 'compiled-language', 'performance', '3019070', 'and perl like any interpreted-language is much slower than a compiled-language\n')
('interpreted-language', 'more overhead', 'compiled-language', 'performance', '10049694', 'especially in an interpreted-language like php where classes add more overhead than a compiled-language\n')
('interpreted-language', 'smaller', 'compiled-language', 'memory', '15727516', 'my guess is that in interpreted-language the efficiency benefit in using switch statements is indeed smaller than in compiled-language\n')
('interpreted-language', 'slower', 'compiled-language', 'performance', '1694508', 'this is a good question but should be formulated a little different in my opinion for example why are interpreted-language slower than compiled-language\n')
('interpreted-language', 'less common', 'compiled-language', '', '1347760', 'this is usually seen in dynamic interpreted-language but is less common in compiled-language\n')
('interpreted-language', 'slower', 'compiled-language', 'performance', '6619136', 'an interpreted-language will typically run one to two orders of magnitude slower than a compiled-language\n')
('interpreted-language', 'slower', 'compiled-language', 'performance', '7993308', 'this makes interpreted-language generally slower than compiled-language due to the overhead of running the vm or interpreter\n')
('interpreted-language', 'surely easier', 'compiled-language', 'usability', '21665739', 'an interpreted-language surely makes it easier but this is still entirely possible with compiled-language like c\n')
('interpreted-language', 'slower', 'compiled-language', 'performance', '1737240', 'fact is that interpreted-language like php are always slower than a compiled-language\n')
('interpreted-language', 'slower', 'compiled-language', 'performance', '3019070', 'and perl like any interpreted-language is much slower than a compiled-language\n')
('interpreted-language', 'slower', 'compiled-language', 'performance', '5149958', 'while ruby and python are both interpreted-language and operation-for-operation slower than compiled-language the reality is in executing an application only a small portion of cpu time is spent in your code and the majority is spent into the built-in libraries you call into which are often native implementations and thus are as fast as compiled code\n')
('compiled-language', 'faster', 'interpreted-language', 'performance', '223029', 'a compiled-language will generally run faster than an interpreted-language so i think ruby and php start behind the eight ball but it really comes down to how you use the language and how you structure the code\n')
('interpreted-language', 'less', 'compiled-language', '', '1347760', 'this is usually seen in dynamic interpreted-language but is less common in compiled-language\n')
('interpreted-language', 'slower', 'compiled-language', 'performance', '17216232', 'mostly interpreted-language are a bit slower compared with compiled-language but i guess the difference is almost negligible in coffeescript javascript because of node.js\n')
('compiled-language', 'faster', 'interpreted-language', 'performance', '5670283', 'that being said a compiled-language like c will almost always be faster than an interpreted-language like javascript\n')
('interpreted-language', 'slower', 'compiled-language', 'performance', '3899501', 'interpreted-language tend to be but not always are significantly slower than compiled-language\n')
('interpreted-language', 'slower other', 'compiled-language', 'performance', '18388172', 'python is an interpreted-language so by definition is slower than other compiled-language but the drawback in the execution speed is not even noticeable in most of applications\n')

sortedlist	sorteddictionary	26
('sortedlist', 'less', 'sorteddictionary', '', '9932109', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'faster', 'sorteddictionary', 'performance', '389813', 'if the list is populated all at once from sorted data sortedlist is faster than sorteddictionary\n')
('sortedlist', 'faster', 'sorteddictionary', 'performance', '890438', 'if the sortedlist is populated all at once from sorted data it s faster than sorteddictionary\n')
('sortedlist', 'less memory', 'sorteddictionary', 'memory', '11383959', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'faster', 'sorteddictionary', 'performance', '9932109', 'sortedlist is faster than sorteddictionary\n')
('sortedlist', 'less memory', 'sorteddictionary', 'memory', '1427158', 'sortedlist tkey tvalue uses less memory than sorteddictionary tkey\n')
('sortedlist', 'less', 'sorteddictionary', '', '24681338', 'â sortedlist uses less memory than sorteddictionary\n')
('sorteddictionary', 'faster', 'sortedlist', 'performance', '472158', 'sorteddictionary has faster insertion and removal operations for unsorted data o log n as opposed to o n for sortedlist\n')
('sortedlist', 'less memory', 'sorteddictionary', 'memory', '389813', 'sortedlist uses less memory than sorteddictionary\n')
('sorteddictionary', 'faster', 'sortedlist', 'performance', '389813', 'sorteddictionary has faster insertion and removal operations for unsorted data o log n as opposed to o n for sortedlist\n')
('sorteddictionary', 'faster insertion', 'sortedlist', 'performance', '472158', 'sorteddictionary has faster insertion and removal operations for unsorted data o log n as opposed to o n for sortedlist\n')
('sortedlist', 'less memory', 'sorteddictionary', 'memory', '890438', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'less memory', 'sorteddictionary', 'memory', '472158', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'smaller', 'sorteddictionary', 'memory', '2037401', 'ignoring the cost of providing sorted input the oh of sortedlist is smaller than the oh of sorteddictionary\n')
('sortedlist', 'less', 'sorteddictionary', '', '472158', 'sortedlist uses less memory than sorteddictionary\n')
('sorteddictionary', 'faster insertion', 'sortedlist', 'performance', '389813', 'sorteddictionary has faster insertion and removal operations for unsorted data o log n as opposed to o n for sortedlist\n')
('sortedlist', 'less', 'sorteddictionary', '', '389813', 'sortedlist uses less memory than sorteddictionary\n')
('sorteddictionary', 'faster insertion', 'sortedlist', 'performance', '21734216', 'sorteddictionary has faster insertion and removal operations for unsorted data o logn as opposed to o n for sortedlist\n')
('sortedlist', 'less memory', 'sorteddictionary', 'memory', '24681338', 'â sortedlist uses less memory than sorteddictionary\n')
('sorteddictionary', 'faster', 'sortedlist', 'performance', '10950851', 'note after doing some benchmarks i found that sorteddictionary is faster for removal but sortedlist is faster for adding and indexing by key\n')
('sortedlist', 'less', 'sorteddictionary', '', '11383959', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'faster', 'sorteddictionary', 'performance', '24681338', 'sortedlist is faster than sorteddictionary\n')
('sortedlist', 'less', 'sorteddictionary', '', '890438', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'less memory', 'sorteddictionary', 'memory', '9932109', 'sortedlist uses less memory than sorteddictionary\n')
('sortedlist', 'worse', 'sorteddictionary', '', '12412950', 'you should also keep in mind that sortedlist performs worse than sorteddictionary during construction if the items are not inserted in already-sorted order although in this particular case it is highly likely that dates are inserted in chronological sorted order which would be perfect\n')
('sorteddictionary', 'faster', 'sortedlist', 'performance', '21734216', 'sorteddictionary has faster insertion and removal operations for unsorted data o logn as opposed to o n for sortedlist\n')

scikit-learn	liblinear	2
('scikit-learn', 'even better', 'liblinear', '', '18379716', 'also linearsvc class from scikit-learn performs even better than liblinear whch is also surprising considering that it s a wrapper of liblinear\n')
('scikit-learn', 'better', 'liblinear', '', '18379716', 'also linearsvc class from scikit-learn performs even better than liblinear whch is also surprising considering that it s a wrapper of liblinear\n')

branch	squash	1
('branch', 'issue much simpler', 'squash', 'usability', '13082096', 'if you will have only yours commits on your branch issue is much simpler you can do squash those git squash\n')

stripes	struts	2
('stripes', 'better', 'struts', '', '2051851', 'stripes the actionbean approach doesn t look much better than struts\n')
('stripes', 'more lightweight', 'struts', 'memory', '2085070', 'i ve found stripes to be really effective and surprisingly lightweight....it aims to be more lightweight than struts\n')

whirlpool	md5	1
('whirlpool', 'slower', 'md5', 'performance', '5082524', 'at best it is a computationally expensive hash function like whirlpool that for example is five times slower than md5 and thus allows only a fifth of the number of hash operations in opposite to md5\n')

slick2d	lwjgl	1
('slick2d', 'way easier', 'lwjgl', 'usability', '16659010', 'you could use slick2d it is way easier to use and works with lwjgl\n')

ironpython	cpython	16
('ironpython', 'better', 'cpython', '', '4337136', 'one of the largest benefits of ironpython is that it has effectively no gil - meaning that if you are both writing python code and it is multi-threaded - you can often get performance that is better than cpython without having to spawn multiple process and pickle objects across the boundaries\n')
('ironpython', 'faster', 'cpython', 'performance', '3033387', 'it s possible that jython and ironpython are much faster than cpython as well as they are backed by heavily optimized virtual machines jvm and .net clr\n')
('ironpython', 'worse', 'cpython', '', '3882058', 'so if you want to use django or something like that it s probably not smart to use ironpython because it isn t really cross-platform doesn t work with some frameworks and it performs worse than cpython\n')
('cpython', 'more', 'ironpython', '', '845066', 'i am however no cpython guru and can get so much more out of ironpython than cpython as i can easily leverage the .net platform on which i am far more at home\n')
('cpython', 'probably better', 'ironpython', '', '1168957', 'cpython probably has better ide support at present than ironpython - so this may be a factor in the choosing of one over the other\n')
('ironpython', 'faster', 'cpython', 'performance', '4148627', 'consequently ironpython is potentially faster than cpython is especially for multithreading scenarios\n')
('cpython', 'probably better ide', 'ironpython', '', '1168957', 'cpython probably has better ide support at present than ironpython - so this may be a factor in the choosing of one over the other\n')
('ironpython', 'potentially faster', 'cpython', 'performance', '4148627', 'consequently ironpython is potentially faster than cpython is especially for multithreading scenarios\n')
('cpython', 'more comfortable', 'ironpython', 'usability', '1441330', 'my understanding was it was written in vanilla python cpython but if you are more comfortable with ironpython it shouldn t be hard to translate\n')
('ironpython', 'faster', 'cpython', 'performance', '13964362', 'if there s any heavy application logic as opposed to all of the work being networking files database ironpython is much faster than cpython at a few things and much slower at a few others so you probably need to profile and perf-test before you go too far down either path\n')
('ironpython', 'just slower', 'cpython', 'performance', '19013034', 'it seems ironpython is just slower than cpython for reading text files\n')
('ironpython', 'slower', 'cpython', 'performance', '19013034', 'it seems ironpython is just slower than cpython for reading text files\n')
('ironpython', 'faster', 'cpython', 'performance', '8981895', 'ironpython is faster than c# in certain areas but not faster than cpython however you can link ironpython to any language thus over coming problems but then again you can do the same with cpython\n')
('ironpython', 'faster', 'cpython', 'performance', '620976', 'i m not sure exactly how you re drawing the conclusion that ironpython is faster than cpython\n')
('ironpython', 'slower', 'cpython', 'performance', '12843154', 'also on implementations like jython or ironpython could be a lot slower than with cpython\n')
('ironpython', 'much faster', 'cpython', 'performance', '13964362', 'if there s any heavy application logic as opposed to all of the work being networking files database ironpython is much faster than cpython at a few things and much slower at a few others so you probably need to profile and perf-test before you go too far down either path\n')

clgeocoder	mkreversegeocoder	1
('clgeocoder', 'lower', 'mkreversegeocoder', '', '12599418', 'in ios 5.0 and later you can use clgeocoder of core location framework as for ios lower than 5.0 mkreversegeocoder of map kit framework\n')

strdup	free	1
('strdup', 'worse', 'free', '', '12993581', 'in c memory most other things are managed by the programmer so strdup is no worse than forgetting to free malloc ed memory failing to null terminate a string using incorrect format string in scanf and invoking undefined behaviour accessing dangling pointer etc\n')

pdcurses	ncurses	1
('pdcurses', 'more', 'ncurses', '', '9114289', 'i ve found pdcurses which is more like the ncurses but it lacks a lot of ncurses libraries\n')

apache	lighttpd	9
('apache', 'more', 'lighttpd', '', '172177', 'the benefit of both apache is more powerful and extensible useless if you don t need that power but anyway... and lighttpd is faster at static content\n')
('lighttpd', 'less overhead', 'apache', 'performance', '12411541', 'it may even use a different server software say nginx or lighttpd that has less overhead than the traditional apache setup\n')
('lighttpd', 'less ram', 'apache', '', '23856324', 'nginx or lighttpd in fastcgi mode use less ram than apache and they can handle more concurrent connections\n')
('lighttpd', 'fewer resources', 'apache', '', '3946868', 'since you ve switched to lighttpd the webserver itself is going to use fewer resources than apache would but apache is rarely the bottleneck unless you ve run out of ram or seriously misconfigured it\n')
('lighttpd', 'less', 'apache', '', '12411541', 'it may even use a different server software say nginx or lighttpd that has less overhead than the traditional apache setup\n')
('apache', 'more powerful', 'lighttpd', 'usability', '172177', 'the benefit of both apache is more powerful and extensible useless if you don t need that power but anyway... and lighttpd is faster at static content\n')
('lighttpd', 'faster', 'apache', 'performance', '2769643', '- if you move towards more static content or go the fastcgi way lighttpd is faster than apache\n')
('lighttpd', 'more suitable', 'apache', '', '6608307', 'this is my first experience setting up lighttpd as i thought it would be more suitable than apache in this case\n')
('lighttpd', 'even faster', 'apache', 'performance', '371821', 'for instance in some benchmarks lighttpd is even faster at serving static resources than apache\n')

boost	stl	9
('stl', 'much richer', 'boost', '', '4778449', 'as for not reinventing the wheel like many have said already make sure to first explore the possibilities in the standard template library stl which is much richer than you might think and then look at boost www.boost.org which has libraries for a lot of diverse purposes and they are extremely high quality and some are just works of art like spirit proto lambda and mpl\n')
('boost', 'more', 'stl', '', '1577097', 'while boost is more modern c++ it also harder to use for non trivial tasks - and without a modern c++ experience and deep stl knowledge it is difficult to use correctly\n')
('stl', 'better', 'boost', '', '8231535', 'c++ s stl is getting better and better yet it s not nearly as huge as boost and is not intended to\n')
('boost', 'better', 'stl', '', '277306', 'i ve used both for the same project boost is better integrated with the stl and especially c++ exceptions\n')
('boost', 'more modern', 'stl', '', '1577097', 'while boost is more modern c++ it also harder to use for non trivial tasks - and without a modern c++ experience and deep stl knowledge it is difficult to use correctly\n')
('boost', 'better solution', 'stl', '', '3024677', 'boost s io stream might be a better solution than stl s own stream\n')
('stl', 'better', 'boost', '', '548848', 'once you re past the basics with c++ learning how to use parts of stl and then how it works will be better than tackling boost\n')
('boost', 'greater mastery', 'stl', '', '8222708', 'i don t want to use boost because that s a library i haven t used extensively yet and i m doing this partly as an exercise to gain greater mastery over the stl\n')
('boost', 'less standard', 'stl', '', '548827', 'boost libraries are generally less mature and less standard than stl\n')

pyglet	pyopengl	2
('pyglet', 'more', 'pyopengl', '', '408981', 'i d say that pyglet is actually more evolved than pyopengl\n')
('pyglet', 'actually more', 'pyopengl', '', '408981', 'i d say that pyglet is actually more evolved than pyopengl\n')

acid	consistency	2
('acid', 'principles much more easy', 'consistency', '', '17914452', 'using a database system such as sqlite or mysql that follows the acid principles is much more easy as the database system guarantees consistency atomicity of the transactions isolation and durability\n')
('acid', 'principles much more', 'consistency', '', '17914452', 'using a database system such as sqlite or mysql that follows the acid principles is much more easy as the database system guarantees consistency atomicity of the transactions isolation and durability\n')

bufferedwriter	fileoutputstream	1
('bufferedwriter', 'even worse', 'fileoutputstream', '', '6976914', 'for a few bytes passed in just one call probably the bufferedwriter is even worse because it problably later calls fileoutputstream\n')

wxhaskell	gtk2hs	1
('wxhaskell', 'better', 'gtk2hs', '', '2896854', 'in practice i ve never had resource management issues with wxhaskell although i agree that it s possible and is an area handled better by gtk2hs which uses reference counting in the underlying library\n')

qtreewidget	qlistwidget	1
('qtreewidget', 'more involved', 'qlistwidget', '', '23836692', 'posting here an example showing how to implement same approach but now applied to qtreewidget which a bit more involved than qlistwidget\n')

fgets	fgetc	2
('fgetc', 'simpler', 'fgets', 'usability', '13322357', 'fgetc is a function to read a single char simpler than using fgets\n')
('fgets', 'faster multiple', 'fgetc', 'performance', '5186505', 'if not multiple fgets calls will still be faster than multiple fgetc calls because the overhead of the latter will be greater\n')

strlen	strncpy	2
('strlen', 'source greater', 'strncpy', '', '21974397', 'however if strlen source is greater than n then strncpy will simply copy the first n bytes and will not terminate the string dest with a null byte because there is no space for it\n')
('strlen', 'greater', 'strncpy', '', '10388582', 'this is the case here because strlen hello is greater than 3 your last strncpy argument\n')

ini	config	6
('config', 'probably better', 'ini', '', '21449065', 'if you intend manual config it s probably better to choose something else for example ini\n')
('config', 'faster', 'ini', 'performance', '2015715', 'since json can store arrays i can create quite complex config with it and it parses faster than ini files\n')
('ini', 'less', 'config', '', '677459', 'ini is really a much simpler format than xml if you have less than fifty config options and they are not nested\n')
('config', 'simpler', 'ini', 'usability', '17799411', 'it is similar to incron however config uses a simpler to read ini file instead of a plain text file\n')
('config', 'slightly more powerful', 'ini', 'usability', '8377835', 'because spring s xml config is slightly more powerful than shiro s ini spring users are encouraged to use full spring config instead of shiro ini\n')
('config', 'slightly more', 'ini', '', '8377835', 'because spring s xml config is slightly more powerful than shiro s ini spring users are encouraged to use full spring config instead of shiro ini\n')

ats	agda	1
('ats', 'less elegant', 'agda', 'usability', '10800833', 'ats is a dependently-typed language that is designed for low-level programming though it s somewhat less elegant than agda\n')

puma	webrick	2
('puma', 'also better concurrency', 'webrick', '', '13532865', 'puma also has better concurrency but that threadsafe confgi make webrick multi-thread for me\n')
('puma', 'also better', 'webrick', '', '13532865', 'puma also has better concurrency but that threadsafe confgi make webrick multi-thread for me\n')

bitblt	stretchblt	1
('bitblt', 'x75 faster', 'stretchblt', 'performance', '23450377', 'from my tests bitblt is x75 faster than stretchblt\n')

guava	lambdaj	3
('guava', 'more popular', 'lambdaj', 'usability', '19599464', 'the guava library is much more popular than lambdaj and does allow you to avoid for while loops by using preficates and filter methods\n')
('guava', 'library much more popular', 'lambdaj', 'usability', '19599464', 'the guava library is much more popular than lambdaj and does allow you to avoid for while loops by using preficates and filter methods\n')
('guava', 'library much more', 'lambdaj', '', '19599464', 'the guava library is much more popular than lambdaj and does allow you to avoid for while loops by using preficates and filter methods\n')

updatepanel	scriptmanager	4
('updatepanel', 'more time', 'scriptmanager', 'performance', '22788420', 'in case if updatepanel takes more time to process set asyncpostbacktimeout property of your scriptmanager\n')
('updatepanel', 'more', 'scriptmanager', '', '5565423', 'i have found that using jquery javascript inside an updatepanel is more hassel than it is worth as you always need to output the jquery javascript using the scriptmanager or the scriptmanager.registerclientscriptblock\n')
('updatepanel', 'more hassel', 'scriptmanager', '', '5565423', 'i have found that using jquery javascript inside an updatepanel is more hassel than it is worth as you always need to output the jquery javascript using the scriptmanager or the scriptmanager.registerclientscriptblock\n')
('updatepanel', 'more', 'scriptmanager', '', '22788420', 'in case if updatepanel takes more time to process set asyncpostbacktimeout property of your scriptmanager\n')

qtreeview	qtableview	1
('qtreeview', 'slower', 'qtableview', 'performance', '17464100', 'qtreeview is known for being slower than a qtableview and consume a lot of memory and you are using a plain table model anyways so try with a qtableview\n')

128bit	64bit	5
('128bit', 'slower', '64bit', 'performance', '17645369', 'so a 128bit adder will be slower than a 64bit add\n')
('128bit', 'larger', '64bit', 'memory', '1434405', 'and i ll just add to previous comment if 128bit number has prime factor larger than 64bit then it certainly has a factor less than 64bit\n')
('128bit', 'math faster', '64bit', 'performance', '9318444', 'in a few more years there might be an architecture where 128bit math is faster than 64bit but i don t think any exists today\n')
('128bit', 'larger', '64bit', 'memory', '1433909', 'i ll just add that if the 128bit number is prime or has a prime factor larger than 64bit then there will be no solution to your problem\n')
('128bit', 'more', '64bit', '', '1464230', 'perhaps 128bit distributed-system internet-wide pointers but no more than 64bit in a system call or perhaps even a legacy 32-bit limit\n')

miglayout	gridbaglayout	4
('miglayout', 'less difficult', 'gridbaglayout', '', '7514203', 'look at the quick start guide on the miglayout site it s a lot less difficult than gridbaglayout and much more powerful\n')
('miglayout', 'much more', 'gridbaglayout', '', '16595066', 'you can also check out the open-source miglayout which is much more convenient that gridbaglayout and also a bit more powerful\n')
('miglayout', 'probably easier', 'gridbaglayout', 'usability', '12658326', 'edit for clarification miglayout is probably easier to use than gridbaglayout but if you get familiar with gridbaglayout it s not that hard to use and it doesn t require a download since it s part of the core java library\n')
('miglayout', 'much more convenient', 'gridbaglayout', 'usability', '16595066', 'you can also check out the open-source miglayout which is much more convenient that gridbaglayout and also a bit more powerful\n')

cons	cdr	1
('cons', 'simpler', 'cdr', 'usability', '20574442', 'as a practical matter a cons is simpler than a list so you can get the value with a straight cdr rather than the conceptually more complex cadr the car of the cdr\n')

android-emulator	bluestacks	2
('android-emulator', 'better', 'bluestacks', '', '10101698', 'in xda-forums i read about memu - most powerful android-emulator for pc better than bluestacks\n')
('bluestacks', 'more possibilities', 'android-emulator', '', '13373733', 'yes some functionality possible only on device but you can try also bluestacks app player which has more possibilities than android-emulator\n')

next	except	7
('except', 'greater', 'next', '', '10924146', 'now i would like to take the ceiling of this number except in cases where the amount it is greater than the next lower integer is smaller than some epsilon\n')
('next', 'digit greater', 'except', '', '23263562', 'for such numbers as 54321 the else statement will be executed never because any next digit is greater than max1 except the first two digits\n')
('next', 'solution faster', 'except', 'performance', '19105903', 'the next solution is faster than using in and except clauses\n')
('except', 'accordion imho better', 'next', '', '5690589', 'for me they serve pretty same purpose to hide complexity except accordion is imho better for continuous-reading it s easier to quickly go to next section while tabs seems to be more random-access\n')
('next', 'example more', 'except', '', '22646025', 'the next example does more or less the same except from an oop perspective\n')
('next', 'greater max1', 'except', '', '23263562', 'for such numbers as 54321 the else statement will be executed never because any next digit is greater than max1 except the first two digits\n')
('next', 'more', 'except', '', '4559066', 'in both cases you may also have to shift one or two elements off the start end of some blocks to the end start of the previous next block again at most o n 1 2 times to maintain an invariant that no two blocks differ in size by more than 1 except for the last which is used to take up slack\n')

hash	crypt	3
('hash', 'newer', 'crypt', '', '10281373', 'hash is newer and seems to support more hashing alogrithms than crypt\n')
('hash', 'many more', 'crypt', '', '9108430', 'the second hashing function is hash which supports many more algorithms and variants than crypt but does not support some algorithms that crypt does\n')
('hash', 'many more algorithms', 'crypt', '', '9108430', 'the second hashing function is hash which supports many more algorithms and variants than crypt but does not support some algorithms that crypt does\n')

testdriven.net	xunit.net	1
('testdriven.net', 'easier', 'xunit.net', 'usability', '4103837', 'one option is to install testdriven.net which makes it easier to run unit tests on any of the major unit testing .net frameworks nunit xunit.net vs tools etc\n')

required	placeholder	1
('required', 'more', 'placeholder', '', '17626712', 'in such a case passing by value may no required actually passing anything at all -- the value that s passed is basically little or nothing more than a placeholder for this is the object\n')

datediff	difference	3
('datediff', 'more difficult', 'difference', '', '81983', 'datediff becomes more difficult to use as you have more dateparts in your difference in your case looks like minutes and seconds\n')
('difference', 'larger', 'datediff', 'memory', '16333387', 'note that diffseconds can cause an overflow when the difference becomes larger than int32.maxvalue error the datediff function resulted in an overflow\n')
('datediff', 'more', 'difference', '', '81983', 'datediff becomes more difficult to use as you have more dateparts in your difference in your case looks like minutes and seconds\n')

openrasta	wcf	8
('openrasta', 'much more mature', 'wcf', '', '6227583', 'openrasta is much more mature than wcf web api\n')
('openrasta', 'much simpler', 'wcf', 'usability', '2288413', 'building restful services with openrasta is much simpler than with wcf in my experience\n')
('openrasta', 'more', 'wcf', '', '6227193', 'though openrasta looks more mature than wcf web api i m still a bit confused\n')
('openrasta', 'more mature', 'wcf', '', '6227193', 'though openrasta looks more mature than wcf web api i m still a bit confused\n')
('openrasta', 'more mature', 'wcf', '', '6227583', 'openrasta is much more mature than wcf web api\n')
('openrasta', 'simpler', 'wcf', 'usability', '2288413', 'building restful services with openrasta is much simpler than with wcf in my experience\n')
('openrasta', 'better', 'wcf', '', '6487982', 'is openrasta better than wcf\n')
('openrasta', 'much more', 'wcf', '', '6227583', 'openrasta is much more mature than wcf web api\n')

textctrl	wxpython	1
('textctrl', 'more', 'wxpython', '', '7097874', 'i have been working on a simple textctrl project to get more acquainted with wxpython and i have hit a small road block\n')

gridview	checkboxlist	2
('gridview', 'control better', 'checkboxlist', 'usability', '19729088', 'since you re presenting multiple columns a gridview control is a better alternative to checkboxlist\n')
('gridview', 'control better alternative', 'checkboxlist', 'usability', '19729088', 'since you re presenting multiple columns a gridview control is a better alternative to checkboxlist\n')

colorbox	fancybox	1
('colorbox', 'much faster', 'fancybox', 'performance', '9065359', 'i ve had to replace lyebox with colorbox which is much faster and seemingly has less problems conflicting with other scripts lightbox fancybox and others wouldn t work for me\n')

heroku	openshift	2
('heroku', 'toolbelt much more', 'openshift', '', '15770527', 'having used both i can tell you that it s a much more polished platform the servers are about 4ã faster you can run as many apps as you want and the heroku toolbelt is much more powerful than the openshift s client tools\n')
('heroku', 'toolbelt much more powerful', 'openshift', 'usability', '15770527', 'having used both i can tell you that it s a much more polished platform the servers are about 4ã faster you can run as many apps as you want and the heroku toolbelt is much more powerful than the openshift s client tools\n')

fgets	atoi	1
('fgets', 'more', 'atoi', '', '22819227', 'so here fgets is reading more than one integer at a time from file so atoi is not getting the integers in file too\n')

lz4	snappy	1
('lz4', 'probably better', 'snappy', '', '21870564', 'lz4 is probably better though snappy was developed by google with protobufs in mind so you might want to test both on your data set.\n')

map	dictionary	6
('map', 'more', 'dictionary', '', '19670609', 'the difference between a map and vector is a like an array while a map is more a dictionary of key value pairs\n')
('dictionary', 'slower std', 'map', 'performance', '2699569', 'for suitably large examples of each dictionary overcomes the constant factor by which it s slower than std map and will actually do operations like lookup insertion etc\n')
('dictionary', 'implementation faster', 'map', 'usability', '4157451', 'the immutable dictionary implementation is faster but no less pure in usage than the map implementation\n')
('map', 'slower', 'dictionary', 'performance', '2699569', 'std map though is actually implemented in a way that many operations are slower than dictionary as its size gets large\n')
('map', 'worse algorithmic', 'dictionary', '', '2699569', 'i definitely wouldn t try introducing a new general-purpose type for use in python based on std map which has worse algorithmic complexity in time for many important operations andâ in at least some implementationsâ leaves some optimisations to the user that dictionary already has\n')
('map', 'worse', 'dictionary', '', '2699569', 'i definitely wouldn t try introducing a new general-purpose type for use in python based on std map which has worse algorithmic complexity in time for many important operations andâ in at least some implementationsâ leaves some optimisations to the user that dictionary already has\n')

mayavi	matplotlib	3
('mayavi', 'way better', 'matplotlib', '', '20386398', 'anyway if you re willing to do advanced 3d stuff mayavi is way better than matplotlib\n')
('mayavi', 'easier', 'matplotlib', 'usability', '4739360', 'mayavi makes it easier to visualize the data but matplotlib looks more professional\n')
('mayavi', 'better', 'matplotlib', '', '20386398', 'anyway if you re willing to do advanced 3d stuff mayavi is way better than matplotlib\n')

xamarin.android	mono	1
('xamarin.android', 'faster', 'mono', 'performance', '22214966', 'i m using xamarin.android to write c# but the native java rsa key generator is much faster than the mono one\n')

highcharts	fusioncharts	2
('highcharts', 'more', 'fusioncharts', '', '10647688', 'customization and variety of animations highcharts has more customizable animations when compared to fusioncharts javascript charts\n')
('highcharts', 'more customizable', 'fusioncharts', '', '10647688', 'customization and variety of animations highcharts has more customizable animations when compared to fusioncharts javascript charts\n')

uppercase	tolower	1
('uppercase', 'comparison more', 'tolower', '', '2256479', 'further uppercase comparison is more optimized than tolower if that tiny degree of performance matters\n')

resharper	justcode	1
('resharper', 'more', 'justcode', '', '5837140', 'together resharper was finding more than justcode\n')

retaincount	dealloc	1
('retaincount', 'greater', 'dealloc', '', '10116389', 'if your array s retaincount is greater than 1 at the start of dealloc some other object is retaining it at least temporarily\n')

flex	osmf	2
('flex', 'older less', 'osmf', '', '4487496', 'flex uses an older less capable version of the osmf platform for its videoplayer\n')
('flex', 'older', 'osmf', '', '4487496', 'flex uses an older less capable version of the osmf platform for its videoplayer\n')

qcubed	qcodo	1
('qcubed', 'community much stronger', 'qcodo', '', '843733', 'qcubed community is much stronger at the moment so you might want to check in qcodo forum for your answers on basic problems but post on the qcubed forum\n')

jrebel	hotswap	2
('jrebel', 'much more powerful', 'hotswap', 'usability', '15466805', 'it is worth mentioning that there is a commercial product named jrebel that is much more powerful than jvm hotswap\n')
('jrebel', 'much more', 'hotswap', '', '15466805', 'it is worth mentioning that there is a commercial product named jrebel that is much more powerful than jvm hotswap\n')

tooltip	scrollbar	1
('tooltip', 'text more', 'scrollbar', '', '20739296', 'tooltip text is more scrollbar is displayed to scroll through to\n')

bundler	rvm	4
('rvm', 'more', 'bundler', '', '15014912', 'rvm supports more then just .rvmrc one of this files is gemfile with either the bundler directive to specify ruby\n')
('rvm', 'more then', 'bundler', '', '15014912', 'rvm supports more then just .rvmrc one of this files is gemfile with either the bundler directive to specify ruby\n')
('bundler', 'better', 'rvm', '', '9771172', 'bundler is a better way to manage application dependencies. there is a plugin rbenv-gemset for getting the same results as rvm s gemsets but sam clearly favors using bundler instead\n')
('bundler', 'better way', 'rvm', '', '9771172', 'bundler is a better way to manage application dependencies. there is a plugin rbenv-gemset for getting the same results as rvm s gemsets but sam clearly favors using bundler instead\n')

antivirus	norton	1
('antivirus', 'better', 'norton', '', '215539', 'many other antivirus software that works just as well if not better than norton like avg avast and others do allow you to uninstall from the add remove\n')

viewdidappear	viewwillappear	1
('viewdidappear', 'more', 'viewwillappear', '', '4297436', 'in this case viewdidappear behaves more like viewwillappear ..\n')

tabcontrol	tabitem	1
('tabcontrol', 'more', 'tabitem', '', '17307459', 'edit i can only reproduce this error when i have a tabcontrol with more than one tabitem\n')

kmz	gpx	1
('kmz', 'quicker', 'gpx', '', '12825810', 'kmz loads much quicker than gpx and can be integrated with the google maps api as a kml layer\n')

cappuccino	sproutcore	5
('cappuccino', 'probably more', 'sproutcore', '', '3286643', 'like bruz says cappuccino is probably more freeform at the data layer than sproutcore\n')
('sproutcore', 'better data', 'cappuccino', '', '4289512', 'sproutcore has a better data store api than the one cappuccino has\n')
('sproutcore', 'better', 'cappuccino', '', '4289512', 'sproutcore makes use of bindings better than cappuccino currently does\n')
('sproutcore', 'better', 'cappuccino', '', '4289512', 'sproutcore has a better data store api than the one cappuccino has\n')
('cappuccino', 'probably more freeform', 'sproutcore', '', '3286643', 'like bruz says cappuccino is probably more freeform at the data layer than sproutcore\n')

mouseleave	mouseover	3
('mouseleave', 'better', 'mouseover', '', '8060841', 'it should also be noted that mouseenter and mouseleave work somewhat differently and usually much better than mouseover and mouseout\n')
('mouseleave', 'more reliable', 'mouseover', 'reliability', '11345144', 'also you might want to use mouseenter and mouseleave which are sanitized by jquery and are a little more reliable than mouseover and mouseout\n')
('mouseleave', 'more reliable', 'mouseover', 'reliability', '13688947', 'imho mouseenter and mouseleave are much more reliable than mouseover and mouseout which tend to flicker\n')

cakephp	zend-framework	1
('cakephp', 'lighter', 'zend-framework', 'memory', '6018469', 'since cakephp seems to be much lighter than zend-framework i would suggest that you take a look at cakephp\n')

tunnel	vpn	1
('tunnel', 'nothing more', 'vpn', '', '9325951', 'and between we are just looking to send and receive data over tunnel there is nothing more or need to control computer on the network all we need is to route data through corporate firewall and should support multiple vpn servers such as cisco microsoft etc\n')

hide	fadeout	3
('hide', 'slightly faster then', 'fadeout', 'performance', '10718309', 'according to this test - hide is slightly faster then fadeout since it doesn t use animations\n')
('fadeout', 'simpler', 'hide', 'usability', '19911956', 'fadeout is simpler because it will hide it for you automatically when it is done so you can save that code and it automatically waits for the animation to be done before hiding the element something your current code was not doing\n')
('hide', 'slightly faster', 'fadeout', 'performance', '10718309', 'according to this test - hide is slightly faster then fadeout since it doesn t use animations\n')

png	bmp	6
('png', 'slower', 'bmp', 'performance', '20219087', 'jpg png is slower to draw than a bmp\n')
('png', 'format much more complex', 'bmp', 'usability', '11533065', 'note that the png format is much more complex than bmp since it allows compression etc\n')
('png', 'format much more', 'bmp', '', '11533065', 'note that the png format is much more complex than bmp since it allows compression etc\n')
('bmp', 'lower resolution', 'png', '', '13790064', 'is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png\n')
('png', 'smaller', 'bmp', 'memory', '5756128', 'not only do png files have natural support for transparency they are also smaller than bmp files\n')
('png', 'more complex', 'bmp', 'usability', '11533065', 'note that the png format is much more complex than bmp since it allows compression etc\n')

intersect	contains	3
('intersect', 'greater', 'contains', '', '422343', 'given two ranges a a b and c c d do they intersect is one greater than the other or does one contains the other\n')
('intersect', 'slower', 'contains', 'performance', '22813163', 'edit just checked the performance of intersect it is slower than using .all with contains\n')
('intersect', 'better', 'contains', '', '13715546', 'i d say the intersect method see answer by dasblinkenlight + any must work better than contains + any\n')

flac	ogg	1
('flac', 'less', 'ogg', '', '3169917', 'i suspect the computational demands of flac decoding are probably considerably less than ogg and if dsp gets you excited taking the time to figure all this stuff out is 100 worth it even if the flash route possibly leads to disappointment\n')

many-to-one	many-to-many	2
('many-to-one', 'much more', 'many-to-many', '', '24982430', 'where instead of expected many-to-one is much more complex and partially expressed many-to-many\n')
('many-to-one', 'much more complex', 'many-to-many', 'usability', '24982430', 'where instead of expected many-to-one is much more complex and partially expressed many-to-many\n')

getline	getchar	1
('getline', 'probably better', 'getchar', '', '2472862', 'getline is probably better than getchar in most cases\n')

cpu	hyperthreading	2
('cpu', 'more', 'hyperthreading', '', '149212', 'almost any new cpu has more than one core or if it has just one it might support hyperthreading and thus pretending it has more than one\n')
('hyperthreading', 'more', 'cpu', '', '19170153', 'vcpu reg are virtual cpu registers that exist on many processors that have things like multiple cores hyperthreading or other features that enable higher layers to believe that there is more than one cpu present when there isn t -- such as today s x86s\n')

xslt	xquery	15
('xslt', 'significantly more appropriate', 'xquery', '', '5849881', 'xslt is significantly more appropriate to use than xquery for such kind of tasks\n')
('xslt', 'better', 'xquery', '', '1907942', 'as for whether to use xslt or xquery the proof is in the pudding xslt is better at transforms and xquery is better at queries\n')
('xquery', 'streaming better', 'xslt', '', '5689727', 'saxon-ee supports streaming of large xml documents using xslt or xquery streaming is better supported in xslt than in xquery\n')
('xquery', 'better', 'xslt', '', '8375240', 'my usual rule-of-thumb is that xquery is better than xslt for simple tasks whereas xslt is better for complex tasks\n')
('xquery', 'better', 'xslt', '', '18728322', 'xquery works better than xslt for this because it s more amenable to static analysis as it lacks the polymorphism of xslt s template rules\n')
('xquery', 'more strongly', 'xslt', '', '1908876', 'unless you are using the static typing feature xquery is no more strongly typed than xslt\n')
('xslt', 'more expressive', 'xquery', '', '7610958', 'this kind of processing is most easily done with xslt which is more expressive than xquery\n')
('xslt', 'much better', 'xquery', '', '5165338', 'as dimitre says xslt is much better at this class of problem than xquery\n')
('xslt', 'simpler', 'xquery', 'usability', '10261092', 'if your output is going to be similar to your input with small changes then the xslt solution is often a lot simpler than the xquery solution\n')
('xslt', 'much better', 'xquery', '', '25684670', 'i hate to answer a request for a solution in language a by suggesting a solution in language b but what you are doing here falls into the class of problems which xslt handles much better than xquery\n')
('xslt', 'more', 'xquery', '', '7610958', 'this kind of processing is most easily done with xslt which is more expressive than xquery\n')
('xslt', 'better', 'xquery', '', '25684670', 'i hate to answer a request for a solution in language a by suggesting a solution in language b but what you are doing here falls into the class of problems which xslt handles much better than xquery\n')
('xslt', 'better', 'xquery', '', '16190637', 'generally i know it sounds banal xslt is better at transformation generating a new document from each source document while xquery is better at query extracting a small amount of information from each source document\n')
('xslt', 'significantly more', 'xquery', '', '5849881', 'xslt is significantly more appropriate to use than xquery for such kind of tasks\n')
('xquery', 'more', 'xslt', '', '1908876', 'unless you are using the static typing feature xquery is no more strongly typed than xslt\n')

nemerle	boo	1
('nemerle', 'more powerful', 'boo', 'usability', '4575558', 'i read somewhere that nemerle s macro service is more powerful than boo s\n')

node.js	express	2
('node.js', 'better', 'express', '', '19130458', 'first its not a bad idea to use node.js to satisfy your requirement the uniqueness of node and added advantage compared to conventional technologies like apache-php is clearly explained in this following video why node.js is better .the notion of node being just used for advanced or complex applications is wrong you can use node for building applications which are very simple to anything of huge proportion.it would be a not so comfortable task for a node beginner to code without using any frameworks but by using this web application framework called express you need not code from scratch and its very easy to setup html pages using its simplified html templating language called jade and route requests also you can even use your html pages if you are not willing to use jade for rendering the views of your application .here are the series of tutorials which would help you tutorials on beginning with node.js basics of expressjs\n')
('node.js', 'better .the', 'express', '', '19130458', 'first its not a bad idea to use node.js to satisfy your requirement the uniqueness of node and added advantage compared to conventional technologies like apache-php is clearly explained in this following video why node.js is better .the notion of node being just used for advanced or complex applications is wrong you can use node for building applications which are very simple to anything of huge proportion.it would be a not so comfortable task for a node beginner to code without using any frameworks but by using this web application framework called express you need not code from scratch and its very easy to setup html pages using its simplified html templating language called jade and route requests also you can even use your html pages if you are not willing to use jade for rendering the views of your application .here are the series of tutorials which would help you tutorials on beginning with node.js basics of expressjs\n')

cloudant	couchdb	4
('cloudant', 'more', 'couchdb', '', '16593266', 'regarding cloudant it s more or less just couchdb so to connect you can use these libraries from the couchdb wiki\n')
('cloudant', 'more features vanilla', 'couchdb', 'usability', '20685886', 'due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n')
('cloudant', 'more features', 'couchdb', 'usability', '20685886', 'due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n')
('cloudant', 'more', 'couchdb', '', '20685886', 'due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant\n')

uiswipegesturerecognizer	catransition	1
('uiswipegesturerecognizer', 'better', 'catransition', '', '10407713', 'if you want to use a continuous gesture that tracks the user s finger you can use uipangesturerecognizer rather than uiswipegesturerecognizer and i think animatewithduration is better than catransition in that case\n')

range	median	1
('range', 'smaller', 'median', 'memory', '19693299', 'you should also adjust your conditionals to check for a low high range as it should quickly get smaller as your median value approaches the real value\n')

wan	lan	1
('wan', 'less', 'lan', '', '19719152', 'even if all the traffic resides on the same network the client traffic will have been throttled by your wan capacity which is always less than your lan capacity\n')

ng-show	ng-class	1
('ng-show', 'better option', 'ng-class', 'usability', '25702788', 'edit as mentioned by chandresh using the ng-show directive with a true false value would be a better option than using ng-class\n')

binary	octal	1
('binary', 'more useful', 'octal', 'usability', '12205716', 'you ll need to convert binary to another base here i use decimal when writing this code because c doesn t have binary constants which would be ten times more useful than octal constants\n')

sublimetext	textmate	2
('sublimetext', 'more', 'textmate', '', '13445838', 'but i ve found that sublimetext 2 has some features i like more than textmate and also tm v2 which is in beta\n')
('sublimetext', 'much thicker', 'textmate', '', '24598390', 'macvim sublimetext is much thicker whereas textmate is slicker and sophisticated\n')

xlib	sdl	1
('xlib', 'faster', 'sdl', 'performance', '23998096', 'in my experience xlib via mit-shm extension was significantly faster than sdl surfaces not sure i used sdl in the most optimal way though\n')

gedit	komodo	1
('gedit', 'quicker', 'komodo', '', '2066036', 'when i m in a hurry i use gedit purely because it is quicker than komodo edit\n')

capybara	rspec	2
('capybara', 'more sense', 'rspec', '', '9906488', 'i use rspec and capybara together but the language syntax of capybara makes more sense is semantic as rspec when testing for request expectations\n')
('capybara', 'more', 'rspec', '', '9906488', 'i use rspec and capybara together but the language syntax of capybara makes more sense is semantic as rspec when testing for request expectations\n')

localization	translation	4
('localization', 'more just', 'translation', '', '8732514', 'i d have one project team responsible for localization which may well involve more than just translation - different countries have different legal requirements currencies payment providers etc. and one team for improving the code base\n')
('translation', 'better way', 'localization', '', '9722966', 'is the best solution to add a new column called engmaterial and add the english translation there or is it possible to solve this in a better way with localization in .net\n')
('localization', 'easier', 'translation', 'usability', '539857', 'localization it s easier to translation text than images\n')
('localization', 'more', 'translation', '', '4362280', 'this is where i learned that localization is a lot more than translation\n')

vpn	lan	1
('vpn', 'slower', 'lan', 'performance', '14573814', 'the reason why the vpn is slow is well because your vpn is likely 50 to 100 times slower than your lan local area network\n')

uiview	subviews	9
('uiview', 'smaller frame', 'subviews', 'memory', '1361527', 'i want to add a uiview of smaller frame as subviews to parental view but i am not getting the needed\n')
('uiview', 'less', 'subviews', '', '16751084', 'the issue is that once the alpha of the uiview is less than 1.0 i can see all the subviews sides and the one that gets me the most is the outline of an uiimageview can be seen that would otherwise not as it is the same colour as the uiview\n')
('uiview', 'bigger', 'subviews', 'memory', '11452372', 'when using embed in - uiview the new view will be a bit bigger than the subviews\n')
('subviews', 'version definitely faster', 'uiview', 'performance', '22545659', 'the subviews version is definitely faster since having the controls loose on the uiview took more like 2 seconds to update\n')
('uiview', 'more memory', 'subviews', 'memory', '11065866', 'you are seeing a noticeable jump in interface response because subviews do in fact consume quite a bit of memory uiview are very expensive compared to their underlying calayers and as such calling -removesubview not only unloads stress from the gpu but also frees up more memory as the subviews is usually released afterwards\n')
('uiview', '4px larger', 'subviews', 'memory', '3357911', 'do i just create a new uiview that is 4px larger than the selected object and and make the selected view a subviews of it\n')
('uiview', 'smaller', 'subviews', 'memory', '19924321', 'though earlier uiview and uiscrollview have the same area after keyboard shown the blue uiview becomes smaller but its subviews button text fields is outside its area\n')
('uiview', 'more', 'subviews', '', '6756801', 'change the contentsize of your scrollview.your uiview size and uiscrollview size is same if the uiscrollview contentsize is more than its subviews size then scroll will happen change the line overviewscroll setcontentsize cgsizemake screenframe.size.width screenframe.size.height-25\n')
('uiview', 'more', 'subviews', '', '6275623', 'of course uiscrollview can have more than one content view just as any uiview can have more than one subviews and this case it will be more difficult to render its layer\n')

wsimport	wsdl2java	1
('wsimport', 'better', 'wsdl2java', '', '12248473', 'wsimport is better don t use wsdl2java\n')

xcb	xlib	3
('xcb', 'lower level', 'xlib', '', '21216728', 'xcb is lower level than xlib and allows you to minimise the number of round-trips to the x server leading to lower latency\n')
('xcb', 'lower', 'xlib', '', '21216728', 'xcb is lower level than xlib and allows you to minimise the number of round-trips to the x server leading to lower latency\n')
('xcb', 'simpler', 'xlib', 'usability', '9039622', 'xcb is simpler to use has a better response to a multithread environment but lacks documentation while xlib is a more dated complex tool better documented and fully implemented\n')

free	malloc	10
('malloc', 'n more', 'free', '', '2336345', 'suppose char p malloc n assigns more than n say n bytes of memory are allocated and free p is used to free the memory allocated to p\n')
('malloc', 'bigger', 'free', 'memory', '4055322', 'presumably the mac malloc aligns to bigger boundaries and so it s spotting the pointer you re passing to free can t be correct since it has the wrong alignment\n')
('malloc', 'bigger boundaries', 'free', 'memory', '4055322', 'presumably the mac malloc aligns to bigger boundaries and so it s spotting the pointer you re passing to free can t be correct since it has the wrong alignment\n')
('free', 'quicker', 'malloc', '', '23442314', 'in this context free store is different and incompatible with heap because the new delete free store library is simpler and quicker than the malloc free realloc calloc heap library and thus provides huge memory usage gains to the c++ embedded programmer in a context where you have only 512 bytes of ram\n')
('malloc', 'more', 'free', '', '1464476', 'most likely malloc allocates more memory and puts so-called guard values that happen to contain null bytes or it puts some metadata to be used by free later and this metadata happens to contain a null byte right at that position\n')
('free', 'earlier', 'malloc', '', '8518769', 'how does free know how much memory to be free d which was earlier allocated by malloc or calloc\n')
('malloc', 'more memory', 'free', 'memory', '1464476', 'most likely malloc allocates more memory and puts so-called guard values that happen to contain null bytes or it puts some metadata to be used by free later and this metadata happens to contain a null byte right at that position\n')
('malloc', 'bigger buffer', 'free', 'memory', '1920516', 'here is a solution which encapsulates the call to malloc allocates a bigger buffer for alignment purpose and stores the original allocated address just before the aligned buffer for a later call to free\n')
('free', 'more', 'malloc', '', '1111015', 'now if you free some values on the heap and allocate more with malloc you may be given back some of that dirtied memory that you scribbed on earlier\n')
('malloc', 'bigger', 'free', 'memory', '1920516', 'here is a solution which encapsulates the call to malloc allocates a bigger buffer for alignment purpose and stores the original allocated address just before the aligned buffer for a later call to free\n')

height	column-count	2
('height', 'opera more columns', 'column-count', '', '11152899', 'the problem is that when there is some fixed height opera generates more columns than specified in column-count instead of adding scroll\n')
('height', 'opera more', 'column-count', '', '11152899', 'the problem is that when there is some fixed height opera generates more columns than specified in column-count instead of adding scroll\n')

user-controls	tabcontrol	1
('user-controls', 'larger', 'tabcontrol', 'memory', '10881361', 'some user-controls s are larger than the tabcontrol and got clipped so i modified its template by wrapping the contentpresenter in a scrollviewer with horizontalscrollbarvisibility and verticalscrollbarvisibility set to auto\n')

hebrew	persian	1
('hebrew', 'slower', 'persian', 'performance', '4333757', 'i am not sure it can satisfy you but hebrew test is 4 times slower than persian\n')

vml	svg	1
('vml', 'slower', 'svg', 'performance', '7892772', 'ie s vml is slower than other browser s svg\n')

glfw	glut	2
('glfw', 'much closer', 'glut', '', '2254966', 'between these glfw is much closer to glut in character -- a small toolkit for abstracting away most of the os-dependent parts so you can produce opengl programs with relatively little hassle\n')
('glfw', 'better', 'glut', '', '4497793', 'or if you re really focused on only doing opengl i may suggest using glfw which is the better glut but you ll have to draw the menus yourself using opengl\n')

uiview	catransition	1
('uiview', 'more limited', 'catransition', '', '630770', 'the uiview class methods are convenience methods for common animations but are more limited than catransition\n')

subclassing	superclass	36
('superclass', 'always smaller less', 'subclassing', 'memory', '839664', 'for my understanding the superclass is always smaller less complex then the subclassing\n')
('subclassing', 'bigger interface', 'superclass', 'memory', '933047', 'you can t cast a superclass in a subclassing because the subclassing may have a bigger interface than the superclass means the subclassing can have functions like getunixtimestamp that the superclass doesn t have\n')
('subclassing', 'less acts', 'superclass', '', '6113785', 'these relations naturally arise when you impose restrictions on what you can handle--then if a subclassing means that the method can handle less acts as a superclass of since can handle everything that the subclassing can handle and more\n')
('subclassing', 'less classes', 'superclass', '', '10137483', 'hence your subclassing is accepting less classes than the superclass contract promises\n')
('subclassing', 'more', 'superclass', '', '488946', 'if the subclassing is more specific then it might fill in all by 2 of the arguments to its superclass __init__ method\n')
('subclassing', 'more specific', 'superclass', '', '488946', 'if the subclassing is more specific then it might fill in all by 2 of the arguments to its superclass __init__ method\n')
('subclassing', 'no longer', 'superclass', '', '22727300', 'this breaks the inherited and the subclassing is no longer an instance of the superclass\n')
('subclassing', 'narrower', 'superclass', '', '15037922', 'however if the subclassing returns a narrower subtype of the superclass method return this is called a covariant return type and is allowed in java since jdk 1.5\n')
('subclassing', 'more flexible', 'superclass', 'usability', '6694223', 'a subclassing is more flexible and is treated as an entire object which responds to all superclass methods plus it s own\n')
('subclassing', 'more', 'superclass', '', '6694223', 'a subclassing is more flexible and is treated as an entire object which responds to all superclass methods plus it s own\n')
('subclassing', 'presumably more memory', 'superclass', 'memory', '20343870', 'if new member fields are declared in the subclassing then yes a subclassing presumably uses more memory since it has all the fields declared in the superclass plus all the fields declared in the subclassing\n')
('subclassing', 'higher altitudes', 'superclass', '', '5527347', 'yes but if you think of your diagram as a topographic map the subclassing have higher altitudes than the superclass\n')
('subclassing', 'more specific', 'superclass', '', '22031943', 'for example you want to use abstract-class in such a case that each of the subclassing is a more specific type of its abstract superclass fruit apple orange banana grape strawberries etc. and you want to use non-abstract superclass in a relationship such as dad and son\n')
('subclassing', 'more', 'superclass', '', '13144639', 'if we are creating an object of a subclassing and invoking the method of superclass and if subclassing extends more than one class which superclass method should be called\n')
('subclassing', 'more selective', 'superclass', '', '4872117', 'the fact that the subclassing is more selective only actually writes about what it writes is new functionality especially in light of the fact that the superclass promises nothing\n')
('subclassing', 'less', 'superclass', '', '10137483', 'hence your subclassing is accepting less classes than the superclass contract promises\n')
('superclass', 'always smaller', 'subclassing', 'memory', '839664', 'for my understanding the superclass is always smaller less complex then the subclassing\n')
('subclassing', 'more', 'superclass', '', '4523120', 'however they are not the same because the subclassing has more specific functions and data members that accomplish a more specific task that the superclass\n')
('subclassing', 'more', 'superclass', '', '4872117', 'the fact that the subclassing is more selective only actually writes about what it writes is new functionality especially in light of the fact that the superclass promises nothing\n')
('subclassing', 'actually more restrictive', 'superclass', '', '15635368', 'even in your original post the subclassing is actually more restrictive than the superclass so doing something like\n')
('superclass', 'more', 'subclassing', '', '13079329', 'here having a superclass makes more sense or at least having a realnumber subclassing of number\n')
('subclassing', 'more', 'superclass', '', '17098610', 'take note of this there is no way to subclassing more than one superclass at a time\n')
('subclassing', 'narrower subtype', 'superclass', '', '15037922', 'however if the subclassing returns a narrower subtype of the superclass method return this is called a covariant return type and is allowed in java since jdk 1.5\n')
('subclassing', 'less methods', 'superclass', '', '16097420', 'you cannot have a subclassing with less methods than a superclass\n')
('subclassing', 'more', 'superclass', '', '23594257', 'shouldn t a subclassing interfaced be able to take in more than the superclass interfacec and use the same method\n')
('superclass', 'more', 'subclassing', '', '17820307', 'watch out you can t query a superclass if you have more than 1 subclassing then something like in jql\n')
('superclass', 'smaller', 'subclassing', 'memory', '8469968', '2 since superclass is smaller than subclassing one should use memory object carefully\n')
('superclass', 'more', 'subclassing', '', '20306151', 'the superclass has a more stringent constraint on a property content blank false than the subclassing content nullable true and i am using tableperhierarchy false\n')
('subclassing', 'presumably more', 'superclass', '', '20343870', 'if new member fields are declared in the subclassing then yes a subclassing presumably uses more memory since it has all the fields declared in the superclass plus all the fields declared in the subclassing\n')
('superclass', 'more sense', 'subclassing', '', '13079329', 'here having a superclass makes more sense or at least having a realnumber subclassing of number\n')
('superclass', 'lower visibility', 'subclassing', '', '11190974', 'still you cannot inherited from a as superclass cannot have a lower visibility than subclassing\n')
('superclass', 'bigger', 'subclassing', 'memory', '12938232', 'in this case superclass is bigger than subclassing that s why the second statement is correct\n')
('subclassing', 'actually more', 'superclass', '', '15635368', 'even in your original post the subclassing is actually more restrictive than the superclass so doing something like\n')
('subclassing', 'more specific', 'superclass', '', '4523120', 'however they are not the same because the subclassing has more specific functions and data members that accomplish a more specific task that the superclass\n')
('superclass', 'more stringent', 'subclassing', '', '20306151', 'the superclass has a more stringent constraint on a property content blank false than the subclassing content nullable true and i am using tableperhierarchy false\n')
('subclassing', 'more', 'superclass', '', '22031943', 'for example you want to use abstract-class in such a case that each of the subclassing is a more specific type of its abstract superclass fruit apple orange banana grape strawberries etc. and you want to use non-abstract superclass in a relationship such as dad and son\n')

spsite	spweb	2
('spsite', 'longer url', 'spweb', '', '2000182', 'since spsite takes a longer url you may also be able to open the right spweb as well using site.openweb\n')
('spsite', 'longer', 'spweb', '', '2000182', 'since spsite takes a longer url you may also be able to open the right spweb as well using site.openweb\n')

uiview	caanimation	1
('uiview', 'animation generally easier', 'caanimation', 'usability', '23037815', 'uiview animation is generally easier and more intuitive to use than caanimation\n')

g++	gcc	6
('g++', 'better', 'gcc', '', '8133175', 'so using g++ is better than gcc\n')
('g++', 'compiler more strict', 'gcc', '', '6371223', 'g++ compiler is more strict then gcc compiler\n')
('g++', 'looser', 'gcc', '', '128221', 'unfortunately g++ packed the structs significantly looser than gcc which caused significant problems sharing objects between c and c++ code\n')
('g++', 'better', 'gcc', '', '8574598', 'g++ seems to work better than gcc in my experience\n')
('g++', 'compiler more', 'gcc', '', '6371223', 'g++ compiler is more strict then gcc compiler\n')
('g++', 'larger', 'gcc', 'memory', '8625428', 'the g++ version is a little larger than the gcc version but not 100x larger\n')

keystore	jks	1
('keystore', 'differ', 'jks', '', '12621128', 'java has build-in support for work with pkcs#12 keystore work with this containers doesn t much differ than standart jks keystore\n')

onchange	onblur	3
('onchange', 'more appropriate', 'onblur', '', '10363584', 'edit you probably only want to validate when the value changes and field loses focus that s why imo the onchange event would be more appropriate than onblur not onblure\n')
('onchange', 'better', 'onblur', '', '7561657', 'onchange is a better choice than onblur or focusout because blur and focusout also fire when the contents of the text field hasn t changed\n')
('onchange', 'better choice', 'onblur', '', '7561657', 'onchange is a better choice than onblur or focusout because blur and focusout also fire when the contents of the text field hasn t changed\n')

arc4random	srand	2
('arc4random', 'much better random', 'srand', '', '4253674', 'from what i can gather arc4random generates much better random numbers than rand does however i haven t seen a way to seed it and i would like to just like using srand\n')
('arc4random', 'much better', 'srand', '', '4253674', 'from what i can gather arc4random generates much better random numbers than rand does however i haven t seen a way to seed it and i would like to just like using srand\n')

fog	paperclip	1
('fog', 'more trouble', 'paperclip', '', '11912590', 'i have found though that since i started using the asset_sync gem which uses fog instead of aws-s3 gem i don t have any more trouble with paperclip and s3\n')

cufft	fftw	3
('cufft', 'slower', 'fftw', 'performance', '18069017', 'however for a variety of fft problem sizes i ve found that cufft is slower than fftw with openmp\n')
('cufft', 'slower', 'fftw', 'performance', '18069017', 'in the experiments and discussion below i find that cufft is slower than fftw for batched 2d ffts\n')
('cufft', 'slower cpu', 'fftw', 'performance', '6684918', 'i am working on a code which needs to be time efficient and thus using cufft for this purpose but when i try to compute fft of a very large data in parallel it is slower than cpu fftw and the reason i find after finding the time for every line of code using high precision timing code is that cudamalloc taking around 0.983 sec while the time for rest of the lines of code is around 0.00xx sec which is expected ..\n')

strncpy	memcpy	5
('strncpy', 'slower', 'memcpy', 'performance', '610260', 'but for the example you give it doesn t matter - if it s going to fail it will be in the initial strlen so strncpy doesn t buy you anything in terms of safety and presumbly strncpy is slower as it has to both check bounds and for nul and any difference between memcpy and strcpy isn t worth changing code for speculatively\n')
('memcpy', 'much faster', 'strncpy', 'performance', '10513169', 'even if underlying implementation is not so different memcpy is much faster because it does not have to check what it s copying strncpy will stop when it ll copy the end of string character null\n')
('memcpy', 'version not more complex', 'strncpy', 'usability', '12284783', 'the memcpy version is not more complex or more dangerous than the strncpy version\n')
('memcpy', 'version not more', 'strncpy', '', '12284783', 'the memcpy version is not more complex or more dangerous than the strncpy version\n')
('memcpy', 'faster', 'strncpy', 'performance', '10513169', 'memcpy will always be faster than strncpy for any real world situation even in the corner case i spoke before look page_copy_fwd_maybe\n')

uialertview	uiwindow	2
('uialertview', 'much more complicated', 'uiwindow', 'usability', '20342799', 'the internal view hierarchy of uialertview is much more complicated than it appears and starting from ios 7 it is not even added to any uiwindow so it s no big surprise that it doesn t participate to the responder chain as you expect\n')
('uialertview', 'much more', 'uiwindow', '', '20342799', 'the internal view hierarchy of uialertview is much more complicated than it appears and starting from ios 7 it is not even added to any uiwindow so it s no big surprise that it doesn t participate to the responder chain as you expect\n')

metrics	ganglia	1
('metrics', 'worse', 'ganglia', '', '17813524', 'however i wonder if this is the best way of doing this if you want to observe specific behaviour you might be better off isolating a specific input file and debugging against a local pseudo-cluster and if you want system metrics you could do worse than give ganglia a lookm as it is pretty mauch already built into hadoop\n')

renderscript	glsurfaceview	1
('renderscript', 'more control', 'glsurfaceview', 'usability', '21351418', 'both a renderscript and opengl are used for getting high performance graphics and animation s.but still opengl is the best option to get high performance graphics because it is well documented and you will have more control over the glsurfaceview .but in renderscript some of the classes are depreciated in the current versions .its almost not possible to make a rssurfaceview to transparent\n')

usb	bluetooth	6
('bluetooth', 'slower', 'usb', 'performance', '23259073', 'i had previously sent those commands via bluetooth but the connection fails too often to be useful and is slower than usb\n')
('usb', 'connection far more reliable', 'bluetooth', 'reliability', '9754274', 'on the other hand a usb connection is far more reliable better supported and of course has the inherent advantage of speed and since it is well supported does not suffer from all the pitfalls bluetooth connectivity does\n')
('usb', 'more', 'bluetooth', '', '6268880', 'interfacing with usb is more difficult than it sounds it would be harder to build something which would interface with that and measure millivolts than with bluetooth because the pic processor you use for analog to digital sampling and usb client would in fact have to either act as usb host or usb otg on a phone which is far more complicated than being a usb peripheral\n')
('usb', 'connection sometimes easier', 'bluetooth', 'usability', '13684470', 'it depends on your requirements but setting up a usb connection is sometimes easier than managing a bluetooth connection\n')
('usb', 'connection far more', 'bluetooth', '', '9754274', 'on the other hand a usb connection is far more reliable better supported and of course has the inherent advantage of speed and since it is well supported does not suffer from all the pitfalls bluetooth connectivity does\n')
('usb', 'more difficult', 'bluetooth', '', '6268880', 'interfacing with usb is more difficult than it sounds it would be harder to build something which would interface with that and measure millivolts than with bluetooth because the pic processor you use for analog to digital sampling and usb client would in fact have to either act as usb host or usb otg on a phone which is far more complicated than being a usb peripheral\n')

bada	marmalade	1
('bada', 'more check', 'marmalade', '', '7025166', 'cocos2d-x already works with marmalade so if you want to take your cocos2d game to ios android symbian webos bada rim qnx and more check out marmalade\n')

unicorn	puma	2
('unicorn', 'more requirements', 'puma', '', '19808270', 'it uses less resources than unicorn but has more requirements to your code it better be thread-safe because puma is a threaded server\n')
('unicorn', 'more', 'puma', '', '19808270', 'it uses less resources than unicorn but has more requirements to your code it better be thread-safe because puma is a threaded server\n')

aes	tripledes	3
('tripledes', 'weaker', 'aes', '', '15109802', 'but tripledes is older and weaker than aes\n')
('tripledes', 'older', 'aes', '', '15109802', 'but tripledes is older and weaker than aes\n')
('aes', 'more secure', 'tripledes', '', '3868099', 'i personally would use aes for my encryption as it is lighter and more secure than tripledes in fact i think it is the de facto algorithm at the moment\n')

vaadin	smartgwt	2
('vaadin', 'more', 'smartgwt', '', '7583971', 'thus i think vaadin is more suitable for intranet and takes less time to develop your app while smartgwt is better for more complex gui or unstable connections where additional roundtrips matter\n')
('vaadin', 'more suitable', 'smartgwt', '', '7583971', 'thus i think vaadin is more suitable for intranet and takes less time to develop your app while smartgwt is better for more complex gui or unstable connections where additional roundtrips matter\n')

nvidia	ati	9
('ati', 'better', 'nvidia', '', '7099300', 'ati might be a better between nvidia and ati since it was reportedly faster in 2009 but i m not sure if those stats are still correct\n')
('nvidia', 'way better', 'ati', '', '5682205', 'the reason i ask is that it seems like nvidia has way better tools and ati seems to have cancelled rendermonkey\n')
('nvidia', 'way better tools', 'ati', '', '5682205', 'the reason i ask is that it seems like nvidia has way better tools and ati seems to have cancelled rendermonkey\n')
('ati', 'older laptop', 'nvidia', '', '10545022', 'i m having an issue where my glsl 130 code wont run properly on my somewhat modern ati 5850 hardware while the identical code runs perfectly fine on an older laptop with a nvidia card i have\n')
('nvidia', 'better', 'ati', '', '21699076', 'there is almost always some driver issue between them but in general nvidia is better for opengl has bugs in directx implementation and ati amd versions only is better for directx has bugs in opengl implementation\n')
('nvidia', 'less amd', 'ati', '', '6881575', 'another reason to choose nvidia is because that s what the hpc system builders have been building systems with since nvidia made a huge push for gpgpu computing where as it s less backed by amd ati\n')
('nvidia', 'more picky', 'ati', '', '2438099', 'for example i ve noticed nvidia s glsl compiler is a little more picky than ati s and rejects some shader code that otherwise works fine\n')
('ati', 'more', 'nvidia', '', '9248755', 'ati seems to tell more than nvidia\n')
('nvidia', 'more flexible', 'ati', 'usability', '1962928', '4 is nvidia cuda technology is easier more flexible than ati brook+ language\n')

libav	ffmpeg	1
('libav', 'more compatible', 'ffmpeg', 'usability', '24395383', 'ubuntu 12.04 ships with the ffmpeg fork libav in version 0.8 which is more compatible with ffmpeg 1.0+ or even later ffmpeg versions iirc\n')

maven-jaxb2-plugin	xjc	2
('maven-jaxb2-plugin', 'newer', 'xjc', '', '25810873', 'however it may be that maven-jaxb2-plugin uses a newer version of xjc than you re using with enum\n')
('maven-jaxb2-plugin', 'newer version', 'xjc', '', '25810873', 'however it may be that maven-jaxb2-plugin uses a newer version of xjc than you re using with enum\n')

np-hard	np-complete	2
('np-hard', 'harder', 'np-complete', '', '25288133', 'as i understand it an np-hard problem is not harder than an np-complete problem\n')
('np-hard', 'problem not harder', 'np-complete', '', '25288133', 'as i understand it an np-hard problem is not harder than an np-complete problem\n')

break	control-structure	1
('break', 'more special other', 'control-structure', '', '6114085', 'e.g. break with labels as in java or even a more generic goto. continue does not seem more special than other control-structure mechanisms except that it is present in more languages\n')

voip	sip	1
('voip', 'more', 'sip', '', '5309949', 'almost all sip voip providers allow you to forward calls from an attached did telephone number to more than one sip device so your request could be satisfied by a basic account on your friendly neighbourhood voip provider\n')

ipb	mybb	6
('ipb', 'less', 'mybb', '', '9600557', 'the ipb which has less queries runs slower than mybb with more queries\n')
('ipb', 'less queries', 'mybb', '', '9600557', 'the ipb one has less queries used only 14 on average but it runs slower than mybb with more queries used average on 20\n')
('ipb', 'slower', 'mybb', 'performance', '9600557', 'the ipb one has less queries used only 14 on average but it runs slower than mybb with more queries used average on 20\n')
('ipb', 'less', 'mybb', '', '9600557', 'the ipb one has less queries used only 14 on average but it runs slower than mybb with more queries used average on 20\n')
('ipb', 'slower', 'mybb', 'performance', '9600557', 'the ipb which has less queries runs slower than mybb with more queries\n')
('ipb', 'less queries', 'mybb', '', '9600557', 'the ipb which has less queries runs slower than mybb with more queries\n')

jvectormap	jqvmap	2
('jvectormap', 'more', 'jqvmap', '', '11182812', 'jvectormap comes with more pre-generated maps than jqvmap\n')
('jvectormap', 'more pre-generated', 'jqvmap', '', '11182812', 'jvectormap comes with more pre-generated maps than jqvmap\n')

tortoisegit	svn	2
('tortoisegit', 'more', 'svn', '', '2096222', 'the compare dialog of tortoisegit is more about file and with git you have to compare two master branches not just two commits of the same branches both pointing to the same svn central repo\n')
('tortoisegit', 'better', 'svn', '', '384102', 'nobody has ever accused git of being easy-to-use no tortoisegit for example although i hear it s coming so you might be better off with svn beanstalk\n')

strcpy	strlen	1
('strcpy', 'more', 'strlen', '', '5941669', 'if strcpy is anything like strcpy it will write one byte more than strlen returns to zero terminate the string\n')

maven-antrun-plugin	maven-wagon-plugin	1
('maven-antrun-plugin', 'better', 'maven-wagon-plugin', '', '10839694', 'instead of maven-antrun-plugin it is better to use upload goal of maven-wagon-plugin\n')

py4j	jpype	2
('py4j', 'bigger', 'jpype', 'memory', '18484879', 'in terms of performance py4j has a bigger overhead than both of the previous solutions jython and jpype because it relies on sockets but if performance is critical to your application accessing java objects from python programs might not be the best idea\n')
('py4j', 'bigger overhead', 'jpype', 'memory', '18484879', 'in terms of performance py4j has a bigger overhead than both of the previous solutions jython and jpype because it relies on sockets but if performance is critical to your application accessing java objects from python programs might not be the best idea\n')

snap.svg	fabricjs	1
('snap.svg', 'faster', 'fabricjs', 'performance', '21791388', 'my speed test claims that svg is significantly faster than canvas at least snap.svg seems to be significantly faster than fabricjs\n')

snappy	lzo	2
('snappy', 'faster', 'lzo', 'performance', '15693524', 'snappy also consistently decompresses 20 + faster than lzo which is a pretty big win if you want it for files you re reading a lot over hadoop\n')
('snappy', 'better', 'lzo', '', '25209341', 'in my tests snappy performs better than lzo by the way\n')

java.util.calendar	java.util.date	2
('java.util.calendar', 'slower', 'java.util.date', 'performance', '4044107', 'construct java.util.calendar is comparative slower than java.util.date\n')
('java.util.calendar', 'comparative slower', 'java.util.date', 'performance', '4044107', 'construct java.util.calendar is comparative slower than java.util.date\n')

toupper	tolower	6
('toupper', 'better', 'tolower', '', '5104579', 'and if you have to convert to the same case to make comparisons toupper is better than tolower\n')
('toupper', 'more efficient', 'tolower', 'performance', '1047997', 'as a side note using toupper is more efficient than using tolower so toupper would be the way to go\n')
('toupper', 'better', 'tolower', '', '18342840', 'toupper is better to use than tolower but i forget why\n')
('toupper', 'more reliable', 'tolower', 'reliability', '2801521', 'so yes - toupper is more reliable than tolower\n')
('toupper', 'more', 'tolower', '', '1047997', 'as a side note using toupper is more efficient than using tolower so toupper would be the way to go\n')
('toupper', 'more', 'tolower', '', '2801521', 'so yes - toupper is more reliable than tolower\n')

many-to-one	one-to-many	3
('many-to-one', 'much easier', 'one-to-many', 'usability', '3114169', 'fifth many-to-one is much easier to use correctly in nhibernate and i assume hibernate than one-to-many collection mapping\n')
('many-to-one', 'side much more efficient', 'one-to-many', 'performance', '25251777', 'inverse is for bidirectional associations and most often it s on the same side with cascade but that s because the many-to-one side is much more efficient to control the association than the one-to-many one\n')
('many-to-one', 'side much more', 'one-to-many', '', '25251777', 'inverse is for bidirectional associations and most often it s on the same side with cascade but that s because the many-to-one side is much more efficient to control the association than the one-to-many one\n')

mvp	presenter	5
('mvp', 'pattern more testable', 'presenter', '', '17432822', 'also this way mvp pattern becomes more testable as you can mock the view with fake object and test your presenter in unit tests\n')
('mvp', 'pattern more', 'presenter', '', '17432822', 'also this way mvp pattern becomes more testable as you can mock the view with fake object and test your presenter in unit tests\n')
('mvp', 'greater', 'presenter', '', '4676970', 'mvp offers greater seperation as your presenter have no knowledge of web centric concepts\n')
('mvp', 'greater seperation', 'presenter', '', '4676970', 'mvp offers greater seperation as your presenter have no knowledge of web centric concepts\n')
('mvp', 'more', 'presenter', '', '2411687', 'i have been searching on the net and i made a couple of examples of both of them but i m even more confused because in some sample web pages mvp uses more than 2 interfaces to communicate the presenter with the view layer some ones even have completely blank interfaces only declarated but in other ones it only takes two interfaces to transport data from presenter to view\n')

fadein	fadeout	2
('fadeout', 'shorter', 'fadein', '', '20388866', 'otherwise you will run into issues of trying to fadein and fadeout at the same time if your delay is shorter than your fadein\n')
('fadein', 'longer', 'fadeout', '', '2165425', 'more detail set the amount of time the animation will take for fadeout and use a delay for the fadein animation that is longer than the fadeout animation time\n')

codeigniter	cakephp	15
('cakephp', 'newer more feature', 'codeigniter', 'usability', '3015992', 'cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n')
('codeigniter', 'lower learning', 'cakephp', '', '3794813', 'codeigniter has the lower learning curve overall so i would recommend it over cakephp\n')
('codeigniter', 'lighter', 'cakephp', 'memory', '139120', 'i suspect codeigniter doesn t have quite as flexible a structure it s smaller and lighter than cakephp but a quick look at the cakephp manual to see how behaviors components helpers and the vendors folder may be helpful\n')
('cakephp', 'newer', 'codeigniter', '', '3015992', 'cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n')
('codeigniter', 'lighter', 'cakephp', 'memory', '6021229', 'i personally use codeigniter which probably falls in to the heavy framework category but is at least much lighter than cakephp and lighter than zend too i think\n')
('cakephp', 'harder', 'codeigniter', '', '6403035', 'why do people say cakephp is somewhat harder than codeigniter for people new to mvc\n')
('cakephp', 'slower', 'codeigniter', 'performance', '7222395', 'cakephp is considered slower than codeigniter but you can tweak it to enhance speed\n')
('codeigniter', 'more experienced', 'cakephp', '', '8779290', 'in my opinion it will probably be easier to integrate with codeigniter although someone more experienced with cakephp might prove me wrong\n')
('cakephp', 'heavier', 'codeigniter', '', '3015992', 'cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n')
('cakephp', 'much more lighter', 'codeigniter', 'memory', '14226938', 'in my view cakephp seems much more lighter then codeigniter but i never used either one so i can t judge\n')
('cakephp', 'newer more', 'codeigniter', '', '3015992', 'cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s\n')
('codeigniter', 'lower', 'cakephp', '', '3794813', 'codeigniter has the lower learning curve overall so i would recommend it over cakephp\n')
('cakephp', 'more complicated', 'codeigniter', 'usability', '4095770', 'i have been reading about cakephp but it seems a bit more complicated than codeigniter\n')
('cakephp', 'much more', 'codeigniter', '', '14226938', 'in my view cakephp seems much more lighter then codeigniter but i never used either one so i can t judge\n')
('cakephp', 'somewhat harder', 'codeigniter', '', '6403035', 'why do people say cakephp is somewhat harder than codeigniter for people new to mvc\n')

cpu	processors	23
('cpu', 'vastly more', 'processors', '', '8859053', 'not only is it more expensive in terms of developer costs designing a cpu is vastly more difficult than writing user-space assembly code but it would increase the transistor count of the processors\n')
('processors', 'more', 'cpu', '', '18559464', 'many current processors chips incorporate more than one cpu and a cpu may itself be able to interleave a couple of threads\n')
('processors', 'much more', 'cpu', '', '2443473', 'as soon as you go beyond single processors it s much more effective to add another cpu or two to system than to struggle with gpu calculations\n')
('processors', 'more', 'cpu', '', '11835474', 'multicore refers to a computer or processors that has more than one logical cpu core and that can physically execute multiple instructions at the same time\n')
('processors', 'more', 'cpu', '', '23935539', 'multicore refers to a computer or processors that has more than one logical cpu core and that can execute multiple instructions at the same time.\n')
('cpu', 'more', 'processors', '', '5924309', 'the operating system will give your program all the resources it needs the reason your process is not consuming all the cpu is probably because it s waiting for the io sub system more than the processors\n')
('cpu', 'more', 'processors', '', '7801957', 'to the operating system a single thread which i assume is what you mean by java process essentially cannot use cpu on more than one processors which may or may not mean a physical core-- see below simultaneously\n')
('cpu', 'more tasks', 'processors', '', '23300674', 'given that you re seeing extra tasks causing a slowdown you likely either have resource contention via locking or your tasks are cpu bound and having more tasks than processors cores will cause slowdowns\n')
('cpu', 'more', 'processors', '', '11718006', 'if a task is cpu bound calcuating something making it multi threaded will only improve performance if you have more than one processors to run the calculations\n')
('cpu', 'usage higher', 'processors', 'usability', '18330416', 'i find using system monitor that consistently 100 of one cpu is used when i run the program directly in terminal whereas when i run it in bash in a loop a maximum of 60 of cpu usage is recorded and seems to be linked to the longer completion time although the average cpu usage is higher over the 4 processors\n')
('processors', 'far more efficient', 'cpu', 'performance', '10332847', 'having data structures that start on 4 byte word alignment on cpus with 4 byte buses and processors is far more efficient when moving data around memory and between ram and the cpu\n')
('processors', 'much more effective', 'cpu', '', '2443473', 'as soon as you go beyond single processors it s much more effective to add another cpu or two to system than to struggle with gpu calculations\n')
('cpu', 'cheaper mainstream', 'processors', '', '4026163', 'one addition for embedded cpu architecture they have to be usually cheaper than mainstream processors so that they do not raise the product s life considerably\n')
('cpu', 'smarter', 'processors', '', '24367125', 'so whether or not method 5 or 6 is faster depends on the cpu i can only surmise this is because the branch prediction in the command processors of the cpu is smarter on the new processors but i m not really sure\n')
('processors', 'more', 'cpu', '', '22638062', 'if that processors has more than one cpu can the interrupts run on different cpu cores at the same time\n')
('cpu', 'better', 'processors', '', '142240', 'some fancy compilers understand the un interrelatedness of instructions to a limited extent and will automatically interleave instruction flows probably over a longer window than the cpu sees to better utilise the processors\n')
('cpu', 'indeed slower', 'processors', 'performance', '1371975', 'the cpu is indeed slower on sparc 1.2ghz and as answered by one of the sun s engineers t2 is usualy 3 times slower for single-threaded application than modern intel processors\n')
('processors', 'more', 'cpu', '', '6297409', 'if the processors is loaded enough then my thread works fine but when the processors is more or less free i rich quickly my cpu limitation 50 and finally the pool terminates and needs to be recycled\n')
('processors', 'more', 'cpu', '', '6769912', 'i have a quad core processors and the threadpoolexecutor is set to 4 core threads but when i submit my callables hundred or so to the threadpoolexecutor java never uses more than 25 cpu\n')
('cpu', 'more', 'processors', '', '360494', 'passive loadbalancing if a physical cpu is running more than one task the scheduler will attempt to run any new tasks on a second physical processors\n')
('processors', 'far more', 'cpu', '', '10332847', 'having data structures that start on 4 byte word alignment on cpus with 4 byte buses and processors is far more efficient when moving data around memory and between ram and the cpu\n')
('processors', 'more', 'cpu', '', '15190198', 'binding threads to cores prevents the operating system from moving around threads between different processors cores which speeds up the executing especially on numa systems machines with more than one cpu sockets and separate memory controller in each socket where data locality is very important\n')
('cpu', 'vastly more difficult', 'processors', '', '8859053', 'not only is it more expensive in terms of developer costs designing a cpu is vastly more difficult than writing user-space assembly code but it would increase the transistor count of the processors\n')

wadl	wsdl	1
('wadl', 'lightweight easier', 'wsdl', 'memory', '17340057', 'like the rest of rest wadl is lightweight easier to understand and easier to write than wsdl\n')

conda	virtualenv	1
('conda', 'better', 'virtualenv', '', '20567658', 'an additional bonus i find that conda works better as a package manager than virtualenv\n')

3des	aes	5
('3des', 'more expensive', 'aes', '', '149409', '3des is more expensive than aes for example\n')
('3des', 'more', 'aes', '', '149409', '3des is more expensive than aes for example\n')
('aes', 'faster', '3des', 'performance', '3938726', 'should be as fast as 3des aes turned out to be much faster than 3des in software typically 5 to 10 times faster\n')
('3des', 'slower', 'aes', 'performance', '23658313', 'furthermore 3des is much slower than aes\n')
('3des', 'much slower', 'aes', 'performance', '23658313', 'furthermore 3des is much slower than aes\n')

strtod	atof	2
('strtod', 'better', 'atof', '', '8165120', 'edit basile starynkevitch mentions that strtod is better than atof for this job as it gives the ending character\n')
('strtod', 'better idea', 'atof', '', '11895699', 'you can actually switch to strtod always a much better idea than atof and ask it to give you the character position that caused it to stop parsing\n')

centos	debian	3
('debian', 'less', 'centos', '', '20916262', 'he says he uses debian and is less familiar with centos and so i am posting here\n')
('centos', 'older', 'debian', '', '13459028', 'note that centos software versions are older than debian s but versions of opensuse software are newer than debian s versions\n')
('debian', 'less familiar', 'centos', '', '20916262', 'he says he uses debian and is less familiar with centos and so i am posting here\n')

avx	sse	5
('avx', 'more time', 'sse', 'performance', '18691322', 'buf1 buf2 and buf3 is small enough to located in l1 cache and l2 cache l2 cache 1mb .both of sse and avx is band width limited but with the datalen increase why do the avx need more time than sse\n')
('avx', 'little more', 'sse', '', '16034841', 'the underlying reason for this and various other avx limitations is that architecturally avx is little more than two sse execution units side by side - you will notice that virtually no avx instructions operate horizontally across the boundary between the two 128 bit halves of a vector which is particularly annoying in the case of vpalignr\n')
('avx', 'more', 'sse', '', '16034841', 'the underlying reason for this and various other avx limitations is that architecturally avx is little more than two sse execution units side by side - you will notice that virtually no avx instructions operate horizontally across the boundary between the two 128 bit halves of a vector which is particularly annoying in the case of vpalignr\n')
('sse', 'clearly faster', 'avx', 'performance', '18697383', 'now for sse is clearly faster and for the smaller values it s nearlly as fast as avx\n')
('avx', 'newer', 'sse', '', '18319880', 'also note that the fact that the avx are a newer than sse doesn t make the avx faster whatever you are planning to use the number of cycles taken by an function is probably more important than the avx vs sse argument for example see this answer\n')

profiler	gprof	3
('profiler', 'better results', 'gprof', '', '6664948', 'for time measurements use google s cpu profiler it gives way better results than gprof\n')
('profiler', 'way better results', 'gprof', '', '6664948', 'for time measurements use google s cpu profiler it gives way better results than gprof\n')
('profiler', 'way better', 'gprof', '', '6664948', 'for time measurements use google s cpu profiler it gives way better results than gprof\n')

avro	thrift	1
('avro', 'far more', 'thrift', '', '10465052', 'but avro offers far more than just doing away with the need for your own writables although that is in my view a considerable plus it offers fairly efficient serialization the choice between serializing against generated entity classes like thrift requires or using a so-called genericrecord structure instead and not having to have tagged data\n')

memcmp	strcmp	2
('memcmp', 'faster', 'strcmp', 'performance', '1128221', 'if you always keep track of the lengths of your strings you can compare lengths and use memcmp which is faster than strcmp\n')
('strcmp', 'better', 'memcmp', '', '13095552', 'rest assured though that strcmp is better equipped in the general case for string comparisons than memcmp is\n')

flask	django	7
('flask', 'smaller', 'django', 'memory', '13186525', 'flask has a really great albeit smaller than django community and there are a lot of extensions available for common web-app extensions in the extensions directory\n')
('django', 'better integration', 'flask', '', '18607458', 'but if the use of mongodb is a must then i suggest that you reconsider using django in the first place because mongodb has a better integration with flask through mongoengine\n')
('flask', 'more lightweight', 'django', 'memory', '17385593', 'either will do the trick but bottle or in my preference flask will be faster as it is much more lightweight than django\n')
('flask', 'more comfortable', 'django', 'usability', '10778346', 'i m building an application in both bottle and flask to see which i am more comfortable with as django is too much batteries included\n')
('django', 'more', 'flask', '', '12781655', 'but a friend told me to begin with flask as it s simpler and will help me when i start learning django as django is more complicated than flask\n')
('django', 'more complicated', 'flask', 'usability', '12781655', 'but a friend told me to begin with flask as it s simpler and will help me when i start learning django as django is more complicated than flask\n')
('flask', 'smaller', 'django', 'memory', '3777454', 'if you are looking for the latter then flask is a micro framework that is considerably smaller than django\n')

uicollectionview	uitableview	2
('uicollectionview', 'better candidate', 'uitableview', '', '22944159', 'on second thoughts in your case uicollectionview is surely a better candidate than uitableview\n')
('uicollectionview', 'more visual flexibility', 'uitableview', 'usability', '22590525', 'finally you might want to look into uicollectionview which provides a lot more visual flexibility than uitableview and can be seen as a sort of generalization of the latter\n')

nfa	dfa	5
('dfa', 'smaller', 'nfa', 'memory', '1217263', 'in fact because you are eliminating the redundancy of epsilon transitions many simple dfa s actually get smaller than the nfa they represent but there is simply no way to guarantee that\n')
('nfa', 'slower', 'dfa', 'performance', '9192904', 'regex is a nfa and is as such in most cases slower than a dfa or hand-written parser\n')
('dfa', 'larger', 'nfa', 'memory', '1408183', 'if it can be practically determinized this give you a dfa that can be exponentially larger than the nfa then by all means do that\n')
('nfa', 'far easier', 'dfa', 'usability', '198624', 'because representation of a given problem with a nfa is far easier than the equivalent dfa\n')
('dfa', 'more states', 'nfa', '', '3979654', 'if we express combinations of states in an nfa as states themselves we ve got a dfa with a lot more states than the nfa but which does the same thing\n')

ntlm	kerberos	9
('kerberos', 'slower', 'ntlm', 'performance', '592640', 'for a low traffic site the huge tokens that kerberos send across the network actually makes it slower than ntlm\n')
('kerberos', 'better performance', 'ntlm', 'performance', '5244202', 'i understand that kerberos has better performance than ntlm\n')
('ntlm', 'more', 'kerberos', '', '17356806', 'but as i understand it ntlm disallows the more secure kerberos domain credentials if they re available\n')
('kerberos', 'faster', 'ntlm', 'performance', '592640', 'kerberos is complex to set up and even though it generally is considered faster than ntlm this is only true when you reach a certain limit of simultanious users on your site\n')
('kerberos', 'better', 'ntlm', '', '5244202', 'i understand that kerberos has better performance than ntlm\n')
('ntlm', 'more secure', 'kerberos', '', '17356806', 'but as i understand it ntlm disallows the more secure kerberos domain credentials if they re available\n')
('ntlm', 'better', 'kerberos', '', '453751', 'in fact in some ways ntlm is better than kerberos\n')
('ntlm', 'less secure', 'kerberos', '', '2319001', 'but since ntlm is less secure than kerberos why isn t it the other way around\n')
('ntlm', 'less', 'kerberos', '', '2319001', 'but since ntlm is less secure than kerberos why isn t it the other way around\n')

dexterity	archetypes	7
('dexterity', 'arguably more', 'archetypes', '', '8760668', 'dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n')
('dexterity', 'arguably more better', 'archetypes', '', '8760668', 'dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n')
('dexterity', 'more lightweight', 'archetypes', 'memory', '14759857', 'the good news is that dexterity content types are more lightweight than archetypes content types and doing raw listing by iterating over folder.contentitems in your template should not be that expensive\n')
('dexterity', 'arguably more better documentation', 'archetypes', '', '8760668', 'dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n')
('archetypes', 'stronger', 'dexterity', '', '13387479', 'variety of supporting widgets is probably the single area in which archetypes is still stronger than dexterity\n')
('archetypes', 'still stronger', 'dexterity', '', '13387479', 'variety of supporting widgets is probably the single area in which archetypes is still stronger than dexterity\n')
('dexterity', 'better documentation', 'archetypes', '', '8760668', 'dexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 development\n')

avassetexportsession	avassetwriter	1
('avassetexportsession', 'much easier', 'avassetwriter', 'usability', '24191989', 'this will work directly with avassetexportsession which is much easier than playing with avassetwriter unless you have a very specific requirement typically you need to manipulate the actual video frames\n')

printwriter	bufferedwriter	2
('printwriter', 'richer', 'bufferedwriter', '', '17017131', 'printwriter is a richer api compared to bufferedwriter\n')
('printwriter', 'richer api', 'bufferedwriter', '', '17017131', 'printwriter is a richer api compared to bufferedwriter\n')

mstest	nunit	13
('nunit', 'better support', 'mstest', 'usability', '13545330', 'nunit has better support for parameterized tests than mstest\n')
('nunit', 'better', 'mstest', '', '13545330', 'nunit has better support for parameterized tests than mstest\n')
('mstest', 'better', 'nunit', '', '1340207', 'if you have a full version of visual studio 2008 rather than the express edition it integrates the inbuilt mstest much better than nunit does and cruise control also supports mstest\n')
('mstest', 'simpler', 'nunit', 'usability', '18403378', 'sriwantha mstest is a simpler framework than nunit\n')
('nunit', 'more', 'mstest', '', '2422410', 'for example nunit offers more assert methods than mstest\n')
('mstest', 'simpler framework', 'nunit', 'usability', '18403378', 'sriwantha mstest is a simpler framework than nunit\n')
('nunit', 'faster', 'mstest', 'performance', '22663184', 'nunit is faster as compared to mstest\n')
('nunit', 'faster', 'mstest', 'performance', '3844399', 'nonetheless i tried to compare the sum of all test speeds and in some cases nunit is faster and in other cases mstest is faster\n')
('nunit', 'better', 'mstest', '', '1989900', 'various people told me to go with nunit since it s better than mstest apparently i have no idea and it also has very good support in resharper which i m using\n')
('mstest', 'much slower', 'nunit', 'performance', '5815939', 'from my experience mstest is much slower than nunit\n')
('nunit', 'much faster', 'mstest', 'performance', '3844399', 'thus i suspect when people say that nunit is much faster than mstest it is because of the loading and updating delays but the actual test execution time appears to be very similar\n')
('mstest', 'slower', 'nunit', 'performance', '5815939', 'from my experience mstest is much slower than nunit\n')
('nunit', 'faster', 'mstest', 'performance', '3844399', 'thus i suspect when people say that nunit is much faster than mstest it is because of the loading and updating delays but the actual test execution time appears to be very similar\n')

vimeo	youtube	2
('vimeo', 'more', 'youtube', '', '2043996', 'while vimeo is more of a professional site youtube offers html5 h.264 video playback support for all videos so they ll play on iphone\n')
('vimeo', 'fewer users', 'youtube', '', '50909', 'vimeo will always have fewer users than youtube because the user experience is poor for low bitrate users\n')

typemock	moq	1
('typemock', 'better', 'moq', '', '19092194', 'or would a tool like typemock be better suited than moq in this case\n')

vbo	vao	1
('vbo', 'more', 'vao', '', '15438605', 'is it possible to use the same vbo with more than one vao like this\n')

printf	fgets	2
('printf', 'earlier then', 'fgets', '', '11575102', 'i am getting a problem using printf and fgets as in my code printf is written earlier then fget but it does not run it runs after fgets runs\n')
('printf', 'earlier', 'fgets', '', '11575102', 'i am getting a problem using printf and fgets as in my code printf is written earlier then fget but it does not run it runs after fgets runs\n')

implements	extends	17
('implements', 'runnable more preferrable', 'extends', '', '22595284', 'they say that implements runnable is more preferrable than extends thread\n')
('implements', 'runable better', 'extends', '', '17311842', 'i also know implements runable is better than extends thread\n')
('implements', 'larger', 'extends', 'memory', '25098811', 'implements gives larger errors because i tried with extends\n')
('implements', 'runnable more', 'extends', '', '22595284', 'they say that implements runnable is more preferrable than extends thread\n')
('implements', 'more succinctly', 'extends', '', '25498711', 'more or less the same thing as the accepted answer can be implements more succinctly by extends the gridviewpager like this\n')
('extends', 'more sense', 'implements', '', '8032509', 'extends makes more sense to me here than implements maybe it s a typo in the book\n')
('implements', 'better', 'extends', '', '17311842', 'i also know implements runable is better than extends thread\n')
('implements', 'larger errors', 'extends', 'memory', '25098811', 'implements gives larger errors because i tried with extends\n')
('implements', 'runnable better', 'extends', '', '21962174', 'implements runnable is better because you can extends other classes\n')
('implements', 'more preferrable', 'extends', '', '22595284', 'they say that implements runnable is more preferrable than extends thread\n')
('extends', 'arrayadapter much easier', 'implements', 'usability', '18354161', 'second in order to add or update the value of listview in general extends arrayadapter is much easier than implements baseadapter because of arrayadapter support add remove insert method by itself\n')
('implements', 'better option', 'extends', 'usability', '2782744', 'why is implements runnable a better option than extends from thread class\n')
('implements', 'better system', 'extends', '', '3311788', 'i have not found a lot of times when implements an interface would be a better system than extends a superclass\n')
('extends', 'more', 'implements', '', '8032509', 'extends makes more sense to me here than implements maybe it s a typo in the book\n')
('extends', 'stronger relationship', 'implements', '', '22268825', 'a possible reason is that extends represents a a stronger relationship than implements although both represent is a or is a type of relationships\n')
('implements', 'faster', 'extends', 'performance', '7194541', 'is implements the rawcomparator that much faster than extends writablecomparator\n')
('extends', 'easier', 'implements', 'usability', '18354161', 'second in order to add or update the value of listview in general extends arrayadapter is much easier than implements baseadapter because of arrayadapter support add remove insert method by itself\n')

onkeydown	onkeyup	3
('onkeydown', 'better', 'onkeyup', '', '3789935', 'for browsers that don t support either event you can fall back to onkeydown with a 0ms timer for the check which is a little better than onkeyup\n')
('onkeydown', 'more', 'onkeyup', '', '7049468', 'usually onkeydown is more preferable then onkeyup for such combo\n')
('onkeydown', 'more preferable', 'onkeyup', '', '7049468', 'usually onkeydown is more preferable then onkeyup for such combo\n')

bundler	bcrypt-ruby	2
('bundler', 'newer then', 'bcrypt-ruby', '', '10783218', 'if the bundler is newer then version 1.1.2 it will remove bcrypt-ruby 3.0.1-x86-mingw32 automaticaly\n')
('bundler', 'newer', 'bcrypt-ruby', '', '10783218', 'if the bundler is newer then version 1.1.2 it will remove bcrypt-ruby 3.0.1-x86-mingw32 automaticaly\n')

cobertura	emma	4
('cobertura', 'more', 'emma', '', '14691985', 'however cobertura looks more modern active last update from 2010 instead of 2005 and generates nicer reports so i would prefer it over emma\n')
('cobertura', 'better choice', 'emma', '', '8070899', 'if you re going to stick with maven and want a plugin for maven that will do the code-coverage job i think cobertura is a better choice as emma stable last build is from 2005\n')
('cobertura', 'more modern', 'emma', '', '14691985', 'however cobertura looks more modern active last update from 2010 instead of 2005 and generates nicer reports so i would prefer it over emma\n')
('cobertura', 'better', 'emma', '', '8070899', 'if you re going to stick with maven and want a plugin for maven that will do the code-coverage job i think cobertura is a better choice as emma stable last build is from 2005\n')

cin	cout	3
('cin', 'printf faster', 'cout', 'performance', '780111', 'scanf is faster than cin printf is faster than cout etc\n')
('cin', 'more practical', 'cout', '', '14757282', 'there are obviously situations where in c++ scanf is preferable to cin i was wondering if there are any situations where printf is more practical than cout\n')
('cout', 'faster', 'cin', 'performance', '22112628', 'using printf isn t faster than cout but scanf is a little faster than cin 0.04s + - 0.05\n')

jdbi	hibernate	1
('jdbi', 'simpler', 'hibernate', 'usability', '4630832', 'other useful pieces would be jdbi for database access much simpler than hibernate or other full orms async-httpclient for doing calls to other web services\n')

actionscript	mxml	6
('actionscript', 'less convenient', 'mxml', 'usability', '10743806', 'so yes it can be used with flash or rather pure actionscript but it is a little less convenient than with mxml where everything is set up by the framework because it takes more under the hood configuration to be able to run all the necessary parts for remoting\n')
('mxml', 'module slightly larger', 'actionscript', 'memory', '3762592', 'i can see that my skeleton mxml module is slightly larger than my actionscript module 66kb vs\n')
('actionscript', 'nicer', 'mxml', '', '2479042', 'what s the deal i thought actionscript would be nicer than mxml\n')
('actionscript', 'better', 'mxml', '', '814811', 'i would say pure actionscript is better for programming whether you use flash ide or flex ide is not that relevant and mxml is better for non-programmers to combine the components programmed in as\n')
('actionscript', 'quicker', 'mxml', '', '19421336', 'actionscript is quicker than mxml but for what you re going to do you re trading speed for convenience - mxml comes with all the different ui classes list scrollbars etc already there\n')
('mxml', 'larger', 'actionscript', 'memory', '3762592', 'i can see that my skeleton mxml module is slightly larger than my actionscript module 66kb vs\n')

mysql-workbench	phpmyadmin	2
('mysql-workbench', 'more', 'phpmyadmin', '', '4739146', 'i think you should install phpmyadmin on your server this will allow you to access your database from work school cafe etc mysql-workbench is more advanced and gives you more features so you can deal with changing the structure and editing any rows columns relations and much more look at phpmyadmin s features it has most if not all\n')
('mysql-workbench', 'more advanced', 'phpmyadmin', '', '4739146', 'i think you should install phpmyadmin on your server this will allow you to access your database from work school cafe etc mysql-workbench is more advanced and gives you more features so you can deal with changing the structure and editing any rows columns relations and much more look at phpmyadmin s features it has most if not all\n')

udp	mtu	12
('udp', 'bigger', 'mtu', 'memory', '2315847', 'udp uses datagrams chunks of data which are received whole on the other side unless the size is bigger than the mtu but that s a different story\n')
('udp', 'smaller', 'mtu', 'memory', '7061343', 'to send large blocks of data via udp you need to chop them up into pieces smaller than the mtu for the network segment across which you re transmitting them\n')
('udp', 'smaller', 'mtu', 'memory', '13423649', 'ideally your udp frames are smaller than the mtu for your architecture say 1500 bytes so the messages won t get chopped up in transit\n')
('udp', 'bigger', 'mtu', 'memory', '4549135', 'note that udp packets bigger than the mtu s at every hope between your hosts will be split by ip\n')
('udp', 'larger', 'mtu', 'memory', '11809828', 'basically while sending udp packets larger than mtu ip fragmentation can occur if it s supported on your platform but not all platforms support it\n')
('udp', 'larger', 'mtu', 'memory', '1436197', 'if you send a udp datagram larger than the mtu it will be fragmented\n')
('udp', 'larger', 'mtu', 'memory', '20851391', 'my lwip can send udp packets to pc but my pc would fail to reassemble when the udp packets are larger than mtu\n')
('udp', 'larger', 'mtu', 'memory', '18253025', 'when send a udp datagram larger than the mtu size only the last fragment of the udp datagram is putted out to the destination\n')
('udp', 'larger', 'mtu', 'memory', '21056847', 'ever since i did sockets programming on a pdp 11 it s been the case that ip fragmentation will take care of the case where an ip datagram such as a udp datagram is larger than the mtu for the segment allows\n')
('udp', 'datagram larger', 'mtu', 'memory', '21056847', 'ever since i did sockets programming on a pdp 11 it s been the case that ip fragmentation will take care of the case where an ip datagram such as a udp datagram is larger than the mtu for the segment allows\n')
('udp', 'greater', 'mtu', '', '10356170', 'udp packets greater than the mtu size of the network that carries them will be automatically split up into multiple packets and then reassembled by the recipient\n')
('udp', 'bigger', 'mtu', 'memory', '1436154', 'they are easily generated for udp simply by making the datagram bigger than the mtu\n')

nserror	nsexception	2
('nserror', 'much more', 'nsexception', '', '1117426', 'aside from obejctive-c convention and best practices nserror is much more robust and flexibly than nsexception and allows the caller to effectively ignore the problem if they want to\n')
('nserror', 'much more robust', 'nsexception', 'reliability', '1117426', 'aside from obejctive-c convention and best practices nserror is much more robust and flexibly than nsexception and allows the caller to effectively ignore the problem if they want to\n')

tooltip	popover	1
('tooltip', 'more', 'popover', '', '10643923', 'a tooltip has more in common with a popover but they are generally regarded as a popup historically\n')

jogl	lwjgl	4
('lwjgl', 'smaller', 'jogl', 'memory', '6496021', 'if your company s concern is to avoid big unknown libraries which is prefectly understandable i d advise you to stick with lwjgl which is smaller that jogl\n')
('lwjgl', 'much more', 'jogl', '', '23462234', 'lwjgl is much more aimed towards gaming with opengl where as jogl is more worried about complete and perfect bindings to opengl opencl\n')
('jogl', 'more', 'lwjgl', '', '157238', 'jogl is more java-like whereas lwjgl provides more gaming functionality on top of opengl access\n')
('jogl', 'more java-like', 'lwjgl', '', '157238', 'jogl is more java-like whereas lwjgl provides more gaming functionality on top of opengl access\n')

ram	disk	93
('ram', 'typically more', 'disk', '', '14328119', 'however they may be cheaper to operate depending on how much data you are expecting to store with each session key holding large quantities of data in ram is typically more expensive than storing on disk\n')
('ram', 'faster', 'disk', 'performance', '6433744', 'just wanted to weigh in my two cents what serialworm and thephpdeveloper said share the fact that memory ram is much faster than any disk io bound operation you come up with\n')
('disk', 'slower', 'ram', 'performance', '8741427', 'remember disk is 1000s of times slower than ram\n')
('disk', 'space cheaper then', 'ram', 'memory', '16308547', 'this approach will radically reduce heap space usage - disk space is cheaper then ram too\n')
('ram', 'always faster', 'disk', 'performance', '5113033', 'for the stand of file operations writing to memory ram is always faster than writing to the file on the disk directly\n')
('disk', 'much slower', 'ram', 'performance', '14873969', 'reloading pages data or program code from disk which is much slower does not usually happen very often as long as the program is actually running and as long as the machine is not desperately low on ram\n')
('disk', 'io way slower', 'ram', 'performance', '21040937', 'but you should consider that disk io is way slower than ram\n')
('ram', 'much faster', 'disk', 'performance', '6433744', 'just wanted to weigh in my two cents what serialworm and thephpdeveloper said share the fact that memory ram is much faster than any disk io bound operation you come up with\n')
('ram', 'far more', 'disk', '', '21370836', 'but ram is volatile the data in ram is erased when the computer loses power and ram is far more expensive than disk per unit of storage\n')
('ram', 'much faster', 'disk', 'performance', '7548458', 'ram is much faster then disk io\n')
('disk', 'larger available', 'ram', 'memory', '7314774', 'alternatively you can use an ssd with file storage in varnish to reduce disk io bottlenecks when using an object cache larger than available ram\n')
('disk', 'slower', 'ram', 'performance', '6922874', 'it won t do anything to change the fact that disk io is orders of magnitude slower than ram\n')
('ram', 'faster', 'disk', 'performance', '16427006', 'ram is always faster than disk\n')
('disk', 'not larger', 'ram', 'memory', '1896687', 'edit true the file on disk is not larger than ram but the in-memory representation can easily become much larger than available ram\n')
('disk', 'slower', 'ram', 'performance', '13148304', 'disk files are of course an order of magnitude slower than ram and thrashing your virtual memory system could actually be worse than that depending on your access patterns\n')
('disk', 'slower', 'ram', 'performance', '8741427', 'as disk is 1000s of times slower than ram as the memory usage increases your machine grinds more and more closer to a halt\n')
('disk', 'io extremely slower then', 'ram', 'performance', '10243816', 'when the data is in memory - you can do anything much faster on it since disk io is extremely slower then ram so sorting it and reading it multiple times is expected to be much slower then manipulating the data on memory\n')
('disk', 'larger', 'ram', 'memory', '8654903', 'so while the writes my be sequential on disk for datasets larger than ram these random reads will quickly become the bottle neck\n')
('ram', 'smaller', 'disk', 'memory', '21370836', 'so even if your ram is much smaller than your disk you could assume you can read data that s already in ram 90 of the time or more\n')
('ram', 'slower', 'disk', 'performance', '848572', 'memory is a bottleneck to performance ram runs slower than the cpu and if you re paging to disk than it s really slow\n')
('disk', 'cheaper', 'ram', '', '18718208', 'always favor disk persistence disk storage is cheaper than ram\n')
('disk', 'much slower', 'ram', 'performance', '23316098', 'changing it will require a reboot. that will slow things down a bit as the swap file on disk is much slower than ram\n')
('ram', 'faster', 'disk', 'performance', '21918245', 'obviously reading a block from cache is much more efficient than reading it off the disk since ram is much faster than disk\n')
('disk', 'access much slower', 'ram', 'usability', '13396579', 'however if this is indeed the case - and the data does not fit ram and you cannot use map-reduce i suspect sorting and iterating - though will be o nlogn will be more efficient using external sort - because the number of disk accesses will be minimized and disk access is much slower then ram access\n')
('ram', 'faster', 'disk', 'performance', '472333', 'ram is much faster than disk\n')
('ram', 'less', 'disk', '', '2465473', 'more ram means less disk access\n')
('disk', 'slower', 'ram', 'performance', '20095562', 'disk io will be slower than ram\n')
('ram', 'more expensive', 'disk', '', '5049314', 'basically ram is more expensive than the disk storage\n')
('disk', 'slower', 'ram', 'performance', '18708182', 'there are libraries that allow on-disk data structures comes to mind and another one whose name i can t recall at the moment but disk accesses are orders of magnitude slower than ram\n')
('disk', 'slower', 'ram', 'performance', '1706506', 'disk io - even ssd - is many orders of magnitude slower than the ram that the hashing is going though\n')
('disk', 'much slower', 'ram', 'performance', '10243816', 'only one disk read - since the disk is much slower then ram -\n')
('disk', 'slower', 'ram', 'performance', '13921423', 'as disk is 1000s of times slower than ram this problem can grind the machine down to a practical halt\n')
('ram', 'more', 'disk', '', '5049314', 'basically ram is more expensive than the disk storage\n')
('disk', 'slower', 'ram', 'performance', '1829072', 'as disk i o is orders of magnitude slower than ram i o this can cause a very significant difference in query execution times\n')
('disk', 'larger available', 'ram', 'memory', '14280134', 'it is needed for a lookup of repetitions in disk files much larger than available ram\n')
('disk', 'slower system', 'ram', 'performance', '10350034', 'there exist battery-backed packages of ram modules which can act as an ultra-fast hdd substitute but if they attach via sata scsi or other typical disk interface the still are slower than system ram\n')
('disk', 'storage cheaper', 'ram', '', '18718208', 'always favor disk persistence disk storage is cheaper than ram\n')
('disk', 'bigger', 'ram', 'memory', '1156709', 'disk is bigger than ram\n')
('ram', 'much faster then', 'disk', 'performance', '7548458', 'ram is much faster then disk io\n')
('disk', 'access much slower then', 'ram', 'usability', '13396579', 'however if this is indeed the case - and the data does not fit ram and you cannot use map-reduce i suspect sorting and iterating - though will be o nlogn will be more efficient using external sort - because the number of disk accesses will be minimized and disk access is much slower then ram access\n')
('ram', 'more expensive', 'disk', '', '21370836', 'but ram is volatile the data in ram is erased when the computer loses power and ram is far more expensive than disk per unit of storage\n')
('disk', 'slower', 'ram', 'performance', '1356125', 'another option is to spend a bit of cash on a 15000 rpm disk or a ssd solid state disk although that ll be slower than a ram disk\n')
('disk', 'slower', 'ram', 'performance', '9456024', 'if the worker processes do other things than just calulations read from or write to disk they will have to wait a lot since a disk is a lot slower than ram\n')
('ram', 'faster', 'disk', 'performance', '19457886', 'ram is a lot faster than disk so reads and writes are temporarily stored until the data is requested by the code or the disk is able to receive it\n')
('disk', 'greater available', 'ram', 'usability', '7381501', 'also keep in mind that once ram is exhausted your program will start running in virtual memory on disk which will probably cause far more disk i o activity than the program itself so if you re concerned about disk i o your best bet is probably to make sure that the batch of data you re working on in memory doesn t get much greater than available ram\n')
('disk', 'slower', 'ram', 'performance', '6282736', 'that means that without caching a hit against disk will be 200 times slower than accessing ram\n')
('disk', 'slower', 'ram', 'performance', '5353574', 'because disk access is orders of magnitude slower than ram access\n')
('disk', 'slower', 'ram', 'performance', '21370836', 'a disk seek takes about 10 000 000 nanoseconds of course some disk are faster but the best of them are still thousands of times slower than ram\n')
('disk', 'slower', 'ram', 'performance', '17869058', 'run the following to sort the data on disk this is slower than pulling it into ram sorting and then writing to disk\n')
('ram', 'usually faster', 'disk', 'performance', '1192201', 'but becuase reading from ram is usually faster than from other kind of memory storage divice os copy the program from disk on ram and start executing program from there\n')
('disk', 'access much more', 'ram', 'usability', '3211989', 'i m sure there are other holes like that too - but the code above will work on any system which supports paging and where disk access is much more expensive than ram access\n')
('ram', 'faster', 'disk', 'performance', '18437355', 'since using ram is faster than using disk zram allows linux to make more use of ram when swapping paging is required especially on older computers with less ram installed\n')
('disk', 'larger available', 'ram', 'memory', '969709', 'in future these lists may be read from disk and larger than available ram\n')
('disk', 'slower', 'ram', 'performance', '10949313', 'disk access is much slower than ram\n')
('disk', 'slower', 'ram', 'performance', '24217960', 'ssd disk are good but they are still much slower than ram\n')
('ram', 'much faster', 'disk', 'performance', '472333', 'ram is much faster than disk\n')
('disk', 'lower', 'ram', '', '9429223', 'at any rate disk speeds are orders of magnitude lower than the ram speed and i wouldn t be too much concerned about the mode here unless of course it turns out that caching is different in the two modes\n')
('disk', 'more expensive', 'ram', '', '3211989', 'i m sure there are other holes like that too - but the code above will work on any system which supports paging and where disk access is much more expensive than ram access\n')
('ram', 'typically more expensive', 'disk', '', '14328119', 'however they may be cheaper to operate depending on how much data you are expecting to store with each session key holding large quantities of data in ram is typically more expensive than storing on disk\n')
('ram', 'alway faster', 'disk', 'performance', '565933', 'buy as much memory as you can afford ram is alway faster than io from disk\n')
('disk', 'larger', 'ram', 'memory', '1896687', 'edit true the file on disk is not larger than ram but the in-memory representation can easily become much larger than available ram\n')
('disk', 'cheaper', 'ram', '', '516941', 'disk space is probably always going to be cheaper than ram\n')
('disk', 'slower', 'ram', 'performance', '21040937', 'but you should consider that disk io is way slower than ram\n')
('ram', 'faster', 'disk', 'performance', '3520281', 'no trivial support for cache accessing ram is faster than accessing disk\n')
('ram', 'always faster', 'disk', 'performance', '16427006', 'ram is always faster than disk\n')
('disk', 'slower', 'ram', 'performance', '7504168', 'in other words the operating system is using some of your hard disk space to satisfy your 13 mb allocation request at great expense of speed since the hard disk is much much slower than ram\n')
('ram', 'faster', 'disk', 'performance', '1204121', 'loosely speaking ram is 1000 or more times faster than disk and cpu is faster still\n')
('disk', 'slower', 'ram', 'performance', '9057271', 'that s basically possible but it would take hours as hard disk access is so much slower than accessing ram caches\n')
('disk', 'vastly slower', 'ram', 'performance', '20283122', 'remember the tuples are saved into the disk which is vastly slower to access than things in ram\n')
('disk', 'slower', 'ram', 'performance', '23316098', 'changing it will require a reboot. that will slow things down a bit as the swap file on disk is much slower than ram\n')
('ram', 'faster', 'disk', 'performance', '10429777', 'ram is 100 thousand times faster than disk for database access from\n')
('disk', 'slower', 'ram', 'performance', '16181839', 'or if there is too much intermediate output to be shuffled your job will become slow as you will need disk based shuffle in such a case which will be slower than ram based shuffle\n')
('disk', 'slower', 'ram', 'performance', '16312981', 'disk i o is about 100 000 times slower than ram\n')
('disk', 'access much slower', 'ram', 'usability', '10949313', 'disk access is much slower than ram\n')
('ram', 'always faster', 'disk', 'performance', '21009952', 'saving information to a variable and therefore to ram is always faster than direct to disk\n')
('disk', 'larger', 'ram', 'memory', '24240326', 'it uses swap space on disk to allow for processes much larger than ram\n')
('disk', 'faster', 'ram', 'performance', '20704516', 'so my question is how to move this database into ram where i can access it via sqlite3_open or if my idea is bullshit and leaving the database on disk is faster than moving it into ram via mapping\n')
('disk', 'slower', 'ram', 'performance', '11832363', 'the initial read has to access the disk which is a lot slower than accessing ram\n')
('ram', 'faster', 'disk', 'performance', '25408923', 'for this reason it seemed natural to me to initially load the file into memory and interpret it later at my leisure since reading from ram is supposed to be much faster than from disk\n')
('disk', 'more important', 'ram', '', '18394009', 'if the hot data won t fit in ram on either machine then disk i o performance becomes more important than ram mostly random read i o and the fsync flush rate\n')
('disk', 'slower', 'ram', 'performance', '14571358', 'i think it is because the disk is slower than ram\n')
('ram', 'much smaller', 'disk', 'memory', '21370836', 'so even if your ram is much smaller than your disk you could assume you can read data that s already in ram 90 of the time or more\n')
('ram', 'much faster', 'disk', 'performance', '21918245', 'obviously reading a block from cache is much more efficient than reading it off the disk since ram is much faster than disk\n')
('disk', 'slower', 'ram', 'performance', '18457435', 'once you re out of ram and the system starts swapping - disk access is thousands times slower than ram so any potential benefits of 64-bit code are flying out of window\n')
('disk', 'access much more expensive', 'ram', 'usability', '3211989', 'i m sure there are other holes like that too - but the code above will work on any system which supports paging and where disk access is much more expensive than ram access\n')
('disk', 'slower', 'ram', 'performance', '17899469', 'make sure you have enough ram so that your data set fits with ram atleast your index should fit inside the ram coz each time a data fetched from disk is 10 times slower than ram\n')
('disk', 'io extremely slower', 'ram', 'performance', '10243816', 'when the data is in memory - you can do anything much faster on it since disk io is extremely slower then ram so sorting it and reading it multiple times is expected to be much slower then manipulating the data on memory\n')
('disk', 'slower', 'ram', 'performance', '9163426', 'so even ignoring practical considerations like disk is slower than ram it will be slower\n')
('disk', 'space cheaper', 'ram', 'memory', '16308547', 'this approach will radically reduce heap space usage - disk space is cheaper then ram too\n')
('disk', 'much slower then', 'ram', 'performance', '10243816', 'only one disk read - since the disk is much slower then ram -\n')
('ram', 'far more expensive', 'disk', '', '21370836', 'but ram is volatile the data in ram is erased when the computer loses power and ram is far more expensive than disk per unit of storage\n')
('disk', 'slower', 'ram', 'performance', '15467085', 'this is relatively slow since reading from the hard disk is slower than reading from ram\n')
('ram', 'more enough', 'disk', '', '7201179', 'this particular jboss runs in a vm with 4gb of ram and 2 cpu s and more than enough disk space it has never has less than 5gb free at any time\n')

kde	gnome	2
('kde', 'larger', 'gnome', 'memory', '8838690', 'the motivation is that font size 12 under kde seems to be much larger than under gnome\n')
('kde', 'quicker', 'gnome', '', '11794298', 'on kde aptana ran perfectly quicker than on gnome at the best of times\n')

umask	chown	1
('umask', 'better', 'chown', '', '2561800', 'but changing the chmod maybe even working with umask is better than dealing with root-access and using chown\n')

wav	mp3	5
('wav', 'file much easier', 'mp3', 'usability', '1427191', 'either way applying gain and or attenuation to time-domain sample data as in a wav file is much easier than trying to apply these effects to frequency-domain data as in an mp3 file\n')
('mp3', 'smaller', 'wav', 'memory', '23678277', 'if you are still having problems jdk 8 has the ability to play mp3 files which are significantly smaller than wav you may want to try this\n')
('wav', 'better', 'mp3', '', '1628241', 'if you ask if a uncompressed wav which contains pcm data is better than mp3 then yes but the question sometimes is how much this better really matters to the human ear and how much postprocessing you have to perform on that data\n')
('mp3', 'smaller', 'wav', 'memory', '8063108', 'now i assume you are worried your techno might not read a compressed mp3 which should be smaller than a wav from my memories\n')
('mp3', 'much smaller', 'wav', 'memory', '7596704', 'i understand that mp3 is much smaller but it has worst audio quality when is compared to wav files\n')

nspersistentdocument	uimanageddocument	1
('nspersistentdocument', 'less hassle', 'uimanageddocument', '', '21869216', 'unfortunately the sample apps are not based on uimanageddocument or nspersistentdocument but if you look at the way they handle backup files you could probably use that approach to create a document based app with less hassle than using uimanageddocument\n')

getdate	datepart	1
('getdate', 'shorter', 'datepart', '', '6687049', 'i prefer using these short forms because to me year getdate is shorter to type and better to read than datepart yyyy getdate\n')

sml	haskell	1
('sml', 'better', 'haskell', '', '811801', 'because sml is eagerly evaluated the execution model is far easier to comprehend and debugging via printf works a lot better than in haskell\n')

spring	appfuse	1
('spring', 'better', 'appfuse', '', '4370193', 'if you actually need dao s this is something that comes out-of-the-box in appfuse and put partly in spring roo but there is also a great addon for spring roo hades addon that does a great job at this maybe even better than appfuse\n')

magma	lapack	2
('magma', 'slower', 'lapack', 'performance', '9742864', 'b magma runs always slower than lapack sequential around 10 times slower\n')
('magma', 'always slower', 'lapack', 'performance', '9742864', 'b magma runs always slower than lapack sequential around 10 times slower\n')

getline	fgets	1
('getline', 'safer', 'fgets', 'security', '19248865', 'one more edit if you want to use getline instead which you asked about in the comments - and it s even safer than fgets since it will increase the buffer size as needed you would change to change the code a little bit\n')

gwt-rpc	requestfactory	4
('requestfactory', 'more', 'gwt-rpc', '', '20335224', 'my understanding is the requestfactory is more efficient and recommended over gwt-rpc but it s more of a data entity persistence framework than a request-response framework like rpc\n')
('gwt-rpc', 'newer', 'requestfactory', '', '6957715', 'go with gwt-rpc or better newer with requestfactory\n')
('requestfactory', 'more efficient', 'gwt-rpc', 'performance', '20335224', 'my understanding is the requestfactory is more efficient and recommended over gwt-rpc but it s more of a data entity persistence framework than a request-response framework like rpc\n')
('gwt-rpc', 'better newer', 'requestfactory', '', '6957715', 'go with gwt-rpc or better newer with requestfactory\n')

fseek	fread	2
('fseek', 'faster', 'fread', 'performance', '10118483', 'so i guess fseek should be much faster than fread\n')
('fseek', 'faster', 'fread', 'performance', '10118975', 'i probably feel fseek might be bit faster than fread as fseek changes the pointer position to the new address space that you have mentioned and there is no date read is happening\n')

rcharts	shiny	1
('rcharts', 'better', 'shiny', '', '24273444', 'possibly part of the reason of my problems is that the original code from ramnath uses rmaps while i m using rcharts also developed by ramnath as it is more developed better integrated with shiny and of course includes leaflet\n')

opensuse	debian	1
('opensuse', 'newer', 'debian', '', '13459028', 'note that centos software versions are older than debian s but versions of opensuse software are newer than debian s versions\n')

redmine	trac	12
('redmine', 'more complete', 'trac', '', '380757', 'i d recommend redmine like the other posters as it is more complete than trac\n')
('redmine', 'better', 'trac', '', '1277646', 'redmine was written to be a better trac than trac\n')
('redmine', 'more', 'trac', '', '1936043', 'i understand redmine is more of a trac clone but retrospectiva seem to support agile methodologies via a nice plugin\n')
('redmine', 'better', 'trac', '', '386835', 'redmine is an open source ruby on rails application that supports multiple projects much better than trac and seems to be much easier to administer\n')
('redmine', 'nicer', 'trac', '', '5309957', 'redmine handles multiple projects and sub projects far nicer than trac\n')
('redmine', 'more clean', 'trac', '', '3989495', 'for next projects i m going to try redmine seems more clean and hipe than trac\n')
('redmine', 'nicer', 'trac', '', '294097', 'redmine handles multiple projects and sub-projects right out of the box and overall seems nicer than trac\n')
('redmine', 'better', 'trac', '', '1050501', 'we found redmine to be a better than trac simply because it is easier to use\n')
('redmine', 'more', 'trac', '', '3989495', 'for next projects i m going to try redmine seems more clean and hipe than trac\n')
('redmine', 'more', 'trac', '', '1275337', 'we ve recently switched from trac to redmine where i work and i think i like it a little more than trac and use the wiki functionality almost everyday\n')
('redmine', 'better', 'trac', '', '5747934', 'i wound up going with redmine and it s way better than trac\n')
('redmine', 'better', 'trac', '', '323542', 'the authors of redmine are trying to create a better trac than trac\n')

ftp	smb	1
('ftp', 'faster', 'smb', 'performance', '482412', 'push log files to a central location ftp is faster than smb the windows ftp command can be automated with -s scriptfile\n')

charat	indexof	1
('charat', 'faster', 'indexof', 'performance', '18848063', 'i ve found that using a simple for-loop iterating over all elements in the string and comparing using charat performs faster than indexof or regex\n')

glassfish	resin	1
('glassfish', 'slower', 'resin', 'performance', '12723426', 'glassfish seems to be slower than resin\n')

moles	moq	1
('moles', 'much better', 'moq', '', '8000104', 'personally i think moles is much better suited for mocking the unmockable and i prefer a combination of moq for my own interfaces and classes and moq for framework and externalities like file i o gui db connections etc\n')

principles	srp	1
('principles', 'more', 'srp', '', '10609215', 'there is another principles which i like even more than srp - dry\n')

libstdc++	libc++	2
('libc++', 'more complete', 'libstdc++', '', '17901868', 'the above links to libc++ which is the preferred c++ standard library for mac os x with clang and a lot more complete than libstdc++ even when considering the newest gcc\n')
('libstdc++', 'more', 'libc++', '', '12574479', 'libstdc++ does this a lot more than libc++ and the former is the default library for llvm-g++ gcc llvm the latter for clang apple llvm which means a lot of errors will seem to go away when you switch to gcc llvm or just stick with apple llvm and switch your library but your code is still wrong\n')

calayer	cagradientlayer	1
('calayer', 'smoother results', 'cagradientlayer', '', '24724320', 'however i wish to use a custom calayer that uses an internal cggradient for drawing instead as this should produce smoother results than cagradientlayer see here\n')

bower	npm	2
('bower', 'more', 'npm', '', '24767574', 'bower is more similar to npm than to component\n')
('bower', 'more similar', 'npm', '', '24767574', 'bower is more similar to npm than to component\n')

eloquera	db4o	2
('eloquera', 'better', 'db4o', '', '5302408', 'i think that eloquera www.eloquera.com is better than db4o and additionally has better licensing\n')
('eloquera', 'www.eloquera.com better', 'db4o', '', '5302408', 'i think that eloquera www.eloquera.com is better than db4o and additionally has better licensing\n')

realloc	memcpy	1
('realloc', 'consistently faster', 'memcpy', 'performance', '19826688', 'as you can see from the above tests realloc is consistently faster compared to memalloc memcpy and free\n')

directory	folder	13
('directory', 'less', 'folder', '', '15032819', 'i have tested on mp3 files in different directory it takes less than one second with over 6000 files stored in different folder\n')
('directory', 'no more', 'folder', '', '16864778', 'i m starting in the base directory and i know that the the directory goes no more than 1 folder deep past the base directory\n')
('directory', 'more', 'folder', '', '6048084', 'i would recommend placing the common files in the same directory as the solution file or no more than 1 folder deep\n')
('directory', 'also faster', 'folder', 'performance', '23086696', 'rm -rf directory also works faster for billion of files in one folder\n')
('directory', 'c youruser', 'folder', '', '6643790', 'go to your user directory c profiles youruser there should be a folder called .m2 may be hidden\n')
('directory', 'structure more', 'folder', 'usability', '7868608', 'but my directory structure is more organized its more like app lib mypackage folder\n')
('directory', 'less', 'folder', '', '4225772', 'test code updated so you can see that both it works identically whether using varargs or not will fail if your home directory has less than 5 sub folder\n')
('folder', 'more', 'directory', '', '11369555', 'on windows xp however it works fine on local file systems but when watching folder on a mapped network drive it throws an ioexception when trying to watch more than 50 directory\n')
('directory', 'more', 'folder', '', '12469246', 'i have a directory containing more than 1000 folder\n')
('directory', 'more', 'folder', '', '16864778', 'i m starting in the base directory and i know that the the directory goes no more than 1 folder deep past the base directory\n')
('directory', 'more', 'folder', '', '24197390', 'i need help in a vba macro that ll delete files in a directory that contains more than 2 _ and is older than 3 months old however there are some folder sub folder in the directory that must not be touched or modified\n')
('directory', 'more', 'folder', '', '17591179', 'i have a directory that contains more than 5000 subfolders....i need to get the name of the folder in the final level..\n')
('directory', 'more', 'folder', '', '11553430', 'i am using the bash ftp command to ftp files however i have a problem where i try to create a directory that is more than 2 folder deep\n')

codeigniter	laravel	3
('codeigniter', 'older', 'laravel', '', '23339615', 'unfortunately i m pretty sure you ll not find any packages or projects that migrates a joomla web site to laravel or maybe codeigniter which is much older than laravel\n')
('laravel', 'better', 'codeigniter', '', '25132418', 'if you ve been using laravel then you already know it is better than codeigniter\n')
('codeigniter', 'much older', 'laravel', '', '23339615', 'unfortunately i m pretty sure you ll not find any packages or projects that migrates a joomla web site to laravel or maybe codeigniter which is much older than laravel\n')

smalltalk	lisp	2
('lisp', 'lesser extent', 'smalltalk', '', '3819159', 'common lisp is an image base language although usually to a lesser extent than smalltalk\n')
('smalltalk', 'more fine-grained', 'lisp', '', '3057686', 'smalltalk methods tend to be more fine-grained than lisp functions so that may be a good place to begin\n')

treemap	linkedhashmap	3
('linkedhashmap', 'faster', 'treemap', 'performance', '22710394', 'however a linkedhashmap is faster as seen here treemap has o log n performance for containskey get put and remove according to the javadocs while linkedhashmap is o 1 for each.\n')
('linkedhashmap', 'faster', 'treemap', 'performance', '21198223', 'linkedhashmap is faster for insertion because it wonâ t have to unnecessarily compare values while inserting like treemap as stated by ejp\n')
('treemap', 'more', 'linkedhashmap', '', '9061732', 'a treemap costs a lot more than a linkedhashmap and adds nothing to your project if you only need to keep original insertion order\n')

qobject	qevent	1
('qobject', 'faster', 'qevent', 'performance', '10839789', 'posting qevents to qobject is faster than using signal-slot invocations because there are no copy constructors called and there s no marshalling done except directly by you upon construction of a qevent\n')

postgresql	mysql	157
('postgresql', 'generally better', 'mysql', '', '1795117', 'now i m not sure if i d say postgresql is generally better than mysql -- there are certainly things that mysql does much better and so it certainly has its uses -- but these are a few things i absolutely love about it\n')
('postgresql', 'already slower', 'mysql', 'performance', '1162395', 'postgresql is already slower than mysql up to a certain point it is actually faster when you have a ridiculously large database\n')
('mysql', 'more', 'postgresql', '', '10775695', 'mysql is more permissive and allows the non-standard use of distinct but postgresql throws an error\n')
('mysql', 'higher pdo', 'postgresql', '', '12546596', 'drupal 7 mysql 5.0.15 or higher with pdo postgresql 8.3 or higher\n')
('postgresql', 'slower', 'mysql', 'performance', '1841772', 'i ve found that postgresql is in my expirience is slower as mysql\n')
('postgresql', 'more compliant', 'mysql', '', '15270642', 'following the first answer it appears that postgresql is more compliant to sql standard than mysql so it needs a group by clause for each selected column you want to display with your aggregated function\n')
('postgresql', 'better', 'mysql', '', '7587624', 'if you want to use sql i strongly reccommend postgresql it seems to deal with large databases and frequent writes a lot better than mysql\n')
('postgresql', 'more sane', 'mysql', '', '761581', 'since postgresql is a lot more sane than mysql there are not that many tricks to report on\n')
('postgresql', 'better', 'mysql', '', '7997125', 'i would need a scalable database so probably postgresql would be better than mysql\n')
('postgresql', 'more mature', 'mysql', '', '15937377', 'i know postgresql could be considered more mature than mysql with regards to locking thanks to mvcc - can i use row-locking or some other feature in postgresql instead of the token field\n')
('postgresql', 'fewer security', 'mysql', 'security', '1270393', 'traditionally postgresql has had fewer security issues than mysql but they are both doing very well on that\n')
('postgresql', 'better imo', 'mysql', '', '4916041', 'postgresql is also a lot better imo than mysql and is the recommended database to use with django according to a lot of the people close to django\n')
('postgresql', 'more simple', 'mysql', '', '1546912', 'postgresql license bsd is undoubtedly more simple than mysql s\n')
('postgresql', 'more', 'mysql', '', '8928034', 'i am using postgresql btw which can do more than mysql incase that changes things\n')
('mysql', 'faster', 'postgresql', 'performance', '205364', 'mysql i am told can be optimized to do faster reads than postgresql but both are pretty ridiculously fast in terms of # transactions sec they support and it doesn t sound like that s your problem\n')
('postgresql', 'better', 'mysql', '', '13155314', 'then postgresql is much better than mysql\n')
('postgresql', 'stricter', 'mysql', '', '7214433', 'but in mysql it is ok and in postgresql it is wrong and ask for the other fields besides site_id either in a group by clause or in a aggregation function i know that postgresql is stricter on sql than mysql so i must select the site_id in the query object of msg_published but in pure sqlalchemy i can do like this\n')
('postgresql', 'bigger repertoar', 'mysql', 'memory', '1926885', 'b use indexes - postgresql has bigger repertoar of indexes then mysql so use it - there are gist gin indexes\n')
('mysql', 'probably more', 'postgresql', '', '13557296', 'mysql is probably more often offered by shared hosting providers postgresql is probably a little more powerful\n')
('postgresql', 'much more', 'mysql', '', '18931156', 'postgresql is much more similar to oracle than mysql is\n')
('postgresql', 'bigger', 'mysql', 'memory', '1926885', 'b use indexes - postgresql has bigger repertoar of indexes then mysql so use it - there are gist gin indexes\n')
('mysql', 'higher pdo', 'postgresql', '', '12656101', 'drupal 7 mysql 5.0.15 or higher with pdo postgresql 8.3 or higher\n')
('postgresql', 'more compliant', 'mysql', '', '6751367', 'looks like postgresql is a little more compliant than mysql so try this instead\n')
('mysql', 'worse', 'postgresql', '', '52179', 'i just checked the timings using mysql 5 and they are slightly worse than postgresql\n')
('postgresql', 'much more complete', 'mysql', '', '1338597', 'postgresql is much more complete and solid and will much better support complex queries and their optimization while mysql may shine in terms of retrieval speed for extremely simple queries\n')
('postgresql', 'more mature', 'mysql', '', '2452926', 'postgresql will always be a little bit more mature than mysql\n')
('mysql', 'implementation less sql', 'postgresql', 'usability', '8373087', 'i totally understand the error and assume that the mysql implementation is less sql conform than the postgresql implementation\n')
('mysql', 'implementation less', 'postgresql', 'usability', '8373087', 'i totally understand the error and assume that the mysql implementation is less sql conform than the postgresql implementation\n')
('postgresql', 'way better', 'mysql', '', '7999353', 'postgresql is way better than mysql in nearly every respect\n')
('postgresql', 'better', 'mysql', '', '1144979', 'fyi postgresql scales better than mysql on multi-processor overlapping requests from a review i was reading a few months back sorry no link\n')
('postgresql', 'better option', 'mysql', 'usability', '8262827', 'is postgresql a better option than mysql for partitioning tables by date\n')
('postgresql', 'better', 'mysql', '', '16679371', 'i d also recommend postgresql over mysql if you are going to have nested comments as postgresql does hierarchical querying better than mysql\n')
('postgresql', 'less popular', 'mysql', 'usability', '14197739', 'while postgresql is less popular than mysql most of the serious web hosting supports it\n')
('postgresql', 'better support', 'mysql', 'usability', '8748476', 'postgresql has better support but the support by mysql depends on the used storage engine\n')
('postgresql', 'better', 'mysql', '', '74931', 'with correct locking for safety reasons and heavy concurrent use postgresql performed better than mysql\n')
('postgresql', 'fewer surprises', 'mysql', '', '4074875', 'i would recommend postgresql for a beginner as it has far fewer surprises than mysql\n')
('postgresql', 'much better', 'mysql', '', '11365372', 'the only reason i was considering postgresql was that some research suggested postgresql has much better support for changing schemas along the way than mysql\n')
('postgresql', 'more standard', 'mysql', '', '2489451', 'for example pyqt is already available for python 3 as well as 2 and you can use postgresql a splendid open-source sql database engine much more standard than mysql via py-postgresql\n')
('postgresql', 'more strict', 'mysql', '', '2685687', 'postgresql is a little more strict than mysql about type conversion and does not let you implicitly cast convert between numbers and strings\n')
('postgresql', 'older', 'mysql', '', '2277052', 'postgresql is older than mysql so it might have influenced them\n')
('postgresql', 'less troublesome', 'mysql', '', '4394396', 'this is ancedotal but the postgresql servers i ve managed have always been much less troublesome than mysql which likes to randomly crash once in a while occasionally corrupting a table on the way down\n')
('postgresql', 'more robust', 'mysql', 'reliability', '4135236', 'i hear postgresql is more robust and doesn t crash like mysql does in these situations\n')
('mysql', 'easier', 'postgresql', 'usability', '2193943', 'mysql is easier than postgresql but it doesn t really matter either way\n')
('postgresql', 'much better support', 'mysql', 'usability', '11365372', 'the only reason i was considering postgresql was that some research suggested postgresql has much better support for changing schemas along the way than mysql\n')
('postgresql', 'more reliable', 'mysql', 'reliability', '13155314', 'as for reliability i think that postgresql is more reliable especially when compared to mysql using myisam - innodb is a lot better here\n')
('postgresql', 'much better performance', 'mysql', 'performance', '201950', 'postgresql gets much better performance and this is coming from a former mysql partisan\n')
('mysql', 'much better', 'postgresql', '', '14322003', 'some say mysql is much better for bigger projects while others think just go with postgresql\n')
('postgresql', 'easier', 'mysql', 'usability', '3162419', 'postgresql supports recursive queries in the form of recursive common table expressions which make querying heirarchical data easier than in mysql and also give better performance\n')
('postgresql', 'more security', 'mysql', 'security', '1270393', 'postgresql supports some more security features than mysql for example integration with gssapi or kerberos for logins last i checked mysql didn t have these\n')
('postgresql', 'more tuning', 'mysql', '', '1162378', 'postgresql requires more tuning than mysql to achieve optimal performance\n')
('postgresql', 'much more', 'mysql', '', '1338597', 'postgresql is much more complete and solid and will much better support complex queries and their optimization while mysql may shine in terms of retrieval speed for extremely simple queries\n')
('mysql', 'worse', 'postgresql', '', '2694299', 'in other words is mysql better or worse than postgresql to handle unicode etc\n')
('postgresql', 'more', 'mysql', '', '15270642', 'following the first answer it appears that postgresql is more compliant to sql standard than mysql so it needs a group by clause for each selected column you want to display with your aggregated function\n')
('postgresql', 'better', 'mysql', '', '21215884', 'what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n')
('postgresql', 'much more', 'mysql', '', '4394406', 'i feel postgresql is much more mature and robust than mysql\n')
('postgresql', 'better', 'mysql', '', '1795117', 'now i m not sure if i d say postgresql is generally better than mysql -- there are certainly things that mysql does much better and so it certainly has its uses -- but these are a few things i absolutely love about it\n')
('postgresql', 'more security', 'mysql', 'security', '6475228', 'i d have said that postgresql is more security aware than mysql supporting roles more authentication methods ... but that the database itself has generally a very limited impact on the security of an application\n')
('postgresql', 'more', 'mysql', '', '1769414', 'postgresql is more sql compliant than mysql\n')
('postgresql', 'more', 'mysql', '', '6475228', 'i d have said that postgresql is more security aware than mysql supporting roles more authentication methods ... but that the database itself has generally a very limited impact on the security of an application\n')
('postgresql', 'faster', 'mysql', 'performance', '22418916', 'i wonder why postgresql s single insert statement is completely faster than mysql s when autocommit is turned on\n')
('postgresql', 'better', 'mysql', '', '7999353', 'postgresql is way better than mysql in nearly every respect\n')
('postgresql', 'far more', 'mysql', '', '8052193', 'postgresql is far more powerful and scalable and doesn t have mysql s silly limitations and gotchas\n')
('postgresql', 'better', 'mysql', '', '2000205', 'also you might take the time to compare postgresql and see if there is something about it that meets your needs as well or better than mysql\n')
('postgresql', 'slower', 'mysql', 'performance', '2797107', 'do you find rails with postgresql is slower than mysql knowing that it produce more query on the background\n')
('postgresql', 'better', 'mysql', '', '8748476', 'postgresql has better support but the support by mysql depends on the used storage engine\n')
('mysql', 'more', 'postgresql', '', '1140923', 'mysql is more than capable of serving your needs as well as alex s suggestion of postgresql\n')
('postgresql', 'performance probably better', 'mysql', 'performance', '846356', 'as i said postgresql is far superior and i hate mucking with mysql s bizarre bugs and i think that overall postgresql performance is probably better than mysql for any even slightly complicated query\n')
('postgresql', 'more', 'mysql', '', '13155314', 'as for reliability i think that postgresql is more reliable especially when compared to mysql using myisam - innodb is a lot better here\n')
('mysql', 'faster', 'postgresql', 'performance', '953814', 'mysql s version is apparently marginally faster than postgresql but lacks some of the more advanced spatial features therefore it s pretty much limited to finding records that match a certain range of coordinates\n')
('postgresql', 'stricter', 'mysql', '', '4078839', 'postgresql is stricter to the sql standard than mysql is\n')
('mysql', 'better', 'postgresql', '', '21073787', 'an efficiently configured mysql is better than a badly configured postgresql and vice-versa\n')
('postgresql', 'better', 'mysql', '', '4343455', 'this is a weak point that iirc postgresql can handle better but with mysql you have to work around that by reverting the changes yourself in case of rollbacks\n')
('postgresql', 'much smarter', 'mysql', '', '10337106', 'if you want open source postgresql is much smarter than mysql as well\n')
('postgresql', 'better', 'mysql', '', '2756807', 'in my cases postgresql was better than mysql mysql do not completely support unicode\n')
('postgresql', 'fewer', 'mysql', '', '1374694', 'and postgresql has fewer experienced administrators than the big databases and mysql which i believe contributes to the reputation\n')
('postgresql', 'stricter', 'mysql', '', '22927557', 'postgresql is stricter about conversions than mysql is and generally will throw an error rather than try to convert a string to an integer if it doesn t look like one\n')
('postgresql', 'better handling', 'mysql', '', '442181', 'i also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoid\n')
('postgresql', 'much faster', 'mysql', 'performance', '9062987', 'with django it is easy to use postgresql instead of mysql so i tried it with the same query and same data in db postgresql is much faster that mysql x10 more faster while using inner join analyse shows it uses indexes unlike mysql\n')
('postgresql', 'better', 'mysql', '', '2324076', 'given postgresql s reputation for doing things better than mysql or at least as good as i daresay that postgresql would demonstrate similar performance if properly used\n')
('postgresql', 'much more acid', 'mysql', '', '7238724', 'all that said postgresql is much more acid compliant than mysql it handles fks just as you re needing and i would generally recommend it based on what you ve expressed in your post\n')
('postgresql', 'more logical', 'mysql', '', '3553940', 'you might look at postgresql as i find it a bit easier to manage and maintain as i feel some aspects are more logical than mysql\n')
('postgresql', 'better', 'mysql', '', '1016512', 'honestly though postgresql scales much better than mysql\n')
('postgresql', 'better', 'mysql', '', '4394406', 'postgresql is better than mysql in many ways\n')
('postgresql', 'better', 'mysql', '', '2447484', 'is postgresql better than mysql for such purpose\n')
('postgresql', 'more powerful', 'mysql', 'usability', '259517', 'i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql\n')
('postgresql', 'better', 'mysql', '', '8137020', 'and a wiki for why postgresql is better than mysql\n')
('postgresql', 'more established', 'mysql', '', '953814', 'postgresql has more established support for this but mysql has played catch up in the last year or so and has a working method of this in the latest versions\n')
('postgresql', 'fulltext 10-100x faster', 'mysql', 'performance', '5926886', 'i did some benchmarking 3 years ago may be stale... which showed that on large datasets basically postgresql fulltext is 10-100x faster than mysql and xapian 10-100x faster than postgresql but not integrated\n')
('postgresql', 'better', 'mysql', '', '10079942', 'postgresql with the optional hstore module might be better than mysql at this.\n')
('postgresql', 'more', 'mysql', '', '953814', 'postgresql has more established support for this but mysql has played catch up in the last year or so and has a working method of this in the latest versions\n')
('postgresql', 'more restrictive', 'mysql', '', '1717152', 'postgresql is a bit more restrictive than mysql\n')
('postgresql', 'better', 'mysql', '', '21216225', 'the other question is that what i am hearing from our group leader is that postgresql is better than mysql when working with coordinates\n')
('postgresql', 'better', 'mysql', '', '1467079', 'if you need spatial data capabilities postgis with postgresql is better than mysql\n')
('postgresql', 'far more powerful', 'mysql', 'usability', '8052193', 'postgresql is far more powerful and scalable and doesn t have mysql s silly limitations and gotchas\n')
('mysql', 'safer bet', 'postgresql', 'security', '18648399', 'if i were able to upgrade the server s versioning of mysql to 5.5 would innodb be a safer bet than postgresql\n')
('postgresql', 'much more mature', 'mysql', '', '4394406', 'i feel postgresql is much more mature and robust than mysql\n')
('postgresql', 'much more', 'mysql', '', '7238724', 'all that said postgresql is much more acid compliant than mysql it handles fks just as you re needing and i would generally recommend it based on what you ve expressed in your post\n')
('postgresql', 'smarter', 'mysql', '', '3008890', 'ps you can also migrate to postgresql it s smarter than mysql when choosing right indexes\n')
('postgresql', 'more', 'mysql', '', '259517', 'i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql\n')
('postgresql', 'more robust', 'mysql', 'reliability', '3563373', 'there is also postgresql its a bit more robust than mysql and is free just the same\n')
('postgresql', 'more popular', 'mysql', 'usability', '11642511', 'it s a shame postgresql isn t more popular than mysql since it supports exactly this feature out-of-the-box you d only have to share one sequence object between tables.\n')
('postgresql', 'more sql', 'mysql', '', '1769414', 'postgresql is more sql compliant than mysql\n')
('postgresql', 'more advanced', 'mysql', '', '22307627', 'postgresql is worth learning and much more advanced than mysql\n')
('postgresql', 'slower', 'mysql', 'performance', '1162395', 'postgresql is already slower than mysql up to a certain point it is actually faster when you have a ridiculously large database\n')
('postgresql', 'more flexible indexing', 'mysql', 'usability', '12495775', 'not only does postgresql have a far more flexible indexing than mysql but the table approaches are very different also meaning the appropriate indexing strategies are as different as the tactics are\n')
('postgresql', 'better', 'mysql', '', '442181', 'i also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoid\n')
('mysql', 'more', 'postgresql', '', '4394406', 'though mysql is more popular than postgresql but instagram is using postgresql maybe due to these reasons\n')
('postgresql', 'more compliant', 'mysql', '', '259460', 'postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that\n')
('postgresql', 'more', 'mysql', '', '12873077', 'i suggest postgresql it s more capable has more features and better support for complex queries and datatypes than mysql and has a lot of tuning options\n')
('postgresql', 'more', 'mysql', '', '24603749', 'if you are looking for location based queries in relational databases postgresql is more matured compared to mysql\n')
('postgresql', 'much better', 'mysql', '', '201950', 'postgresql gets much better performance and this is coming from a former mysql partisan\n')
('postgresql', 'fewer experienced', 'mysql', '', '1374694', 'and postgresql has fewer experienced administrators than the big databases and mysql which i believe contributes to the reputation\n')
('postgresql', 'harder', 'mysql', '', '25197871', 'does this affect postgresql harder than mysql\n')
('postgresql', 'more', 'mysql', '', '3776914', 'does that mean perhaps rails team favor postgresql slightly more than mysql\n')
('postgresql', 'more', 'mysql', '', '957655', 'in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with\n')
('mysql', 'more', 'postgresql', '', '1311750', 'mysql is more widely supported and a little easier to use but postgresql has some very cool features and functionality that s worth taking a gander at\n')
('postgresql', 'better', 'mysql', '', '9879578', 'i really like postgresql s indexes which are far better than mysql s\n')
('postgresql', 'less', 'mysql', '', '14197739', 'while postgresql is less popular than mysql most of the serious web hosting supports it\n')
('mysql', 'larger', 'postgresql', 'memory', '3316770', 'while mysql has a larger user base postgresql is gaining more an more popularity ever since implementing several crucial features that were missing in earlier versions\n')
('postgresql', 'pickier', 'mysql', '', '9759899', 'postgresql is picky pickier than mysql -- all fields in the select list when using distinct must be present in the order_by and group_by clauses\n')
('postgresql', 'better', 'mysql', '', '14759864', 'i just recently switched databases to postgresql which has given me a slew of problems although i must admit i like it a lot better than mysql\n')
('postgresql', 'way more useful', 'mysql', 'usability', '1630987', 'explain in postgresql is way more useful than in mysql\n')
('postgresql', 'more capable', 'mysql', 'usability', '12873077', 'i suggest postgresql it s more capable has more features and better support for complex queries and datatypes than mysql and has a lot of tuning options\n')
('mysql', 'more permissive', 'postgresql', '', '10775695', 'mysql is more permissive and allows the non-standard use of distinct but postgresql throws an error\n')
('postgresql', 'fewer', 'mysql', '', '1270393', 'traditionally postgresql has had fewer security issues than mysql but they are both doing very well on that\n')
('postgresql', 'better', 'mysql', '', '1373566', 'some people were saying that postgresql is better for security purposes whereas mysql is becoming more feature rich.\n')
('postgresql', 'better', 'mysql', '', '4394622', 'generally speaking i find postgresql lends itself to 24 7 operations better than mysql\n')
('postgresql', 'more', 'mysql', '', '27439', 'from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster\n')
('mysql', 'not less', 'postgresql', '', '1922486', 'mysql is not less complicated that postgresql -- they re the same thing\n')
('postgresql', 'stricter', 'mysql', '', '3512286', 'i am aware that postgresql interpretation of the sql standard is stricter than mysql and that consequently this type of query won t work...and have read a number of posts on stackoverflow and elsewhere on the subject - but none of them seem to be the definitive answer on this subject\n')
('postgresql', 'much more similar', 'mysql', '', '18931156', 'postgresql is much more similar to oracle than mysql is\n')
('postgresql', 'more correct', 'mysql', '', '27439', 'from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster\n')
('postgresql', 'more', 'mysql', '', '1270393', 'postgresql supports some more security features than mysql for example integration with gssapi or kerberos for logins last i checked mysql didn t have these\n')
('mysql', 'probably more often', 'postgresql', '', '13557296', 'mysql is probably more often offered by shared hosting providers postgresql is probably a little more powerful\n')
('postgresql', 'more tricks', 'mysql', '', '957655', 'in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with\n')
('postgresql', 'picky pickier', 'mysql', '', '9759899', 'postgresql is picky pickier than mysql -- all fields in the select list when using distinct must be present in the order_by and group_by clauses\n')
('postgresql', 'better', 'mysql', '', '8749161', 'there are workloads where postgresql is better and there are workloads where mysql is better\n')
('postgresql', 'way more', 'mysql', '', '1630987', 'explain in postgresql is way more useful than in mysql\n')
('mysql', 'more popular', 'postgresql', 'usability', '4394406', 'though mysql is more popular than postgresql but instagram is using postgresql maybe due to these reasons\n')
('postgresql', 'more', 'mysql', '', '4135236', 'i hear postgresql is more robust and doesn t crash like mysql does in these situations\n')
('postgresql', 'slower', 'mysql', 'performance', '27443', 'in most regards postgresql is slower than mysql especially when it comes to fine tuning in the end\n')
('postgresql', 'less time', 'mysql', 'performance', '5598904', 'may be postgresql takes less time than mysql\n')
('mysql', 'more resistant', 'postgresql', '', '2221787', 'the question is is mysql somehow more resistant than postgresql to sql injection attack under the perl dbi and why might this be the case\n')
('postgresql', 'more', 'mysql', '', '1162378', 'postgresql requires more tuning than mysql to achieve optimal performance\n')
('postgresql', 'more advanced', 'mysql', '', '8749161', 'however postgresql s sql features are far more advanced than mysql s and mysql has a tendency to silently ignore things you tell it to do - especially in a default installation and if you rely on a foreign key to be created that might be a very unpleasant surprise\n')
('mysql', 'more widely', 'postgresql', '', '1311750', 'mysql is more widely supported and a little easier to use but postgresql has some very cool features and functionality that s worth taking a gander at\n')
('mysql', 'more', 'postgresql', '', '10320676', 'poor performance from mysql has more to do with it not being smart and automatically creating an optimized plan like sql server postgresql or oracle would\n')
('mysql', 'larger user', 'postgresql', 'memory', '3316770', 'while mysql has a larger user base postgresql is gaining more an more popularity ever since implementing several crucial features that were missing in earlier versions\n')
('postgresql', 'more', 'mysql', '', '13155314', 'the query optimizer in postgresql is more advanced than in mysql and copes with complicated statements much better especially when it comes to sub-selects\n')
('postgresql', 'less', 'mysql', '', '5598904', 'may be postgresql takes less time than mysql\n')
('postgresql', 'much better', 'mysql', '', '13155314', 'then postgresql is much better than mysql\n')
('postgresql', 'more advanced', 'mysql', '', '13155314', 'the query optimizer in postgresql is more advanced than in mysql and copes with complicated statements much better especially when it comes to sub-selects\n')
('postgresql', 'faster', 'mysql', 'performance', '3994593', 'some recent tests we did showed that postgresql does perform faster than mysql and we believe the table partitioning feature in postgresql will be very important with a table in our database we foresee to grow into 100 million rows and more in production\n')
('postgresql', 'faster', 'mysql', 'performance', '1373625', 'postgresql is faster than mysql s innodb\n')
('postgresql', 'cleaner', 'mysql', '', '3485121', 'however people often argue that postgresql is cleaner and easier to use that mysql\n')
('postgresql', 'more', 'mysql', '', '259460', 'postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that\n')
('postgresql', 'more', 'mysql', '', '586834', 'i had mentioned that in our rails application all select queries dropped below 100ms after switching to postgresql whereas some of the complex joins generated by activerecord would occasionally take as much as 15s or more with mysql 5.1 because of nested loops with inner table scans even when indices were available\n')

rational-numbers	zero	1
('rational-numbers', 'greater', 'zero', '', '1780489', 'is there any way in haskell to get the constant that is the largest and smallest possible positive rational-numbers greater than zero that can be represented by doubles\n')

protected	public	20
('protected', 'closer', 'public', '', '8202001', 'protected is closer to public than private\n')
('public', 'higher', 'protected', '', '21338125', 'public is higher than protected so there s no problem\n')
('protected', 'better', 'public', '', '2757943', 'it s not perfect but i guess that a protected method that does not check parameters is better than a public method that does not do it\n')
('protected', 'better', 'public', '', '4753405', 'that means private is better than protected protected is better than public etc ..\n')
('protected', 'less', 'public', '', '12325479', 'oh i see you need a constructor that has more access than protected but less than public\n')
('protected', 'more permissive', 'public', '', '14271110', 'for public inheritance it means that all the accessible members of base class that is the public and protected members can not be at a level more permissive than public\n')
('protected', 'much more sense', 'public', '', '761864', 'therefore the only types that should have access to a constructor are its derived types and hence protected makes much more sense than public\n')
('protected', 'easier', 'public', 'usability', '24661886', 'what is the true rationale behind all the private and protected stuff when we can just make our life as a programmer easier by using public for everything\n')
('protected', 'better', 'public', '', '6033905', 'reason i once heard that protected is better for hibernate performance but all i can find on the web is hibernate can access public private and protected accessor methods as well as public private and protected fields directly\n')
('protected', 'much more', 'public', '', '761864', 'therefore the only types that should have access to a constructor are its derived types and hence protected makes much more sense than public\n')
('protected', 'more sense', 'public', '', '761864', 'therefore the only types that should have access to a constructor are its derived types and hence protected makes much more sense than public\n')
('protected', 'less', 'public', '', '18376768', 'since package protected is less accessible than public the code is reducing the accessibility of the foo method\n')
('protected', 'more restrictive', 'public', '', '15220204', 'otherwise there is still the possibility to change a public access to a protected or package private access which will be much more restrictive than public\n')
('protected', 'more', 'public', '', '15626425', 'protected is more restrictive than public\n')
('protected', 'weaker invariant', 'public', '', '4507414', 'protected functions maintain a weaker invariant than the public one before and after each call\n')
('protected', 'less accessible', 'public', '', '24548057', 'change it to public to make it more accessible or perhaps better protected to make it less accessible than public but more than private read more about that here\n')
('protected', 'more restrictive', 'public', '', '15626425', 'protected is more restrictive than public\n')
('protected', 'more limited', 'public', '', '25672161', 'from a software engineering point of view as soon as you make a function protected you expose it to other users of course much more limited than public exposure but still much more exposed than private and you create expectation about some stability of the api\n')
('protected', 'less accessible', 'public', '', '18376768', 'since package protected is less accessible than public the code is reducing the accessibility of the foo method\n')
('protected', 'access more', 'public', 'usability', '3313279', 'the theory is that someone extending your class with protected access knows more about what they are doing than someone who is merely using it with public access\n')

adb	monkeyrunner	2
('adb', 'more', 'monkeyrunner', '', '12630645', 'adb is more reliable since you get the feedback immediately unlike monkeyrunner which does not provide reliable exceptions in case of any failure in triggering the event\n')
('adb', 'more reliable', 'monkeyrunner', 'reliability', '12630645', 'adb is more reliable since you get the feedback immediately unlike monkeyrunner which does not provide reliable exceptions in case of any failure in triggering the event\n')

cos	sqrt	1
('cos', 'slower', 'sqrt', 'performance', '8248588', 'in term of speed square rooting is easy a few arithmetical operations for some newton-like method but it is not clear what asin does probably quite costly cos is likely to be one order of magnitude slower than sqrt and thus one square root is likely to be quickier than those two transcendental function calls\n')

erd	diagram	2
('erd', 'lower multiplicity', 'diagram', '', '23322086', 'the circle in erd denotes the lower multiplicity bound of 0 see diagram bellow\n')
('erd', 'lower', 'diagram', '', '23322086', 'the circle in erd denotes the lower multiplicity bound of 0 see diagram bellow\n')

opengl-es	glsurfaceview	1
('opengl-es', 'more flexible', 'glsurfaceview', 'usability', '17374578', 'textureview will display opengl-es rendering but is much more flexible than glsurfaceview and will follow the normal layout hierarchy in android which allows views to be moved on the display\n')

passenger	webrick	1
('passenger', 'better', 'webrick', '', '4727430', 'phusion passenger is the de facto apache mod and yes it s better than webrick which is really only good for tiny sites or testing\n')

persian	farsi	1
('persian', 'better', 'farsi', '', '16129313', 'in persian it s better to say farsi a decimal number like 32.98 is written 32 98 slash is used instead of point\n')

ogg	mp3	7
('ogg', 'vorbis better quality', 'mp3', 'performance', '2467567', 'ogg vorbis is better quality per meg than mp3 plus no licensing legal issues\n')
('ogg', 'vorbis better', 'mp3', '', '9884227', 'moreover ogg vorbis is better then mp3 at all bitrates\n')
('ogg', 'vorbis better then', 'mp3', '', '9884227', 'moreover ogg vorbis is better then mp3 at all bitrates\n')
('ogg', 'vorbis better', 'mp3', '', '2467567', 'ogg vorbis is better quality per meg than mp3 plus no licensing legal issues\n')
('ogg', 'better', 'mp3', '', '12945530', 'in general ogg achieves better compression than mp3 which is a plus for things like download size bandwidth resource usage etc\n')
('ogg', 'better compression', 'mp3', '', '12945530', 'in general ogg achieves better compression than mp3 which is a plus for things like download size bandwidth resource usage etc\n')
('ogg', 'smaller', 'mp3', 'memory', '8859332', 'of those three ogg would usually be smaller than mp3\n')

minimum	median	1
('minimum', 'greater current', 'median', '', '21073127', 'maintain 2 heaps maximum heap for numbers less than current median and minimum heap for numbers greater than current median\n')

fakeiteasy	moq	2
('fakeiteasy', 'nicer syntax', 'moq', '', '11473992', 'fakeiteasy seems to have an overall nicer syntax than moq like the strongly-typed way the former deals with passing parameters to a constructor of a faked class\n')
('fakeiteasy', 'less powerful', 'moq', 'usability', '8445110', 'btw why do you want to use fakeiteasy it looks to me less powerful than moq\n')

ssms	sqlcmd	2
('ssms', 'more', 'sqlcmd', '', '24651261', 'in ssms it takes more than 1 minute to complete while in sqlcmd it takes no longer than one second\n')
('sqlcmd', 'faster', 'ssms', 'performance', '24651261', 'is sqlcmd always that much faster than ssms\n')

codeception	phpunit	1
('codeception', 'more elegant', 'phpunit', 'usability', '25675213', '1 split those tests to unit and acceptance and use a tool like codeception to help you do acceptance which is way more elegant than phpunit for this kind of test\n')

awt	swing	28
('awt', 'more', 'swing', '', '408820', 'are there any cases where awt is more useful advised to use than swing or vice-versa\n')
('swing', 'more capabilities', 'awt', 'usability', '20927462', 'swing is relatively similar to awt apart from the fact that swing has more capabilities awt is probably the simplest form to start out with and has most if not all of the tools to complete your project hope this helps\n')
('swing', 'more comfortable', 'awt', 'usability', '16509409', 'i know you re thinking why did i use awt instead of swing but at the moment i am more comfortable with awt\n')
('swing', 'richer', 'awt', '', '2044311', 'well swing is richer in terms of out-of-the-box components than awt\n')
('swing', 'more', 'awt', '', '20846514', 'generally swing is more efficient and advanced than awt\n')
('swing', 'newer', 'awt', '', '21279086', 'you can read all over the web that awt is old and deprecated and swing is old but newer than awt and should be preferred over awt whenever possible\n')
('swing', 'more features', 'awt', 'usability', '2377467', 'in swing has more features than the awt components\n')
('awt', 'more useful', 'swing', 'usability', '408820', 'are there any cases where awt is more useful advised to use than swing or vice-versa\n')
('swing', 'far better', 'awt', '', '9996090', 'swing is far better than the obsolete awt library\n')
('swing', 'more', 'awt', '', '20927462', 'swing is relatively similar to awt apart from the fact that swing has more capabilities awt is probably the simplest form to start out with and has most if not all of the tools to complete your project hope this helps\n')
('swing', 'far better then', 'awt', '', '21215282', 'swing is far better then awt and should be educated to people who is writing gui-based java for the first time\n')
('swing', 'better', 'awt', '', '9009156', 'swing is better and few people remember how to use awt components\n')
('swing', 'buggier', 'awt', '', '2994324', 'performance swing components are generally slower and buggier than awt due to both the fact that they are pure java and to video issues on various platforms\n')
('swing', 'more efficient', 'awt', 'performance', '20846514', 'generally swing is more efficient and advanced than awt\n')
('awt', 'approach closer', 'swing', 'usability', '3906154', 'the awt approach seems closer to bare metal but since jdk 6 brought a lot of improvements in swing rendering pipeline i would go the swing java2d approach\n')
('awt', 'more', 'swing', '', '13889116', 'swing will save your more time than awt as all the code of components of swing are purely written in java whereas of awt code of components are written in native language that is other than java thus compilation time of awt is more than swing\n')
('swing', 'better', 'awt', '', '7069984', 'note first there is no combobox item in awt there is jcombobox in swing which is better to use than choice of awt\n')
('swing', 'much more', 'awt', '', '19736083', 'use a swing gui not an awt gui since swing is much more powerful and flexible than awt\n')
('swing', 'much more powerful', 'awt', 'usability', '19736083', 'use a swing gui not an awt gui since swing is much more powerful and flexible than awt\n')
('swing', 'less memory', 'awt', 'memory', '416947', 'i mean by light weight i thought maybe the swing components occupy less memory than the awt components\n')
('swing', 'far better', 'awt', '', '21215282', 'swing is far better then awt and should be educated to people who is writing gui-based java for the first time\n')
('swing', 'more time', 'awt', 'performance', '13889116', 'swing will save your more time than awt as all the code of components of swing are purely written in java whereas of awt code of components are written in native language that is other than java thus compilation time of awt is more than swing\n')
('awt', 'faster', 'swing', 'performance', '12145525', 'its was said that awt is faster than swing as it uses the platform component but due the arrival of faster processor etc ..\n')
('swing', 'more onerous', 'awt', '', '12426434', 'use swing follow the threading rules which are hardly likely to be more onerous than awt and enjoy\n')
('swing', 'more', 'awt', '', '2377467', 'in swing has more features than the awt components\n')
('awt', 'more useful', 'swing', 'usability', '1090158', 'as far as when awt may be more useful than swing -\n')
('swing', 'much better performance', 'awt', 'performance', '16289744', 'consider using swing which has much better performance over the old heavyweight awt\n')
('swing', 'much better', 'awt', '', '16289744', 'consider using swing which has much better performance over the old heavyweight awt\n')

altitude	satellite	2
('altitude', 'more', 'satellite', '', '23617594', 'vertical position altitude needs one more satellite in view at least 4 so is not always reliable if gps sees only 3 satelites\n')
('altitude', 'error much greater', 'satellite', 'reliability', '7618704', 'quote from the third link - the altitude error is much greater because it is a satellite based system\n')

scite	notepad++	1
('scite', 'more lightweight', 'notepad++', 'memory', '1838114', 'by the way if you like minimalistic approach there is also scite editor which is my personal preference for doing small bits of code it s even more lightweight than notepad++\n')

twig	smarty	3
('twig', 'better', 'smarty', '', '2894515', 'if your in the market for a templating engine twig a new templating engine used by symfony is much better than smarty imho\n')
('twig', 'better', 'smarty', '', '5769381', 'if you use twig which i like better than smarty - although i still prefer self-restraint+plain php most ide s that support django templating should work with it since the syntax is nearly the same\n')
('smarty', 'cleaner', 'twig', '', '25748940', 'either way i intend to use smarty partly because i have lots of experience with it and partly because its much more well documented and has much more functionality than blade and to me the syntax is slightly cleaner than twig although the template engine is not the point of this question really\n')

qtreeview	qcheckbox	1
('qtreeview', 'more column', 'qcheckbox', '', '20013717', 'i need show files from qfilesystemmodel in qtreeview and customize that tree to show one more column with qcheckbox so user can pick 0..n files from that qtreeview\n')

gridview	datalist	2
('gridview', 'much more bells', 'datalist', '', '756327', 'gridview has much more bells and whistles than datalist\n')
('gridview', 'much more', 'datalist', '', '756327', 'gridview has much more bells and whistles than datalist\n')

trackpad	mouse	1
('trackpad', 'higher', 'mouse', '', '13442793', 'unfortunately the trackpad s scrolling deltas are orders of magnitude higher than a mouse s so the scroll speed is psychotically high\n')

webrick	unicorn	3
('webrick', 'faster', 'unicorn', 'performance', '17107729', 'my personal experience is that webrick is faster in my development environment than unicorn and thin os x in a pretty big rails app lots of gems routes etc\n')
('unicorn', 'faster', 'webrick', 'performance', '22414367', 'i ve also found unicorn to be faster than webrick especially in production applications and apps running on heroku\n')
('unicorn', 'faster', 'webrick', 'performance', '22414422', 'unicorn is supposed to be faster than webrick\n')

landscape	portrait	17
('portrait', 'mode choppier', 'landscape', 'usability', '11651304', 'if you switch between portrait and landscape when viewing this on an ipad3 you ll need to refresh the browser window between switches you can see that portrait mode is choppier than landscape\n')
('portrait', 'more rows', 'landscape', '', '15130794', 'portrait mode can display more rows than in landscape mode\n')
('landscape', 'view less vertical', 'portrait', '', '2952593', 'or the tableview is covering it up because the landscape view has less vertical room than the portrait view\n')
('portrait', 'lower right', 'landscape', '', '3222095', 'without more detail it s hard to say why your approach doesn t work but my guess is that you are seeing the sprite positioning you describe as a result of the fact that if you don t change orientation the lower left in portrait is the lower right in landscape when rotated left it s the same point in gl space 0 0\n')
('landscape', 'wider', 'portrait', '', '19877662', 'as long as landscape means wider than taller and portrait viceversa it means to read the image into memory and check width and height\n')
('portrait', 'lower', 'landscape', '', '3222095', 'without more detail it s hard to say why your approach doesn t work but my guess is that you are seeing the sprite positioning you describe as a result of the fact that if you don t change orientation the lower left in portrait is the lower right in landscape when rotated left it s the same point in gl space 0 0\n')
('landscape', 'bigger', 'portrait', 'memory', '25076470', 'my problem with this is that the calculation works fine in the portrait mode but as soon as i switch to landscape mode the distance between bottom and button is bigger than in portrait mode\n')
('portrait', 'mode less', 'landscape', 'usability', '15405098', 'now my doubt is when i rotate it to portrait mode from landscape mode since the width of the textblocks present inside the itemtemplate of listbox is already defined when i rotate the it to portrait i am not able to see all the data present it cuts off since the width of the portrait mode is less when compared to landscape mode\n')
('landscape', 'smaller', 'portrait', 'memory', '7752076', 'because in landscape your height is smaller than in portrait you need to have a value smaller than 1.0\n')
('portrait', 'mode greater', 'landscape', 'usability', '19364430', 'the amount of spacing to the right of the uiview when in portrait mode is greater than i want for landscape mode and the distance from the bottom is less than i want for landscape mode\n')
('landscape', 'higher', 'portrait', '', '18352012', 'you may try to listen to uideviceorientationdidchangenotification within your subclass cell to rotate the webview and within your view controller with the table view and run a -reloaddata on your table view in order to properly resize the cells assuming the landscape webview is way higher than the portrait webview\n')
('portrait', 'orientation better', 'landscape', '', '22694615', 'currently i m using only the portrait orientation for all devices but the portrait orientation looks better on phones meanwhile landscape orientation looks better on tablets\n')
('portrait', 'choppier', 'landscape', '', '11651304', 'if you switch between portrait and landscape when viewing this on an ipad3 you ll need to refresh the browser window between switches you can see that portrait mode is choppier than landscape\n')
('landscape', 'narrower', 'portrait', '', '25353972', 'as you can see the bottom two photos landscape so have been rotated are narrower than the portrait ones at the top\n')
('landscape', 'webview way higher', 'portrait', '', '18352012', 'you may try to listen to uideviceorientationdidchangenotification within your subclass cell to rotate the webview and within your view controller with the table view and run a -reloaddata on your table view in order to properly resize the cells assuming the landscape webview is way higher than the portrait webview\n')
('landscape', 'view less', 'portrait', '', '2952593', 'or the tableview is covering it up because the landscape view has less vertical room than the portrait view\n')
('portrait', 'smaller', 'landscape', 'memory', '13646497', 'obviously i want in portrait view the content area of this iframe to be smaller than in landscape\n')

junit	cactus	1
('junit', 'older', 'cactus', '', '7558548', 'junit is older and have more extensions dbunit cactus etc\n')

wxpython	pyqt	1
('wxpython', 'less portable', 'pyqt', 'usability', '3787488', 'two words of warning against wxpython it is not possible to install it via the popular fink package manager on mac os x currently which makes it far less portable than pyqt and tkinter\n')

unicorn	thin	4
('unicorn', 'faster', 'thin', 'performance', '8022554', 'i m running unicorn which is about 40 faster than thin on celadon cedar\n')
('unicorn', 'better', 'thin', '', '21745505', 'jruby support - unicorn s a better choice than thin but it doesn t support jruby\n')
('unicorn', 'better performance', 'thin', 'performance', '15755155', 'in production it is much better to use a more sophisticated server like phusion passenger or unicorn since they have better performance than thin mongrel or webrick\n')
('unicorn', 'better choice', 'thin', '', '21745505', 'jruby support - unicorn s a better choice than thin but it doesn t support jruby\n')

factors	mean	3
('factors', 'smaller', 'mean', 'memory', '21847850', 'if the factors is smaller than the golden mean 1.6 and the previous allocations are contiguous with each other they ll eventually add up to a chunk that can satisfy a later requirement\n')
('factors', 'larger', 'mean', 'memory', '21847850', 'if the factors is larger than the golden mean they never will\n')
('factors', 'larger', 'mean', 'memory', '10197144', 'if your growth factors is larger than the golden mean that can t happen\n')

division	subtraction	18
('subtraction', 'considerably slower', 'division', 'performance', '3704402', 'this platform is probably not representative of your microcontroller but the test shows that on this platform the subtraction is considerably slower than the division\n')
('division', 'slower', 'subtraction', 'performance', '21475774', 'i am a bit suspicious of the performance because modulo tends to use division which is slower than your subtraction operations\n')
('division', 'trickier', 'subtraction', '', '1218185', 'subtraction is similar using subtraction of the base type and borrow instead of carry multiplication can be done with repeated additions very slow or cross-products faster and division is trickier but can be done by shifting and subtraction of the numbers involved the long division you would have learned as a kid\n')
('division', 'higher', 'subtraction', '', '6851760', 'in this case division has higher precedence than subtraction parenthesis around the division or not\n')
('division', 'higher precedence', 'subtraction', '', '6851760', 'in this case division has higher precedence than subtraction parenthesis around the division or not\n')
('division', 'higher precedence', 'subtraction', '', '7851837', 'that s because the division operator has a higher precedence than the subtraction operator -\n')
('division', 'higher', 'subtraction', '', '14438062', 'without parentheses math.exp c b is executed first as division has higher precedence than subtraction -\n')
('division', 'operator higher precedence', 'subtraction', '', '3423368', 'because the division operator has higher precedence than subtraction\n')
('division', 'operator higher', 'subtraction', '', '3423368', 'because the division operator has higher precedence than subtraction\n')
('division', 'higher precedence', 'subtraction', '', '14438062', 'without parentheses math.exp c b is executed first as division has higher precedence than subtraction -\n')
('division', 'operator higher', 'subtraction', '', '7851837', 'that s because the division operator has a higher precedence than the subtraction operator -\n')
('division', 'higher', 'subtraction', '', '13190071', 'division has higher precedence than subtraction so in the first two examples only the second number is being divided\n')
('division', 'greater precedence', 'subtraction', '', '19693646', 'i don t think they have a natural precedence unlike say multiplication and division being of greater precedence than subtraction and addition because they can be built from subtraction and addition\n')
('division', 'operation tighter', 'subtraction', '', '20687808', 'the division operation binds tighter than i.e is evaluated ahead of the subtraction so you are taking a square root of a negative number\n')
('division', 'higher precedence', 'subtraction', '', '13190071', 'division has higher precedence than subtraction so in the first two examples only the second number is being divided\n')
('subtraction', 'slower', 'division', 'performance', '3704402', 'this platform is probably not representative of your microcontroller but the test shows that on this platform the subtraction is considerably slower than the division\n')
('division', 'operator higher precedence', 'subtraction', '', '7851837', 'that s because the division operator has a higher precedence than the subtraction operator -\n')
('division', 'higher precedence', 'subtraction', '', '3423368', 'because the division operator has higher precedence than subtraction\n')

xfce	gnome	5
('xfce', 'slightly lighter', 'gnome', 'memory', '5343779', 'you might want to look at one of these options if you re running in a vm since xfce is slightly lighter weight than gnome although not all that much lighter these days\n')
('xfce', 'much smaller', 'gnome', 'memory', '1105831', 'xfce runs much smaller than gnome and is full featured\n')
('xfce', 'smaller', 'gnome', 'memory', '1105831', 'xfce runs much smaller than gnome and is full featured\n')
('xfce', 'lighter weight', 'gnome', 'memory', '5343779', 'you might want to look at one of these options if you re running in a vm since xfce is slightly lighter weight than gnome although not all that much lighter these days\n')
('xfce', 'slightly lighter weight', 'gnome', 'memory', '5343779', 'you might want to look at one of these options if you re running in a vm since xfce is slightly lighter weight than gnome although not all that much lighter these days\n')

jscript	vbscript	8
('jscript', 'simpler', 'vbscript', 'usability', '23531981', 'the inclusion of jscript code into a batch file is simpler than vbscript and the translation of a small code segment from vbs to jscript is not problematic\n')
('jscript', 'simpler nicer', 'vbscript', 'usability', '1910089', 'asp with jscript is 100 times better cleaner simpler nicer than vbscript and makes my job a joy rather than a vbscript head ache\n')
('jscript', 'infinitely more elegant', 'vbscript', 'usability', '495528', 'when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n')
('jscript', 'more elegant', 'vbscript', 'usability', '495528', 'when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n')
('jscript', 'nicer', 'vbscript', '', '1910089', 'asp with jscript is 100 times better cleaner simpler nicer than vbscript and makes my job a joy rather than a vbscript head ache\n')
('jscript', 'infinitely more', 'vbscript', '', '495528', 'when writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collection\n')
('jscript', 'more', 'vbscript', '', '22345923', 'on contrary jscript is more c-like do not require explicit enabling of script running accepts relative paths case sensitive and loosely typed both are imho advantages for scripting language compared to vbscript\n')
('jscript', 'more c-like', 'vbscript', '', '22345923', 'on contrary jscript is more c-like do not require explicit enabling of script running accepts relative paths case sensitive and loosely typed both are imho advantages for scripting language compared to vbscript\n')

strtol	atoi	12
('strtol', 'better error', 'atoi', 'reliability', '10380364', 'use strtol it does better error reporting than atoi\n')
('strtol', 'better option', 'atoi', 'usability', '13328049', 'besides strtol is a better option than atoi as strtol can handle failures better\n')
('strtol', 'much more', 'atoi', '', '4631310', 'i understand that strtol and strtof are preferred to atoi atof since the former detect errors and also strtol is much more flexible than atoi when it comes to non-base-10\n')
('strtol', 'better', 'atoi', '', '13328049', 'besides strtol is a better option than atoi as strtol can handle failures better\n')
('strtol', 'better', 'atoi', '', '12420547', 'strtol is better than atoi with better error handling\n')
('strtol', 'much more flexible', 'atoi', 'usability', '4631310', 'i understand that strtol and strtof are preferred to atoi atof since the former detect errors and also strtol is much more flexible than atoi when it comes to non-base-10\n')
('strtol', 'more flexible', 'atoi', 'usability', '4631310', 'i understand that strtol and strtof are preferred to atoi atof since the former detect errors and also strtol is much more flexible than atoi when it comes to non-base-10\n')
('strtol', 'better', 'atoi', '', '10380364', 'use strtol it does better error reporting than atoi\n')
('strtol', 'better', 'atoi', '', '2461383', 'all have more or less cumbersome and non-obvious error checking involving errno strtol is way much better than atoi in any case so avoid using atoi\n')
('strtol', 'better error', 'atoi', 'reliability', '2428697', 'i would recommend strtol which provides better error handling than atoi or sscanf\n')
('strtol', 'much better', 'atoi', '', '2238063', 'the c function strtol is much better make it a habit to prefer that one to atoi\n')
('strtol', 'better', 'atoi', '', '2428697', 'i would recommend strtol which provides better error handling than atoi or sscanf\n')

background-color	background-image	1
('background-color', 'rgba faster', 'background-image', 'performance', '25296557', 'a lot of answers comments are mentioning that the background-color rgba is faster and more efficient but that background-image is more compatibility friendly\n')

dawg	trie	6
('dawg', 'more efficient', 'trie', 'performance', '7638114', 'use a dawg which is more efficient than a trie in terms of space waste\n')
('dawg', 'more', 'trie', '', '681760', 'it is a structure similar to but twice as space-efficient as the dawg that is more efficient than the trie which only compresses prefixes\n')
('dawg', 'better', 'trie', '', '8329927', 'a dawg has better memory performance if the strings have many common suffixes but they are more expensive and difficult to build and update so start with a trie\n')
('dawg', 'more efficient', 'trie', 'performance', '681760', 'it is a structure similar to but twice as space-efficient as the dawg that is more efficient than the trie which only compresses prefixes\n')
('dawg', 'better memory', 'trie', 'memory', '8329927', 'a dawg has better memory performance if the strings have many common suffixes but they are more expensive and difficult to build and update so start with a trie\n')
('dawg', 'more', 'trie', '', '7638114', 'use a dawg which is more efficient than a trie in terms of space waste\n')

memcached	apc	26
('apc', 'faster', 'memcached', 'performance', '11584538', 'as you know apc is much more faster than memcached if we re fetching keys from a single server\n')
('memcached', 'faster', 'apc', 'performance', '7465290', 'memcached is faster than apc as zend_cache backend but you still need apc extension installed even in development mode to get a great speedup of your code\n')
('apc', 'much more faster', 'memcached', 'performance', '11584538', 'as you know apc is much more faster than memcached if we re fetching keys from a single server\n')
('apc', 'more functionality', 'memcached', 'usability', '10135428', 'apc gives you some more functionality than memcached\n')
('apc', 'much more', 'memcached', '', '11584538', 'as you know apc is much more faster than memcached if we re fetching keys from a single server\n')
('apc', 'less feature', 'memcached', 'usability', '1825484', 'apc have less feature than memcached and is easly to use and optimize but this depends on your needs\n')
('memcached', 'slower', 'apc', 'performance', '17295791', 'memcached is in-memory too and a bit slower than apc\n')
('memcached', 'slower', 'apc', 'performance', '1808814', 'memcached around 4-5 times slower than apc but run as a single process that can be touched everywhere in my environment\n')
('apc', 'much faster', 'memcached', 'performance', '18910135', 'please don t mention memcached i am already using it but it is not suitable as direct replacement of apc because i am doing many apc_fetch calls because apc is much faster than memcached for this purpose\n')
('memcached', 'more overhead', 'apc', 'performance', '1935264', 'memcached has more overhead since you have to use a tcp connection to access it versus just a function call for apc xcache shared objects\n')
('apc', 'faster', 'memcached', 'performance', '22253724', 'better use apc on apache server it will be much faster than memcached because you don t need to make a tcp ip call to connect to memcached\n')
('apc', 'faster', 'memcached', 'performance', '1825484', 'my experience say that apc is nearly 7-8 times faster than memcached\n')
('apc', 'generally less memory', 'memcached', 'memory', '10858440', 'the big caveat here is that apc generally has less memory available for storage though. default being 32mb memcached s big adavantage is that while still fast it s distributed so if you have multiple servers running they could share this data\n')
('memcached', 'more functionality', 'apc', 'usability', '1803139', 'memcached has more functionality but is intended for distributed environments while apc works on single servers only\n')
('memcached', 'more', 'apc', '', '1935264', 'memcached has more overhead since you have to use a tcp connection to access it versus just a function call for apc xcache shared objects\n')
('apc', 'faster', 'memcached', 'performance', '18910135', 'please don t mention memcached i am already using it but it is not suitable as direct replacement of apc because i am doing many apc_fetch calls because apc is much faster than memcached for this purpose\n')
('apc', 'faster', 'memcached', 'performance', '2353190', 'apc access is a bit faster something like 5 times faster than memcached if i remember correctly as it s only local -- no network involved\n')
('memcached', 'more', 'apc', '', '15117742', 'memcached is more for caching database queries and improving performance in that regard while apc is more for improving performance of php code\n')
('apc', 'faster', 'memcached', 'performance', '13751524', 'it s slower than apc but it s faster than memcached redis etc\n')
('apc', 'faster', 'memcached', 'performance', '1825484', 'a quick googling says that apc is 5 times faster than memcached\n')
('apc', 'generally less', 'memcached', '', '10858440', 'the big caveat here is that apc generally has less memory available for storage though. default being 32mb memcached s big adavantage is that while still fast it s distributed so if you have multiple servers running they could share this data\n')
('apc', 'more', 'memcached', '', '4999069', 'apc is more an opcode caching system than a key value memory database like memcached altough it can be greatly used for both purposes\n')
('apc', 'faster', 'memcached', 'performance', '9884780', 'in my case apc is 59 times faster than memcached\n')
('apc', 'faster', 'memcached', 'performance', '17118318', 'apc is faster on a single server - but memcached is distributed\n')
('memcached', 'more', 'apc', '', '1803139', 'memcached has more functionality but is intended for distributed environments while apc works on single servers only\n')
('memcached', 'more', 'apc', '', '1935264', 'memcached is more along the lines of a distributed object cache vs something like apc or xcache which stores php bytecode in memory so you avoid having to parse it each time\n')

linefeed	delimiter	1
('linefeed', 'longer string', 'delimiter', '', '8644931', 'i ve taken the example of two linefeed here but the same is true for any character string i could subvert the problem by maybe taking a longer string as the delimiter but that would have two undersirable effects\n')

http	spdy	5
('spdy', 'more', 'http', '', '19428874', 'spdy is a more efficient protocol than http\n')
('http', 'more', 'spdy', '', '8830628', 'anything that you do with http is more or less equivalent with spdy and neither is really anything but an implementation detail of your soa work\n')
('spdy', 'more efficient protocol', 'http', 'performance', '19428874', 'spdy is a more efficient protocol than http\n')
('spdy', 'more efficient', 'http', 'performance', '19428874', 'spdy is a more efficient protocol than http\n')
('http', 'less equivalent', 'spdy', '', '8830628', 'anything that you do with http is more or less equivalent with spdy and neither is really anything but an implementation detail of your soa work\n')

onclick	onmouseup	1
('onclick', 'more appropriate', 'onmouseup', '', '9850188', 'note also that onclick would be much more appropriate than onmouseup for this\n')

chars	int	286
('int', 'larger', 'chars', 'memory', '3901071', 'on some platforms an int might be no larger than a chars\n')
('int', 'larger range', 'chars', 'memory', '5095500', 'a narrowing conversion like int to chars if int has a larger range than chars yields some implementation-defined conversion\n')
('chars', 'faster collections.default', 'int', 'performance', '2532564', 'i ve written chars counter c extension to python looks like 300x faster than collections.counter and 150x faster than collections.default int\n')
('int', 'faster', 'chars', 'performance', '9454016', 'the damerau-levenshtein algorithm includes many comparisons and int compare much faster than chars\n')
('int', 'often faster', 'chars', 'performance', '966107', 'far better to use a surrogate key and yes a join on an int is often faster and you can join in delete staments in many databases not use the slower subquery especially since names tend to be longer than a few chars\n')
('int', 'usually wider', 'chars', '', '10149986', 'the type int is an int which is usually wider and so can keep all the possible values a chars can keep\n')
('chars', 'array lower memory', 'int', 'memory', '13667202', 'the chars array has a lower memory address than the int i variable\n')
('int', 'certainly larger', 'chars', 'memory', '17644927', 'the size of an int is certainly larger than the size of a chars\n')
('chars', 'less space', 'int', 'memory', '25025425', 'if all your int are small it might make sense to store all 5 values in a more appropriate type a chars which will use less space than an int\n')
('int', 'faster', 'chars', 'performance', '3379818', 'on some hardware platforms it might turn out that int types work faster than chars types so the selection of the specific type becomes a speed-vs-memory trade-off but once again in many cases when the range of chars is naturally sufficient it might make more sense to use chars instead of int\n')
('chars', 'longer', 'int', '', '19949260', 'auto is one chars longer than int so the lexer definitely has to do more work\n')
('int', 'bigger', 'chars', 'memory', '2804009', 'if you re only dealing with arrays of chars or only dealing with arrays of int it s irrelevant because endianness is a property of int and other types bigger than chars\n')
('chars', 'smaller', 'int', 'memory', '23215701', 'it s wrong because chars is smaller than int\n')
('int', 'smaller', 'chars', 'memory', '13305795', 'if you want to point to more than one int you would need to define an int array which is four times smaller than your chars array - make sure your sizes are correct\n')
('chars', 'smaller', 'int', 'memory', '4221272', 'however an explicit cast is required in your second case where there is potential to lose information since a chars is smaller than an int\n')
('int', 'higher', 'chars', '', '12213172', 'here int is higher datatype and chars is lower datatype.\n')
('int', 'more memory', 'chars', 'memory', '11897487', 'if int is 4 bytes and represents 2 bytes the int consumes more memory than the chars -array so you are not initialising the full int -memory to 0 by setting all chars -variables\n')
('int', 'just terser', 'chars', '', '10636341', 'they are the same they both cast the value to an int one is just terser by four chars\n')
('chars', 'closer', 'int', '', '16866635', 'a chars is closer to an int than to a string\n')
('int', 'faster', 'chars', 'performance', '3483473', 'does a unique index on an int column perform faster than a chars 5\n')
('int', 'much larger', 'chars', 'memory', '4716670', 'the max size of an int is much larger than a chars so your cast may truncate the value\n')
('chars', 'lower precedence', 'int', '', '6646120', 'since chars types have lower precedence than int types the query is basically the same as\n')
('chars', 'strings much longer', 'int', '', '6226905', 'you will get your data faster comparing chars strings is much longer than comparing two int\n')
('chars', 'lower', 'int', '', '11203139', 'value8 is promoted to int assuming the conversion rank of unsigned chars is lower than the conversion rank of int usually the case on most platforms\n')
('int', 'bigger', 'chars', 'memory', '819327', 'int is usually bigger than chars â more suitable for calculations but not so suitable for byte-level manipulation\n')
('int', 'larger', 'chars', 'memory', '6985935', 'the basis being that an int is larger than a chars and as such there is no chance of loss of information in the conversion\n')
('int', 'id only lower', 'chars', '', '1685542', 'it takes a pathname and an arbitrary int id uses only lower 8 bits so a chars is usually used and generates a probably unique key_t\n')
('int', 'larger', 'chars', 'memory', '9650260', 'if you copy int larger than chars like short or long you have to make sure to correct the byte order depending on your cpu architecture\n')
('chars', 'less', 'int', '', '13491968', 'formally they re promoted to int on a usual machine where chars is less than int and then the arithmetic operation is performed\n')
('int', 'more', 'chars', '', '3524652', 'it seems pretty silly that your presumably 16-bit int takes more than twice as many instructions as an 8-bit chars\n')
('int', 'more', 'chars', '', '22905269', 'the second case does the same thing since a signed int is more than capable of holding the full range of unsigned chars values in this implementation\n')
('int', 'bigger', 'chars', 'memory', '12699536', 'since int is bigger than chars an pointer could require less information to indicate what it points to\n')
('int', 'simpler case', 'chars', 'usability', '4837705', 'for or int which sounds a simpler case and chars could have been both implemented as member operators or as non-member free operators\n')
('int', 'larger', 'chars', 'memory', '11430832', 'when you re printing using the default x format the value to be printed is interpreted as being an int much larger than the chars\n')
('chars', 'smaller', 'int', 'memory', '7280126', 'since chars is smaller than int it has to be converted to an int\n')
('chars', 'smaller', 'int', 'memory', '2504224', 'in fact quite a bit of i o depends on eof having a value that couldn t originate from the file which basically translates to a requirement that chars have a range that s smaller than int not just smaller than or equal to as the standard directly requires\n')
('int', 'larger', 'chars', 'memory', '25288506', 'i am guessing that it happens because the size of int is larger than that of chars as such the memory controller the thing which controls memory in c -i don t know the technical term has to move a larger distance\n')
('chars', 'more descriptive', 'int', '', '857530', 'since sql server doesn t support named constants chars is far more descriptive than int when used in stored procedure and views as constants\n')
('int', 'array bigger', 'chars', 'memory', '18888691', 'dr printf uses the stack overwriting some of the space pointed by str but since the int array is bigger in memory than the chars array it is far ahead in the stack and doesn t get overwritten\n')
('int', 'much easier', 'chars', 'usability', '3225877', 'i assume this is because comparison between int is much easier than between chars strings but i was looking for some literature to back this assessment ideally some database structure book\n')
('chars', 'less rank', 'int', '', '24314853', 'it s stated in the standard that unsigned chars has less rank than int and with this the type of the switch condition will be int which further means\n')
('int', 'faster', 'chars', 'performance', '1855222', 'running the same test on linux with gcc similarly pegs int and long as similar and both faster than chars although the difference is less pronounced\n')
('int', 'larger', 'chars', 'memory', '7893217', 'is there memset that accepts int larger than chars\n')
('chars', 'smaller sizes', 'int', 'memory', '11464365', 'update the reason why int doesn t work in oppose to chars and short is because that when both numbers are added there is a possibility of overflow regardless of being int short or chars while not forgetting integral promotion but because short and chars are with smaller sizes than int and because they are promoted to int in expressions they are represented again without truncation in this line\n')
('int', 'more', 'chars', '', '8526430', 'regarding the last portion of your question the number of bits of int is always more than chars so it won t cause a problem\n')
('chars', 'easier', 'int', 'usability', '13112135', 'reading it into a chars buffer makes it easier to access those four bytes in the int\n')
('int', 'faster', 'chars', 'performance', '2682753', 'it s going to be a performance memory trade-off anyway because writing one int is generally faster than three chars separately\n')
('chars', 'smaller', 'int', 'memory', '9874090', 'int and chars are numeric types and chars is guaranteed smaller than int therefore supplying a chars where an int is expected is safe so in a nutshell yes you can do that\n')
('chars', 'substantially less', 'int', '', '8066149', 'chars 1 takes substantially less space than an int\n')
('int', 'smaller', 'chars', 'memory', '3520921', 'for instance on an architecture where the int are 4 bytes and must be 4 byte aligned an int pointer could be two bits smaller than a chars or void pointer\n')
('chars', 'larger', 'int', 'memory', '7885442', 'the real sha1 algorithm uses blocks larger than a single chars and state larger than an int but basically that s how it goes\n')
('int', 'larger', 'chars', 'memory', '1654239', 'as mentioned in other posts senderid and sequencenumber are both of type int which is likely to be larger than chars so these values will be truncated\n')
('chars', 'lower rank', 'int', '', '20390174', 'given 4.13 says chars has lower rank than int this means chars can be converted to int if needed but why is it needed\n')
('int', 'larger', 'chars', 'memory', '2357720', 'i ve always been taught that if an int is larger than a chars you must solve the byte ordering problem\n')
('chars', 'more usable', 'int', '', '964541', 'sometimes chars type is more usable than int - fixed size chars doesn t take much storage room and you can see enumerated values directly in database fields\n')
('int', 'larger domain', 'chars', 'memory', '8348995', 'java will allow you to assign chars s to int s since int has a larger domain than chars\n')
('chars', 'higher address', 'int', '', '14481302', 'we know that chars will have a higher address than the int because once again the standard says so\n')
('int', 'larger', 'chars', 'memory', '16385620', 'is there memset that accepts int larger than chars\n')
('chars', 'smaller', 'int', 'memory', '10628673', 'and size of chars is smaller than size of int\n')
('int', 'better', 'chars', '', '25331417', 'int is better because with chars n you ll be comparing one chars at a time and unless you collate latin1_general_bin then you ll also be doing a transformation when comparing chars\n')
('chars', 'more', 'int', '', '16743859', 'so my guess would be that that chars requires more than 16 bits so it would need to be treated as an int code point\n')
('int', 'less', 'chars', '', '914297', 'plain chars having unspecified signed-ness allows compilers to select whichever representation is more efficient for the target architecture on some architectures zero extends a one-byte value to the size of int requires less operations thus making plain chars unsigned while on others the instruction set makes sign-extending more natural and plain chars gets implements as signed\n')
('chars', 'more possible strings', 'int', '', '16022901', 'with strings of 6 chars you already have more possible strings than int values log 2 32 log 69 5.23\n')
('int', 'faster', 'chars', 'performance', '3483462', 'does a unique index on an int column perform faster than a chars 5\n')
('int', 'larger', 'chars', 'memory', '5095500', 'a narrowing conversion like int to chars if int has a larger range than chars yields some implementation-defined conversion\n')
('int', 'better', 'chars', '', '17218381', 'some suggests storing it in int is better but other suggests tinyint and enum but some others suggests store it in a chars 1 m for male and f for female\n')
('int', 'larger value', 'chars', 'memory', '12213070', 'loss of precision means that int has a larger value and chars is smaller so you can t fit something which is to large for that space\n')
('int', 'more abstract', 'chars', '', '25284847', 'in a certain sense int is a more abstract data type than chars short long or long long as you cannot be sure about the bitwidth\n')
('int', 'form always more reliable', 'chars', 'reliability', '8065072', 'storing data in the int form is always more reliable than the chars or string\n')
('int', 'more', 'chars', '', '25634509', 'if so is there some correlation such as 40 digit double int is 50 more efficient as a uid than using 20 chars string\n')
('int', 'wider', 'chars', '', '8377850', 'while shifting the types are automatically promoted to int which is wider than chars most often\n')
('chars', 'lower', 'int', '', '20721002', '2 chars has a lower rank than int\n')
('chars', 'far more descriptive', 'int', '', '857530', 'since sql server doesn t support named constants chars is far more descriptive than int when used in stored procedure and views as constants\n')
('int', 'hash less', 'chars', '', '9354052', 'my original solution was naive - it didn t deal with the case when the int hash is less than 100 base 36 - meaning it would print less than 3 chars\n')
('int', 'less operations', 'chars', '', '914297', 'plain chars having unspecified signed-ness allows compilers to select whichever representation is more efficient for the target architecture on some architectures zero extends a one-byte value to the size of int requires less operations thus making plain chars unsigned while on others the instruction set makes sign-extending more natural and plain chars gets implements as signed\n')
('int', 'more', 'chars', '', '21816561', 'however im encountering an issue were if the int entered is more than 10 chars long the program will still say that the lenght is 10\n')
('chars', 'smaller version', 'int', 'memory', '8518758', 'now why chat to int works because every chars is represented as unicode in java so you can think of it as at backend chars is a smaller version of int\n')
('chars', 'less memory', 'int', 'memory', '2581597', 'the only reason i can think of is the objective-c designers micro-optimising storage because the chars will use less memory than the int\n')
('int', 'greater range', 'chars', 'usability', '2504224', 'that does leave one loophole though it s one that would generally be quite horrible that chars and short have the same range size_type is the same as unsigned short and int has a greater range than chars short\n')
('chars', 'more', 'int', '', '11352883', '100 strings of value x00 take 24 bytes per value too -- but notice that listofstrings is one chars shorter than listofintegers so the 1-byte string takes up 1 byte more than the int 0 and the same amount of space as the int 255\n')
('int', 'faster', 'chars', 'performance', '3486208', 'does a unique index on an int column perform faster than a chars 5\n')
('int', 'faster', 'chars', 'performance', '4499141', 'is a search through numbers int faster than chars in an mysql database\n')
('chars', 'smaller', 'int', 'memory', '10056318', 'the chars type is smaller than int and hence can represent less values than int can\n')
('int', 'smaller', 'chars', 'memory', '15116259', 'int values are smaller than chars strings you can fit much more per page than you can with nvarchar and mathematics are more easily done on int\n')
('int', 'version better', 'chars', '', '14442563', 'it seems that the const int version is better optimized than the and the even more surprising const chars version\n')
('chars', 'smaller', 'int', 'memory', '20505399', 'thus when you use it with objects of type chars which is smaller than int these values are automatically converted to int before the operation happens\n')
('chars', 'much more space', 'int', 'memory', '19207349', 'another thing is that chars 32 consumes much more space 32 bytes 256 bit where an int 10 only is 32 bit long\n')
('int', 'larger', 'chars', 'memory', '20500727', 'an int has larger capacity than a chars so the conversion is not guaranteed to work\n')
('int', 'greater', 'chars', '', '10336543', 'the rank of long long int is greater than the rank of long int which is greater than the rank of int which is greater than the rank of short int which is greater than the rank of signed chars\n')
('chars', 'less room', 'int', '', '337764', 'for lookup tables with a low volume of rows you can use a 3 chars code as the primary key as this takes less room than an int but the performance difference is negligible\n')
('int', 'much smaller', 'chars', 'memory', '5091110', 'however chars 36 and int 10 are far away from being equal because a int 10 is much smaller than chars 36\n')
('int', 'higher datatype', 'chars', '', '12213172', 'here int is higher datatype and chars is lower datatype.\n')
('chars', 'more', 'int', '', '25812393', 'chars and int could be the same size and chars is unsigned with a positive range more than int\n')
('int', 'less', 'chars', '', '11939554', 'if the int turns out to be 38 i need the version string to come out as 380 only one zero was added to the end of the int because i wanted a max of three chars and if the int is less than three chars zeroes will be added to make it three\n')
('int', 'more memory', 'chars', 'memory', '15178333', 'typically int take up more memory than chars so i will end up with a larger value than c after they are both incremented\n')
('chars', 'better', 'int', '', '7415619', 'imho a chars 1 code is better than an int for employee types\n')
('int', 'greater', 'chars', '', '8056133', 'the firs one is more common and works on all systems where the size of an int is greater than the size of a chars\n')
('chars', 'greater', 'int', '', '5093093', 'so for example the value of the chars 3 is 3 greater than the value of 0 so when you subtract these two values you get the int 3\n')
('chars', 'bigger size', 'int', 'memory', '7950760', 'i.e if we use int and chars then union will allocate space for chars which has the bigger size and the int too ll be stored in the same space overriding the last one\n')
('chars', 'more specific', 'int', '', '19261237', 'in java chars is a more specific type of int\n')
('int', 'generally faster', 'chars', 'performance', '2682753', 'it s going to be a performance memory trade-off anyway because writing one int is generally faster than three chars separately\n')
('int', 'less space', 'chars', 'memory', '5091110', 'this does not only mean that int consumes less space it also means that chars 36 has about 4 times more different keys\n')
('int', 'bigger', 'chars', 'memory', '3680692', 'in you are adding a chars to an int an int can be much bigger than a chars so it chooses the bigger data type int to be the result a.k.a\n')
('chars', 'faster', 'int', 'performance', '4798262', 'if i had to assume a 1 byte chars is compared faster than a 4-byte int\n')
('int', 'less', 'chars', '', '21122732', 'while using chars there is probability of getting garbage value as it directly stores the chars but using int there is less probability of it as it stores the ascii value of the chars\n')
('int', 'bigger memory', 'chars', 'memory', '3518755', 'an int is a bigger memory area than a chars and when you read you ll pick up other values beside the chars and end up with an effectively random value\n')
('chars', 'same larger', 'int', 'memory', '25113557', 'let s assume for a minute you re using unsigned chars same applies to larger int of course\n')
('chars', 'always smaller', 'int', 'memory', '19696280', 'weren t the case a chars is always smaller than an int and will thus always fit inside an int so it can safely be promoted\n')
('int', 'more', 'chars', '', '784328', 'for example if the string is going to store a decimal-formatted 32-bit int you know that you do not need more than 11 chars to do so\n')
('chars', 'shorter', 'int', '', '955645', 'if you use chars x where x 4 your chars key will be shorter than a int one\n')
('int', 'greater', 'chars', '', '2013301', 'and sizeof int is greater than one and the compiler adds padding for the chars member variable - is the compiler-generated code allowed to change the values of the padding bytes\n')
('chars', 'lower', 'int', '', '20390174', 'given 4.13 says chars has lower rank than int this means chars can be converted to int if needed but why is it needed\n')
('chars', 'greater', 'int', '', '955645', 'if you use chars x where x 4 your chars key will be greater than a int one\n')
('int', 'bigger', 'chars', 'memory', '1745229', 'because int can become arbitrarily large in clojure the resulting number becomes bigger with every chars thanks to the\n')
('chars', 'more space', 'int', 'memory', '3572799', 'if the file is in text format you may be able to fit it in memory just by converting things to int as you read them in since an int stored as chars may take more space than an int stored as an int depending on the size of the int and the type of text file\n')
('chars', 'better', 'int', '', '11924367', 'although outer foo chars is a better match for the call foo c name lookup stops after finding outer inner foo int outer foo chars is hidden and so the program prints inner\n')
('chars', 'narrower', 'int', '', '20240534', 'converting to chars assuming a chars is narrower than an int will keep the lower-order bits and lower-order bits are lower-order bits no matter how they are stored in memory\n')
('chars', 'wider', 'int', '', '22448277', 'that s why even picky compilers do not issue a warning if you shift a chars wider than 7 bits try it - you ll get the warning only if you shift wider than an int allows\n')
('int', 'less', 'chars', '', '20014609', 'this program is designed to take an int and a name of less than 15 chars and store them in arrays\n')
('int', 'wider', 'chars', '', '25027354', 'this creates the possibility that even on a system where chars is only 8 bits wide and so int is wider than chars chars constant notations can exist which provide int values wider than chars\n')
('int', 'larger', 'chars', 'memory', '15531878', 'a longer string of int is larger otherwise compare chars in order\n')
('int', 'more', 'chars', '', '5722822', 'an int is usually 4 bytes i m thinking i don t really need more than 10 chars so a varchar 10 would do.\n')
('int', 'more', 'chars', '', '2858375', 'if your int value uses more than one chars and includes the sign as you mention then it is more complex\n')
('int', 'simpler', 'chars', 'usability', '4837705', 'for or int which sounds a simpler case and chars could have been both implemented as member operators or as non-member free operators\n')
('chars', 'smaller', 'int', 'memory', '3541544', 'a chars is commonly smaller than an int\n')
('int', 'less', 'chars', '', '10015537', 'once that is done you can go in and tweak the data types to better fit your needs if desired and you can add your own restrictions to the data such as requiring that an xs int value be in a range of 0 and 50 or an xs string value be less than 10 chars long - there are dozens of other possibilities but that should give you the idea\n')
('int', 'smaller', 'chars', 'memory', '22762910', 'i tried getsubstring long int but it only works for strings smaller than 4000 chars\n')
('chars', 'smaller', 'int', 'memory', '25175295', 'c language never performs arithmetic computations withing the domain of chars short or any other type that is smaller than int\n')
('int', 'usually bigger', 'chars', 'memory', '819327', 'int is usually bigger than chars â more suitable for calculations but not so suitable for byte-level manipulation\n')
('int', 'wider', 'chars', '', '6967869', 'since int is normally wider than chars truncates the value of int being assigned\n')
('int', 'always more', 'chars', '', '8526430', 'regarding the last portion of your question the number of bits of int is always more than chars so it won t cause a problem\n')
('int', 'greater', 'chars', '', '2845254', 'also assuming sizeof int 4 your strings must not be greater than 4 chars as you have now and 1 of those needs to be a null termination\n')
('int', 'stricter alignment', 'chars', '', '3182486', 'it s theoretically possible that an has a smaller sizeof than a for example if int has stricter alignment requirements than chars this could be a reasonable thing to do\n')
('chars', 'more space', 'int', 'memory', '21866674', 'so if most are just a few chars a varchar 20 key will occupy more space than an int key\n')
('chars', 'larger', 'int', 'memory', '4352656', 'however if i call the function once with a file call it again with a nonexistent file then call it one more time with the original file the chars string buffer is larger than the int length\n')
('int', 'more', 'chars', '', '8549715', 'chars and int are two distinct types but this works because an int has more precision than a chars\n')
('chars', 'less', 'int', '', '8695817', 'the value sizeof chars is less than sizeof int\n')
('int', 'typically greater range', 'chars', 'usability', '20028800', 'this warning comes up because int typically has a greater range than chars and so some loss-of-information may occur\n')
('int', 'normally wider', 'chars', '', '6967869', 'since int is normally wider than chars truncates the value of int being assigned\n')
('int', 'more', 'chars', '', '11897487', 'if int is 4 bytes and represents 2 bytes the int consumes more memory than the chars -array so you are not initialising the full int -memory to 0 by setting all chars -variables\n')
('chars', 'array lower', 'int', '', '13667202', 'the chars array has a lower memory address than the int i variable\n')
('chars', 'more', 'int', '', '19261237', 'in java chars is a more specific type of int\n')
('int', 'more', 'chars', '', '3415512', 'the raw storage of your array assuming a 4 byte int should only be 60mb but since each chars of an int in ascii is 1 byte any int with more than 4 chars are going to be larger than the binary storage hence your 130mb file\n')
('chars', 'smaller', 'int', 'memory', '24805674', 'when smaller types are involved in an expression with larger types for example chars is smaller than short which mostly is smaller than int which may be smaller than long the involved types are promoted to the larger tyoes\n')
('int', 'higher', 'chars', '', '21630183', 'but it is a narrowing conversion because the rank of int is higher than rank of chars\n')
('int', 'bigger', 'chars', 'memory', '25811135', 'yes it is because int is bigger than chars but using chars instead of int would not be safe for the same reason\n')
('int', 'terser', 'chars', '', '10636341', 'they are the same they both cast the value to an int one is just terser by four chars\n')
('chars', 'more space', 'int', 'memory', '4321266', 'i understand you re after the security by obscurity but be aware that chars varchar columns larger than 4 chars take more space than int does 1 byte\n')
('int', 'faster', 'chars', 'performance', '12338464', 'on all of the computers i work with int is faster than unsigned significantly faster than signed chars\n')
('int', 'easier', 'chars', 'usability', '3225877', 'i assume this is because comparison between int is much easier than between chars strings but i was looking for some literature to back this assessment ideally some database structure book\n')
('int', 'form always more', 'chars', '', '8065072', 'storing data in the int form is always more reliable than the chars or string\n')
('int', 'larger byte-wise', 'chars', 'memory', '15344666', 'you can t really concat an int and place it inside a single chars for starters the int itself is larger byte-wise than your entire chars so obviously it can t fit in there\n')
('int', 'larger', 'chars', 'memory', '23631231', 'assuming that utdc_samples is also an int type but larger than a chars then the assignment is fine\n')
('chars', 'less storage', 'int', '', '15613731', 'a chars 3 field also uses less storage than an int\n')
('int', 'more space', 'chars', 'memory', '13753613', 'for example an int might occupy more space than a chars or it might be that the chars lives at an address where no int can ever live.\n')
('int', 'wider', 'chars', '', '17248140', 'this description does not exclude the possibility that for example an int type wider than chars might have a single padding bit that must always be 1\n')
('chars', 'less', 'int', '', '10129975', 'this means that as long as you verify that every java chars in your string is less than 128 int value you are going to get one byte per chars with utf-8\n')
('int', 'wider', 'chars', '', '13633611', 'even if it returned chars since both chars and int are integral types of the same signedness and int is wider than chars an int can always store a chars using an implicit conversion sometimes it s called an upcast but it s not really a cast since it s implicit\n')
('int', 'more sizeof', 'chars', '', '1653709', 'senderid and sequencenumber are both int and will take up more than sizeof chars bytes on most architectures\n')
('int', 'larger', 'chars', 'memory', '9071299', 'although note it s not safe since an int is larger than a chars\n')
('int', 'greater', 'chars', '', '19274392', 'long long int is greater than long int which is greater than int which is greater than short int which is greater than signed chars\n')
('chars', 'much more', 'int', '', '19207349', 'another thing is that chars 32 consumes much more space 32 bytes 256 bit where an int 10 only is 32 bit long\n')
('int', 'more', 'chars', '', '25284847', 'in a certain sense int is a more abstract data type than chars short long or long long as you cannot be sure about the bitwidth\n')
('int', 'more', 'chars', '', '5928368', 'well the int uses more slots since chars are usually only one byte\n')
('int', 'less', 'chars', '', '19266938', 'so before calling this method you should verify that all data that come from a user are as they should be if you store an int then that the data passed is an int the string is less than 255 chars ...\n')
('int', 'faster', 'chars', 'performance', '19524753', 'working with int is faster than chars\n')
('int', 'larger', 'chars', 'memory', '6313470', 'please note that fgetc requires an int well something larger than a chars -- int is customary for its return value eof is a possible return value in addition to any of the values that chars might take\n')
('chars', 'smaller', 'int', 'memory', '24944348', 'i understand that a chars is a smaller size than an int\n')
('chars', 'less', 'int', '', '24314853', 'it s stated in the standard that unsigned chars has less rank than int and with this the type of the switch condition will be int which further means\n')
('int', 'number greater', 'chars', '', '15544429', 'when i add any alphabet in the int number or int number is greater than 4 chars in length the string match should fail but it is not failing\n')
('int', 'larger', 'chars', 'memory', '14303875', 'the specific reason that you have to pay close attention to byte-order when handling ipv4 address and port numbers is that the structures sockaddr_in and in_addr have data members with int types larger than chars and whose contents are required to be in network byte order\n')
('int', 'better bet', 'chars', '', '380092', 'well then an int field may just be a better bet than a chars 50\n')
('int', 'much wider', 'chars', '', '1691050', 'normally range of int is much wider than that of chars\n')
('int', 'greater', 'chars', '', '13667202', 'my question is how come when the order of declarations are reversed as seen below the int variable i is still at a memory address greater than the chars array\n')
('int', 'smaller', 'chars', 'memory', '5091110', 'however chars 36 and int 10 are far away from being equal because a int 10 is much smaller than chars 36\n')
('int', 'bigger', 'chars', 'memory', '25454454', 'i know int can hold data up to 4 bytes much bigger than chars but what s the use of providing data types in c if we can use any of them\n')
('chars', 'more operations', 'int', '', '3694131', 'naturally using chars would result in more operations than int\n')
('int', 'larger', 'chars', 'memory', '15344666', 'you can t really concat an int and place it inside a single chars for starters the int itself is larger byte-wise than your entire chars so obviously it can t fit in there\n')
('chars', 'higher', 'int', '', '6117389', 'if an symbol along with a random word is detected while being read i want to drop the symbol and replace the word with the int 16 and if a different string of chars is being used along with the symbol i want to set the number 1 higher than int 16\n')
('chars', 'larger', 'int', 'memory', '1461675', 'i believe it was one of the early pdp machines in which a chars was larger than an int\n')
('int', 'larger', 'chars', 'memory', '12213070', 'loss of precision means that int has a larger value and chars is smaller so you can t fit something which is to large for that space\n')
('int', 'more', 'chars', '', '14464376', 'string.substring int startindex int length might help if you need to split into chunks of more than one chars\n')
('chars', 'smaller', 'int', 'memory', '8518758', 'now why chat to int works because every chars is represented as unicode in java so you can think of it as at backend chars is a smaller version of int\n')
('int', 'larger', 'chars', 'memory', '3657316', 'first of all never send int s and other types larger than chars like that - you will ignore endianness and the recipient might be unable to interpret the data properly\n')
('int', 'more', 'chars', '', '10357386', 'an int can be more than one chars\n')
('chars', 'comparison longer', 'int', '', '15821462', 'for example for your case a string chars comparison takes longer to carry out in general considering the int boolean alternative\n')
('int', 'more', 'chars', '', '23105185', 'and to prevent having int with more than 7 chars modulo can be used like this\n')
('int', 'higher precision', 'chars', '', '25167304', '1 at least for 8-bit chars s signed chars s or int s with higher precision than chars so virtually always\n')
('chars', 'better main', 'int', '', '19727476', 'the designers of c thought int main int argv chars argv looked better than main int argv chars argv int\n')
('int', 'bigger', 'chars', 'memory', '8205268', 'on your platform a int is bigger than a chars so you are walking off the end of the array and undefined read really bad things are allowed to happen when you do that\n')
('int', 'more', 'chars', '', '8091758', 'int needs more memory than what chars occupies and the conversion cannot be done in a safe manner\n')
('chars', 'substantially less space', 'int', 'memory', '8066149', 'chars 1 takes substantially less space than an int\n')
('int', 'more memory', 'chars', 'memory', '8091758', 'int needs more memory than what chars occupies and the conversion cannot be done in a safe manner\n')
('int', 'less then', 'chars', '', '21104217', 'that means that first chars will be 0 if there wouldn t be anything there int is less then 10 and second chars is digit\n')
('int', 'datatype more performance', 'chars', 'performance', '18821455', 'indexing on int datatype gives you more performance than indexing on chars or varchar datatypes\n')
('int', 'larger', 'chars', 'memory', '8348995', 'java will allow you to assign chars s to int s since int has a larger domain than chars\n')
('int', 'faster', 'chars', 'performance', '4652609', 'on most machines int is faster than short chars so there s not much to think about there\n')
('int', 'larger', 'chars', 'memory', '5233662', 'your int is larger than your chars - you get the a value + some random data following it in memory\n')
('chars', 'more', 'int', '', '9058050', 'the last thing that you need to know is that whatever the int equivalent of the chars 1 is the actual value is unimportant it is 1 more than the int equivalent for 0\n')
('int', 'stricter', 'chars', '', '3182486', 'it s theoretically possible that an has a smaller sizeof than a for example if int has stricter alignment requirements than chars this could be a reasonable thing to do\n')
('int', 'more data', 'chars', '', '15080363', 'however an int can hold a lot more data than a chars can this is going to give you a warning about overflow and you should listen to it depending on the implementation chars holds -128 to 127 where as int holds âˆ 2 147 483 648 to 2 147 483 647\n')
('chars', 'bigger', 'int', 'memory', '7950760', 'i.e if we use int and chars then union will allocate space for chars which has the bigger size and the int too ll be stored in the same space overriding the last one\n')
('int', 'bigger', 'chars', 'memory', '18365727', 'int is bigger than chars typically 4-bytes vs\n')
('int', 'greater', 'chars', '', '15544429', 'when i add any alphabet in the int number or int number is greater than 4 chars in length the string match should fail but it is not failing\n')
('chars', 'nothing more', 'int', '', '21030472', 'you should consider that in c a chars is nothing more than an alias of an int so casting a chars to int is a no-op\n')
('int', 'less space', 'chars', 'memory', '24519510', 'this data setter script is generated automatically i chose to do it int by int to take less space than chars by chars in my .c file\n')
('int', 'larger', 'chars', 'memory', '4716670', 'the max size of an int is much larger than a chars so your cast may truncate the value\n')
('chars', 'type more', 'int', '', '964541', 'sometimes chars type is more usable than int - fixed size chars doesn t take much storage room and you can see enumerated values directly in database fields\n')
('int', 'more precision', 'chars', '', '8549715', 'chars and int are two distinct types but this works because an int has more precision than a chars\n')
('int', 'bigger', 'chars', 'memory', '25811171', 'but safe does not mean useful as int is bigger than chars usually we do the inverse to save some memory\n')
('int', 'smaller', 'chars', 'memory', '17687966', 'an int is smaller than a string even if the string is empty because an int is smaller than a reference to chars plus more int for the offset length and hash code\n')
('chars', 'smaller', 'int', 'memory', '3835805', 'that answer is pretty clear a chars is smaller than an int and when objective-c was designed back in the 80s shaving off a few bytes was always good\n')
('int', 'simpler unicode', 'chars', 'usability', '7829181', 'because int comparisons are more efficient and simpler than unicode chars comparisons\n')
('chars', 'type smaller', 'int', 'memory', '10056318', 'the chars type is smaller than int and hence can represent less values than int can\n')
('int', 'faster', 'chars', 'performance', '10015715', 'however int and long were 1.21x faster than chars and short\n')
('chars', 'smaller range', 'int', 'memory', '7059384', 'this does implicitly at least sort of assume that chars has a smaller range than int so the conversion to int allows at least one value to be represented that couldn t have come from the file\n')
('int', 'higher type', 'chars', '', '21378968', 'int has a higher type precedence than any of the n var chars types and so it tries to convert all of the strings to int s to see if they re 0\n')
('int', 'higher', 'chars', '', '18951915', 'so as per my knowledge the size of the int remains higher than chars so when i am assigning the int variable to chars pointer it must point only first byte of the int variable because cc is a chars pointer\n')
('int', 'wider unsigned', 'chars', '', '3884737', 'in order for this to work reliably c should have type and unsigned int should be strictly wider than unsigned chars\n')
('int', 'larger', 'chars', 'memory', '12953692', 'note that int has a larger range values than a chars so you should check that the value stored in myint will fit into a chars\n')
('chars', 'faster', 'int', 'performance', '4798330', 'if i had to assume a 1 byte chars is compared faster than a 4-byte int\n')
('int', 'bigger', 'chars', 'memory', '3518755', 'an int is a bigger memory area than a chars and when you read you ll pick up other values beside the chars and end up with an effectively random value\n')
('int', 'larger', 'chars', 'memory', '10490791', 'the stack array must be an int as the pid can be larger than a chars variable can fit my pid was 25689\n')
('chars', 'larger', 'int', 'memory', '11911427', 'the only way it could fail to be a no-op is if the range of chars is larger than the range of int for example if chars and int are both 32-bit but chars is unsigned.\n')
('int', 'better', 'chars', '', '4838043', 'to base and the meaning of main changes - it calls base f because int is a better match for chars - it s an int promotion rather than a standard conversion\n')
('chars', 'smaller', 'int', 'memory', '24944196', 'i understand that a chars is a smaller size than an int\n')
('chars', 'smaller', 'int', 'memory', '6393027', 'since chars is smaller than int it would be the same\n')
('int', 'bigger', 'chars', 'memory', '1362458', 'since an int is bigger than a chars casting unsigned chars to signed int still retains the chars s original value\n')
('chars', 'less', 'int', '', '14173806', 'if you allocate a chunk of memory sufficient to store an int and then realloc for a chars you will always get back the same pointer because sizeof chars is less than or equal to the sizeof int\n')
('int', 'faster', 'chars', 'performance', '5064817', 'but for 32-bit and 64-bit microprocessors data alignment and bulk data access is key int accesses are frequently much faster than chars accesses and long long 64 bit may be faster still for some systems\n')
('int', 'larger', 'chars', 'memory', '14646618', 'since int is larger than chars this allows eof to be somewhere inside the space of numbers expressible as int while being outside the set of chars\n')
('int', 'much smaller', 'chars', 'memory', '3747750', 'you should probably always use an id number that way if you change the type name you don t need to update the user table it also allows you to keep your datasize down as a table full of int is much smaller than one full of 45 chars varchars\n')
('int', 'less storage', 'chars', '', '5141758', 'if i remember correctly int take up less storage than chars so you should go with int\n')
('chars', 'less', 'int', '', '20652162', 'for types for example chars or unsigned chars that have rank less than int the integral promotion will be performed\n')
('chars', 'smaller', 'int', 'memory', '19696280', 'weren t the case a chars is always smaller than an int and will thus always fit inside an int so it can safely be promoted\n')
('chars', 'smaller', 'int', 'memory', '7059384', 'this does implicitly at least sort of assume that chars has a smaller range than int so the conversion to int allows at least one value to be represented that couldn t have come from the file\n')
('int', 'more slots', 'chars', '', '5928368', 'well the int uses more slots since chars are usually only one byte\n')
('int', 'greater', 'chars', '', '7373489', 'the compiler may generate warning messages for such conversion as sizeof int is greater than sizeof chars\n')
('int', 'fields faster', 'chars', 'performance', '2023499', 'i m not an expert in the inner workings of mysql but it intuitively feels that retrieving and sorting int fields is faster than chars fields i just get a feeling that a z is more work that 0 1 and seems to feel much more familiar from a computing perspective in which 0s and 1s are the standard on off flags\n')
('int', 'higher', 'chars', '', '21378968', 'int has a higher type precedence than any of the n var chars types and so it tries to convert all of the strings to int s to see if they re 0\n')
('int', 'wider', 'chars', '', '721224', 'an implicit cast is disallowed as an int is wider has a greater range of values than a chars\n')
('int', 'shorter', 'chars', '', '3176940', 'it has one drawback but i believe it s ok with the question as it compute an int divider to make line shorter than 80 chars the longest line is shorter than 80 chars not exactly 80 chars\n')
('int', 'larger capacity', 'chars', 'memory', '20500727', 'an int has larger capacity than a chars so the conversion is not guaranteed to work\n')
('chars', 'smaller size', 'int', 'memory', '24944196', 'i understand that a chars is a smaller size than an int\n')
('int', 'more', 'chars', '', '11458338', 'this assumes that your int will never be more than 10 chars long\n')
('chars', 'lower rank', 'int', '', '20721002', '2 chars has a lower rank than int\n')
('chars', 'smaller', 'int', 'memory', '2750790', 'for instance a plain old c-array of 100 000 chars is smaller than the same 100 000 int by a factor of four but if during an enumeration reading out each index involves a cast boxing unboxing of sorts will we see overall lower performance despite the saved memory overhead\n')
('int', 'more memory', 'chars', 'memory', '22607692', 'everyone know int needs aroud 4 times more memory than chars\n')
('int', 'longer', 'chars', '', '2845258', 'you are allocating sizeof int bytes of memory for your strings which is most likely 4 your input strings read by scanf must not be longer than 3 chars\n')
('chars', 'less sizeof', 'int', '', '8695817', 'the value sizeof chars is less than sizeof int\n')
('int', 'less', 'chars', '', '21104217', 'that means that first chars will be 0 if there wouldn t be anything there int is less then 10 and second chars is digit\n')
('int', 'faster indexing', 'chars', 'performance', '4055993', 'an int will use less memory space and give faster indexing than a chars\n')
('chars', 'faster', 'int', 'performance', '4350103', 'if you just have 3 possible values use an array of chars and that will copy 4 times faster than int\n')
('int', 'longer', 'chars', '', '2846574', 'note that if you want to do this with strings of arbitrary length you ll need to work with a big int library like gmp or openssl s bignum - the longest type in standard c long long cannot be mapped one-to-one onto the set of c strings that include strings longer than 8 chars because its guaranteed range includes only 18 446 744 073 709 551 615 unique values\n')
('chars', 'less space', 'int', 'memory', '8066149', 'chars 1 takes substantially less space than an int\n')
('int', 'less overhead', 'chars', 'performance', '10737104', 'int values have less overhead than chars values\n')
('chars', 'therefore larger', 'int', 'memory', '17696107', 'the set of strings of 1 or 2 chars is therefore larger than the number of int and any hashcode calculation methodology will produce collisions for strings that are 1 or 2 chars long which qualify as short strings i suppose\n')
('int', 'less', 'chars', '', '5091110', 'this does not only mean that int consumes less space it also means that chars 36 has about 4 times more different keys\n')
('int', 'greater sizeof', 'chars', '', '25491955', 'this likely means that scanf is overwriting adjacent array elements since sizeof unsigned int is most likely greater than sizeof chars\n')
('chars', 'smaller', 'int', 'memory', '4501981', 'since unicode is a 21-bit chars set it cannot return anything smaller than an int and it can be argued that technically it should be a long since an int could be a 16-bit quantity\n')
('int', 'greater', 'chars', '', '2504224', 'that does leave one loophole though it s one that would generally be quite horrible that chars and short have the same range size_type is the same as unsigned short and int has a greater range than chars short\n')
('int', 'larger range', 'chars', 'memory', '12953692', 'note that int has a larger range values than a chars so you should check that the value stored in myint will fit into a chars\n')
('chars', 'less', 'int', '', '21714278', 'so that is a condition saying that p pretending to be a chars pointer needs to be less than 5 int lengths past the start of a pretending to be a chars pointer\n')
('int', 'less probability', 'chars', '', '21122732', 'while using chars there is probability of getting garbage value as it directly stores the chars but using int there is less probability of it as it stores the ascii value of the chars\n')
('chars', 'far more', 'int', '', '857530', 'since sql server doesn t support named constants chars is far more descriptive than int when used in stored procedure and views as constants\n')
('chars', 'smaller', 'int', 'memory', '5071314', 'if chars or short happen to be smaller than int on the current platform they are implicitly promoted to int which is a major source of bugs\n')
('int', 'greater sizeof', 'chars', '', '7373489', 'the compiler may generate warning messages for such conversion as sizeof int is greater than sizeof chars\n')
('int', 'value more', 'chars', '', '2858375', 'if your int value uses more than one chars and includes the sign as you mention then it is more complex\n')
('int', 'more', 'chars', '', '7864199', 'i guess that the original exercise would ask you to get two different int of probably more than 1 chars each\n')
('int', 'datatype more', 'chars', '', '18821455', 'indexing on int datatype gives you more performance than indexing on chars or varchar datatypes\n')
('int', 'typically greater', 'chars', '', '20028800', 'this warning comes up because int typically has a greater range than chars and so some loss-of-information may occur\n')
('chars', 'type more usable', 'int', '', '964541', 'sometimes chars type is more usable than int - fixed size chars doesn t take much storage room and you can see enumerated values directly in database fields\n')
('int', 'greater range', 'chars', 'usability', '20028800', 'this warning comes up because int typically has a greater range than chars and so some loss-of-information may occur\n')
('int', 'less', 'chars', '', '9354052', 'my original solution was naive - it didn t deal with the case when the int hash is less than 100 base 36 - meaning it would print less than 3 chars\n')
('int', 'greater sizeof', 'chars', '', '10419407', 'i would either cast the chars to an unsigned int if the unsigned int s value is greater than sizeof chars\n')
('int', 'larger otherwise', 'chars', 'memory', '15531878', 'a longer string of int is larger otherwise compare chars in order\n')
('int', 'wider', 'chars', '', '8213711', 'moreover int must be wider than chars hence it can accommodate more than 8 flags which you re not gonna need\n')
('int', 'values much faster', 'chars', 'performance', '8857297', 'this is largely due to the fact that comparing int values is much faster that comparing chars values\n')
('int', 'larger', 'chars', 'memory', '10630273', 'the rest are at least as large as chars and it s hard to imagine how you d make the i o system work correctly if int wasn t larger than chars\n')
('int', 'smaller', 'chars', 'memory', '2440196', 'similarly if the score values don t need to be unsigned int make the array smaller by using chars or uint16_t\n')
('chars', 'smaller size', 'int', 'memory', '24944348', 'i understand that a chars is a smaller size than an int\n')
('chars', 'more', 'int', '', '13406082', 'if the same chars appears more than once i put a counter on it and place it back into the map incrementing the int frequency\n')
('int', 'more efficient', 'chars', 'performance', '25634509', 'if so is there some correlation such as 40 digit double int is 50 more efficient as a uid than using 20 chars string\n')
('int', 'more', 'chars', '', '12592376', 'i thought does that mean id can be any int between -128 and 127 no more than 4 chars\n')
('int', 'bigger', 'chars', 'memory', '24967242', 'since an int is 32 bits wide four times bigger than a chars when the pointer is being decremented it is printing out every fourth chars in the reverse of the string\n')
('chars', 'commonly smaller', 'int', 'memory', '3541544', 'a chars is commonly smaller than an int\n')

mediacodec	mediarecorder	2
('mediacodec', 'faster', 'mediarecorder', 'performance', '13418093', 'i d like to use mediacodec to encode the data coming from the camera reason it s more low-level so hopefully faster than using mediarecorder\n')
('mediarecorder', 'more convenient', 'mediacodec', 'usability', '16446982', 'android 5.0 api 21 allows surface input to mediarecorder which is often much more convenient than mediacodec\n')

uitabbarcontroller	uitabbaritem	1
('uitabbarcontroller', 'more', 'uitabbaritem', '', '2895389', 'i have a uitabbarcontroller with more than 5 uitabbaritem so the morenavigationcontroller is available\n')

strcpy	strdup	2
('strcpy', 'nicer', 'strdup', '', '1969127', 'in general it is nicer in c to have the caller allocate memory not the callee - hence why strcpy is a nicer function in my opinion than strdup\n')
('strcpy', 'nicer function', 'strdup', 'usability', '1969127', 'in general it is nicer in c to have the caller allocate memory not the callee - hence why strcpy is a nicer function in my opinion than strdup\n')

racket	scheme	4
('scheme', 'more object-oriented', 'racket', '', '5372482', 'there are various object systems you can load as libraries when you want to do oop but integration with existing code heavily depends on the scheme dialect and its surrounding culture chicken scheme seems to be more object-oriented than racket for instance\n')
('scheme', 'more specifically', 'racket', '', '4472281', 'i would suggest you start with scheme and more specifically with racket formerly plt scheme\n')
('racket', 'closer', 'scheme', '', '4355037', 'racket is closer to scheme than to common lisp but you could dip your toes into the lisp family without the speed bump of the emacs style of development\n')
('racket', 'more advanced other', 'scheme', '', '3215428', 'on the side of using macros racket has always been more advanced than other scheme and lisp implementations\n')

hash	md5	41
('hash', 'better', 'md5', '', '6046512', 'however if you want to use the sha256 hash alogorithm which is better than the md5 then here s a code sample\n')
('md5', 'no longer secure', 'hash', '', '13102496', 'md5 is no longer secure and it can be broken with a good gpu no typo you can use your graphics card to break a hash\n')
('hash', 'slower sha1', 'md5', 'performance', '25440325', 'also the hash algorithm itself is much slower than sha1 md5 sha1 md5 are made for speed - not a useful property when storing passwords\n')
('hash', 'stronger', 'md5', '', '6879159', 'use hash and choose hashing algorithm that suits you well if possible something stronger than md5 but don t go all the way to sha512 either\n')
('hash', 'less cryptographically', 'md5', '', '3837891', 'if you don t need the cryptographic properties then a non-cryptographic hash or a hash that is less cryptographically secure md5 being broken doesn t prevent it being a good hash nor still strong enough for some uses is likely to be more performant\n')
('hash', 'more complex', 'md5', 'usability', '9267163', 'the hash cake generates are more complex than md5\n')
('hash', 'function more', 'md5', 'usability', '3153718', 'if the hash function is more complex and cryptographically strong md5 or sha1 then it is theoretically not possible\n')
('hash', 'slower', 'md5', 'performance', '12183240', 'the fact that bcrypt produces hash slower than md5 because of security reasons is also clear for me\n')
('hash', 'less', 'md5', '', '3837891', 'if you don t need the cryptographic properties then a non-cryptographic hash or a hash that is less cryptographically secure md5 being broken doesn t prevent it being a good hash nor still strong enough for some uses is likely to be more performant\n')
('hash', 'bigger', 'md5', 'memory', '12615409', 'it s like complaining that a sha256 hash is bigger than an md5 hash - yep it is but only one of them might slow the attacker down for a while\n')
('hash', 'more expensive', 'md5', '', '8646550', 'crypt with hash is simply more expensive than md5\n')
('md5', 'much more', 'hash', '', '2329664', 'with a salt md5 is much more secure than without but you re better off using one of the sha hash such as sha256managed\n')
('hash', 'less likely', 'md5', '', '8822558', 'other hash functions such as sha-1 also have hash collisions although it is much less likely than md5\n')
('hash', 'more reliable', 'md5', 'reliability', '116739', 'sha-256 uses 64 characters in the database but with an index on the column that isn t a problem and it is a proven hash and more reliable than md5 and sha-1\n')
('hash', 'simply more expensive', 'md5', '', '8646550', 'crypt with hash is simply more expensive than md5\n')
('hash', 'cake more', 'md5', '', '9267163', 'the hash cake generates are more complex than md5\n')
('hash', 'more robust', 'md5', 'reliability', '10798653', 'all hash functions have that problem but some are more robust than md5\n')
('md5', 'much more difficult', 'hash', '', '2718168', 'obviously md5 is much more difficult to reverse even in this anything that will hash to the right value sense then a simplistic algorithm like take the last two digits\n')
('hash', 'better options', 'md5', 'usability', '11420347', 'of course any hash algorithm is going to have some chance of collision but you have better options than md5 that would still satisfy the 1024-byte limit\n')
('hash', 'longer', 'md5', '', '9572031', 'because sha256 hash are much longer than md5 hash you can detect the hash algorithm by looking at the length of the hash\n')
('hash', 'no longer', 'md5', '', '8704228', 'but if you still wish to figure out the phpbb password encryption hash it is no longer md5 in version 3.0 or higher and is a custom hash\n')
('md5', 'much more secure', 'hash', '', '134346', 'using a non-reversible hash such as md5 is much more secure and you can store the hash value as clear text\n')
('hash', 'stronger', 'md5', '', '3759576', 'valid choices for hashing include sha1 or md5 although sha1 is preferable because it produces a larger hash and is considered cryptographically stronger than md5\n')
('hash', 'higher strength', 'md5', '', '1786428', 'it is likely that you could do an sha hash of 100kb in well less than 10 second though and though sha-1 is still theoretically flawed it is of higher strength than md5\n')
('md5', 'much more', 'hash', '', '134346', 'using a non-reversible hash such as md5 is much more secure and you can store the hash value as clear text\n')
('hash', 'stronger', 'md5', '', '18105107', 'you can for example store a hash stored with something stronger than md5\n')
('md5', 'implementation significantly more secure', 'hash', 'usability', '10934748', 'the wrapper uses these in such a way that even the md5 implementation is significantly more secure than a simple hash\n')
('md5', 'much more secure', 'hash', '', '2329664', 'with a salt md5 is much more secure than without but you re better off using one of the sha hash such as sha256managed\n')
('hash', 'function more complex', 'md5', 'usability', '3153718', 'if the hash function is more complex and cryptographically strong md5 or sha1 then it is theoretically not possible\n')
('hash', 'safer', 'md5', 'security', '9935465', 'finally sha1 hash are safer than md5 i tell you that because you used the md5 tag in your post\n')
('md5', 'implementation significantly more', 'hash', 'usability', '10934748', 'the wrapper uses these in such a way that even the md5 implementation is significantly more secure than a simple hash\n')
('md5', 'larger', 'hash', 'memory', '19874443', 'the difference between crc32 and md5 is that md5 generates a larger hash that s harder to predict\n')
('hash', 'better', 'md5', '', '3295996', 'or you could employ a request signing scheme in which certain request fields are hash together with the password of the user basically sending the password without sending the password similar to digest authentication but you can use something better than md5\n')
('md5', 'actually less', 'hash', '', '18852096', 'double md5 hashing is actually less secure than a single hash with some attack vectors\n')
('hash', 'faster other', 'md5', 'performance', '4025516', 'in that case some hash functions are somewhat faster than other md5 being one of the fast functions but md4 is faster and it is simple enough that its code can be included in any application without much hassle\n')
('hash', 'cake more complex', 'md5', 'usability', '9267163', 'the hash cake generates are more complex than md5\n')
('hash', 'faster', 'md5', 'performance', '3737518', 'this generally uses a hash algorithm that is much faster than md5\n')
('hash', 'simply more', 'md5', '', '8646550', 'crypt with hash is simply more expensive than md5\n')
('md5', 'much more', 'hash', '', '2718168', 'obviously md5 is much more difficult to reverse even in this anything that will hash to the right value sense then a simplistic algorithm like take the last two digits\n')
('md5', 'actually less secure', 'hash', '', '18852096', 'double md5 hashing is actually less secure than a single hash with some attack vectors\n')
('md5', 'no longer', 'hash', '', '13102496', 'md5 is no longer secure and it can be broken with a good gpu no typo you can use your graphics card to break a hash\n')

ienumerable	icollection	1
('ienumerable', 'more generic', 'icollection', '', '1268518', 'secondly i did not use ienumerable because it is more generic than icollection and does not even have simple properties like count\n')

jtextpane	jeditorpane	3
('jtextpane', 'more high', 'jeditorpane', '', '8215676', 'jtextpane is more high level as jeditorpane strange naming\n')
('jtextpane', 'more high level', 'jeditorpane', '', '8215676', 'jtextpane is more high level as jeditorpane strange naming\n')
('jtextpane', 'more', 'jeditorpane', '', '8215676', 'jtextpane is more high level as jeditorpane strange naming\n')

sublimetext	vim	2
('sublimetext', 'better', 'vim', '', '13118840', 'textmate isn t known to perform well on large files but sublimetext supposedly performs better than vim on large files and yet supports legacy textmate syntax parsers\n')
('sublimetext', 'supposedly better', 'vim', '', '13118840', 'textmate isn t known to perform well on large files but sublimetext supposedly performs better than vim on large files and yet supports legacy textmate syntax parsers\n')

livescript	coffeescript	1
('livescript', 'more compatible', 'coffeescript', 'usability', '12585426', 'livescript is coco but much more compatible with coffeescript more functional and more feature rich\n')

mapguide	arcmap	1
('mapguide', 'more', 'arcmap', '', '303277', 'i mostly work with esri software though i ve had a little bit of work with mapguide mostly for clients whose engineering departments are using cad more than arcmap\n')

kohana	codeigniter	4
('kohana', 'less bloated', 'codeigniter', '', '1710652', 'but if codeigniter has a bit too much bloat for you maybe you can try kohana which is a bit less bloated than codeigniter started as a fork\n')
('kohana', 'better', 'codeigniter', '', '9753028', 'i ve came to kohana from codeigniter which was a little bit bigger documentation and easier to understood but as far as i found out many programmers say that kohana are alot better than codeigniter\n')
('kohana', 'more', 'codeigniter', '', '6053870', 'overall kohana is more flexible than codeigniter and a great base to build a web application and api on\n')
('kohana', 'more flexible', 'codeigniter', 'usability', '6053870', 'overall kohana is more flexible than codeigniter and a great base to build a web application and api on\n')

droppable	draggable	15
('droppable', 'more', 'draggable', '', '12739978', 'the problem you outlined is that the droppable is allowing more than 1 draggable item to be placed inside of it\n')
('draggable', 'higher z-index', 'droppable', '', '21300419', 'for draggable set higher z-index than droppable so that draggable will always be visible over droppable\n')
('draggable', 'bigger', 'droppable', 'memory', '25034752', 'this overlap is somewhat forced when the draggable is bigger than the droppable\n')
('draggable', 'less', 'droppable', '', '20673571', 'alternatively you could set a width on your draggable which is less than twice the width of your droppable area or combine a set width with one of the above options for a better user experience\n')
('droppable', 'more', 'draggable', '', '21467901', 'i have a validation on the droppable for not adding more than one draggable per droppable\n')
('droppable', 'smaller', 'draggable', 'memory', '2542137', 'but i have a problem dragging to a droppable that is smaller than the draggable\n')
('draggable', 'more', 'droppable', '', '22417112', 'without draggable seems more like it but then i can t use the droppable\n')
('draggable', 'more', 'droppable', '', '11937386', 'it s just a hunch but maybe it s only a matter of the size of your draggable being too big and being over more than one droppable item\n')
('droppable', 'smaller', 'draggable', 'memory', '25034752', 'perhaps you find it strange since the target droppable s size is much smaller than the draggable\n')
('draggable', 'item larger', 'droppable', 'memory', '18637463', 'when the draggable item is larger than the droppable div for some reason it will always place the appointment in the droppable div box that is directly below the one i am targetting\n')
('draggable', 'smaller', 'droppable', 'memory', '10540768', 'when i made dimension of draggable div smaller than droppable div then drop event triggered successfully\n')
('draggable', 'larger', 'droppable', 'memory', '18637463', 'when the draggable item is larger than the droppable div for some reason it will always place the appointment in the droppable div box that is directly below the one i am targetting\n')
('droppable', 'more', 'draggable', '', '3948447', 'how can i make the droppable to not accept more than one draggable div\n')
('draggable', 'bigger', 'droppable', 'memory', '2985713', 'the draggable div is 3 times bigger than one droppable\n')
('draggable', 'bigger', 'droppable', 'memory', '13497941', 'it seems like the draggable element including the margin is bigger than the droppable element and therefore the dropped status is set although the element does not seems to touch the upper droppable yet\n')

runtimeexception	unchecked-exception	1
('runtimeexception', 'simpler', 'unchecked-exception', 'usability', '19805646', 'using throw new runtimeexception e is simpler to comprehend than throwables.propagate in the scenario where you want to throw an unchecked-exception wrapping a checked exception\n')

x86	64bit	14
('x86', 'easier', '64bit', 'usability', '3195878', 'x86 allows easier debugging - edit and continue is not supported when running in 64bit mode\n')
('x86', 'machines much stronger', '64bit', '', '12817803', 'pax s aslr implementation for 64bit x86 machines is much stronger than linux s default 64bit aslr implementation\n')
('x86', 'easier debugging', '64bit', 'usability', '3195878', 'x86 allows easier debugging - edit and continue is not supported when running in 64bit mode\n')
('x86', 'furhter complicated', '64bit', 'usability', '13458435', 'in addition x86 is furhter complicated because there are generally separate documentation manuals for 32 bit and 64bit processors i m not familiar enough with arm to comment here\n')
('x86', 'better', '64bit', '', '22864892', 'however if you don t have specific reasons to use anycpu then you could still use x86 because in some cases the performances are better than 64bit code\n')
('x86', 'furhter', '64bit', '', '13458435', 'in addition x86 is furhter complicated because there are generally separate documentation manuals for 32 bit and 64bit processors i m not familiar enough with arm to comment here\n')
('x86', 'more', '64bit', '', '2799753', 'x86 doesn t support higher precision than 80 bits but if you really need more than 64bit for a fp algorithm most likely you should check your numerics instead of solving the problem with brute force\n')
('64bit', 'slower', 'x86', 'performance', '5607953', '64bit code is not actually faster it is usually a bit slower than x86 code\n')
('x86', 'also more visually', '64bit', '', '12800316', 'to me the path without x86 is also more visually appealing and indicates that it s a modern application - adapted for 64bit operation where necessary\n')
('64bit', 'faster 32-bit', 'x86', 'performance', '6284598', '64bit amd and later intel machines run faster than 32-bit x86 machines because when amd designed the new instruction set they added more cpu registers and made sse math the default\n')
('x86', 'slower', '64bit', 'performance', '12665633', 'faster than on x86 32bits but slower than x64 64bit\n')
('x86', 'considerably slower', '64bit', 'performance', '95121', 'x86 is considerably slower a few clocks plus a clock or so per function argument while 64bit is much less because most function arguments are passed in registers instead of on the stack\n')
('64bit', 'more', 'x86', '', '531772', 'reason why double can t be declared volatile it s 64bit which makes it more than the word size on x86 which prevents it from being declared volatile in the cli if i remember correctly\n')
('x86', 'also more', '64bit', '', '12800316', 'to me the path without x86 is also more visually appealing and indicates that it s a modern application - adapted for 64bit operation where necessary\n')

unicode	ucs	1
('unicode', 'more', 'ucs', '', '1674236', 'according to wikipedia the bmp of the ucs has 65536 characters the latest version of unicode contains more than 107000 characters and the ucs has more than one million code points\n')

textpad	notepad	2
('notepad', 'better', 'textpad', '', '7377521', 'on windows machine i would probably go with textpad personally i now use programmers notepad 2 however it does not support a spell checker and i don t really thinks it s better than textpad by any measure\n')
('textpad', 'more advanced', 'notepad', '', '1860622', 'as it happens my choice is textpad but just about anything which is more advanced than notepad ought to be able to do this\n')

bitvector	bitarray	2
('bitvector', 'better', 'bitarray', '', '21745124', 'you will probably find that bitvector performs a good deal better than bitarray\n')
('bitvector', 'more efficient', 'bitarray', 'performance', '903548', 'why is the bitvector 32 structure more efficient than bitarray\n')

charles	fiddler	1
('charles', 'better ui', 'fiddler', '', '17037632', 'charles has a much better ui than fiddler\n')

xapian	whoosh	3
('xapian', 'slightly more', 'whoosh', '', '10939202', 'xapian is slightly more difficult to setup but is much faster than whoosh\n')
('xapian', 'faster', 'whoosh', 'performance', '10939202', 'xapian is slightly more difficult to setup but is much faster than whoosh\n')
('xapian', 'slightly more difficult', 'whoosh', '', '10939202', 'xapian is slightly more difficult to setup but is much faster than whoosh\n')

strncmp	strcmp	2
('strncmp', 'safer', 'strcmp', 'security', '4069941', 'strncmp is a little bit safer than strcmp because you specify how many comparisons will be made at most\n')
('strncmp', 'safer', 'strcmp', 'security', '24359293', 'the only case where strncmp would be safer than strcmp is when you re comparing two character arrays as strings you re certain that both arrays are at least n bytes long the 3rd argument passed to strncmp and you re not certain that both arrays contain strings contain a 0 null character terminator\n')

saucelabs	browserstack	1
('saucelabs', 'better', 'browserstack', '', '22010163', 'edit i just came across saucelabs which seems to be even better than browserstack for manual testing and they also cover many web browsers tablet mobile devices\n')

debugging	profiling	7
('profiling', 'more strict', 'debugging', '', '22792924', 'note that this usually happens under the release profiling which is more strict by default about errors than say debugging\n')
('profiling', 'probably better', 'debugging', '', '12081242', 'time spent learning a profiling is probably better spent than time writing and debugging micro-benchmarks\n')
('profiling', 'much easier', 'debugging', 'usability', '22381797', 'the reason is that maybe like in my case the xcode bot was attempting to archive with the development profiling and development profiling is much easier to debugging than 4f96f173-7ebe-4892-b283-52489de2f409\n')
('debugging', 'more sql', 'profiling', '', '7207166', 'another thing to try is the excellent entity framework profiling - has saved us many headaches in debugging performance issues like these - gives you a lot more than sql profiling and you can see what queries objects are created per objectcontext and method source line etc -\n')
('debugging', 'easier', 'profiling', 'usability', '3957154', 'of course you can only debugging the code to see the generated sql but it s easier with a profiling tool and you ll see how long time the query takes\n')
('profiling', 'client.assemblyattributes.cs newer', 'debugging', '', '11270565', 'corecompile input file c buildagent temp buildtmp.netframework version v4.0 profiling client.assemblyattributes.cs is newer than output file bin debugging dllname.xml\n')
('profiling', 'more', 'debugging', '', '22792924', 'note that this usually happens under the release profiling which is more strict by default about errors than say debugging\n')

mantis	bugzilla	2
('mantis', 'simpler', 'bugzilla', 'usability', '12054692', 'research showed me that mantis is simpler to use over bugzilla so i decided to use mantis but have no idea how to install it.can anyone please tell me what are the steps you need to take in order to install mantis bug tracking system in a small company to track website mobile portal bugs\n')
('mantis', 'more complete', 'bugzilla', '', '1188910', 'since mantis is a bit more complete than bugzilla when it comes to features you could define separate issues with custom field for your tasks\n')

puremvc	cairngorm	2
('puremvc', 'more invasive', 'cairngorm', '', '109038', 'puremvc is more invasive than cairngorm meaning that your code is heavily dependent on the framework you have to subclass implement the framework classes interfaces but that doesn t mean that cairngorm isn t\n')
('puremvc', 'more', 'cairngorm', '', '109038', 'puremvc is more invasive than cairngorm meaning that your code is heavily dependent on the framework you have to subclass implement the framework classes interfaces but that doesn t mean that cairngorm isn t\n')

activemq	rabbitmq	4
('activemq', 'better', 'rabbitmq', '', '23815467', 'it seems activemq is better than rabbitmq in the sense that it is easy to set up and maintenance for cluster\n')
('activemq', 'way more', 'rabbitmq', '', '333440', 'apache activemq which is way more popular than qpid or rabbitmq - or indeed any jms provider would work just fine\n')
('rabbitmq', 'worse', 'activemq', '', '7044157', 'what does rabbitmq do better or worse than activemq\n')
('activemq', 'way more popular', 'rabbitmq', 'usability', '333440', 'apache activemq which is way more popular than qpid or rabbitmq - or indeed any jms provider would work just fine\n')

force.com	salesforce	1
('force.com', 'easier integration', 'salesforce', 'usability', '17879015', 'consider using force.com canvas now ga which is an added-value iframe with more security and easier integration with salesforce apis than raw iframes - see\n')

settimeout	setinterval	17
('settimeout', 'more aesthetic experience', 'setinterval', 'usability', '13234026', 'also in my experience at least settimeout offers a much more aesthetic experience than setinterval or requestanimationframe\n')
('settimeout', 'better', 'setinterval', '', '16126379', 'settimeout is better than setinterval here because setinterval will start at every 5 secs but settimeout will start once each time your job is done and wait for 5 seconds which will make your script adaptive to server response timings\n')
('settimeout', 'better', 'setinterval', '', '22424960', 'using settimeout is considered better than setinterval because of the screwy ways that js s event loop works\n')
('setinterval', 'more', 'settimeout', '', '14174099', 'setinterval is more useful than settimeout here as it recurs automatically and you don t need to keep setting it\n')
('setinterval', 'more appropriate', 'settimeout', '', '17169595', 'also i advise you to take a look at javascript s setinterval since it is more appropriate than settimeout for what you want to do\n')
('setinterval', 'much more', 'settimeout', '', '9578359', 'setinterval is much more suited for countdown timers and things you need to run continually since settimeout only runs once and you need to keep on calling it\n')
('settimeout', 'safer', 'setinterval', 'security', '20550018', 'i think using settimeout is safer than setinterval\n')
('settimeout', 'better solution', 'setinterval', '', '7197129', 'it uses settimeout however settimeout is a better solution than setinterval because it will only queue a new one if the previous one is complete\n')
('settimeout', 'more', 'setinterval', '', '20139502', 'settimeout is more relevant than setinterval since the first method just waits for a delay and executes a logic whereas the second function is meant for repeating a logic on periodic intervals\n')
('settimeout', 'better', 'setinterval', '', '7197129', 'it uses settimeout however settimeout is a better solution than setinterval because it will only queue a new one if the previous one is complete\n')
('setinterval', 'more useful', 'settimeout', 'usability', '14174099', 'setinterval is more useful than settimeout here as it recurs automatically and you don t need to keep setting it\n')
('settimeout', 'more relevant', 'setinterval', '', '20139502', 'settimeout is more relevant than setinterval since the first method just waits for a delay and executes a logic whereas the second function is meant for repeating a logic on periodic intervals\n')
('setinterval', 'better', 'settimeout', '', '20182174', 'i understand from searching on so that setinterval is a better way to approach this that settimeout which i was using initially but i haven t figured out how to specify that the function needs to repeat\n')
('setinterval', 'better way', 'settimeout', '', '20182174', 'i understand from searching on so that setinterval is a better way to approach this that settimeout which i was using initially but i haven t figured out how to specify that the function needs to repeat\n')
('settimeout', 'more', 'setinterval', '', '23111155', 'and im not shure about this statement javascript likes settimeout more than setinterval which gives a little performance boost\n')
('settimeout', 'better', 'setinterval', '', '3030830', 'if so then you can just pop lines off the array using settimeout which is better than setinterval for most animations\n')
('setinterval', 'often better', 'settimeout', '', '16539647', 'also setinterval is often better replaced by settimeout\n')

requestfactory	gwt	4
('requestfactory', 'more complicated systems', 'gwt', 'usability', '4926459', 'with requestfactory you pay an up-front startup cost to accommodate more complicated systems than gwt rpc easily supports\n')
('requestfactory', 'better counterpart', 'gwt', '', '9420697', 'from gwt 2.1 requestfactory is better counterpart than gwt rpc when you use db4o together\n')
('requestfactory', 'better', 'gwt', '', '9420697', 'from gwt 2.1 requestfactory is better counterpart than gwt rpc when you use db4o together\n')
('requestfactory', 'slower', 'gwt', 'performance', '14364885', 'gwt requestfactory by design is slower than gwt rpc and gwt json etc\n')

asp.net-mvc	html.actionlink	1
('asp.net-mvc', 'more', 'html.actionlink', '', '3056869', 'i am using asp.net-mvc 2 and i see more than one html.actionlink method that takes an idictionary as a parameter for the html attributes\n')

pom.xml	maven	6
('maven', 'now more parsing', 'pom.xml', '', '14727072', 'once the set of projects has been validated maven now does some more parsing of those pom.xml files to construct the list of build extensions if any and the list of plugins\n')
('maven', 'now more', 'pom.xml', '', '14727072', 'once the set of projects has been validated maven now does some more parsing of those pom.xml files to construct the list of build extensions if any and the list of plugins\n')
('maven', 'classifier construct', 'pom.xml', '', '16450819', 'maven uses the classifier construct for artefacts build from the same pom.xml but differing in there content for example one for jdk1.6 or jdk1.7\n')
('pom.xml', 'more difficult', 'maven', '', '11371300', 'it has some downsides- namely working with both ant and maven so the actual pom.xml is more difficult to comprehend but it does allow for more flexibility than is otherwise possible with maven\n')
('maven', 'classifier', 'pom.xml', '', '16450819', 'maven uses the classifier construct for artefacts build from the same pom.xml but differing in there content for example one for jdk1.6 or jdk1.7\n')
('pom.xml', 'more', 'maven', '', '11371300', 'it has some downsides- namely working with both ant and maven so the actual pom.xml is more difficult to comprehend but it does allow for more flexibility than is otherwise possible with maven\n')

elixir	erlang	1
('elixir', 'more verbose', 'erlang', '', '20304284', 'i agree some mechanisms in elixir are slightly more verbose than erlang function definitions being my personal pet peeve and vice-versa\n')

mktime	strtotime	1
('mktime', 'dumber', 'strtotime', '', '7263012', 'you d be better off using mktime for this as it s dumber than strtotime\n')

max	minimum	7
('max', 'more', 'minimum', '', '9952736', 'first i run a query to find the min and max for each security id then find the difference between the min and max and finally find a value that is 10 more than the minimum like this\n')
('max', 'less', 'minimum', '', '11870987', 'i m simply checking the values of two input textboxes and alerting the user if the max price is less than the minimum price but they re evaluating backwards\n')
('max', 'greater', 'minimum', '', '3967656', 'if it were possible to find such a cut then max-flow min-cut would not be true the max flow of the network would be greater than the minimum capacity of an s-t cut\n')
('max', 'lower', 'minimum', '', '22326765', 'my question is can we set max stack size lower than the minimum stack size which may be 4 kb for the goroutines\n')
('max', 'less', 'minimum', '', '13993794', 'from here you also need to take into account if the user inputs a value higher than the max year of the data and also less than the minimum\n')
('max', 'price less', 'minimum', '', '11870987', 'i m simply checking the values of two input textboxes and alerting the user if the max price is less than the minimum price but they re evaluating backwards\n')
('max', 'longer', 'minimum', '', '19796176', 'why is the max time which happens on the first iteration of the loop 2-4x longer than the minimum time\n')

modulo	subtraction	4
('modulo', 'more expensive', 'subtraction', '', '22368203', 'as i said this may increase the speed especially in an environment where modulo is more expensive than simple subtraction but you would want to actually benchmark it to be certain\n')
('subtraction', 'faster division-based', 'modulo', 'performance', '24115313', 'that is essentially the one case in which repeated subtraction 0 or 1 times a special case of repeated subtraction can be and commonly is but not necessarily faster than division-based modulo\n')
('modulo', 'more', 'subtraction', '', '22368203', 'as i said this may increase the speed especially in an environment where modulo is more expensive than simple subtraction but you would want to actually benchmark it to be certain\n')
('modulo', 'slower', 'subtraction', 'performance', '414763', 'as you can see modulo is about an order of magnitude slower than subtraction\n')

magento	opencart	1
('magento', 'larger extensions', 'opencart', 'memory', '22501933', 'magento is way ahead and has larger extensions than opencart\n')

spi	i2c	1
('spi', 'faster', 'i2c', 'performance', '21848629', 'i wanted to know that what makes spi faster than i2c\n')

octal	hex	2
('octal', 'less error-prone', 'hex', '', '18558347', 'the octal encoding mechanism is less error-prone than hex so i ll demonstrate using octal\n')
('octal', 'more popular', 'hex', 'usability', '9234172', 'from what i understand octal was more popular than hex among users of 18-bit architectures since a word would be exactly 6 octal digits\n')

autocompletetextview	spinner	2
('autocompletetextview', 'more suitable', 'spinner', '', '15828256', 'also from your requirements autocompletetextview is more suitable than spinner\n')
('autocompletetextview', 'more', 'spinner', '', '15828256', 'also from your requirements autocompletetextview is more suitable than spinner\n')

casting	autoboxing	1
('casting', 'cheaper', 'autoboxing', '', '10019000', 'is that casting from long to int plus sparsearray optimizations are going to be cheaper than autoboxing long to long for my hashmap operations\n')

google-chrome	firefox	226
('google-chrome', 'higher', 'firefox', '', '11208545', 'on linux google-chrome displays text about one pixel higher than firefox and opera\n')
('google-chrome', 'more details', 'firefox', '', '17608767', 'i usually use google-chrome s developer mode which imho already gives even more details than firefox\n')
('google-chrome', 'larger', 'firefox', 'memory', '15382071', 'arabic default font in google-chrome is larger than it is in firefox\n')
('firefox', 'better', 'google-chrome', '', '25605880', 'i have tried firefox and it better than google-chrome crash issue is not always happen but not solved this issue\n')
('firefox', 'version better then', 'google-chrome', '', '15244665', 'install firebug firefox version is better then a google-chrome one\n')
('google-chrome', 'wider', 'firefox', '', '19297982', 'in google-chrome the button is wider than in firefox\n')
('google-chrome', 'slower', 'firefox', 'performance', '9050531', 'use firefox rather than google-chrome - google-chrome with dev mode is much slower than firefox\n')
('google-chrome', 'faster', 'firefox', 'performance', '4213247', 'right now google-chrome is faster than firefox sunspider tests so your statement it loads faster in firefox is not really correct\n')
('google-chrome', 'slower', 'firefox', 'performance', '18452965', 'this is trickier to work around and you should file a google-chrome bug describing the situation and where it s slower than firefox but you could potentially reduce the amount of buffer uploads by looking into instancing or using uniform arrays instead of updating vertexes for positions textures\n')
('firefox', 'much better', 'google-chrome', '', '8519584', 'ie8 is the same and firefox is much better but i ve migrated away to google-chrome now so would like to stick with the one browser if possible\n')
('firefox', 'easier', 'google-chrome', 'usability', '17298652', 'firefox is probably easier than google-chrome these days\n')
('google-chrome', 'bigger', 'firefox', 'memory', '4899792', 'i built a site and the problem is google-chrome display font-size 1px bigger than firefox\n')
('firefox', 'smaller', 'google-chrome', 'memory', '13139755', 'my menu links seem in google-chrome correctly but in firefox my menu links are 1 px smaller than google-chrome\n')
('google-chrome', 'smaller', 'firefox', 'memory', '5699024', 'if we remove the font-size it appears properly in google-chrome but shows up smaller in firefox\n')
('google-chrome', 'less', 'firefox', '', '8120047', 'the idea is that if they are using ie then they must install google-chrome frame and if they are using less than firefox 4 or opera 11.5 then they must upgrade their browser not not sure if the way i am doing that is correct\n')
('firefox', 'more', 'google-chrome', '', '3288456', 'firefox produces more space compared to google-chrome\n')
('firefox', 'shorter', 'google-chrome', '', '20622748', 'however a sdp object local description by firefox does not contain datachannel at all and moreover the sdp is much shorter than google-chrome and less information bundled\n')
('google-chrome', 'quicker', 'firefox', '', '19350398', 'also google-chrome has a great tool that allows you to edit css on the fly which i find more useful and quicker than using firefox s extensions\n')
('google-chrome', 'smarter', 'firefox', '', '17538178', 'i guess google-chrome is smarter about me being careless than firefox is\n')
('firefox', 'more', 'google-chrome', '', '20262398', 'i m taking a quite educated guess here that firefox is more forgiving with the irregular syntax than google-chrome\n')
('firefox', 'more advanced', 'google-chrome', '', '6916614', 'firefox has a more advanced plugin than the google-chrome extension but both work\n')
('firefox', 'slower', 'google-chrome', 'performance', '18308946', 'firefox - good a bit slower than google-chrome\n')
('google-chrome', 'less', 'firefox', '', '640303', 'using the same data google-chrome does in less than 5 seconds what took ie and firefox 10 to 15 seconds to accomplish\n')
('google-chrome', 'taller', 'firefox', '', '4134107', 'currently with the 10px top padding the cells in google-chrome look taller than in firefox\n')
('google-chrome', 'better', 'firefox', '', '5204325', 'in my experience google-chrome has better javascript performance than firefox\n')
('google-chrome', 'just more forgiving', 'firefox', '', '20167596', 'google-chrome is just more forgiving for some mistakes then firefox\n')
('google-chrome', 'better imo', 'firefox', '', '23245240', 'google-chrome sends back and html collection that is longer really better imo than firefox ie or chromium\n')
('firefox', 'lower', 'google-chrome', '', '15483083', 'in firefox it seems that this is 1px lower than in google-chrome and safari\n')
('google-chrome', 'less', 'firefox', '', '16169171', 'update3 now it works here which means that i couldn t fully reproduce my bug to show it to you but in general the problem is that the height of 5x5 table in google-chrome is less from firefox on 22px which is 22px gap between table container and a table itself\n')
('firefox', 'even slower', 'google-chrome', 'performance', '11057475', 'firefox is even slower that google-chrome\n')
('google-chrome', 'passwords smaller', 'firefox', 'memory', '12990034', 'google-chrome renders passwords smaller than firefox\n')
('firefox', 'lower', 'google-chrome', '', '11021028', 'firefox text is 1px lower than in google-chrome and ie\n')
('google-chrome', 'much better', 'firefox', '', '3136004', 'is it because google-chrome has much better javascript support than firefox\n')
('firefox', 'much more', 'google-chrome', '', '24072476', 'apple s safari applies almost no cross domain restrictions to files opened locally but firefox is much more strict about what it permits with google-chrome somewhere in the middle\n')
('firefox', 'smaller', 'google-chrome', 'memory', '10007704', 'while the rest of the browsers report the correct width of the document firefox reports a smaller one example at screen resolution of 1920x1080 ie google-chrome and safari reports 1920 while firefox reports 1903\n')
('firefox', 'slower', 'google-chrome', 'performance', '24708649', 'update just tried it on firefox 30 and it did not experience the same slowdown in a worker thread but it was slower than google-chrome when run in the main thread\n')
('google-chrome', 'slower', 'firefox', 'performance', '23311171', 'do you have any idea why google-chrome loads javascript function much slower than firefox\n')
('firefox', 'less noticeable', 'google-chrome', '', '10511066', 'support exists in firefox and my test just confirmed thisâ but the handle is a little less noticeable than in google-chrome\n')
('firefox', 'faster', 'google-chrome', 'performance', '6774018', 'it s just a matter of preferences and browser implementation eg firefox works faster with brackets while google-chrome works faster with the dots\n')
('firefox', 'taller element', 'google-chrome', '', '18185150', 'the reason this is happening is because firefox renders the select box as a taller element than google-chrome and the container of the blue text is getting caught on the select s container element because it s now sticking out lower than the others\n')
('google-chrome', 'more', 'firefox', '', '23064942', 'in google-chrome it seems more or less ok but in firefox when i first tried it it should give me not logged in my console\n')
('google-chrome', 'slower', 'firefox', 'performance', '22182454', 'also google-chrome s map function is up to 2x slower than firefox on my machine\n')
('google-chrome', 'earlier', 'firefox', '', '1996484', 'i suspect that this may be the case because ie and google-chrome need to know about the content of the div earlier than firefox\n')
('firefox', 'larger', 'google-chrome', 'memory', '5780924', 'this is because in ie and firefox the footer link text is larger than in google-chrome and safari therefore the margins that i ve set up for the icons do not work\n')
('google-chrome', 'more detailed', 'firefox', '', '22889989', 'google-chrome provides more detailed information about the ajax errors even when firefox doesn t say anything\n')
('firefox', 'slower', 'google-chrome', 'performance', '16188505', 'svg performance in firefox is slower than in webkit google-chrome and ie10\n')
('google-chrome', 'more', 'firefox', '', '14686908', 'the issue that i encountered was that google-chrome was giving me height about 300px more than the firefox ie\n')
('firefox', 'larger 15px', 'google-chrome', 'memory', '19429156', 'for example if you have a text size of 15px well firefox makes a larger 15px than google-chrome does\n')
('firefox', 'faster', 'google-chrome', 'performance', '5150147', 'the results varied from a browser to another firefox 4.0b12 is faster using but google-chrome webkit and opera is faster when using\n')
('firefox', 'higher', 'google-chrome', '', '11488114', 'most noticeably if you look or google-chrome firefox and then internet explorer 9 you ll notice that the terms and conditions are slightly higher than in google-chrome or firefox and thus slightly touching the main content area\n')
('google-chrome', 'more forgiving', 'firefox', '', '12391385', 'i guess google-chrome is a bit more forgiving than firefox\n')
('google-chrome', 'just faster', 'firefox', 'performance', '12829930', 'google-chrome is just faster than firefox which just faster than ie at bit-wise operations\n')
('firefox', 'perhaps more', 'google-chrome', '', '20625114', 'thus i think firefox is perhaps more right but other developers at google-chrome think otherwise\n')
('google-chrome', 'more', 'firefox', '', '17532421', 'in google-chrome there is more files download 47 than in firefox ie 42\n')
('firefox', 'less noticeable', 'google-chrome', '', '18204595', 'in firefox it s less noticeable but in google-chrome it s very noticeable\n')
('google-chrome', 'better', 'firefox', '', '12899440', 'transparency is also an issue however google-chrome seems to handle all three better than firefox\n')
('firefox', 'greater', 'google-chrome', '', '13198764', 'i ve ran into out of memory errors on firefox with canvas heights greater than 8000 google-chrome seems to handle much higher at least to 32000\n')
('firefox', 'easier', 'google-chrome', 'usability', '14747312', 'with firefox it was very easy i just grabbed the apk from their ftp server run the adb install command one would think it should be even easier with google-chrome but it s really not\n')
('google-chrome', 'more', 'firefox', '', '3702732', 'any ideas why google-chrome is apply more spacing than firefox ie\n')
('google-chrome', 's much longer', 'firefox', '', '17238511', 'i want to set my own time limit rather than use the browser s default i believe google-chrome s is much longer than firefox s\n')
('google-chrome', 'better', 'firefox', '', '25067464', 'google-chrome shows it better than firefox firebug\n')
('google-chrome', 'more strict', 'firefox', '', '5697000', 'google-chrome is a bit more strict than firefox here\n')
('firefox', 'more', 'google-chrome', '', '6916614', 'firefox has a more advanced plugin than the google-chrome extension but both work\n')
('google-chrome', 'smaller', 'firefox', 'memory', '11605875', 'in google-chrome the button should be a tad smaller than in firefox\n')
('google-chrome', 'more flexible', 'firefox', 'usability', '22364875', 'google-chrome is more flexible in this sense than firefox which is why it works there\n')
('firefox', 'larger', 'google-chrome', 'memory', '24077137', 'i ve found that the font-size in firefox is a bit larger than in google-chrome\n')
('google-chrome', 'lower', 'firefox', '', '18068582', 'i m seeing a strange issue on windows in google-chrome the framerate is almost 2 times lower than in firefox on mac google-chrome and firefox have similar framerates\n')
('firefox', 'more lax', 'google-chrome', '', '18223158', 'it works in firefox because firefox is more lax about this security restriction and google-chrome happens to be more strict on mixed-content errors\n')
('google-chrome', 'less frequent', 'firefox', '', '15113342', 'this doesn t happen in google-chrome and is less frequent in firefox than in ie\n')
('google-chrome', 'faster', 'firefox', 'performance', '18351894', 'in my experience google-chrome will be a lot faster than firefox to debug huge js files\n')
('firefox', 'less width', 'google-chrome', '', '19814480', 'firefox has like 40px less width than google-chrome in columns which is causing problems\n')
('firefox', 'slower', 'google-chrome', 'performance', '1233693', 'firefox is slower than google-chrome which boats one of the highest javascript engines a modified version of webkit\n')
('firefox', 'sometimes more lenient', 'google-chrome', '', '12488412', 'in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n')
('google-chrome', 'best less so', 'firefox', '', '12215314', 'the performance in google-chrome is best less so in firefox and ie\n')
('google-chrome', 'better', 'firefox', '', '19931969', 'in firefox the render of new tiles and the panning is laggy this is not the case when using maps.google.com so it s not an issue of google-chrome being better than firefox\n')
('google-chrome', 'better', 'firefox', '', '19165746', 'if you are able to enforce browser usage i find that google-chrome on android preserves line breaks when copying and pasting much better than firefox\n')
('google-chrome', 'easier', 'firefox', 'usability', '7366195', 'i found programming google-chrome extensions easier than firefox but i couldn t come across something similar to xpcom in google-chrome\n')
('google-chrome', 'faster', 'firefox', 'performance', '7057368', 'as google-chrome s v8 is dramatically faster than firefox s spidermonkey at the moment these things are constantly in flux pick the forward loop as it s faster on the slower engine\n')
('google-chrome', 'better', 'firefox', '', '7876912', 'the google-chrome apis are currently experimental hence these tools are likely to be better developed under firefox\n')
('google-chrome', 'typically narrower', 'firefox', '', '8618000', 'try your current setup in google-chrome google-chrome typically has a narrower minimum viewport width and try something like min-width 600px in firefox and your styles should be applied as expected layout.css will be applied when the viewport is at least 600px wide\n')
('firefox', 'taller', 'google-chrome', '', '6557784', 'by highlighting the shape of the two elements you can see that in firefox left the button is 2px taller than in google-chrome right\n')
('google-chrome', 'security fussier', 'firefox', 'security', '20009049', 'i ve learned partly by trawling this site that the google-chrome security is fussier and the app loads correctly without errors in firefox and ie but i can t find any resources that are loaded from a non https source\n')
('google-chrome', 'fatter', 'firefox', '', '6103317', 'it works fine even for italics but i m aware that the user s browser is being asked to make a best-guess here and have noticed that google-chrome will make individual chars appear slightly fatter than firefox when i do things this way\n')
('google-chrome', 'faster', 'firefox', 'performance', '11881265', 'rendering without buffering on google-chrome is faster than firefox so i m actually not sure why google-chrome is having such a problem with drawimage\n')
('firefox', 'more flexibility', 'google-chrome', 'usability', '14040074', 'firefox may be sniffing the document s encoding with more flexibility than google-chrome is\n')
('google-chrome', 'best less', 'firefox', '', '12215314', 'the performance in google-chrome is best less so in firefox and ie\n')
('google-chrome', 'slower', 'firefox', 'performance', '12583588', 'the reason google-chrome is slower than firefox is that the devmode plugin runs in a sandbox so calls and data have to cross the sandbox boundaries\n')
('firefox', 'just stricter', 'google-chrome', '', '19391406', 'it is also proper browser behavior firefox is just stricter about it than google-chrome is\n')
('firefox', 'better', 'google-chrome', '', '6433693', 'given these last two complications i am leaning towards a browser plugin as the solution probably firefox since low-level http stuff seems to be better supported than in google-chrome but i am wondering if anyone has an idea for a more cross-browser-y solution and or if there is something out there that might provide a good api for this kind of thing\n')
('firefox', 'faster', 'google-chrome', 'performance', '7332444', 'when i posted this on facebook someone said that since firefox is open source project developers optimized math.min but google-chrome didn t since google-chrome is just a modification of chromium but beside that above statement is not quite right that makes no sense because that doesn t explain the reason why google-chrome s and firefox s math.min a b performs in similar speed and google-chrome s math.min a b and firefox s performs in same speed because if firefox is faster than google-chrome then google-chrome s math.min a b should be much slower than firefox s\n')
('google-chrome', 'more persnickety', 'firefox', '', '10527980', 'obviously google-chrome is more persnickety whereas firefox defaults to moving and sizing the printout as necessary\n')
('google-chrome', 'slower', 'firefox', 'performance', '7332444', 'when i posted this on facebook someone said that since firefox is open source project developers optimized math.min but google-chrome didn t since google-chrome is just a modification of chromium but beside that above statement is not quite right that makes no sense because that doesn t explain the reason why google-chrome s and firefox s math.min a b performs in similar speed and google-chrome s math.min a b and firefox s performs in same speed because if firefox is faster than google-chrome then google-chrome s math.min a b should be much slower than firefox s\n')
('google-chrome', 'significantly faster', 'firefox', 'performance', '7221963', 'on google-chrome it s significantly faster to do this using 1 0 but on firefox it s slightly faster to do this using bool\n')
('google-chrome', 'slower', 'firefox', 'performance', '8838478', 'because of how google-chrome s plugin system works development mode in google-chrome is much slower than in firefox or safari see here for more details\n')
('firefox', 'more', 'google-chrome', '', '17973121', 'i think from my tests perhaps firefox has more strict standards than google-chrome about cookie manipulation\n')
('google-chrome', 'faster', 'firefox', 'performance', '20655397', 'now when clicking a time less than 1 millisecond will be displayed however it obviously takes nearly a second on my computer until the changed color actually is displayed where btw. google-chrome seems to be faster than firefox\n')
('google-chrome', 'faster', 'firefox', 'performance', '19044179', 'the funny thing is that for abc_def property google-chrome is actually much faster than firefox and ie as i expected\n')
('firefox', 'faster', 'google-chrome', 'performance', '23763890', 'i am not concerned about the fact that firefox runs faster as browser js implementations will vary so much as the wide spread of results encountered in google-chrome that makes getting an accurate result impossible\n')
('firefox', 'smaller left', 'google-chrome', 'memory', '25310350', 'why in firefox text smaller left than in google-chrome and opera right\n')
('google-chrome', 'more restrictive', 'firefox', '', '5020686', 'no and there won t be any time soon because google-chrome s add-on api is more restrictive than firefox\n')
('google-chrome', 'better', 'firefox', '', '14895327', 'google-chrome handles these better than compared to firefox\n')
('google-chrome', 'just more', 'firefox', '', '20167596', 'google-chrome is just more forgiving for some mistakes then firefox\n')
('firefox', 'everything more saturated', 'google-chrome', '', '3237600', 'i have just noticed a site i am working on looks different in google-chrome than other browsers saf firefox everything is more saturated in google-chrome even a background-color rgb\n')
('firefox', 'higher', 'google-chrome', '', '14882752', 'for my website i noticed that tooltip delay in firefox was much higher than in google-chrome\n')
('firefox', 'more technically', 'google-chrome', '', '7616566', 'firefox is more technically correct in this case as it outputs the state of the object at each point in the loop whereas google-chrome is apparently waiting until the end of the loop to output each console.log but i m not aware of a standards specification that covers the console host object\n')
('firefox', 'bigger height', 'google-chrome', 'memory', '23845903', 'but in firefox the left-collumn gets a much bigger height than in google-chrome\n')
('google-chrome', 'higher', 'firefox', '', '7012987', 'in google-chrome it is appearing higher than the original in firefox\n')
('firefox', 'more strict', 'google-chrome', '', '7377302', 'firefox and ie9 require a proper domain to run from presumably because they are more strict than google-chrome in the way they associate the localstorate object to a domain in google-chrome it doesn t need to be a domain as such\n')
('google-chrome', 'smaller', 'firefox', 'memory', '23072956', 'my question is similar the same page in my pc renders fine firefox google-chrome but the same one on a server rendered smaller by firefox google-chrome ok\n')
('firefox', 'always higher', 'google-chrome', '', '7676281', 'the position of the list in firefox is always higher than that of google-chrome no matter how i padding or margin the list\n')
('firefox', 'lesser extent', 'google-chrome', '', '6583582', 'this is sporadic and i see it happening most of the time with firefox 4.0.1 and 5.0 and to a lesser extent with google-chrome\n')
('google-chrome', 'more information', 'firefox', '', '21147622', 'the google-chrome console gives more information than the firefox console\n')
('google-chrome', 'easier', 'firefox', 'usability', '4472205', 'another alternative for javascript ajax is writing a google-chrome add-on easier than firefox or embeding a web browser within your application\n')
('google-chrome', 'better', 'firefox', '', '11662302', 'when i ran the test individually with a timer google-chrome actually performed better than firefox hope this helps\n')
('google-chrome', 'bigger', 'firefox', 'memory', '8817800', 'that happens because pixels size in google-chrome is bigger than in firefox\n')
('google-chrome', 'bigger', 'firefox', 'memory', '7229568', 'why height in google-chrome is bigger than firefox of input\n')
('firefox', 'perhaps more right', 'google-chrome', '', '20625114', 'thus i think firefox is perhaps more right but other developers at google-chrome think otherwise\n')
('firefox', 'more lenient', 'google-chrome', '', '12488412', 'in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n')
('firefox', 'nicer', 'google-chrome', '', '21204517', 'in firefox this might be handled a little nicer than google-chrome but rather than completely redraw an element you should try to append only what you need\n')
('firefox', 'more', 'google-chrome', '', '18223158', 'it works in firefox because firefox is more lax about this security restriction and google-chrome happens to be more strict on mixed-content errors\n')
('google-chrome', 'more', 'firefox', '', '6222562', 'i ve been trying to sum up values over a swipe and see how different browsers report values and they vary a lot with safari reporting order of magnitude bigger numbers on almost all platforms google-chrome reporting quite more like 3 times more than firefox firefox being balanced on the long run but quite different among platforms on small movements on ubuntu gnome nearly only +3 or -3 seems like it sums up smaller events and then send a big +3\n')
('firefox', 'slower', 'google-chrome', 'performance', '12150212', 'i ve tested the sample on firefox and it s a bit slower than google-chrome but usable\n')
('google-chrome', 'much better javascript', 'firefox', '', '3136004', 'is it because google-chrome has much better javascript support than firefox\n')
('firefox', 'smaller', 'google-chrome', 'memory', '8850307', 'if i remove this code the width of green image in firefox becomes smaller but it s still bigger than necessary about 100px the google-chrome images keeps unchanged\n')
('google-chrome', 'less efficient', 'firefox', 'performance', '8264054', 'so why is google-chrome less efficient than firefox and ie\n')
('google-chrome', 'more', 'firefox', '', '19007974', 'ellipsis still wraps in google-chrome but is more user friendly in firefox by adding the .\n')
('firefox', 'higher baseline', 'google-chrome', '', '14870041', 'ie firefox higher than baseline google-chrome on baseline\n')
('firefox', 'slower', 'google-chrome', 'performance', '4398883', 'as you can see ie 8 is about 5 times slower than firefox 3.6 and almost 20 times slower than google-chrome 9 at least when using sunspider tests\n')
('firefox', 'smaller', 'google-chrome', 'memory', '17458265', 'firefox thumbnail 4 times smaller than on google-chrome\n')
('firefox', 'further', 'google-chrome', '', '9492029', 'you can see if you look at the bottom and right hand edges of both google-chrome lines up perfectly but firefox seems further in both directions and i cannot work out why either in firebug or google-chrome dev tools\n')
('google-chrome', 'worse', 'firefox', '', '23770379', 'though from a design perspective it may be easier to simply add the extra 5px to the width designing for the worst case browser to prevent wrapping in google-chrome which is worse than extra space in firefox ie\n')
('google-chrome', 'larger', 'firefox', 'memory', '8840940', 'i am checking it in firefox and google-chrome and see that in google-chrome spacing between letter is larger than in firefox\n')
('google-chrome', 'earlier', 'firefox', '', '4265710', 'if google-chrome seems to finish earlier than firefox then that is the freezing glitch in action\n')
('google-chrome', 'typically narrower minimum', 'firefox', '', '8618000', 'try your current setup in google-chrome google-chrome typically has a narrower minimum viewport width and try something like min-width 600px in firefox and your styles should be applied as expected layout.css will be applied when the viewport is at least 600px wide\n')
('firefox', 'better', 'google-chrome', '', '12542302', 'firefox handles this better than google-chrome does but neither exactly the way i want\n')
('firefox', 'slower', 'google-chrome', 'performance', '16639931', 'why is firefox so much slower than google-chrome on my laptop\n')
('google-chrome', 'more spacing', 'firefox', '', '3702732', 'any ideas why google-chrome is apply more spacing than firefox ie\n')
('firefox', 'slower', 'google-chrome', 'performance', '16481858', 'using firefox even it s slower than google-chrome it s still more respectful of privacy\n')
('firefox', 'slower', 'google-chrome', 'performance', '20740967', 'spidermonkey firefox is slower 50 of google-chrome max speed but the speed is consistent\n')
('firefox', 'slower', 'google-chrome', 'performance', '2284148', 'better use google-chrome even thought firefox is not slower than google-chrome for once probably the tracing for the image comparison pays off yay\n')
('google-chrome', 'longer', 'firefox', '', '17238511', 'i want to set my own time limit rather than use the browser s default i believe google-chrome s is much longer than firefox s\n')
('firefox', 'more', 'google-chrome', '', '19754809', 'firefox encodes more characters than google-chrome\n')
('firefox', 'slower', 'google-chrome', 'performance', '3156866', 'firefox is slower than google-chrome in javascript\n')
('firefox', 'more space', 'google-chrome', 'memory', '3288456', 'firefox produces more space compared to google-chrome\n')
('firefox', 'wider', 'google-chrome', '', '12569898', 'after looking into the issue with the inspection tools of both browsers it seems that firefox is making the #main_nav_bar ul 10px wider than google-chrome\n')
('google-chrome', 'more', 'firefox', '', '22364875', 'google-chrome is more flexible in this sense than firefox which is why it works there\n')
('google-chrome', 'slower', 'firefox', 'performance', '24051882', 'i have been working with linear parsers lately and noticed the performance in google-chrome v37 was much slower than in firefox v30\n')
('firefox', 'lower', 'google-chrome', '', '18394282', 'phantomjs achieves a better accuracy than firefox slightly lower than google-chrome but in around half the time of firefox\n')
('firefox', 'smoother', 'google-chrome', '', '15058125', 'i m on a mac os x 10.8.2 running firefox 18.0.2 - it actually runs the game faster and smoother than my google-chrome 25.0.1364.99\n')
('firefox', 'worse', 'google-chrome', '', '6817093', 'google-chrome is lightning fast when you use the dom api but vastly slower using the .innerhtml operator by a magnitude 1000-fold slower however firefox is worse than google-chrome in some areas for instance the append test is much slower than google-chrome but the innerhtml test runs much faster than google-chrome\n')
('google-chrome', 'more', 'firefox', '', '5375848', 'maybe google-chrome is more lenient when it comes to illegal characters in the url than firefox or something like that\n')
('firefox', 'less', 'google-chrome', '', '18204595', 'in firefox it s less noticeable but in google-chrome it s very noticeable\n')
('firefox', 'larger', 'google-chrome', 'memory', '20738370', 'safari and opera work with the google-chrome setting but firefox and ie display the iframed page larger than google-chrome causing part of the text to be cut off\n')
('firefox', 'more power', 'google-chrome', '', '3417323', 'firefox extensions have much more power than google-chrome and have wider access to browser s internal api\n')
('firefox', 'slower', 'google-chrome', 'performance', '10706070', 'and also does anyone know why is firefox so much slower than google-chrome in 3d rendering\n')
('firefox', 'lower', 'google-chrome', '', '25118060', 'it seems that in firefox ie the line-through style is a bit lower than google-chrome i am not sure if this is because of the implementation of different browsers or something\n')
('firefox', 'slower', 'google-chrome', 'performance', '8382400', 'it depends on the browser its definitely true for ie and firefox but seems slower on google-chrome\n')
('google-chrome', 'better', 'firefox', '', '15999099', 'graph beeing cut in google-chrome is a known issue google-chrome does not respect some print css and works much better with firefox not all versions still\n')
('firefox', 'bigger', 'google-chrome', 'memory', '11542460', 'here the working header request with firefox bigger than google-chrome request\n')
('google-chrome', 'faster', 'firefox', 'performance', '12829930', 'google-chrome is just faster than firefox which just faster than ie at bit-wise operations\n')
('google-chrome', 'chromium much better', 'firefox', '', '15934117', 'also for animations google-chrome chromium behaves much better that is why i use it for development but do my general browsing in firefox\n')
('google-chrome', 'better', 'firefox', '', '17510122', 'bad buffering can also be a result of a slow computer because statistics show that google-chrome is better for a normal-fast computer and firefox works best on slow computers\n')
('firefox', 'more', 'google-chrome', '', '7159127', 'firefox allocates lots of memory during that preloading up to 20-30 times more than google-chrome or safari do and even twice as much as ie\n')
('google-chrome', 'much slower', 'firefox', 'performance', '8838478', 'because of how google-chrome s plugin system works development mode in google-chrome is much slower than in firefox or safari see here for more details\n')
('google-chrome', 'more', 'firefox', '', '10527980', 'obviously google-chrome is more persnickety whereas firefox defaults to moving and sizing the printout as necessary\n')
('google-chrome', 'faster', 'firefox', 'performance', '5746611', 'i use google-chrome for development as i find it runs faster than firefox and ie so it is a bore to guess where the icons are\n')
('firefox', 'more forgiving', 'google-chrome', '', '3008645', 'most likely your post value has one or more characters in it that are breaking the html of the page and ie firefox are being a bit more forgiving than google-chrome is\n')
('firefox', 'not slower', 'google-chrome', 'performance', '2284148', 'better use google-chrome even thought firefox is not slower than google-chrome for once probably the tracing for the image comparison pays off yay\n')
('google-chrome', 'console more information', 'firefox', '', '21147622', 'the google-chrome console gives more information than the firefox console\n')
('firefox', 'sometimes more', 'google-chrome', '', '12488412', 'in my experience firefox is sometimes more lenient than google-chrome but i would definitely test in both\n')
('google-chrome', 'less pleasant', 'firefox', '', '21798628', 'i m trying to add a ribbon to a page using css3 linear-gradients but the rendering in google-chrome looks a lot less pleasant than its firefox or ie alternative\n')
('google-chrome', 'more', 'firefox', '', '16420086', 'when i run my http web server on google google-chrome it gives more 324 error than in firefox\n')
('google-chrome', 'more files', 'firefox', '', '17532421', 'in google-chrome there is more files download 47 than in firefox ie 42\n')
('firefox', 'much more strict', 'google-chrome', '', '24072476', 'apple s safari applies almost no cross domain restrictions to files opened locally but firefox is much more strict about what it permits with google-chrome somewhere in the middle\n')
('google-chrome', 'higher', 'firefox', '', '2512461', 'so i wonder the benchmark is also influenced by the installed extensions or google-chrome is really so much higher than firefox in performance\n')
('google-chrome', 'better', 'firefox', '', '25699066', 'google-chrome dev tools are by far better than firefox ie whatever imho\n')
('firefox', 'consistently better', 'google-chrome', '', '25606508', 'also it does appear that firefox consistently handles this better than ie or google-chrome\n')
('firefox', 'richer', 'google-chrome', '', '2213961', 'i inspected the range object in both google-chrome and firefox and then noticed that firefox s range object is far richer than google-chrome s\n')
('firefox', 'more padding', 'google-chrome', '', '2954659', 'in firefox the input button has more padding than in google-chrome\n')
('firefox', 'more', 'google-chrome', '', '7616566', 'firefox is more technically correct in this case as it outputs the state of the object at each point in the loop whereas google-chrome is apparently waiting until the end of the loop to output each console.log but i m not aware of a standards specification that covers the console host object\n')
('google-chrome', 'less', 'firefox', '', '15113342', 'this doesn t happen in google-chrome and is less frequent in firefox than in ie\n')
('google-chrome', 'better javascript', 'firefox', '', '5204325', 'in my experience google-chrome has better javascript performance than firefox\n')
('google-chrome', 'nicer', 'firefox', '', '9634984', 'in my testing google-chrome is nicer it pops-up the unresponsive alert whereas firefox apparently doesn t care\n')
('google-chrome', 'bigger', 'firefox', 'memory', '11782208', 'in google-chrome the green div is bigger than in firefox i really don t know what is the problem i think in firefox it displays as it should but in google-chrome and ie9 it displays different\n')
('firefox', 'more', 'google-chrome', '', '16682516', 'first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n')
('firefox', 'more characters', 'google-chrome', '', '19754809', 'firefox encodes more characters than google-chrome\n')
('firefox', 'greatly faster', 'google-chrome', 'performance', '19769556', 'i ve found that firefox is greatly faster with imacros than google-chrome\n')
('firefox', 'version better', 'google-chrome', '', '15244665', 'install firebug firefox version is better then a google-chrome one\n')
('firefox', 'bolder', 'google-chrome', '', '16221732', 'font-face bold in firefox is bolder than in google-chrome\n')
('firefox', 'more strict', 'google-chrome', '', '17973121', 'i think from my tests perhaps firefox has more strict standards than google-chrome about cookie manipulation\n')
('firefox', 'more handy tool', 'google-chrome', '', '16682516', 'first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n')
('firefox', 'more forgiving', 'google-chrome', '', '20262398', 'i m taking a quite educated guess here that firefox is more forgiving with the irregular syntax than google-chrome\n')
('google-chrome', 'thinner', 'firefox', '', '12303054', 'even then google-chrome s fonts look thinner than in firefox or ie\n')
('firefox', 'reproducible more often', 'google-chrome', '', '25065194', 'this does not seem to occur in safari or ie and a similar permission error occurs sometimes in firefox but is reproducible more often than not in google-chrome\n')
('google-chrome', 'better', 'firefox', '', '25318564', 'and additionally the algorithm that google-chrome uses is better than the one in firefox at least for handling the resizing of text\n')
('firefox', 'quicker even', 'google-chrome', '', '18477622', 'the most interesting thing i noted is that certain test combos in firefox are much quicker than even google-chrome\n')
('firefox', 'text 1px lower', 'google-chrome', '', '11021028', 'firefox text is 1px lower than in google-chrome and ie\n')
('google-chrome', 'more', 'firefox', '', '22889989', 'google-chrome provides more detailed information about the ajax errors even when firefox doesn t say anything\n')
('google-chrome', 'more lenient', 'firefox', '', '5375848', 'maybe google-chrome is more lenient when it comes to illegal characters in the url than firefox or something like that\n')
('google-chrome', 'bigger time', 'firefox', 'memory', '21867035', 'google-chrome has a bigger time difference yet firefox is the one with the gap in the animation\n')
('google-chrome', 'typeof slower', 'firefox', 'performance', '20680334', 'in google-chrome typeof is slower than the other two but in firefox it is the fastest\n')
('firefox', 'reproducible more', 'google-chrome', '', '25065194', 'this does not seem to occur in safari or ie and a similar permission error occurs sometimes in firefox but is reproducible more often than not in google-chrome\n')
('google-chrome', 'faster', 'firefox', 'performance', '5299127', 'but i guess google-chrome i have version 10 should be much faster than firefox 3.6\n')
('google-chrome', 'higher however', 'firefox', '', '16534059', 'i just found out that if you re using google-chrome you trigger antialiasing at 49px or higher however with firefox it s set at 257px or higher\n')
('firefox', 'probably easier', 'google-chrome', 'usability', '17298652', 'firefox is probably easier than google-chrome these days\n')
('google-chrome', 'bigger', 'firefox', 'memory', '21867035', 'google-chrome has a bigger time difference yet firefox is the one with the gap in the animation\n')
('google-chrome', 'older', 'firefox', '', '6070609', 'i believe the error might be how firefox and google-chrome handles these multiple times included jquerys and it might be that google-chrome uses the older and firefox newer version\n')
('google-chrome', 'smaller', 'firefox', 'memory', '12990034', 'google-chrome renders passwords smaller than firefox\n')
('firefox', 'larger', 'google-chrome', 'memory', '19429156', 'for example if you have a text size of 15px well firefox makes a larger 15px than google-chrome does\n')
('google-chrome', 'console more', 'firefox', '', '21147622', 'the google-chrome console gives more information than the firefox console\n')
('firefox', 'faster', 'google-chrome', 'performance', '3164817', 'also firefox 4 has hardware accelerated canvas that is marginally faster than ie9 and a lot faster than google-chrome\n')
('firefox', 'more', 'google-chrome', '', '18528300', 'my firefox adds more chopping to video playing itself google-chrome plays the video much better\n')
('firefox', 'more', 'google-chrome', '', '5645603', 'firefox is more tolerant when it comes to image headers then ie and google-chrome\n')
('google-chrome', 'smaller', 'firefox', 'memory', '11778005', 'in google-chrome the font appears to be 1px smaller than firefox and ie and i cannot see why\n')
('google-chrome', 'more user', 'firefox', '', '19007974', 'ellipsis still wraps in google-chrome but is more user friendly in firefox by adding the .\n')
('google-chrome', 'even faster', 'firefox', 'performance', '4952787', 'in ie8 and google-chrome it runs even faster than firefox in general and this slow down never happens\n')
('firefox', 'more tolerant', 'google-chrome', '', '5645603', 'firefox is more tolerant when it comes to image headers then ie and google-chrome\n')
('firefox', 'everything more', 'google-chrome', '', '3237600', 'i have just noticed a site i am working on looks different in google-chrome than other browsers saf firefox everything is more saturated in google-chrome even a background-color rgb\n')
('firefox', 'longer', 'google-chrome', '', '3591151', 'this is due to the simple fact that firefox has been in the extension business longer than google-chrome or ie\n')
('firefox', 'more handy', 'google-chrome', '', '16682516', 'first just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tool\n')
('google-chrome', 'faster', 'firefox', 'performance', '1238849', 'the trouble is choosing a good value for x since for this particular page google-chrome is so very much faster than firefox which is faster than ie\n')
('firefox', 'slower', 'google-chrome', 'performance', '11577677', 'in google-chrome it seems .prototype is faster firefox shows no difference between the two although generally performs slower than google-chrome\n')
('google-chrome', 'more strict', 'firefox', '', '2821210', 'google-chrome s parsing may be more strict than firefox is at having things like trailing commas as specified by the standard at as stated in danilo celic s answer\n')
('firefox', 'higher', 'google-chrome', '', '11648488', 'i know different engines render fonts differently and but the issue i m having is that firefox renders the font higher than google-chrome - at the size i am displaying the font this is very noticeable 3 or 4 px - which on a button means they re totally misaligned\n')
('firefox', 'more sluggish', 'google-chrome', '', '14176911', 'firefox on nexus 7 is a bit better at producing reasonable sample rate readings but the updating of the display is even more sluggish than google-chrome\n')
('firefox', 'better', 'google-chrome', '', '3341954', 'they use iframes in firefox which seems better but in google-chrome they do this by putting manually defined span and font tags\n')

struts	wicket	1
('struts', 'style simpler', 'wicket', 'usability', '17072165', 'you could argue that the struts style is simpler and you can do it in wicket too it just isn t optimal but keeping the state only in the server has many advantages\n')

bltoolkit	nhibernate	1
('bltoolkit', 'better solution', 'nhibernate', '', '3345095', 'update for our purposes bltoolkit ended up being a better solution than nhibernate\n')

each	prop	2
('each', 'product more', 'prop', '', '8743173', 'needless to say each product has more than one prop which is kept in the producthas table\n')
('each', 'more', 'prop', '', '8743173', 'needless to say each product has more than one prop which is kept in the producthas table\n')

openkm	alfresco	2
('openkm', 'more', 'alfresco', '', '12050599', 'i think the preview function in openkm is more well than alfresco\n')
('openkm', 'more well', 'alfresco', '', '12050599', 'i think the preview function in openkm is more well than alfresco\n')

xerces	tinyxml	1
('xerces', 'heavier', 'tinyxml', '', '3172803', 'for more complex xml reading writing you better check xerces which is heavier than tinyxml\n')

treeview	tabcontrol	1
('treeview', 'height smaller', 'tabcontrol', 'memory', '18518693', 'i can t find any way to make the treeview s height smaller or the tabcontrol s larger\n')

splinter	selenium	2
('splinter', 'simpler', 'selenium', 'usability', '9028251', 'consider taking a look at splinter which is a simpler webdriver api than selenium\n')
('splinter', 'simpler webdriver', 'selenium', 'usability', '9028251', 'consider taking a look at splinter which is a simpler webdriver api than selenium\n')

nunit	mbunit	6
('nunit', 'more', 'mbunit', '', '2089364', 'nunit is more widespread mbunit has the most features but mstest has more manpower behind it\n')
('nunit', 'more popular', 'mbunit', 'usability', '3678783', 'from what i have read on here i here that nunit is more popular over mbunit\n')
('nunit', 'more', 'mbunit', '', '3681067', 'nunit is more popular because it was there first therefore more articles about it on the web and better tooling and because most programmers don t care about or need the advanced features that mbunit offers\n')
('nunit', 'more', 'mbunit', '', '3678783', 'from what i have read on here i here that nunit is more popular over mbunit\n')
('nunit', 'more popular', 'mbunit', 'usability', '3681067', 'nunit is more popular because it was there first therefore more articles about it on the web and better tooling and because most programmers don t care about or need the advanced features that mbunit offers\n')
('nunit', 'more widespread', 'mbunit', '', '2089364', 'nunit is more widespread mbunit has the most features but mstest has more manpower behind it\n')

oncreate	setcontentview	1
('oncreate', 'nothing more', 'setcontentview', '', '11704785', 'i can make this happen with the minimal project where oncreate does nothing more than call super and setcontentview\n')

ilist	ienumerable	19
('ienumerable', 'less specific', 'ilist', '', '3228735', 'ienumerable is less specific than ilist ilist implements ienumerable so unless you want something specific from ilist such as .count as you suggest or perhaps add delete etc i d use ienumerable\n')
('ienumerable', 'less specific', 'ilist', '', '5213886', 'an ienumerable is less specific than an ilist\n')
('ienumerable', 'much more lighter', 'ilist', 'memory', '3522746', 'yes i understand that ienumerable is much more lighter rather than ilist but anyway there is a lot situations where we need to have ilist instead of ienumerable and in this approach we need to cast ienumerable to ilist isn t it\n')
('ienumerable', 'much more', 'ilist', '', '3522746', 'yes i understand that ienumerable is much more lighter rather than ilist but anyway there is a lot situations where we need to have ilist instead of ienumerable and in this approach we need to cast ienumerable to ilist isn t it\n')
('ienumerable', 'more abstract', 'ilist', '', '8955601', 'ienumerable is more abstract and is generally preferred to list or ilist if possible\n')
('ilist', 'more specialized', 'ienumerable', '', '13779387', 'the reason why this doesn t work specifically is because ilist is more specialized than ienumerable\n')
('ienumerable', 'less specific', 'ilist', '', '3180672', 'ienumerable is less specific than an ilist that is ilist has functions that ienumerable does not\n')
('ilist', 'interface more', 'ienumerable', '', '14821298', 'you need to use tolist to convert it from ienumerable because the ilist interface supports more functionality than the ienumerable interface\n')
('ilist', 'more', 'ienumerable', '', '2000456', 'thus ilist is more than ienumerable and you won t be able to get away with it\n')
('ilist', 'more', 'ienumerable', '', '13779387', 'the reason why this doesn t work specifically is because ilist is more specialized than ienumerable\n')
('ienumerable', 'less', 'ilist', '', '3180672', 'ienumerable is less specific than an ilist that is ilist has functions that ienumerable does not\n')
('ilist', 'interface more functionality', 'ienumerable', 'usability', '14821298', 'you need to use tolist to convert it from ienumerable because the ilist interface supports more functionality than the ienumerable interface\n')
('ienumerable', 'more', 'ilist', '', '8955601', 'ienumerable is more abstract and is generally preferred to list or ilist if possible\n')
('ienumerable', 'less', 'ilist', '', '3228735', 'ienumerable is less specific than ilist ilist implements ienumerable so unless you want something specific from ilist such as .count as you suggest or perhaps add delete etc i d use ienumerable\n')
('ilist', 'stronger', 'ienumerable', '', '16934777', 'ilist is stronger in that it makes more guarantees than ienumerable\n')
('ienumerable', 'lighter rather', 'ilist', 'memory', '3522746', 'yes i understand that ienumerable is much more lighter rather than ilist but anyway there is a lot situations where we need to have ilist instead of ienumerable and in this approach we need to cast ienumerable to ilist isn t it\n')
('ienumerable', 'less', 'ilist', '', '5213886', 'an ienumerable is less specific than an ilist\n')
('ienumerable', 'less specific', 'ilist', '', '17761596', 'ienumerable is less specific than ilist\n')
('ienumerable', 'less', 'ilist', '', '17761596', 'ienumerable is less specific than ilist\n')

jtable	jlist	3
('jlist', 'better', 'jtable', '', '8598358', 'a jlist would probably be better than a jtable\n')
('jtable', 'better jcomponents', 'jlist', '', '6823252', 'i think jtable would be better jcomponents as jlist because there you can implements tablecelleditor maybe example with similair output here\n')
('jtable', 'better', 'jlist', '', '18589264', 'i don t really think that jtable will help you here anyhow better than jlist - it has the same rendering strategy\n')

ocaml	racket	1
('ocaml', 'faster', 'racket', 'performance', '4305402', 'ocaml is faster than racket for most of the benchmarks on languages benchmark game\n')

crfsuite	crf++	1
('crfsuite', 'faster', 'crf++', 'performance', '17912109', 'crfsuite is faster than crf++ and it can deal with a huge training data\n')

dxcore	coderush	2
('dxcore', 'newer name', 'coderush', '', '6608244', 'dxcore is the newer name for coderush dxcore and coderush are a refactoring and productivity tool by devexpress that extends the functionality of microsoft visual studio 2002 2003 2005 2008 and 2010\n')
('dxcore', 'newer', 'coderush', '', '6608244', 'dxcore is the newer name for coderush dxcore and coderush are a refactoring and productivity tool by devexpress that extends the functionality of microsoft visual studio 2002 2003 2005 2008 and 2010\n')

nsis	uninstaller	1
('nsis', 'more', 'uninstaller', '', '10593657', 'can a nsis section create more than 1 uninstaller\n')

weka	libsvm	1
('weka', 'slower', 'libsvm', 'performance', '18696558', 'i am using a sparse format but suggestions are welcome on other formats too i am able to use the data with weka in a dense format using the function names as variables and it works just muuch slower than with libsvm\n')

grouplayout	gridbaglayout	1
('grouplayout', 'harder', 'gridbaglayout', '', '20558525', 'i find grouplayout to be fine to code by hand certainly no harder than gridbaglayout though i can certainly see why it would be a favorite for tools to use\n')

ceil	parseint	1
('ceil', 'faster', 'parseint', 'performance', '17551105', 'the math.floor ceil method being marginally faster than parseint and mod\n')

i386	powerpc	1
('i386', 'faster', 'powerpc', 'performance', '21257633', 'on i386 the dyld stub is much faster than the powerpc equivalent so we didnâ t bother doing extra work to bypass it\n')

fileinputstream	fileoutputstream	1
('fileinputstream', 'smaller files', 'fileoutputstream', 'memory', '17099870', 'at first i tried reading the original pdf with a fileinputstream and finding the signature hex strings to split it into smaller files with a fileoutputstream as i have done with jpgs\n')

entity-relationship	erd	1
('entity-relationship', 'modeling more', 'erd', '', '12446158', 'first entity-relationship modeling is more than just an erd\n')

jscrollpane	jlayeredpane	1
('jscrollpane', 'smaller', 'jlayeredpane', 'memory', '4901460', 'the problem is that with the code below the jlayeredpane always expands to fit the size of the jscrollpane and in the event that the jscrollpane is smaller than the jlayeredpane it does not provide the scrolling ability\n')

nexus	artifactory	4
('nexus', 'better', 'artifactory', '', '15226169', 'i will not argue why and if nexus is better than artifactory as it would not be fair and would only cause flame wars\n')
('artifactory', 'better', 'nexus', '', '15488729', 'i would recommend artifactory much better than the nexus\n')
('nexus', 'better', 'artifactory', '', '8953059', 'nexus looks better choice than artifactory because of using filesystem instead of database to keep repository\n')
('nexus', 'better choice', 'artifactory', '', '8953059', 'nexus looks better choice than artifactory because of using filesystem instead of database to keep repository\n')

rubymine	radrails	2
('rubymine', 'more features', 'radrails', 'usability', '6521764', 'webstorm + pycharm + rubymine + phpstorm though to be fair rubymine has more features than radrails atm\n')
('rubymine', 'more', 'radrails', '', '6521764', 'webstorm + pycharm + rubymine + phpstorm though to be fair rubymine has more features than radrails atm\n')

words	n-gram	1
('words', 'better', 'n-gram', '', '25261349', 'if you will be classifying multi-paragraph text all in one language a functional words list which your bag of words with pruning of hapaxes will quickly approximate might well serve you perfectly and could work better than n-gram\n')

setter	getter	10
('setter', 'less', 'getter', '', '1063920', 'but then your setter is less restricted than your getter which is odd.\n')
('setter', 'more', 'getter', '', '24656056', 'if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n')
('setter', 'more efficient', 'getter', 'performance', '24656056', 'if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n')
('setter', 'higher', 'getter', '', '6197415', 'the setter complexity can be higher than the getter and thus validate a unit-test\n')
('setter', 'more efficient', 'getter', 'performance', '24655947', 'if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n')
('setter', 'more', 'getter', '', '24655947', 'if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter\n')
('setter', 'far more', 'getter', '', '9991138', 'the code in the setter is far more interesting than the getter should it not take precedence and be defined first\n')
('setter', 'less restricted', 'getter', '', '1063920', 'but then your setter is less restricted than your getter which is odd.\n')
('getter', 'more', 'setter', '', '14844343', 'if your getter takes more than one argument it s not called a setter anymore\n')
('setter', 'far more interesting', 'getter', '', '9991138', 'the code in the setter is far more interesting than the getter should it not take precedence and be defined first\n')

abstract-class	subclass	1
('abstract-class', 'more', 'subclass', '', '190913', 'making abstract-class before i had more than one subclass in mind for them\n')

momentjs	datejs	1
('momentjs', 'better', 'datejs', '', '17263103', 'you should try momentjs i think its much better than datejs\n')

websphere	ibm	2
('ibm', 'easier', 'websphere', 'usability', '3825114', 'ibm makes it easier for those who can t afford websphere application developer or rational application developer which are both eclipse flavour to use eclipse\n')
('websphere', 'newer libraries', 'ibm', '', '2183918', 'other solution is to upgrade websphere with newer libraries as per ibm websphere upgrade service instructions\n')

webrick	thin	1
('webrick', 'slower', 'thin', 'performance', '1267852', 'from my experience webrick is slower than mongrel is slower than thin\n')

scikit-learn	nltk	5
('scikit-learn', 'much better', 'nltk', '', '13041143', 'what you re looking for is linear regression and scikit-learn is much better than nltk for this see\n')
('scikit-learn', 'directly more details', 'nltk', '', '19868470', 'or scikit-learn directly .for more details nltk 3.0 documentation\n')
('scikit-learn', 'less memory', 'nltk', 'memory', '14131456', 'if you are worried about memory then do look into scikit-learn since equivalent models can use significantly less memory than nltk\n')
('scikit-learn', 'directly more', 'nltk', '', '19868470', 'or scikit-learn directly .for more details nltk 3.0 documentation\n')
('scikit-learn', 'better', 'nltk', '', '13041143', 'what you re looking for is linear regression and scikit-learn is much better than nltk for this see\n')

gtk	cairo	3
('gtk', 'more', 'cairo', '', '1734609', 'with gtk it s more common to use cairo already mentioned by jeff foster\n')
('gtk', 'more common', 'cairo', '', '1734609', 'with gtk it s more common to use cairo already mentioned by jeff foster\n')
('cairo', 'larger', 'gtk', 'memory', '12490400', 'the problem is that the canvas drawn by cairo is larger than the area of gtk s scrolled_window\n')

cargo	maven	2
('cargo', 'more', 'maven', '', '10936609', 'you could also use apache cargo which is more general than the tomcat maven plugin\n')
('cargo', 'more general', 'maven', '', '10936609', 'you could also use apache cargo which is more general than the tomcat maven plugin\n')

sublimetext	gedit	1
('sublimetext', 'better', 'gedit', '', '8951744', 'i have tried with sublimetext 2 and it work very very good better than gedit p\n')

filechannel	fileoutputstream	1
('filechannel', 'faster', 'fileoutputstream', 'performance', '3162604', 'i don t see any reason why filechannel could be any faster than fileoutputstream in this case\n')

mouseleave	mousemove	1
('mouseleave', 'better', 'mousemove', '', '6937090', 'take a look at mouseenter and mouseleave events they are better than mousemove and mouseenter combinations\n')

textmate	emacs	2
('textmate', 'better', 'emacs', '', '48015', 'textmate is a better emacs for macs though that won t help you with solaris\n')
('emacs', 'better', 'textmate', '', '967805', 'i feel like emacs is so much better than textmate\n')

memset	malloc	2
('memset', 'greater efficiency', 'malloc', '', '4868335', 'it requests memory from the os kernel but the request is not satisfied until the memory is written to with memset . this allows for greater efficiency in the system s memory management but it can result in misleading malloc behaviour\n')
('memset', 'greater', 'malloc', '', '4868335', 'it requests memory from the os kernel but the request is not satisfied until the memory is written to with memset . this allows for greater efficiency in the system s memory management but it can result in misleading malloc behaviour\n')

perforce	cvs	2
('perforce', 'less', 'cvs', '', '4332537', 'since perforce is less commonly used compared to cvs svn amongst bamboo users we generally get less feedback about it and hear less about existing issues\n')
('perforce', 'less commonly', 'cvs', '', '4332537', 'since perforce is less commonly used compared to cvs svn amongst bamboo users we generally get less feedback about it and hear less about existing issues\n')

blockui	jqmodal	1
('blockui', 'higher', 'jqmodal', '', '6444837', 'one item to note be aware the default z-index for jqmodal is below default for blockui so using them together requires you set blockui basez option higher than jqmodal s default 3000.\n')

benchmarking	profiling	4
('profiling', 'often more appropriate', 'benchmarking', '', '24810089', 'using a profiling is often more appropriate than benchmarking but it seems to be even more tricky\n')
('profiling', 'more appropriate', 'benchmarking', '', '24810089', 'using a profiling is often more appropriate than benchmarking but it seems to be even more tricky\n')
('benchmarking', 'much higher', 'profiling', '', '16500703', 'the issue is that the execution time of a benchmarking is much higher about 3 times in case i do not invoke the profiling along with it than the case when the benchmarking is executing with the profiling\n')
('profiling', 'often more', 'benchmarking', '', '24810089', 'using a profiling is often more appropriate than benchmarking but it seems to be even more tricky\n')

sqrt	atan2	2
('sqrt', 'faster', 'atan2', 'performance', '9318108', 'with typical libraries on common modern hardware sqrt is faster than atan2\n')
('sqrt', 'better', 'atan2', '', '9325404', 'indeed sqrt is better than atan2 and 1 sqrt is better than sqrt\n')

malloc	memcpy	4
('memcpy', 'less call', 'malloc', '', '18134099', 'this allows you to use the assignment operator instead of memcpy and requires 1 less call to malloc - the one you make\n')
('malloc', 'not slower', 'memcpy', 'performance', '6685743', 'afaik malloc is not slower than memcpy\n')
('memcpy', 'less', 'malloc', '', '18134099', 'this allows you to use the assignment operator instead of memcpy and requires 1 less call to malloc - the one you make\n')
('malloc', 'slower', 'memcpy', 'performance', '6685743', 'afaik malloc is not slower than memcpy\n')

arp	icmp	1
('arp', 'slower', 'icmp', 'performance', '12085301', 'in addition seeing arp being slower than icmp doesn t necessarily mean icmp isn t deprioritized---it might mean bandwidth is insufficient to hit the limiting threshold\n')

while-loop	for-loop	4
('for-loop', 'faster', 'while-loop', 'performance', '4203952', 'and now we know that for-loop is faster than while-loop\n')
('for-loop', 'greater', 'while-loop', '', '24353790', 'also it seems like a for-loop is of greater cost to the compiler than a while-loop\n')
('while-loop', 'faster', 'for-loop', 'performance', '2611604', 'i have also found that a while-loop is faster than a for-loop\n')
('for-loop', 'greater cost', 'while-loop', '', '24353790', 'also it seems like a for-loop is of greater cost to the compiler than a while-loop\n')

versioning	upgrade	34
('upgrade', 'newer', 'versioning', '', '1872552', 'these locations will convert when they go to windows 7 perhaps or because the application they use internally is upgrade and needs the newer browser versioning\n')
('upgrade', 'higher', 'versioning', '', '2984015', 'i am wondering what happens when i release a upgrade that has a higher target sdk versioning then the previous versioning of my app\n')
('upgrade', 'older', 'versioning', '', '25074930', 'windows installer rollback will work as you request if you use 1 a minor upgrade or 2 a properly sequenced major upgrade that uninstalls the older versioning after successfully updating all files\n')
('versioning', 'better', 'upgrade', '', '14940344', 'if you re using older versioning it is better to upgrade and avail benefits of c++11 features as much as possible\n')
('versioning', 'less', 'upgrade', '', '8395720', 'the dbi versioning is less likely to be the source of the trouble but it would still be good to upgrade to the most current versioning\n')
('upgrade', 'sequence much simpler', 'versioning', 'usability', '7859219', 'the upgrade sequence is much simpler i have a hard link in the app that points to the latest versioning of the apk the donwload starts and automatically laucnhes the install\n')
('upgrade', 'lower', 'versioning', '', '994571', 'if i enable this then any setup is ran every time it will be asking for upgrade either it is on lower versioning over higher versioning or higher versioning over lower versioning\n')
('upgrade', 'newer browser', 'versioning', '', '1872552', 'these locations will convert when they go to windows 7 perhaps or because the application they use internally is upgrade and needs the newer browser versioning\n')
('upgrade', 'better last', 'versioning', '', '4513809', 'you can safely upgrade to trunk its better than last versioning anyway\n')
('versioning', 'less', 'upgrade', '', '21703040', 'if kernel versioning is less than 2.6 then we recommend to upgrade it\n')
('upgrade', 'greater then', 'versioning', '', '12462524', 'i am using installshield 2011 and what i want to do is on an upgrade to install all the files that are equal or greater than then versioning that is already installed\n')
('versioning', 'much more', 'upgrade', '', '6544864', 'nevertheless i would recommend sticking to the queryover versioning it s much more intuitive and you avoid magic strings especially that you don t have to upgrade the nh versioning\n')
('versioning', 'better approach', 'upgrade', 'usability', '20304639', 'upgrading a language or service can often have disastrous or unexpected consequences thus sandboxing alternate versioning seems the better approach plus it makes projects immune from os upgrade\n')
('versioning', 'less likely', 'upgrade', '', '8395720', 'the dbi versioning is less likely to be the source of the trouble but it would still be good to upgrade to the most current versioning\n')
('versioning', 'somewhat earlier', 'upgrade', '', '19064464', 'if the code is to be distributed consider compiling that java class with a target jvm versioning that is somewhat earlier than the latest â otherwise some users will be forced to upgrade their jvm to run your software and some of those won t have admin rights to do that.\n')
('versioning', 'definitely more', 'upgrade', '', '8607666', 'if the code doesn t run on php 5.2+ then you can t use a current phpunit versioning which is definitely more of a concern and my first general recommendation is to find any issues an php 5 upgrade might bring\n')
('versioning', 'better idea', 'upgrade', '', '21257793', 'if you think that writing two apps for both versioning is a better idea then should i write app on wp8 first and at the end remove special wp8 features to downgrade it for wp7.5 or maybe i should write wp7.5 app and then add some wp8 features to upgrade it to wp8\n')
('versioning', 'number easier', 'upgrade', 'usability', '142427', 'using compatibility as the central point in the versioning number makes it easier for users especially if te product is a library to judge whether or not they can expect a smoothe and safe upgrade or not\n')
('versioning', 'better', 'upgrade', '', '21257793', 'if you think that writing two apps for both versioning is a better idea then should i write app on wp8 first and at the end remove special wp8 features to downgrade it for wp7.5 or maybe i should write wp7.5 app and then add some wp8 features to upgrade it to wp8\n')
('upgrade', 'higher target', 'versioning', '', '2984015', 'i am wondering what happens when i release a upgrade that has a higher target sdk versioning then the previous versioning of my app\n')
('versioning', 'probably more', 'upgrade', '', '24673291', 'no problem mnt i mentioned possible compatibility between the method tried in 4.25 my solution and 4.00 your versioning but keep in mind the gap in time between these versioning is probably more than two years of upgrade and also a jump between backend databases versioning oracle 10g to oracle 11g r1.\n')
('versioning', 'much more intuitive', 'upgrade', '', '6544864', 'nevertheless i would recommend sticking to the queryover versioning it s much more intuitive and you avoid magic strings especially that you don t have to upgrade the nh versioning\n')
('versioning', 'number bigger', 'upgrade', 'memory', '5514765', 'if the apps versioning number is bigger it s an upgrade and you now need to save that as the last installer versioning\n')
('versioning', 'newer', 'upgrade', '', '1447805', 'running pear -v gives me versioning 1.7.2 when i run pear upgrade pear it says my versioning is newer than the current noe which is 1.9.0 if ran pear upgrade -f pear to force an upgrade it downloads the files and installs successfully but i still have versioning 1.7.2 and cannot install phpunit\n')
('upgrade', 'more', 'versioning', '', '13499762', 'code upgrade require system downtime and if you have a large cluster that cannot run more than one versioning of code at once you ll need to take the entire cluster down at once\n')
('versioning', 'easier', 'upgrade', 'usability', '1214032', 'does anyone know if the upcoming v8 versioning is easier to upgrade or if its easier to upgrade from a certain previous versioning compared to earlier versioning\n')
('upgrade', 'rule older', 'versioning', '', '4591554', 'this way the upgrade rule detects older versioning and shows a custom dialog if it does\n')
('versioning', 'better', 'upgrade', '', '20304639', 'upgrading a language or service can often have disastrous or unexpected consequences thus sandboxing alternate versioning seems the better approach plus it makes projects immune from os upgrade\n')
('versioning', 'higher', 'upgrade', '', '12299636', 'if blackberry device software versioning is higher than os 6 then continue the app otherwise prompt user dialog showing upgrade os first and exit the application\n')
('upgrade', 'further', 'versioning', '', '6078158', 'you do want to upgrade no further than versioning 2.1.6 at the moment as it s the latest one that supports rails 2.3.x\n')
('versioning', 'number always greater', 'upgrade', '', '25162101', 'for example if you start with a table and trunk adds column a and the branch adds column b then you merge trunk to branch - you cannot realistically upgrade to the versioning with both unless the branch versioning number is always greater than the trunk s upgrade script and that doesn t work if you subsequently merge trunk to the branch\n')
('versioning', 'higher', 'upgrade', '', '24226790', 'if you are running that versioning or higher or after you upgrade follow these steps\n')
('versioning', 'higher', 'upgrade', '', '24834951', 'also what happens when common msi c s versioning is higher in product b and b upgrade c on install\n')
('versioning', 'less', 'upgrade', '', '24136959', 'you are using a method to bind click event in your case is live and this has been removed in the latest jquery libraries from 1.9+ onwards so make sure your versioning is less than 1.9 or better to upgrade the library and use the recommended method for it .on to delegate the event event delegation syntax is little different with .on\n')

quicksort	mergesort	55
('quicksort', 'consistently faster', 'mergesort', 'performance', '23501734', 'when comparing my quicksort implementation with std sort on my compiler and my implementation of mergesort i noticed an odd pattern on large data sets when operating on 64 bit integers quicksort is consistently faster than mergesort\n')
('mergesort', 'better time-behavior', 'quicksort', '', '4819756', 'technically mergesort has a better time-behavior î nlogn worst and average cases than quicksort î n 2 worst case î nlogn average case\n')
('quicksort', 'faster', 'mergesort', 'performance', '4819185', 'from what i ve read i was expecting quicksort to be faster than mergesort but on my code it is not so i assume there must be a problem with my quicksort algorithm\n')
('mergesort', 'worse', 'quicksort', '', '7770477', 'this means that while the two underlying sorts it uses mergesort and insertion sort are both worse than quicksort for many kinds of data timsort only uses them when it is advantageous to do so\n')
('quicksort', 'worse', 'mergesort', '', '201171', 'quicksort is worse complexity than mergesort in the worst case.\n')
('quicksort', 'better', 'mergesort', '', '497819', 'previously discussed on so why is quicksort better than mergesort\n')
('mergesort', 'simpler', 'quicksort', 'usability', '10955685', 'parallelizing mergesort is simpler than quicksort in-place\n')
('mergesort', 'better', 'quicksort', '', '4819756', 'technically mergesort has a better time-behavior î nlogn worst and average cases than quicksort î n 2 worst case î nlogn average case\n')
('mergesort', 'more', 'quicksort', '', '14807074', 'mergesort is more natural to implement for linked lists but you can do quicksort very nicely\n')
('mergesort', 'worse', 'quicksort', '', '487454', 'given that it is possible to vastly reduce the likelihood of the worst case of quicksort s time complexity via random selection of the pivot for example i think one could argue that mergesort is worse in all but the pathological case of quicksort\n')
('quicksort', 'generally faster', 'mergesort', 'performance', '5070199', 'quicksort generally runs faster than mergesort but under some circumstances it can degrade to quadratic running time\n')
('quicksort', 'better', 'mergesort', '', '1527161', 'why is quicksort better than mergesort\n')
('mergesort', 'better', 'quicksort', '', '7372734', 'that s hard to say.the worst of mergesort is n log2n -n+1 which is accurate if n equals 2 k i have already proved this .and for any n it s between n lg n - n + 1 and n lg n + n + o lg n .but for quicksort its best is nlog2n also n equals 2 k .if you divide mergesort by quicksort it equals one when n is infinite.so it s as if the worst case of mergesort is better than the best case of quicksort why do we use quicksort\n')
('quicksort', 'worse complexity', 'mergesort', 'usability', '201171', 'quicksort is worse complexity than mergesort in the worst case.\n')
('quicksort', 'faster', 'mergesort', 'performance', '4292700', 'quicksort is implemented well it is typically 2-3 times faster than mergesort or\n')
('quicksort', 'faster', 'mergesort', 'performance', '5070199', 'quicksort generally runs faster than mergesort but under some circumstances it can degrade to quadratic running time\n')
('mergesort', 'provably better', 'quicksort', '', '9023456', 'for instance quicksort can outperform mergesort although mergesort is provably better than quicksort in the worst case\n')
('quicksort', 'faster', 'mergesort', 'performance', '16308408', 'normally quicksort is faster than mergesort which is faster than heapsort\n')
('quicksort', 'more optimal', 'mergesort', '', '24173092', 'also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n')
('mergesort', 'better', 'quicksort', '', '9023456', 'for instance quicksort can outperform mergesort although mergesort is provably better than quicksort in the worst case\n')
('quicksort', 'usually faster', 'mergesort', 'performance', '70440', 'quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster\n')
('quicksort', 'also more', 'mergesort', '', '680613', 'quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n')
('quicksort', 'better', 'mergesort', '', '19853740', 'is quicksort always better than mergesort\n')
('quicksort', 'better', 'mergesort', '', '77945', 'quicksort is not better than mergesort\n')
('quicksort', 'faster', 'mergesort', 'performance', '90477', 'as many people have noted the average case performance for quicksort is faster than mergesort\n')
('quicksort', 'also more complicated', 'mergesort', 'usability', '680613', 'quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n')
('mergesort', 'more natural', 'quicksort', '', '14807074', 'mergesort is more natural to implement for linked lists but you can do quicksort very nicely\n')
('quicksort', 'faster', 'mergesort', 'performance', '8535540', 'i have read that quicksort is much faster than mergesort in practise and the reason for this is the hidden constant\n')
('quicksort', 'not better', 'mergesort', '', '70627', 'quicksort is not better it is well suited for a different kind of application than mergesort\n')
('quicksort', 'better', 'mergesort', '', '13096603', 'i ve looked at the question at why is quicksort better than mergesort\n')
('quicksort', 'slower', 'mergesort', 'performance', '23501734', 'however on smaller int sizes quicksort gets slower and mergesort gets faster\n')
('quicksort', 'generally more', 'mergesort', '', '24173092', 'also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n')
('quicksort', 'not better', 'mergesort', '', '77945', 'quicksort is not better than mergesort\n')
('quicksort', 'faster', 'mergesort', 'performance', '961662', 'in most cases quicksort will run faster than mergesort even though the worst-case execution time is longer\n')
('quicksort', 'faster', 'mergesort', 'performance', '70440', 'quicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go faster\n')
('quicksort', 'generally more optimal', 'mergesort', '', '24173092', 'also note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitives\n')
('quicksort', 'more comparisons', 'mergesort', '', '14349085', 'interestingly quicksort performs more comparisons on average than mergesort - 1.44 n lg n expected for quicksort versus n lg n for mergesort\n')
('mergesort', 'more efficient', 'quicksort', 'performance', '13096603', 'purely in terms of the number of comparisons performed is mergesort always more efficient than quicksort\n')
('quicksort', 'algorithm faster', 'mergesort', 'performance', '20811630', 'the quicksort algorithm is faster than mergesort which is what sorted will get you when called on a sequence of objects via java.util.arrays.sort\n')
('quicksort', 'more complicated', 'mergesort', 'usability', '680613', 'quicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance loss\n')
('mergesort', 'more space', 'quicksort', 'memory', '5784610', 'mergesort may use more space than quicksort i m not entirely sure and merge may be better for linkedlists\n')
('quicksort', 'quicker', 'mergesort', '', '497794', 'i had been taught that quicksort is almost always quicker than mergesort and i understand that there is some debate on this topic but i at least expected it to be closer than this\n')
('quicksort', 'faster', 'mergesort', 'performance', '23501734', 'when comparing my quicksort implementation with std sort on my compiler and my implementation of mergesort i noticed an odd pattern on large data sets when operating on 64 bit integers quicksort is consistently faster than mergesort\n')
('quicksort', 'more', 'mergesort', '', '14349085', 'interestingly quicksort performs more comparisons on average than mergesort - 1.44 n lg n expected for quicksort versus n lg n for mergesort\n')
('quicksort', 'better', 'mergesort', '', '16943949', 'an interesting answer about this can be found at why is quicksort better than mergesort\n')
('quicksort', 'more', 'mergesort', '', '18427291', 'quicksort is more sensitive to input sortedness in a positive way than mergesort\n')
('quicksort', 'better', 'mergesort', '', '497967', 'the biggest difference that can be produced between the two of them will always be to quicksort s detriment and it involves lists that are already largely sorted or contain a large number of ties when quicksort does better than mergesort the difference will not be nearly so great\n')
('mergesort', 'slightly slower', 'quicksort', 'performance', '5608850', 'mergesort is slightly slower than quicksort but it does not have quicksort s susceptibility to pathological cases\n')
('quicksort', 'faster', 'mergesort', 'performance', '7818843', 'you can also see that for smaller collections quicksort is faster but then mergesort takes the lead but all of this is case specific so take your time to study all 4 algorithms\n')
('quicksort', 'faster', 'mergesort', 'performance', '13096603', 'depending on where i look people say quicksort is faster than mergesort due to its locality of reference cache hits etc\n')
('quicksort', 'much faster', 'mergesort', 'performance', '8535540', 'i have read that quicksort is much faster than mergesort in practise and the reason for this is the hidden constant\n')
('quicksort', 'more sensitive', 'mergesort', '', '18427291', 'quicksort is more sensitive to input sortedness in a positive way than mergesort\n')
('quicksort', 'generally faster', 'mergesort', 'performance', '70440', 'it s because that quicksort is generally faster that people use it instead of mergesort\n')
('mergesort', 'slower', 'quicksort', 'performance', '5608850', 'mergesort is slightly slower than quicksort but it does not have quicksort s susceptibility to pathological cases\n')
('quicksort', 'slower', 'mergesort', 'performance', '24290704', 'i have been testing the practicality of openmp gnu parallel sort algorithms in the c++ standard library and have found the parallel quicksort algorithm to be significantly slower than the mergesort algorithm\n')

inline	inlining	9
('inline', 'more related', 'inlining', '', '5431498', 'templates will be inline in the standard meaning of inline which is more related to the one definition rule than to actual code inlining\n')
('inline', 'better manually', 'inlining', '', '22568041', 'if your compiler can do this then writing functions in a way that the compiler is able to inline is better than manually inlining the calls yourself\n')
('inline', 'more', 'inlining', '', '5431498', 'templates will be inline in the standard meaning of inline which is more related to the one definition rule than to actual code inlining\n')
('inline', 'more', 'inlining', '', '4445686', 'the keyword inline is more about telling the compiler that the symbol will be present in more than one object file without violating the one definition rule than about actual inlining which the compiler can decide to do or not to do\n')
('inline', 'bigger', 'inlining', 'memory', '133271', 'if a function is static thus not exported anyway and only called once within your code and you never use a pointer to the function chances are good that gcc will decide to inline it automatically as it will have no negative impact the binary won t get bigger by inlining it only once\n')
('inline', 'keyword more now', 'inlining', '', '12414229', 'generally speaking the inline keyword is used more now to allow you to violate the one definition rule when you define a function in a header than to give the compiler a hint about inlining\n')
('inline', 'keyword less', 'inlining', '', '17664046', 'in reality the inline keyword has less to do with inlining code and more to do with allowing legal violation of the one definition rule\n')
('inline', 'keyword more', 'inlining', '', '12414229', 'generally speaking the inline keyword is used more now to allow you to violate the one definition rule when you define a function in a header than to give the compiler a hint about inlining\n')
('inline', 'better', 'inlining', '', '22568041', 'if your compiler can do this then writing functions in a way that the compiler is able to inline is better than manually inlining the calls yourself\n')

read.table	fread	2
('read.table', 'more time', 'fread', 'performance', '20940609', 'interestingly for 1 million rows per file the optimised version of read.csv and read.table take 422 and 430 more time than fread whilst without optimisation this leaps to around 1500 and 1005 longer\n')
('fread', 'faster', 'read.table', 'performance', '24966794', 'fread ... is extremely fast 10 - 100 times faster than read.table ... or read.csv ... for large datasets\n')

rdiscount	bluecloth	1
('rdiscount', 'more reliable', 'bluecloth', 'reliability', '277564', 'rdiscount seems to be much faster and more reliable than bluecloth\n')

swt	swing	19
('swt', 'more', 'swing', '', '2281068', 'swt has a more platform-specific look about it but java ships with swing built-in there s no messing about with external libraries as with swt although the use of eclipse may make that much easier i still develop quite a bit of my stuff from the command line unfortunately\n')
('swt', 'more simple', 'swing', '', '269117', 'swt is more simple to use than swing especially if this is your first ui\n')
('swt', 'more platform-specific', 'swing', '', '2281068', 'swt has a more platform-specific look about it but java ships with swing built-in there s no messing about with external libraries as with swt although the use of eclipse may make that much easier i still develop quite a bit of my stuff from the command line unfortunately\n')
('swing', 'simply easier', 'swt', 'usability', '5329644', 'so in my view using swing is simply easier unless you have more experience in swt\n')
('swing', 'weaker', 'swt', '', '15597946', 'swing is the weaker of the gui technologies relating to accessibility in java compared to swt at any rate\n')
('swt', 'community smaller', 'swing', 'memory', '5198877', 'swt community is smaller and it doesn t provide that many tools as swing does\n')
('swt', 'simpler', 'swing', 'usability', '3186430', 'give swt a go the api is a lot simpler than swing\n')
('swt', 'much harder', 'swing', '', '4508736', 'fixing bugs in swt is much harder than in swing most classes in swt are final or contain hostile checks in the constructor to make sure no one extends them the package is signed so you can t simply replace classes and so far i tried several times to compile swt from sources - and failed\n')
('swing', 'easier', 'swt', 'usability', '9333610', 'in my opinion swing is easier to learn and to use but the results of swt are often nicer - you can often feel that a swing application behaves not completely right\n')
('swt', 'actually newer', 'swing', '', '16695135', 'also swt is actually newer and more actively maintained than swing\n')
('swing', 'better', 'swt', '', '20930869', 'in java if you want a graphic user interface you can use swt or swing and swing is better than swt\n')
('swt', 'faster', 'swing', 'performance', '1298464', 'is swt faster than swing\n')
('swt', 'more', 'swing', '', '269117', 'swt is more simple to use than swing especially if this is your first ui\n')
('swt', 'more familiar', 'swing', '', '8136079', 'i m not too eager for using swt though since i m more familiar with swing\n')
('swt', 'faster', 'swing', 'performance', '8700142', 'swt is claimed to be faster than swing although in modern versions swing is also fast enough\n')
('swt', 'simpler', 'swing', 'usability', '9085526', 'even though i liked many design aspects of swt and it is simpler than swing imo swing is the one to learn because imo it has far far better documentation examples etc\n')
('swt', 'harder', 'swing', '', '4508736', 'fixing bugs in swt is much harder than in swing most classes in swt are final or contain hostile checks in the constructor to make sure no one extends them the package is signed so you can t simply replace classes and so far i tried several times to compile swt from sources - and failed\n')
('swt', 'usually easier', 'swing', 'usability', '1037130', 'it can be hard to get the layuots exact the way you want in swt it s usually easier in swing\n')
('swt', 'uglier api', 'swing', '', '6819467', 'i find swt to be an uglier api than swing in general though but not really a deal breaker\n')

expressionengine	wordpress	2
('expressionengine', 'better choice', 'wordpress', '', '10113369', 'but in my opinion for most sites expressionengine is a better choice than wordpress\n')
('expressionengine', 'better', 'wordpress', '', '10113369', 'but in my opinion for most sites expressionengine is a better choice than wordpress\n')

wideimage	phpthumb	2
('wideimage', 'more', 'phpthumb', '', '65079', 'wideimage is the more modern php5 approach while phpthumb has much more features\n')
('wideimage', 'more modern', 'phpthumb', '', '65079', 'wideimage is the more modern php5 approach while phpthumb has much more features\n')

stringr	stringi	2
('stringr', 'more', 'stringi', '', '5992152', 'stringr provides more human-readable wrappers around the base r functions though as of dec 2014 the development version has a branch built on top of stringi mentioned below\n')
('stringr', 'more human-readable', 'stringi', '', '5992152', 'stringr provides more human-readable wrappers around the base r functions though as of dec 2014 the development version has a branch built on top of stringi mentioned below\n')

stderr	stdout	1
('stderr', 'better', 'stdout', '', '3113442', 'stderr is better than stdout for errors for a couple of reasons\n')

sqldf	plyr	2
('sqldf', '3x slower', 'plyr', 'performance', '4329527', 'in the first example sqldf is 3x slower than data.table and in the second its 200x faster than plyr and 100 times faster than data.table\n')
('sqldf', 'faster', 'plyr', 'performance', '4329527', 'in the first example sqldf is 3x slower than data.table and in the second its 200x faster than plyr and 100 times faster than data.table\n')

qfile	qtextstream	1
('qfile', 'more conveniently', 'qtextstream', '', '10093960', 'a qfile may be used by itself or more conveniently with a qtextstream or qdatastream\n')

chameleon	jinja2	2
('chameleon', 'faster', 'jinja2', 'performance', '5324691', 'template engines are rarely the cause of performance problems even if chameleon is slightly faster than jinja2 i doubt the effort of learning a new template language etc\n')
('chameleon', 'slightly faster', 'jinja2', 'performance', '5324691', 'template engines are rarely the cause of performance problems even if chameleon is slightly faster than jinja2 i doubt the effort of learning a new template language etc\n')

zen-cart	magento	1
('zen-cart', 'simpler', 'magento', 'usability', '2225598', 'alternatively zen-cart looks simpler than magento but without some of the flexibility\n')

orika	dozer	5
('orika', 'way faster', 'dozer', 'performance', '23957375', 'orika is way faster than dozer and quite close to manual mapping\n')
('orika', 'faster', 'dozer', 'performance', '12161589', 'wel i have used both orika and dozer i can say orika is at least 10 times faster than dozer in my project after the replacement\n')
('orika', 'better', 'dozer', '', '10046175', 'performance will depends on your application use cases basically orika perform better than dozer or other mapping reflection based frameworks because it use bytecode generation behind the scenes\n')
('orika', 'faster', 'dozer', 'performance', '23957375', 'orika is way faster than dozer and quite close to manual mapping\n')
('orika', 'slower', 'dozer', 'performance', '22939629', 'i tested orika and it was a lot faster but was slower than dozer with small collections\n')

tlistview	tstringgrid	1
('tlistview', 'more limited', 'tstringgrid', '', '8731943', 'i have just spent a lot of time working with tlistview in view style mode vsreport and i find it is even more limited than tstringgrid for example it provides no in-place edit support\n')

lodash	underscore.js	8
('lodash', 'faster', 'underscore.js', 'performance', '18300039', 'i am stunned right now seeing a lodash performing 100-150 faster than underscore.js in even simple native functions such as array.every in chrome\n')
('lodash', 'faster', 'underscore.js', 'performance', '20321282', 'the solution from charliefl is approximately 100x faster than underscore.js depending on browser in this case and lodash being up to 2x faster than underscore.js\n')
('lodash', 'faster implementation', 'underscore.js', 'performance', '17156415', 'lodash is another faster implementation of underscore.js that will provide a lot of utility methods for working wit arrays objects functions etc\n')
('lodash', 'more frequently', 'underscore.js', '', '13898916', 'because lodash is updated more frequently than underscore.js a lodash underscore.js build is provided to ensure compatibility with the latest stable version of underscore.js\n')
('lodash', 'faster', 'underscore.js', 'performance', '21148491', 'if i remember correctly lodash argued they were faster than underscore.js because the use non-native functions for key operations\n')
('lodash', 'more', 'underscore.js', '', '13898916', 'because lodash is updated more frequently than underscore.js a lodash underscore.js build is provided to ensure compatibility with the latest stable version of underscore.js\n')
('lodash', 'more convoluted', 'underscore.js', '', '23922041', 'basically collections are things that implement some kind of iterable interface and they internally use the same iteration method though lodash source is a bit more convoluted than underscore.js\n')
('lodash', 'faster', 'underscore.js', 'performance', '17156415', 'lodash is another faster implementation of underscore.js that will provide a lot of utility methods for working wit arrays objects functions etc\n')

colorbox	thickbox	1
('colorbox', 'better', 'thickbox', '', '6462838', 'colorbox is implemented as a jquery plugin which is a bit different and better than thickbox s sort-of-self-contained widget model\n')

haskell	ocaml	19
('haskell', 'ffi more powerful', 'ocaml', 'usability', '2269313', 'secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n')
('ocaml', 'more powerful', 'haskell', 'usability', '2290354', 'keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n')
('ocaml', 'lower', 'haskell', '', '2290354', 'as others have pointed out ocaml s learning curve will be lower than haskell s\n')
('haskell', 'better', 'ocaml', '', '996052', 'i would just use ocaml but haskell s syntax is so much better than ocaml s and haskell is pure and has cool features such as type classes\n')
('haskell', 'fewer', 'ocaml', '', '827594', 'haskell has fewer industrial users than ocaml and although it does have multicore support it is still being developed in a very unproductive direction\n')
('haskell', 'more momentum', 'ocaml', '', '1774364', 'haskell has more momentum these days but there are plenty of good parsing libraries for ocaml as well including the peg parser generator aurochs menhir and the glr parser generator dypgen\n')
('haskell', 'more', 'ocaml', '', '2290354', 'keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n')
('ocaml', 'more', 'haskell', '', '2290354', 'keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n')
('ocaml', 'faster', 'haskell', 'performance', '6716315', 'the reason i wanted to investigate this was because both c and ocaml were significantly faster than haskell for this program\n')
('haskell', 'fewer industrial', 'ocaml', '', '827594', 'haskell has fewer industrial users than ocaml and although it does have multicore support it is still being developed in a very unproductive direction\n')
('haskell', 'higher', 'ocaml', '', '1776455', 'haskell has higher level bindings to llvm than ocaml the haskell ones provide some interesting type safety guarantees and haskell has by far more libraries to use 1700 packages on making it easier to glue together components\n')
('haskell', 'higher level', 'ocaml', '', '1776455', 'haskell has higher level bindings to llvm than ocaml the haskell ones provide some interesting type safety guarantees and haskell has by far more libraries to use 1700 packages on making it easier to glue together components\n')
('haskell', 'ffi more', 'ocaml', '', '2269313', 'secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n')
('haskell', 'less code', 'ocaml', '', '2269313', 'secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor\n')
('ocaml', 'closer', 'haskell', '', '12966482', 'ocaml is closer to c++ because of it s imperative and oo features but i recommend you learn haskell as it is more functional more mindbending and has more resources\n')
('haskell', 'zipwith friendlier', 'ocaml', '', '23204005', 'the haskell zipwith is friendlier than the ocaml list.map2 which requires the lists to be the same length\n')
('haskell', 'more', 'ocaml', '', '1774364', 'haskell has more momentum these days but there are plenty of good parsing libraries for ocaml as well including the peg parser generator aurochs menhir and the glr parser generator dypgen\n')
('ocaml', 'more intuitive', 'haskell', '', '2269993', 'you will also likely find the performance characteristics of your ocaml code more intuitive than haskell because of haskell s lazy evaluation\n')
('haskell', 'more powerful', 'ocaml', 'usability', '2290354', 'keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell\n')

jersey-client	httpclient	1
('jersey-client', 'easier', 'httpclient', 'usability', '5704086', 'you can also use jersey-client it is gae compatible and much easier than httpclient\n')

mdpi	hdpi	8
('mdpi', 'smaller', 'hdpi', 'memory', '18303913', 'images in these different folders should have different physical pixel sizes mdpi has smaller images than hdpi but the images pixel densities aren t used\n')
('hdpi', 'larger', 'mdpi', 'memory', '21759315', 'for example mdpi is basically 72dpi as your computer monitor hdpi resources should be around 1.5 times larger than mdpi resources and so forth\n')
('hdpi', 'larger', 'mdpi', 'memory', '24055780', 'and you know your image at hdpi folder so its 1.5 larger than the mdpi\n')
('hdpi', 'bigger', 'mdpi', 'memory', '7454181', 'ideally the hdpi version of your button should be 1.5 times bigger than the mdpi baseline version\n')
('mdpi', 'smaller images', 'hdpi', 'memory', '18303913', 'images in these different folders should have different physical pixel sizes mdpi has smaller images than hdpi but the images pixel densities aren t used\n')
('mdpi', 'less', 'hdpi', '', '4292392', 'first of all if you anyhow provide a hdpi graphic adding an mdpi and ldpi graphic which both are less than the hdpi graphic in size there is approximately 3 4 6 scaling ratio will increase the size but far from triple it more close to double\n')
('hdpi', 'smaller', 'mdpi', 'memory', '7313024', 'when you put images into hdpi folder their appearance is smaller than from mdpi and ldpi\n')
('hdpi', 'larger', 'mdpi', 'memory', '25173899', 'example if using dp unit hdpi device will have 1.5 240 160 times larger than mdpi\n')

