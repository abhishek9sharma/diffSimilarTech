resources, system, process, ---------------------------------------------------

resources,process,io,sub,system
the operating system will give your program all the resources it needs the reason your process is not consuming all the cpu is probably because it s waiting for the io sub system more than the processors

single,effective,system,gpu
as soon as you go beyond single processors it s much more effective to add another cpu or two to system than to struggle with gpu calculations

small,multi-thread,time,concurrency,resources,threads
the difference you notice is very small but i think the multi-thread processors is spending more time because the concurrency for the cpu resources between the threads

computer, logical, core, ---------------------------------------------------

multicore,computer,logical,core,multiple
multicore refers to a computer or processors that has more than one logical cpu core and that can physically execute multiple instructions at the same time

refers,computer,logical,core,multiple
multicore refers to a computer or processors that has more than one logical cpu core and that can execute multiple instructions at the same time.

data, ram, cache, ---------------------------------------------------

cache,data,transfer,time,closer,ram
the point of this cache is to store data that the cpu is using quite regularly to speed up transfer time since the cpu cache is physically closer to the processors then ram is

byte,buses,efficient,data,memory,ram
having data structures that start on 4 byte word alignment on cpus with 4 byte buses and processors is far more efficient when moving data around memory and between ram and the cpu

cores, contention, tasks, ---------------------------------------------------

contention,tasks,cores,slowdowns
given that you re seeing extra tasks causing a slowdown you likely either have resource contention via locking or your tasks are cpu bound and having more tasks than processors cores will cause slowdowns

different,cores,time
if that processors has more than one cpu can the interrupts run on different cpu cores at the same time

other---------------------------------------------------

developer,costs,difficult,user-space,transistor,count
not only is it more expensive in terms of developer costs designing a cpu is vastly more difficult than writing user-space assembly code but it would increase the transistor count of the processors

quad,core,threadpoolexecutor,callables
i have a quad core processors and the threadpoolexecutor is set to 4 core threads but when i submit my callables hundred or so to the threadpoolexecutor java never uses more than 25 cpu

addition,embedded,architecture,cheaper,mainstream,product,life
one addition for embedded cpu architecture they have to be usually cheaper than mainstream processors so that they do not raise the product s life considerably

cannot,use,physical,core--
to the operating system a single thread which i assume is what you mean by java process essentially cannot use cpu on more than one processors which may or may not mean a physical core-- see below simultaneously

system,monitor,program,terminal,loop,maximum,usage,longer,time,average,higher
i find using system monitor that consistently 100 of one cpu is used when i run the program directly in terminal whereas when i run it in bash in a loop a maximum of 60 of cpu usage is recorded and seems to be linked to the longer completion time although the average cpu usage is higher over the 4 processors

loadbalancing,physical,task,scheduler,second
passive loadbalancing if a physical cpu is running more than one task the scheduler will attempt to run any new tasks on a second physical processors

method,faster,branch,prediction,command,smarter,new
so whether or not method 5 or 6 is faster depends on the cpu i can only surmise this is because the branch prediction in the command processors of the cpu is smarter on the new processors but i m not really sure

threads,different,cores,numa,systems,machines,sockets,separate
binding threads to cores prevents the operating system from moving around threads between different processors cores which speeds up the executing especially on numa systems machines with more than one cpu sockets and separate memory controller in each socket where data locality is very important

single,core,size,smaller,word,32bit,int
in general when used on single processors single core machine this should be sufficient assuming int size same or smaller than cpu word like 32bit int on 32bit cpu

thread,fine,free,rich,limitation,pool
if the processors is loaded enough then my thread works fine but when the processors is more or less free i rich quickly my cpu limitation 50 and finally the pool terminates and needs to be recycled

slower,sparc,modern,intel
the cpu is indeed slower on sparc 1.2ghz and as answered by one of the sun s engineers t2 is usualy 3 times slower for single-threaded application than modern intel processors

task,multi,performance,calculations
if a task is cpu bound calcuating something making it multi threaded will only improve performance if you have more than one processors to run the calculations

longer,window,better
some fancy compilers understand the un interrelatedness of instructions to a limited extent and will automatically interleave instruction flows probably over a longer window than the cpu sees to better utilise the processors

notice,cache,important,today
notice also the the cpu cache is much more important than processors registers today

current,chips,able,couple
many current processors chips incorporate more than one cpu and a cpu may itself be able to interleave a couple of threads

