98506
versioning	upgrade
it shouldn t be a big event to upgrade a minor versioning and i ve never experienced problems

98506
versioning	upgrade
that said the infamous java 7 problems are somewhat scary and even tough it was a major versioning upgrade those specific problems appeared in fact in java 6 u20 and were maybe fixed in u25

98506
versioning	upgrade
the fact is no one guarantees that an upgrade versioning will work at all

98530
filtering	grouping
you tried to reproduce the problem and discovered that you ip was filtering because there are not any valid user grouping which include you your team

98583
pull	push
a set of minimum commands you ll need to learn are clone pull push add commit log status diff branch stash apply reset format-patch branch

98583
pull	push
a good practice is to always pull before you push

98605
wordpress	joomla
custom cms only gets paid more if it delivers something a current package wordpress joomla etc doesn t

98697
octal	hex	octal	binary	hex	binary
like hex octal numbers are easy to convert from binary

98700
octal	hex
yes i could use hex but octal is what i use

98721
put	get
get copies of their notes instructions documentation cheat sheets on the wall put a recorder behind the coffee machine kidding

98726
google-chrome	safari	firefox4	safari
i currently support ie7 ie8 ie9 firefox4 5 safari 5 and google-chrome

98731
put	get
as a result some people went berserk and put final literally everywhere to try and get their code to go faster

98733
x86	64bit
as others have already mentioned in the past systems used to have a 12 24 36-bit word which is more easily represented in octal than hexadecimal but currently the x86 and i64 architectures use a 16 32 64bit word which is more easily represented in hexadecimal and downright ugly in octal

98733
octal	decimal
this pdf explains how to go from honeywell octal fractions to decimal

98733
octal	decimal
in 1971 octal numbers were proposed to replace the decimal system really

98733
octal	decimal
clearly this expression is intended as a decimal literal not an octal

98757
put	get
it is advisable to do loads of up-front design put together the overall shape of the app and get the crucial modules working in one big push which might be sprintable in terms of keeping track of work but not so much in terms of feedback and improving design and so on before maybe going more agile from then on or.

98765
agile	sprint
the idea of using agile is that your features between sprint is not set in stone

98765
agile	sprint
in a normal agile project the customer has input at every sprint and may request a new feature be added as a higher priority than a feature requested 3 sprint ago

98851
rss	feed
lets say we have a php website which needs to allow a login function and a view rss feed function

98874
public	protected
the protected access specifier is a different story - don t think of this as simply not quite public or a lot like private

98883
public	protected
for instance it s pretty common practice to store a value in a private variable expose it using a protected or public property of the same time and in the getter check for null and do any initialization that s necessary lazy loading

98920
extjs	mootools
use a javascript library such as jquery prototype mootools dojo or extjs

98933
put	get
at the very least you ll get a feel for how things are put together

98941
short	base
this might sound short and not thought out but it s what one of my co-workers told me to do when i was given a week to poke around in my code base before i really got started

98990
min	max
in other words how do i determine the min and max values of gapend so that the next curve is safe

99043
srp	principles
i read about srp single responsibility principles and what i understood was kind of a subjective analysis or break down of responsibilities that can vary from an oo designer to another oo designer

99058
getter	setter
...as this forces us to create getter and setter which in practice are often totally extraneous

99058
getter	setter
in a theoretical language couldn t we have an interface that a specified a zero-args method as getter but accepted a readable member as its implementor and b specified a single-arg method as a setter but accepted a writable member field as its implementor given a language that supported specifying direct access control on variables when they are declared

99060
getter	setter
therefore if you want anything with a field in the interface contract you need to do it as a getter and a setter method

99060
getter	setter
also see this question when are getter and setter justified

99067
public	protected
and also with access modifiers like public protected internal protected-internal and virtual

99079
getter	setter
important these are not fields the int bar in the foo class is an auto property and the compiler is doing exactly what i just described above automatically generating getter and setter as well as the backing member field

99082
accessor	properties
objective-c properties provide this sort of functionality with its synthesized properties accessor

99082
accessor	properties	getter	setter
an objective-c properties is essentially just a promise that a class provides accessor typically of the form foo for the getter and setfoo for the setter

99082
accessor	properties
the properties declaration specifies certain attributes of the accessor related to memory management and threading behaviors

99082
accessor	ivar	accessor	properties	getter	setter
there s also a synthesize directive which tells the compiler to generate accessor and even the corresponding instance variable so you don t have to bother writing getter and setter or declaring an ivar for each properties

99082
accessor	properties
there s also some syntactic sugar that makes properties access look like accessing the fields of a struct but actually results in calling the properties accessor

99086
getter	setter
leaving evaluation and assignment separate from getter and setter gives the developer some control over how they re handled in a given situation

99086
getter	setter
i think to some degree there s still some stigma associated with doing direct assignment to public members even if the language does allow the class to manipulate them and people still think in terms of getter and setter being better

99092
getter	setter
...as this forces us to create getter and setter which in practice are often totally extraneous

99092
getter	setter
c# and objective-c both support properties so there is no need for getter and setter in those languages

99128
boost	stl
so i m planning to write a c++ library and i want it to be cross-platform and as this library won t deal with ui and i want it to have as little dependencies as possible i won t be using qt actually qt won t really help me to achieve what i want all i plan on using is stl and boost

99174
inherited	properties
side-note i know that composition it preferred over inherited and composition can usually only be achieved by using interfaces but using interfaces just to tag a class with some properties is just as bad

99186
wordpress	joomla
a lot of what small businesses need can be served with a content management system cms such as joomla drupal or wordpress with some customization written in php html js and css

99226
bottle	cherrypy
additionally there are other microframeworks like cherrypy and bottle that could do what you want and are used more often

99404
put	get
put them in a room by themselves and tell them to get on with it

99416
pascal	delphi
pascal embarcadero delphi formerly codegear delphi and borland

99473
profiling	benchmarking
there s no point in optimizing before you profiling benchmarking your code and see which are the 5 that are run 95 of the time

99494
subtract	add
these kinds of metrics are important because one thing they are looking at is the cost of keeping you around and wondering if the benefit of doing so is going to add to or subtract from the bottom line

99498
post	get
question for a public facing web api send http get post requests get json xml data back how should parameters be handled that are either misspelled or are extra

99525
getter	setter
for simple property getter setter

99564
puts	gets
what about if you can literally point to nothing at all because while you re a passionate programmer who as the classic joel-ism puts it is smart and gets things done all those things are invisible

99595
public	protected
all parts of the public interface including public protected methods are tightly bound to the implementation

99618
typedef	using-declaration
it is a class name declaration a typedef declaration a using-declaration or a using-directive

99752
equals	tostring
for example how would equals hashcode and tostring work

99754
agile	sprint
there s a nasty trend towards agile machismo in shortening sprint

99764
equals	tostring
good point about equals hashcode and tostring my guess is that either they would have the compiler default in the implementation or else everyone s tools would somewhat defeating the purist motivations

99791
win64	windows
delphi xe2 will remain a windows only tool but it comes with a cross compiler good for win32 win64 mac osx ios and in the near near future android and linux

99847
tabs	tabpanel
later on you will need to make custom events you will also need to make dynamic gui features adding tabs to a tabpanel for example and then you can learn more about controls and who knows

99890
internationalization	localization
if you care a whit about localization or internationalization force your code to run under the turkish locale as soon as reasonably possible

100086
agile	sprint
and depending on the cycle length you can be agile weekly monthly sprint or iterative multi-month cycles

100227
int	boolean
many frameworks have their own int and boolean types along with more complicated data-types

100291
put	get
if you are going to use multiple gui frameworks if you are targeting multiple platforms not all supported or if you are using multiple third-party libraries with incompatible types things get more complicated and you ll have to put some thought into whichever solution has the lowest total impact for your particular project

100364
put	get
on the other hand if you have time to study and learn and are willing to put up with the ramifications of your choice a dearth of tools harder to find co-workers who get lisp etc go with lisp

100373
hash	salt
our implementation to logon was a user id and password hash salt stored in the database

100407
pascal	delphi
for the ios build delphi xe2 will be leveraging the arm port of free pascal

100452
ironruby	ironpython
the facts ironruby and ironpython both use the dlr in fact most of

100461
serializable	deserialization
serializable deserialization is one of the classic examples

100516
gridview	objectdatasource
it is a tremendous ide but if you drag a dropdownlist and bind a gridview to a objectdatasource and use a button control to make a dropdownlist based search then most of the work is done by the ide and you re not really programming

100539
terracotta	jcs
there are several good in-memory caches out there jcs terracotta ehcache and many more

100555
jboss	glassfish
when you are developing web applications with java especially enterprise web applications you ll probably use java ee so you ll have to use a container for it jboss websphere glassfish etc.

100555
tapestry	wicket
i d rather use wicket or tapestry which will save you a lot of headaches especially if you ll have the need for custom user controls or rich clientside scripts

100559
jboss	glassfish
there are a bunhc of free open source application servers that will run the jee6 code jboss glassfish tomcat and more

100559
tapestry	wicket	jsf	wicket	jsf	tapestry
hopefully you can keep the web layer simple based on ajax class as opposed to any of the well meaning but flawed java technologies jsp jsf wicket tapestry etc

100569
for-loop	loops
personally i d consider a loops trivial if the test condition 2nd part is a simple comparison of a value that changes only due to the counting expression 3rd part of for-loop

100617
postgresql	mysql	jboss	weblogic
even in large business that use java it is unusual to find mysql or postgresql and websphere and weblogic are strongly preferred over jboss or tomcat

100675
put	get
this is a fairly rough example as graphics engines generally don t get instantiated as an object but this gives you an example of how it gets put to use

100707
verilog	vhdl	x86	mips
it could be arm or mips or x86 or a microcontroller or a dsp or even lower than that via verilog vhdl

100732
client-side	server-side
i d highly recommend ajax in action manning which--although not expressly about mvc--does an excellent job of laying out several examples of mvc in a couple different server-side situations as well as in the client-side javascript

100770
toolbar	tabs
right click on the toolbar area and uncheck the toolbar put all the side and bottom panels on autohide or just have one side panel and setup tabs by dragging windows into the panel you want to use

100878
rss	feed
another server may hold rss feed

100914
client-side	server-side
however now client asks for code improvement general code improvement including server-side not mine which was purely jquery and client-side and says that these requirements are obvious duties of developers

100982
stateless	stateful
and by keeping the framework in tune with how the www actually works rather than trying to cram a square peg into a round hole and force a stateful model onto a stateless protocol like classic asp.net did it drops all the horrible and leaky abstractions that asp.net had

101185
decimal	ieee
try to express 1 3 in ieee floating point or in decimal

101185
hex	binary
store user-entered values in decimal because they almost certainly entered it in a decimal representation - very few users will use binary or hex

101246
mef	prism
even now when i m using mef prism - there still going to be some core dependencies like

101287
swt	swing
by definition you must learn java the language and and some javase the libraries - though you could skip things like swing and swt which could be included in javase but aren t necessary for javaee to work in javaee because it doesn t make any sense to learn javaee and not know java and javase

101337
stateless	stateful
the books and documentation on the mvc just heap on using the stateful and stateless terms

101337
stateless	stateful
am i missing some fundamental knowledge as i can t understand what is stateful and why is stateful and same goes for stateless

101339
stateless	stateful
in my simple opinion the difference between asp.net stateful and asp.net-mvc stateless can be isolated to the fact that the first provides server-side controls and the other do not

101339
stateless	stateful
in summary the server-side controls are what makes them different in as far as being stateful and stateless

101341
indesign	macromedia
from microsoft frontpage era to macromedia dreamweaver to microsoft expression suite to adobe indesign every time the advertisement said that the new product is designed to produce high quality clean html and css and every time the next advertisement for the next product showed that the previous one was a lie

101398
short	base
i don t know how big your code base is but my money is on this you will not get it all re-written in the short term and if your next year consists of rewriting broken stuff you re going to want to leave anyway

101400
jar	war
the question is does this handler processor class belong and need to be packaged along with the client application jar war or is it part of the component jar

101435
restrict	shared
on some shared network drive create folders for each group and restrict access to them for groups and individuals

101524
realloc	malloc
as for graphics and everything else it d be just like creating graphics on a desktop once you take care of all of the other lower level stuff because you re going to have to write things like printf malloc realloc dealloc and everything else that you take for granted just to get it up and going

101558
put	get
it may even put some pressure on the other developer to step things up and get them done quicker

101585
geocoding	geocode
use something like the google maps geocoding api to geocode the address you send an address and it sends back a coordinate pair

101649
interpreted-language	compiled-language
is java now considered a compiled-language or interpreted-language

101655
awt	swing
the early windowing library awt was quite clumsy -- swing was a major improvement

101703
checkbox	dropdownlistfor
an example of this which has happened to us is to replace checkbox with a dropdownlistfor with two items namely yes and no

101704
rss	feed
we helped set this up on the blog at - their plugin is free it reads alound content from any rss feed

101708
feedback	review
to get back to your example after getting the po s decision the team might create a gui mock-up for the complete wizard or page show that to the po to get feedback change one or two things and implement it then show the complete implementation in the sprint review

101710
button	checkbox
users immediately understand other custom parts of a web page like custom button custom checkbox etc

101737
interpreted-language	compiled-language
is java now considered a compiled-language or interpreted-language

101745
free	malloc
deterministic destruction is essential when dealing with for example gpu resources- and in java you d basically have to malloc and free them

101745
interpreted-language	compiled-language
is java now considered a compiled-language or interpreted-language

101745
interpreted-language	compiled-language
i d say that managed is really a separate category on it s own although i d say it s definitely more like an interpreted-language than a compiled-language

101787
profiling	benchmarking
in order to know what exactly should be optimized and tuned in complex system the benchmarking profiling and research is required

101868
lisp	scheme
scheme a dialect of lisp has been the language for the introductory course in computer science at mit for ages although it has been replaced by python recently

101868
scheme	prolog
i got my bs in cs at an engineering school where i was exposed to c scheme prolog and c++ during my first year

101884
put	get
so put on a fresh pot of coffee and get hacking.

101933
springsource	grails
not mention that groovy grails are now under the umbrella of springsource and they are committed to the both

101942
nltk	opennlp
a few reasonably well known examples include wordnet nltk opennlp and freeling

101969
put	get
if you can get a team of good solid developers and put them in a room together they ll do a lot of the motivating themselves

102013
integer	unsigned
however that s the first number that can be used in an unsigned integer to index an array with

102104
padrino	ruby-on-rails
i can grok the code for say padrino or ruby-on-rails ruby web frameworks a lot more easily than i can grok the code for say spring roo

102129
satellite	altitude
world wind lets you zoom from satellite altitude into any place on earth

102131
getter	setter
i would just like to add to the existing answers that were brought up earler new is perfectly fine to create objects that are pure value objects have only properties getter setter

102163
organization	naming
the problem i found is with the naming convention or even with the organization of the packages

102165
post	get	post	put	put	get
or should i drop basic auth altogether get rid of the get and use only post put with authorization information in them

102169
post	get
what i was trying to surmise was that for security purposes get is much the same as post but post does its work without putting the information in an address bar which tends to be the big security difference and why i dislike get but as posted by lee

102193
hash	salt
you could have username together with token generated from a salt hash of the password

102212
opera	firefox
i m fairly sure firefox has got it right too so i don t really care what opera does

102228
public	protected
an internal service protected by a solid firewall is less likely to be subject to attack than a service on the public internet

102297
for-loop	arrays	for-loop	loops
in the second half of the chapter we introduce arrays as a special form of a collection and the for-loop as another form of a loops

102340
folder	directory
i have never seen a setup this intertwined there is no clear build order sometimes a project in solution a just reference dlls directly from the output directory of a project hosted in solution b sometimes the project has just been included directly even if it resides far away in the folder structure

102343
folder	directory
sometimes a project in solution a just reference dlls directly from the output directory of a project hosted in solution b sometimes the project has just been included directly even if it resides far away in the folder structure

102345
pascal	delphi
actually the method of creating apps for iphone by designing forms in delphi and then compiling the same in free pascal as free pascal was not having designer and delphi was not having compiler earlier for generating ipod iphone apps were there about more than a year ago

102351
redhat	fedora
distutils setup function will allow you to make rpm and msi files for distribution on redhat and fedora and anything else that uses rpm s and windows but it notably lacks the ability to make a deb package

102366
children	parent
in this case i use shared pointers to implement the father child relationship each node manages its children and the children are automatically destroyed when the father is destroyed and qpointer s for references between children or for the child parent relationship

102394
jobs	cron
this is a good way because i can add scheduled times and similar in function for cron jobs

102495
folder	directory
1 backup the database to a child directory in the project folder

102538
put	get
for example if i have a set and a get method i can write tests that put the data in and check the internal members are set ok or i can use each to put some data and then get it out again to see if it s still the same and not garbled

102547
filtering	grouping	sorting	filtering	sorting	grouping
the original list was thrown out and a new gridview inserted with filtering grouping sorting and all sorts of cool functionality

102577
put	get
ps i m not afraid of math and i don t get frustrated on excercises easily but i would prefere some intros text where you can put some code down because this way you get the feedback at once

102595
haskell	ocaml
using an hybrid language clojure scala ocaml ... might help to ease it onto if you come from an oo background but i think that if you really want to understand the functional progamming mindset you should rather go for the real thing haskell lisp ...

102659
ftp	telnet
curl is a library and command-line tool for transferring data in several protocols such as http ftp and telnet

102677
post	get
i was hoping that i could post my ideas about the issue on here in hopes to 1 get some extra insight on the issue and 2 make sure that i am correct in my assumptions

102690
integer	unsigned
is a ui an unsigned integer

102692
16-bit	64bit	integer	unsigned
it was originally a 16 bit type on 16-bit word architectures but was changed to a 32-bit on 32-bit word architectures or 64bit type on 64bit word architectures in later versions of the operating system while retaining its original name its true underlying type is uint_ptr that is an unsigned integer large enough to hold a pointer

102716
agile	sprint
agile is all about breaking long periods of development into smaller periods sprint to give developers and businessmen a chance to understand which way they should go sooner so that they can act more flexibly

102743
profiling	debugging
think - design - tdd - code - think again - cppcheck - valgrind - debugging - repeat until ready to use profiling and coverage mechanisms - think some more

102811
unix	bsd
but when at t tried to sue uc berkeley for infringing on at t s proprietary unix source code it was found during discovery that at t has taken many of berkeley s bsd licensed sources removed the bsd license notices then applied an at t copyright

102871
min	max
you can also get performance data on garbage collection so you can tune your collector and adjust min max heap space required by your application

102974
int	chars
in former times when all you had was string int bool and float the chars sibf would have been sufficient

102978
width	height
rectangle width 100 height 200 is like java s new rectangle 100 200

103014
screens	tablet
tablet and phones even worse have smaller screens than do desktops

103045
iprincipal	iidentity
in most cases iprincipal and iidentity do the job for you and make your account model very flexible

103118
profiling	debugging
firebug - helpful for debugging and profiling the dom and your http requests

103155
int	double
i d really like to have say a map data structure that works the same way whether i m mapping nsnumbers to strings or int to double or int to mybigcustomobject

103173
getter	setter
favorite example of ruby it doesn t require setter and getter

103179
client-side	server-side
you should think ahead which parts would be considered client-side and which would be server-side

103259
modula-2	oberon
since nobody else mentioned it i ll list a few languages that do support nested comments rexx modula-2 modula-3 oberon

103346
diffmerge	gitx
i ve managed to kludge together a bash script along with gitx and diffmerge to come up with a barely acceptable solution

103354
mergetool	diffmerge
it was tricky but i configured git s difftool and mergetool settings to call diffmerge directly and i can now view diffs and resolve merge conflicts in an excellent visual third party tool

103358
mouse	keyboard
the terminal doesn t require us to move our hands from the keyboard to the mouse

103360
bazaar	git	bazaar	svn
i tried out svn bazaar git and a couple others and learned the basics of each

103420
srp	ocp
refactoring usually consists of the first type of work since a lot of methods are known already to developers like dry srp ocp di etc

103431
versioning	upgrade
you might want to support versioning n-2 and n-1 or just n-1 along with versioning n where n is the current versioning just to give people a bit of time to upgrade

103437
versioning	upgrade
if you set up the problem in the way you do by explicitly saying that there are no legacy reasons not to upgrade everyone is going to agree that there is no reason to support older versioning

103438
versioning	upgrade
worst case i ll give the user an upgrade to the new versioning

103440
versioning	upgrade
secondly it can encourage your users to upgrade to newer versioning

103442
versioning	upgrade
i would also say that you should provide full support to the upgrade process from a versioning that is up to 5 years old or more

103442
versioning	upgrade
you should support old versioning enough to be able to upgrade them to a versioning that you can support

103442
versioning	upgrade
if you can t support the upgrade you need to support the old versioning

103459
put	get
sometimes one might be dealing with sampled data where the sampling theorems will put some bounds on both the data acquisition method pre-filtering and the range or quality of results you can get given that data

103515
public	protected
as for verifying input parameters within public protected methods i prefer to work defensively and check parameters and throw invalidargumentexception or the like

103558
profiling	instrumentation
profiling for instrumentation

103559
profiling	instrumentation
using performance counters and profiling for instrumentation

103571
lisp	smalltalk
when it comes to very few rules i would argue lisp or smalltalk would win

103571
lisp	smalltalk
but in my experience the simplicity of lisp and smalltalk does not mean they are simple to understand and easy to teach

103573
lisp	scheme
i d say lisp or scheme or a language from that family would be the most orthogonal

103649
getter	setter
as a general rule getter and setter are a bad idea

103649
getter	setter
but if you make it private and then turn around and make it effectively public again by providing a getter and setter you re back to where you started except your code is now more verbose and obfuscated

103649
getter	setter
getter and setter are an anti-pattern that needs special justification

103681
haskell	sml
i would propose both sml and haskell

103681
haskell	sml
there are a few non-type-theoretic warts in both languages eqtypes in sml seq in haskell but they still beat the pants of anything else out there in terms of bizarre interactions of unrelated language features

103687
post	get
we have two formats that uses a file extension of either .xml or .json for easy consumption when performing either a post or get request

103687
post	put
we have http headers that identify if post is actual a put post or delete request since not all clients servers firewalls allow recognize put and or delete

103687
post	get	post	put	put	get
you need to work backwards and define your uri with the object s being acted upon first and use the verbs get put post delete for your operations

103732
skype	hangout
desktop share using skype and use its video conference or google+ hangout

103787
getter	setter
if we aren t filtering or massaging the data in our getter setter i don t see a lot of point in writing getter setter methods

103787
int	double
if you have int getx and you change the implementation to double you still will lean on the compiler to find the places to change

103789
implements	extends
easy to extends upon the core classes and implements your own functionalities

103836
getter	setter
in object oriented code where the setter getter of child classes can be different you should always use them

103842
getter	setter
avoiding using getter setter isn t really a performance concern even as a micro-optimization

103858
lisp	scheme
so any decently sized lisp or scheme project will serve as a good code example

103875
organization	naming
this organization strategy probably includes standards relating to where different files should be kept things that need to happen before after certain types of operations and naming conventions and other coding standards as well as a lot of this is how it is set up - don t mess with it

103891
short	base
additionally if you are short on time your best bet for getting good clean code as far as is possible is in a having good clean clear and non-ambiguous requirements and a code base which is already reasonably clean so that the discipline is already in place

103895
lisp	scheme	haskell	scheme
of the practical languages iâ d agree with those already mentioned modern lisp or scheme dialects haskell python or ruby

103956
multiplying	multiplication
when you multiplying two numbers you don t remember how multiplication works - you just multiplying them because it s second nature

103986
pull	push
see e.g the pictures in the design of everyday things and look at the doors labelled push that look like you pull them and at the beer taps the operators hacked onto the important nuclear reactor controls because somehow hovering over them in the ide wasn t quite good enough

104131
mvp	presenter
this model can then be invoked from an application layer the view or the controller in mvc in mvp you call it and adjust it for the gui in a presenter

104211
put	get
you can also put to use some very powerful components like devexpress for example java doesn t get even close to have something like what the dx team has put together over the years and this represents a huge productivity boost

104242
debian	centos	debian	linux	centos	linux	redhat	fedora
if you need to deliver a functioning product and a customized linux distro is part of the solution you are better off basing your linux on a suitable mainstream distro say debian suse redhat centos fedora etc. learning to use their packaging system and setting up your own repositories

104247
getter	setter
i generally leave a comment explaining all functions other than getter and setter

104282
mojolicious	catalyst
there s large community around web frameworks like mojolicious catalyst or dancer and they are very friendly to newbies not only for framework itself but for perl language too

104301
websphere	ibm
glassfish does not come as a part of java ee as there are other java ee implementations such as ibm s websphere

104318
mouse	keyboard
input handlers - this code deals with input devices such as mouse keyboard network port or higher-level abstractions such as system events

104335
inherited	properties
every named form control shadows properties inherited through

104357
put	get
the chances are pretty good that they didn t expect to make money from it but the fact that their invention is being put to good use in industry will help them get grants advanced in rank say from associate professor to full professor or maybe even get tenure

104412
getter	setter	tostring	getter
in fact if you stayed below 8 methods in java you could hit the limit with a class that only had a constructor a tostring and the getter setter for 3 properties...which is not exactly a robust class

104418
equals	tostring
however classes frequently have more than 9 fields and methods even if you don t count accessors mutators and any standard operations for example tostring hashcode and equals in java

104464
apache	nginx
the server is apache nginx or iis which serves the page

104504
google-chrome	firefox
google-chrome and firefox have now rapid release cycles

104518
google-chrome	firefox
on the flip side it means there is a greater range of support levels for different browsers - more versions of firefox and google-chrome out there

104550
versioning	upgrade
otherwise the library s consumers might have to upgrade to a new versioning for no reason or lag a few versioning behind

104550
ready	each
disallowing cyclic dependencies allows each package to be developed independently and released to the rest of the company when new changes are ready

104574
google-chrome	firefox
firebug s debugger is just full of awesomeness not that google-chrome s isn t they re largely the same but i tend to go with firefox because of os projects such as mozrepl which allows you to script firefox rather than using browser-spawning automated test suites such as selenium

104574
google-chrome	firefox
so for client side either google-chrome or firefox have great built-in debuggers filled with watch panes performance monitors all the good stuff that you ve come to know and love in c++ java

104713
bash	zsh
source code can also be executed directly by an interpreter such as one of the many command-line shells c-shell bash zsh etc. awk sed and so on

104829
pull	push
there s a similar project for git users that want to push pull from mercurial repositories but i don t have direct experience with it

104872
perforce	svn
it says it connects to tfs svn sourcegear vault vault pro mercurial perforce git

104875
mamp	wamp
i recommend using a local development server like mamp or wamp to point your canvas urls to so you can save time and money and security problems by developing locally until you are ready to host it somewhere

104895
mockups	balsamiq
like balsamiq mockups or equivalent

104980
put	get
one more thing take the number of lines of php code and put it into a cocomo 2 tool to get an idea of how long and how many developers you will need in order to complete the rewrite

105011
agile	sprint
you should be as a team reviewing all the code done for a sprint another agile term which is delivering buildable tested code every 1 to 2 weeks

105035
versioning	upgrade
the compiled form is a tiny bit different so if you are writing a library and that library is going to be upgrade in programs and you can t recompile the programs themselves for example if you re writing an interface for plugins that should work across versioning of your software then you shouldn t use public fields because you can t replace them with properties

105083
mouse	keyboard
better investment would be third monitor high end mouse keyboard or even chair you sit on

105083
mouse	keyboard
so optimal configuration is mid i5 12gb ram fast ssd like x25m hdd 2 big lcds leds ... and good mouse and keyboard or decent speaker for grooveshark in background

105097
expression-blend	silverlight
i would add that abstracting out the service layer calls so that the silverlight pages load in the designer either visual studio or expression-blend without the presence of the service helps out

105127
ocaml	scheme
speaking for myself with the disclaimer that my first experience with functional programming was in scheme i d probably lean toward clojure with ocaml a likely second choice

105165
monodevelop	sharpdevelop
for open source there are a couple like sharpdevelop and monodevelop

105263
filesystems	ntfs
research on sql server 2005 and the ntfs filesystems microsoft to compare crud performance to blob or not to blob

105284
postgresql	mysql
system requirements and for web apps minimum hosting requirements as well does the app need mysql or postgresql

105294
google-chrome	firefox
i would also understand if different browsers had different implementation formats for example let s say firefox required for text shadow while google-chrome required

105354
codeigniter	yii
coming from codeigniter and yii i thought that having a dedicated controller was a really cool idea

105572
backbone.js	javascriptmvc
if you can expect decent browser javascript support look for someone experienced with js frameworks like backbone.js javascriptmvc etc

105590
prepare	execute
many of the queries that get execute -- adding a user for instance -- would get execute only once in the application lifetime so prepare statements really don t offer much of an advantage

105628
public	protected
in most of europe in general and in france in particular your intellectual property is protected and a logo as it is an artwork will be protected without any other step unless you expressly make it public domain

105629
pull	push
curentlly i have it on my computer but that means that my partner needs to commit and push for each modification and i need to pull the changes and merge for each change

105634
post	get
keep going through and when you get stuck post the question on so

105655
post	get
each provides services host with sets of request headers and post get arguments

105677
pascal	delphi
there are not gui-easiest languages but take a look at c# with windows forms and delphi both are rad tools c# uses c# as a language wich is very simillar to java and delphi uses pascal

105686
put	get
i think being reactive opposed to proactive in fixing bugs is a very bad idea as when the time comes to actually put a fix in you ve got other issues that need resolved and more features management want out the door asap so you get caught in a vicious cycle that can lead to a great deal of stress and burn out and ultimately a defect ridden system

105686
feedback	review
so when you do fix a bug make sure a few people review the fix and give you feedback in case they have fixed something similar and found a good strategy to dealing with it

105763
slider	jcarousel	jcarousel	easyslider
when we were creating the image gallery module we examined many jquery libraries like easyslider jcarousel and nivo slider

105812
public	protected
high integrity cpp rule 3.1.1 organise class definitions by access level in the following order public protected private

105827
allegro	sdl
well i love c++ i have been using it for a while i like all the libraries allegro sdl qt ogre etc. but i have a problem i don t understand pointers

105848
haskell	agda
at least it should be as in haskell or agda â but dynamic typing is about practical correctness which is what matters more when you re prototyping

105879
jobs	cron
that being said there s no reason not to use php for various non-web applications such as scheduled services cron jobs that process data somehow import export retrieve etc

106000
public	protected
access modifiers limit the interface and serve to communicate what functions are important to use the class public and protected and which ones were created as part of making the class prettier for the maintainers private

106013
put	get
i m working on a c++ wrapper for libpcap and i d like to get more into version control as i m not experienced with this the only reason i used it was to put code on github

106039
textarea	textbox
if you want the user to enter something consider using a textbox or a textarea decorating it with javascript when need

106039
google-chrome	firefox
while firefox approach is perfectly valid google-chrome s one can be criticized since it still blocks every tab and causes a problem what if the user was severely annoyed by several message boxes issued by your app and checked the case and then you tried to show something really important

106050
versioning	upgrade
they wanted to switch to using direct oracle access to allow an oracle upgrade past the highest versioning supported by the bde 8i if i recall correctly

106057
width	height
i need to set the width and height properties to the tables like

106057
width	height
i love your answers but answer these original question too does it matter to the monitor sizes using width and height properties in td tag

106059
width	height
as for whether or not you should use width and height attributes directly in td tags no you shouldn t use them as the attributes are obsolete as of html5

106060
width	height
the width and height attributes are now considered obsolete

106114
junit	testng
the junit library and or the testng library

106114
mockito	jmock
a mocking library such as mockito or jmock

106136
client-side	server-side
i am finding a litany of options for developing both the server-side and client-side of the api but am not sure which is the best approach

106178
codeigniter	cakephp
cakephp symfony codeigniter php

106178
merb	ruby-on-rails
merb ruby-on-rails sinatra ruby

106191
wordpress	joomla
the type of web-design i have in mind is some simple web-sites even static web sites that the owner of some small business like a restaurant wants to have a web-site to show its services ..i know there are some stuff people start with like wordpress joomla php cmses css frameworks .

106192
wordpress	joomla
but you get free webspaces with php everywhere joomla wordpress etc

106355
quicksort	shellsort
tigcc a gcc-based compiler for ti-89 92 v200 graphing calculators uses shellsort for the quicksort implementation in its standard library

106355
quicksort	shellsort
shellsort was chosen in favor of quicksort to keep code size low

106412
equals	compareto
is it a good practice to write comments for widely known methods like equals compareto etc

106412
equals	compareto
is it not obvious and well understood what the equals method and the likes compare compareto etc does

106440
ironruby	ironpython
edit to clarify by port i mean host an existing language on the dlr such as ironjs ironpython ironruby etc

106444
lisp	scheme
the lisp scheme family of languages are very nice to play with in terms of parsing compilation interpretation etc.

106448
hash	md5	hash	hmac	hmac	md5
my preferred method is to generate 10 000 random license strings sha1 or md5 hash them or hmac them and include all or part of the sha1 md5 hash in the executable itself

106504
awt	swing
for example most likely your used to creating swing or even awt applications in which you create the gui in the java code

106543
vim	emacs
i don t wish to start a holy war actually there was a time when i ve used emacs each second day one day vim one day emacs

106543
vim	emacs
but as a true vim er i was always a bit frustrated with the fact that many emacsers are trying to use emacs literally everywhere for literally all tasks

106543
vim	emacs
believe me after using vim or emacs for long time you will totally miss its features in most advanced of ides

106572
width	height
the class is used to filter boxes which have properties such as height width depth weight etc

106603
subclass	abstract-class
pure virtual functions are not defined in the class that declares them so they must be implemented by a subclass unless it too is an abstract-class

106603
inherited	subclassing
the purpose of an abstract class is to define some common behavior that can be inherited by multiple subclassing without implementing the entire class

106636
rdf	owl
in order to do this semantic web relies on languages specifically designed to store arbitrary data such as rdf owl and xml

106682
lisp	scheme	haskell	scheme
lisp haskell ml scheme clojure f# .

106695
mockups	balsamiq
i found balsamiq mockups helpful

106696
post	get
i have a blog post that relates to this topic if you care to get more detail

106715
getter	setter
we left the setter getter

106744
width	height
some people want to filter on width others on height others want only square forms or rectangles that roughly have a 16 9 aspect.

106773
getter	setter
except that you need to add the setter getter manually and manipulating the data is very burdensome

106827
hash	md5
for example a specification may specify a hash rather than specifically specifying md5 sha1 crc32 etc

106854
pull	push
it was quite good but some operations like clone push and pull had to be done using shell commands

106935
put	get
i will put your name there you know it will get tons of views.

106975
codeigniter	cakephp
having used cakephp codeigniter personally my least favourite and others symfony stands head and shoulders above them in my opinion

107011
getter	setter
too often the junior dev gets the jobs like move control x to the lower right corner or write all the property routines or getter setter in java obj-c et al or add javascript validation. give him something to do which makes him feel useful like a real contributor

107021
mutt	thunderbird
some love thunderbird others outlook and others mutt

107028
mouse	keyboard
a comfortable chair since you will be spending most of your day sitting down and ergonomic keyboard mouse

107063
put	get
other thing that i remember is being worried about being put in a position where i don t get to do much programming

107197
put	get
one of the better ways i ve found to really get into the meat of a rails app is to go to github and find some of the rails demo example applications that people put up there

107236
diagramming	flowchart
flowchart - especially as practiced 25+ years ago - have been superseded by far more expressive diagramming techniques c.f

107236
diagramming	flowchart
ibm s own studies showed that the use of flowchart had no effect on the quality of a system s design or implementation though they were marginally useful for communicating with users and other developers precise reference not readily available but was cited in james martin s diagramming techniques for analysts and programmers

107243
postgresql	mysql
you can use any number of open source databases such as mysql and postgresql

107325
codeigniter	kohana
for the web i ve developed mostly in php with the kohana and codeigniter frameworks and ruby ror

107331
teamcity	jenkins
setup a continuos integration server jenkins or teamcity and write tests like crazy

107415
easymock	jmock
easymock and jmock are good frameworks to do this

107456
trie	tree
linked lists singly doubly and circularly linked tree red-black avl trie binary space partitioning hellip

107466
free	malloc
while new and delete should be used exclusively to allocate and free c++ objects the use of malloc and free is perfectly legal in c++ code

107507
profiling	instrumentation
instrumentation and profiling the code

107513
int	chars
introduce them to chars shorts int and longs

107520
int	chars
variables can store data int chars float etc

107520
cout	cin
this is how you read and write data cin cout

107520
division	modulo
calculate the change required modulo division giving the least number of coins

107541
boost	stl
let stl and possibly boost worry about that

107545
pull	push
is the method the os uses to listen is pull or push

107550
ethernet	wireless
the ethernet hardware will be the one polling the physical wire or wireless

107552
int	chars
teaching them what the terminal really is how their program interacts with it that a string is an array of chars ended with a 0 in memory what malloc is and how c++ abstracts it how a chars and an int are stored in memory ect.

107667
pull	push
i am not totally clear whether this is typically push or pull within the ethernet hardware but i suspect it s interrupt driven or some register on the chip gets set when a buffer is ready

107667
pull	push
but the term pull ing can be downright incorrect if one is speaking at the os level. of course if you start talking about voltage levels and exactly how things are triggered neither electrical nor optical physics will use the terms push or pull for describing electrical fields and potentials but let s assume we re all programmers not physicists here

107692
pascal	delphi
i done something similar with c c++ object pascal delphi and shared libraries on network windowze

107692
swt	swing
it is intended to run on a web page javascript flash control or desktop interface like swing or swt

107704
lisp	scheme
yes it s simply a recurring phrase in the title of several papers starting from a couple in the 70s in which sussman and steele demonstrate the use of lambda calculus for programming by means of a minimalist lisp dialect named scheme they devised for the purpose

107708
dependency-injection	singleton	dependency-injection	factories
instead of using singleton read up some more on dependency-injection and chain of construction factories etc

107803
put	get
when things come up through the day say things like oh put that in your end of day email and if you get a really long end of day email mention casually you don t need to be that detailed every day

107818
try-catch	exception-handling
just write the simplest possible code and if it is easier to use try-catch or to throw an exception-handling then do that

107901
fast-forward	merge	squash	fast-forward	squash	branch	squash	merge
the issue is more to use fast-forward merge which include a branch history within another one provided you squash first all the intermediate checkpoint commits which can be an issue in case of rollback or git bisect

107901
fast-forward	merge
see understanding git workflow in order to distinguish private branches not meant to be pushed from public branches which will be completed by ff merge fast-forward merge provided that you make the necessary cleanup within the branch you are merging

108002
mouse	keyboard
if i buy a symbian s60 nokia e51 mobile and i want to write a program to control the pc launch programs control mouse keyboard

108037
children	parent
how about parent children

108045
gitignore	hgignore
just put .hg in gitignore and .git in hgignore and you are more than good to go

108047
cvs	svn
we use git so i m looking for someone familiar with dvcs or svn cvs or a desire to learn

108151
inherited	subclassing
show them a template method pattern it demonstrates the usefulness of inherited by putting common behaviour in a base class and encapsulating varying behaviour in subclassing

108179
mouse	keyboard
install an event filter on all three slice views to collect all incoming user interaction events mouse keyboard

108204
agile	sprint
i told him that agile was made for these kinds of problems formulate user stories based on the customer requirements as you are aware of them now and then as more user stories or as they change just add to the backlog and readjust your sprint plan accordingly

108245
inherited	subclassing
inherited would not work without interfaces as subclassing basically inherited the already implemented interface of the parent

108250
abstract-class	superclass
however you typically use an interface when you do not want to impose a certain design upon the superclass while you would use an abstract-class to have a reusable design that is already mostly implements

108298
cvs	svn
it can sound like overkill for svn cvs users but you know any modern scm will let you create branches in a second so there s no real overhead

108303
saas	iaas
you may look up and use the definition of terms like iaas paas saas depending on what you mean when you say cloud

108364
int	chars
the problem with using final to convey that something is read-only is that it only really works for primitive types like int chars etc

108366
range	minimum
at a minimum comments should describe what each public member does and how to use it and explain all parameters and return values with acceptable range between 1 and 1000 for each

108385
int	double
that is if f is take the length of a string and g is double the size of an int then there is a composed function h that takes the length of a string and double it

108401
vim	emacs
i certainly encourage you to try vim and or emacs

108405
agile	sprint
at minimum for agile in addition to what you are doing in sprint end demo product owner customers and team should give feedback and po should have ability to change requirements based on that feedback

108417
children	parent
in entity relationship modeling composition is implemented by including the primary key of the parent table as part of the key of the primary key of the child table and establishing a constraint such that when the parent is deleted all children are deleted

108442
mouse	keyboard
the residual cost is the cost of remoting the desktop screen keyboard mouse over the network

108454
sprint	branding
i have discussed these issues with the product owner and we have decided upon on actions i am wondering what have you tried when the product owner introduces a branding new high priority user story just before or even in the sprint planning meeting

108553
codeigniter	cakephp
cakephp zend framework codeigniter and symfony are the known ones for php

108616
scrummaster	sprint
at some point i believe that the scrummaster on behalf of the team needs to draw a line and simply put the story in the backlog for estimation at a later time and not include it in the sprint

108665
quicksort	mergesort
my guess is that the .net quicksort is layered on top of something in the mfcs or windows api and is probably inherited from much older versions of windows where the multi-threadable advantage of mergesort wouldn t have even been considered for the computers of the day

108665
quicksort	mergesort
my wild guess is that the implementation won some sort of performance competition versus some other sorts the developers came up with or else that an o n -space mergesort just looked best on paper in terms of best-case and worst-case performance mergesort has no achilles heel relating to element selection like quicksort and its best-case is a near-sorted list while that s often quicksort s worst

108697
puts	gets
the controller gets the model object and puts a pointer to it in a shared draganddrop-board think of it as a clipboard

108744
pull	push
have a separate common branch for developing a certain feature merge pull push often - that s it

108760
versioning	upgrade
their dev cycle is pretty tight in many cases you are better off aiming at the versioning of the framework under development lest you end up needing to upgrade immediately after publishing

108780
debian	linux
it also means that it will not be included in software like r or in linux distributions like debian

108855
wordpress	joomla
i was raised in a part of web developmentland where the creation of websites is mostly synonymous with wordpress ftp joomla and procedural code instead of things like tdd a b testing doctrine and design patterns

108865
put	get
5-generate necessary sql to get and put data to database automatically

108878
cvs	svn
is it useful to learn cvs before learning svn

108880
cvs	svn
both cvs and svn are centralized version control systems

108880
cvs	svn
having existing knowledge of workflows and using one will help you use the other but learning cvs first simply to use svn wouldn t add any value

108883
cvs	rcs
recall that cvs is basically a wrapper for rcs which is about as poor as sccs

108883
cvs	svn
svn replaces all the functionality of cvs and removes the limitations

108941
jboss	weblogic
i usually use jboss or weblogic with oracle or mysql databases

108951
implements	extends
a decorator extends the interface of the wrapped object like here but normally implements the additional functionality itself instead of delegating to another objects

108951
implements	extends
a whole that implements a single fragment is just a proxy pattern but a whole that extends another whole is closest to a decorator pattern

108951
implements	extends
firstly client code should see wholeb as extends wholea although the implementer of fragmentb cannot extends fragmenta which was implements by someone else

109030
imperative	declarative
most imperative programming languages have some declarative components and some procedural components and c++ is no exception

109030
int	boolean	int	double
3+3 is an int 3.5 + 3 is a double 3 + 3 in c# is a string is a boolean or int in c++

109030
for-loop	loops
having a cheat sheet that describes a for-loop in terms of a while loops can be helpful

109144
put	get
so in the end if you put some work into it you will definitely get through the paper

109236
cvs	svn
if you leave notice that someone else is working on the same piece of code and talk to the first one before modifying anything as per what you said you need a version control system cvs svn git

109291
pull	push
perhaps this is something to consider for the future if your needs grow and you want to have less intelligent sensors deployed in remote locations to pull push data

109309
nullpointerexception	illegalargumentexception
for example special handling for null cases is often a code smell to me if your method needs a non-null value it should be throwing an exception immediately if it encounters a null either nullpointerexception or ideally a more descriptive illegalargumentexception

109320
pascal	delphi
what is the proper approach to functions that have side-effects in delphi pascal

109323
pascal	delphi
using exception handling would likely be better in delphi pascal if available

109329
processors	hyperthreading	cpu	processors	cpu	hyperthreading
intel has hyperthreading which basically splits one cpu core into two logical processors with some limitations

109329
cpu	processors
eight is possible when two cpu chips are used there are server mainboards designed for quad quad-core processors 16 eus plus optional ht and the next generation of cpus is likely to have six or eight per chip

109333
versioning	upgrade
previous versioning of the application work fine with the upgrade database they just don t reference the new stuff

109403
unix	bsd
in companies building software on the java ruby php c stack using linux unix bsd as a primary os in your experience

109443
min	max
set min max integer indexes to cover your whole float array

109443
min	max
if x is lower than this value set max to mid else set min to mid

109460
preorder	postorder
notes the code does a postorder traversal not preorder as i thought

109465
udp	tcp
sockets support ip-based protocols primarily tcp and udp 1

109465
udp	tcp
tcp ip and udp ip as well as a number of other ip-based protocols are done primarily via the sockets interface

109465
udp	tcp
it s a bit hard to say whether knowing sockets implies knowing everything about tcp and udp

109465
rtp	sip	rtp	rtcp	rtcp	turn
to handle not only text but voice video file transfers groups lists etc. a typical program probably involves a dozen different standards including such things as sip stun turn rtcp rtp xampp mdns etc

109515
put	get
if more people put such bombs in their code i think programmers might get paid more promptly.

109622
put	get
it generally means you just have to knuckle down and put the hours in to get up to speed

109719
wordpress	joomla
do people develop websites from scratch when there are no particular requirements or they just pick up an existing web framework like drupal joomla wordpress etc

109719
wordpress	joomla
and similarly there are other requirements which can be fulfilled by wordpress joomla or drupal

109719
wordpress	joomla
should they be done using cms like joomla wordpress drupal people in east are using these as frameworks

109721
wordpress	joomla
or using existing frameworks like drupal joomla wordpress is the norm now

109728
min	max
you can then use rand min max to go into the seed and choose a number between the min and the max inclusive

109772
unix	bsd
considering that 90 of the code is bsd unix their are some pretty draconian terms in there

109806
wordpress	joomla
should they be done using cms like joomla wordpress drupal

109853
next	except
while i hate paying lawyers as much as the next hardworking guy given the risk this is one area it s generally better not to depend on internet advice except for this advice of course

109879
ada	pascal
i have worked mainly with oop languages c++ java but i often have the feeling that i could be as productive using pascal or ada even though i never tried them out for large projects

109943
getter	setter
javascript libraries such as jquery combine getter and setter in the programming interface for example

109948
getter	setter
martin fowler recently named it overloaded getter and setter in this article

109948
getter	setter
i ve been poking around in javascript recently and one thing that s struck me is the habit of using the same function name for a getter and a setter

109953
getter	setter
whether or not it s good practice is a topic of almost as much debate as getter setter vs

109953
int	double
if there are multiple getters one for int and one for double changing the type in the lhs of an assignment vs

109977
interpreted-language	compiled-language
you should know a compiled-language c c++ c# etc an interpreted-language python ruby etc and a text processing language perl awk etc

109979
wan	lan
they re typically invisible in testing environments because those environments typically have the client and server on the same lan or at worst very close on a fast wan

110025
hmac	md5
i would suggest using hmac see hash_hmac in the php manual using either md5 or sha256 as the corresponding hashing algorithm this is the first argument to the function

110213
vmware	virtualbox
you can download that and install it in virtualbox didn t work for me in vmware didn t try virtual pc

110222
disk	ram
the number of states of a computer with 4g ram is 2 2 32 states not counting 2t disk drive

110224
cpu	processors
having many threads that yield the cpu after doing minimal work voluntarily or by doing something that would block like i o can eat up a lot of processors time doing context switching

110315
gradle	ivy	ant	maven	jar	war
a standard way to publish apart from the source code on github is to have formal jar war releases to maven central which many maven gradle ant ivy build tools use to bring in libraries as a dependency

110318
ant	maven
at the very least source and a convention build script make ant maven

110333
post	get
i cannot post my current diagram for privacy reasons but to get the general idea it s just text lines and server icons that is the icon set that i am using

110338
feedback	review
first if this is a widespread problem affecting significant portions of the students in the class if you have access to do so i would approach the professor teaching the course with specific feedback about what concepts students are failing to grasp so that he or she may either incorporate additional review of that material as it comes up again in the term or improve the curriculum for future terms

110341
flyway	liquibase
liquibase has already been mentioned -- it s a good solution but i found it more cumbersome than alternatives like flyway

110448
children	parent
have some independence like parent with children that can adjust or move its work time

110649
google-chrome	safari
like we do for ie google-chrome and safari

110653
screens	tablet
generally what you have is one website for platforms that may accommodate large screens pc mac tablet etc. and another website for smaller platforms

110778
wordpress	joomla
you can also ask your designer or a forum why they prefer joomla over wordpress the advice may make it seem more appealing at least

110802
post	get
more complex interactions that would require lots of java in a jsp situation or some weird contortions in a cgi-bin situation get catered to by the php builtins you don t even have to know if an http get or post called your code everything your code wants to know lives in _request or _server or _cookie global variables

110827
pascal	delphi
as a 10+yr c c++ programmer with a very strong background in pascal and delphi i still miss pascal s strong array bound and index type checking and the flexibility and safety that comes with it

110827
pascal	delphi
i have to say there are many aspects of pascal delphi languages that i don t miss a bit but c zero-based arrays do seem just dumb by comparison

110856
ada	pascal	fortran	ada
many other languages such as fortran pl 1 pascal modula2 ada support this

110861
wordpress	joomla
if you look around most folks running php these days are running wordpress drupal joomla and the like

110883
children	parent
do all these objects in the hierarchy need to listen to their children for these events or am i missing something vital principle in my understanding about event bubbling where there s no need to let parent object register them selfs as listeners of child object events

110902
addition	multiplication
how would you simulate multiplication without iterating addition

110904
multiplying	addition
btw since you don t multiplying by repeated addition why would you imagine a computer would

110911
multiplying	addition
this should give you some insight into how a computer can multiplying large numbers without just using repeated addition

110911
division	addition	division	subtraction	subtraction	addition
division can use combinations of addition subtraction shift right shift left etc

110913
subtract	add	multiplying	subtract	multiplying	add
efficient algorithms for add subtract multiplying and divide are all described in complete detail

110914
many-to-many	one-to-many
functional testing is the hardest thing to get right especially when you have components communicating one-to-many or even worse oh god many-to-many across process barriers

110916
division	multiplication
preferably one with a small word size and without multiplication and division instructions

110916
subtract	add	multiplying	subtract	multiplying	add
on the 6502 there are only four arithmetic operations add subtract multiplying by two shift left and divide by two shift right

110916
division	multiplication
multiplication and division can be done using only these operations when dealing in binary

110916
multiplying	multiplication
as with decimal long multiplication we start with the right digit of the multiplier and multiplying 101 by 1 giving 101

110916
multiplying	subtraction
if you are dividing by a constant it is possible to do this in a way analogous to subtraction rather than dividing by x you multiplying by a precalculated rendition of 1 x that produces the desired result plus an overflow

110916
multiplying	add
if you add up the number of shifts and adds required for a multiplying for example it correlates rather well to the number of cycles required for a hardware multiplying instruction on early processors having such an instruction where it was performed in microcode in much the same way you would do it manually

110923
multiplying	multiplication
as you guessed there are faster ways of multiplying without a multiplication instruction than using a series of additions

110937
srp	principles
that would be the violation of crossing abstraction layers and also of having one class function do only one thing srp - single responsibility principles

110939
inherited	properties
multiple inherited is easy - you just copy a subset of the properties from one prototype and paste them over the properties in another prototype

110939
implements	modifiers
you can do clever things with property modifiers - by putting clever logic in the generic read property method you can implements various modifiers

110939
children	parent
this worked fine but had the following downsides a property reads sometimes had to trace back through a long parent chain hurting performance b if you mutated a parent prototype the change would affect all children that had not overriden the changing property

110961
consistency	acid
definitely these are and should be uncommon otherwise it means the dbms lacks a lot of important types but on the other hand one should remember that a good db is acid compliant unlike an application and that anything related to consistency is better kept in there

110968
matlab	simulink
it s possible with matlab simulink you can choose c or c++ but c is more often use at least if the target is embedded

110989
int	boolean
as the title suggests i m wondering whether boolean or bits are faster than using int 1 and 0

110990
google-chrome	safari
firebug google-chrome safari console and even ides do all that and more

111029
cobertura	checkstyle
it is an incredible code quality related tool it performs cobertura checkstyle findbug and many other analysis tools at the same time

111072
folder	directory
using php for my example should the working directory be in my xampp folder so i can test before commiting

111079
pascal	delphi
object pascal delphi vb.net c# has a very direct way to use properties not to be confused with fields and properties access methods while java c++ properties are accessed by methods

111089
min	max
just find the max and min latitude and longitude among all the points

111089
min	max
the smallest box that contains them all is min lat min long min lat max long max lat max long max lat min long

111089
min	max	minimum	max
your minimum latitude is 1 max latitude is 3 min longitude is 2 max longitude is 8

111092
folder	directory
using php for my example should the working directory be in my xampp folder so i can test before commiting

111105
cil	ildasm
use ildasm to look at the program you ve compiled as pure cil

111129
ant	maven
the most famous ones make ant maven ... can detect automatically which parts of the code has been changed since last compile and exactly what object binary needs to be updated

111146
haskell	ocaml
i went from programming ocaml and haskell to programming java and python and my experience is that imperative programming is not as big a leap as dynamic typing which to this day feels alien

111192
int	boolean
this answer is not specific to t-sql or sql but is a more general answer to the title of this question are boolean bits faster than int this is certainly true for some microcontrollers which actually have a bit data type in hardware such as the 8051 architecture and many pics processors from microchip

111192
int	chars
c compilers for the 8051 and pics typically have a bit data type in addition to chars short int and long to allow c code to take advantage of these operations

111194
put	get
i suggest you put breakpoints and start using the next command as if you re debugging this will help you understand the flow probably on branches there are paths which are more likely to be taken on those you should concentrate to get the general idea of the code

111210
vmware	esx
esx holy war we would be fine with either - but hyper-v was selected since it is free with msdn for these purposes yes vmware has free tools too - but the good management tools generally aren t and would be easier to manage by the local developers in a microsoft shop - so arguments for or against either are outside the scope of this question

111223
cvs	svn
after the implementation if you have troubles getting your partners to work with the tool here is a possible reason of that behavior why developers donâ t use a version control system cvs svn git hg ...

111246
cvs	svn
if it is for developing he should be familiar with make and makefiles and some source control command line interface svn git cleartool hg cvs ...

111247
chown	chmod
file access rights ls chmod chown chattr

111305
ant	maven
the most famous of these have already been mentioned make ant maven

111318
agile	sprint
the other is â agile in name onlyâ where the terminology like sprint and scrum are used but are really just labels over old practices like micro-management dishonesty going both up and down the chain of command lengthy useless status meetings and other such stuff

111322
put	get
and this company were going to configure everything blah blah blah get everything set up so all we have to do is put our website on it and life is sweet

111349
coffeescript	haml
while html may be replaced by for example haml and javascript recently by coffeescript with compilation steps occurring as needed i ve never seen ruby being compiled down to php

111360
lisp	scheme
if you are interested in lisp scheme read sicp 2

111382
feedback	review
if the developer that writes the release notes review the edited version before they go out that feedback is one of the most efficient ways for the coordinator to learn about all the applications that the company produces and supports

111393
disk	ram
when you re working for years on a quad-core pc with 8 gb of ram a high end ssd the latest os etc. it s very difficult to imagine how your application will run on windows xp on a dual-core pc with 512 mo of ram and an old hard disk filled at 90 and not defragmented for years

111449
put	get
i have deliberately put this question here since i would really like to get the view of the professional industrial not the academic community.

111451
postgresql	mysql
i dont know about postgresql but mysql has an insert delayed command which tells the db to commit the inserted row when the server is idle

111463
feedback	review
that pulling way is an easy one - one generally doesn t need approvals to just review released document and pass their feedback

111463
feedback	review
issue #1234 created to review memo 666 and provide feedback

111503
setinterval	settimeout
note that this can be true of code that uses settimeout or setinterval as well as traditional loops

111510
versioning	upgrade
this is required for almost all projects in real life - while you are working on versioning 2 you should still be able to publish patches upgrade for v1.9 and often even earlier versioning

111514
client-side	server-side
you need to know this because the knowledge behind how it works because you re going to run into networking issues or as i ve seen countless times people entirely faily at understanding what server-side and client-side actually is

111514
opera	firefox
old opera firefox old mise sometimes flash won t respect the order of your objects

111535
post	get
you use it in a request response manner and every web developer should know and understand at least the basic http commands get and post

111584
getter	setter
i was used to declaring a property and either pointing it directly to a private variable or writing a protected getter setter then plumbing them to the property

111584
public	protected
it also meant that you could restrict access to properties by making them protected in the abstract base class then moving them to public or published in subclasses

111591
prng	random
in this case i want to write a random class for use in actionscript which lacks a built-in seeded prng class

111616
klocwork	coverity
i ve also briefly checked the sites of coverity or klocwork or redlizards goanna.

111633
emacs	textmate
text editors are probably the most prominent example--a coder who works on windows at work and codes in haskell on the mac at home values cross-platform and compiler integration and so chooses emacs over textmate etc

111633
cvs	svn
is this in fact the case with version-control systems vcs in particular centralized vcs cvs and svn versus distributed vcs git and mercurial

111645
pull	push
adding a commit involves considerably fewer steps since there isn t any pull push and your local changes are always implicitly rebased on svn update

111684
many-to-many	one-to-many	many-to-many	many-to-one	many-to-one	one-to-many
it allows you to assign one-to-many or many-to-one or many-to-many associations pretty easily

111707
translation	localization
in case you do go with a localization and that solution is not only for yourself i would not advise you to use google translation for it

111776
getter	setter
for example having getter and setter on every single variable is a layer of indirection but if all they do is get and set simple values there is no abstraction

111927
lisp	scheme
lisp for impure functional programming and metaprogramming clojure would be my first choice but scheme or common lisp are also great

111932
post	get
as far as i can see consuming soap requires a soap stack so it is harder for your clients to consume they need to ensure that they have a soap stack in place that formats the post data and the headers correctly and then gives you back some data structure whereas with rest you just make an http get request with the arguments in the query string and get back some text that i guess is probably xml

111982
getter	setter
its possible to have getter setter that don t map to specific class variables so in this case yes if its just returning a class variable then no why would this be necessary

112040
jboss	weblogic
any transaction monitor such as cics tuxedo weblogic websphere jboss or .net will provide all these facilities in a clean and tested manner

112075
getter	setter
if class have two private string fields and they have getter and setter only interesting thing is that this class have two read write properties not implementations of getter and setter

112092
super	abstract
optionally you could choose to make the super user class an abstract class

112095
width	height
if we have class square with separete width and height changing one of them makes it become something else than square

112126
agile	sprint
an agile team can pull select stories from the backlog and work on them in the next iteration sprint

112211
wan	lan
in the late 90s typical lan speeds were 10 megabits or less wan speeds were oftentimes measured in baud

112225
getter	setter
if using getter and setter feels complicated the problem might be the language not the concept itself

112225
getter	setter
when getter and setter are treated as first class citizens they re not a chore to use and the added flexibility can sometimes be a real boon - for example we could decide to return a default value for cheese on a new fridge

112225
getter	setter
needlessly exposing internal variables will make your code worse but you can hardly blame that on getter and setter

112335
put	get
work falling out of the sky these stories get put on the bottom of the backlog until the product owner and team can meet to agree to move it up

112410
getter	setter
of course there are bigger hints such as the fact that you have no methods other than getter setter

112438
put	get
you will be surprised at how quickly you get feedback when you put decisions in writing especially if you make decisions that other people disagree with

112441
toolchain	binutils
one of these was for the entire dependency chain for a large gnu linux embedded systems project and there were dozens of dependencies between toolchain binutils gpl packages etc etc etc

112449
glut	sdl	glut	glfw	glfw	sdl
the kind of opengl windowing that i refer to is like glfw glut sdl etc

112469
put	get
keep all correspondence and try to get them to put things in writing so you have it for the lawyer

112478
put	get
bear in mind also that many people me included get put into accounts systems on 14 to 30 day payment cycles and waiting up 60 days for your money is fairly common

112480
post	get
one final note you have suggested several ideas in your post about what you could do to get some form of relief from this problem

112482
awt	swing
why is swing preferred over awt

112487
division	multiplication	int	double
bit-shifting can also sometimes double for int division and multiplication by powers of 2 with a slightly different rounding behavior for negative numbers sometimes but not always more desirable than what regular int division does

112488
awt	swing
awt is older than swing and supports only a limited set of components

112488
awt	swing
swing is more modern as sun engineers learned from their awt mistakes and made something better albeit more complex

112488
awt	swing
both swing and awt are event-based so if you know event-driven programming you will be at home

112488
awt	swing	swt	swing
check out this ibm presentation on swt swing awt it really is a good read

112488
awt	swing
also awt vs swing

112503
awt	swing
2 swing is gui framework based on awt all jcomponent inherits or implemetns part of usefull methods from atw components sure if exist

112503
awt	swing
5 since as of the jdk 6 update 12 and jdk7 build 19 releases promiss that you can mixing awt and swing components but don t suggest to do that components are painter in the container correctly but still there exist same difference betweens heavyweight and lightweight components as before and you have to calculate with that

112639
put	get
all of those are very difficult things for most managers to swallow and imo the #1 reason why it s hard to do agile - managers are used to saying it will be done by x date and having it magically done by that date after developers put in 80 hour weeks and it s a 180 to realize that the development team is going to tell you that this project will be done in 3 months and the only choice you have is to accept it or reduce the requirements to get it done sooner

112639
agile	sprint
even if you don t follow tdd or pair programming your development team needs to be competent enough to follow the agile processes sprint iterations

112806
feedback	review
rather than have team members just rewrite specs try something like pair programming to teach these people how to write better documentation or institute review on produced documents to provide appropriate feedback

112870
mergesort	heapsort
mergesort heapsort and some others are o n log n

112919
multiplying	add
people who look at the move add and multiplying etc statements in horror have a slightly exaggerated view of this true - the compute statement is closer to the assignments in other languages

112969
public	protected
don t include any private or protected members and consider not even showing public members for classe on the diagram for package1

113022
cpu	processors
recently other more complex algorithms have claimed to be faster in practice largely because their memory access has higher locality thus improving processors cache utilization and avoiding cpu pipeline stalls

113023
karatsuba	strassen
the karatsuba algorithm is at most 3 n lg 3 operations that is roughly o n 1.585 while the schã nhageâ strassen algorithm is o n log n log log n which is a faster order but to quote wikipedia

113064
stateless	stateful
if you re passing state to it all the time its not really a stateless function you re just making a stateful function with stateless syntax

113097
octree	quadtree
octree are the three-dimensional analog of quadtree

113177
free	malloc
well i know that there are things like malloc free for c and new using-a-destructor for memory management in c++ but i was wondering why there aren t new updates to these languages that allow the user to have the option to manually manage memory or for the system to do it automatically garbage collection

113195
free	malloc
malloc and free are not keywords in the language but just functions that are called from a library

113195
free	malloc
this distinction may be pedantic now because malloc and free are part of the c standard library and will be provided by any standard compliant implementation of c but this wasn t always true in the past

113257
ravendb	couchdb
but how do document-oriented databases like mongodb couchdb ravendb implement references among entities

113303
spaces	delimiter
whatever you do avoid creating multi-value fields with some kind of comma or spaces delimiter values

113391
stateless	stateful
now what we see is that both are very similar with the exception that the node one is stateful vs stateless as in the nodeworker one

113394
filesystems	hfs+
for instance apple touts the ability of its hfs+ filesystems to track which files have changed recently so that backups are quick

113394
filesystems	fat
on the flip side the drivers for a floppy disk filesystems fat can fit in just a few kb of memory

113414
put	get
put a meta line in the header saying that they expire very soon and they should get reloaded

113421
getter	setter
it is fairly common to need a few getter and setter functions but you should think about the interface before adding too many

113446
filesystems	fat
the fat filesystems worked well on floppy disks and also on the original small hard drives as it was reasonably efficient and required low overhead

113479
allocator	stl
stl collections vector ... do not work properly allocator failure cannot be reported

113481
clang	llvm
i m adding another surprising example here llvm clang dont use exception nor rtti for the followin reasons

113531
free	malloc
apparently the two major judging criteria of the effectiveness of heaps are 1 how much we can minimize the amount of space it takes up and 2 how fast operations on the heap can be carried out eg malloc and free

113531
int	double
if you allocate an int and a double can t it just be

113566
polymorphism	specialization
built in polymorphism which you don t have to implement yourself that lets you create abstraction hierarchies contracts and specialization

113576
int	double
for example a variable may be an int or float or double or long or whatever but maybe the variable s meaning is that it s a relative x-coordinate measured in inches

113580
haskell	sml
naming variables with either semantic or computational type does not do the same thing as sml or haskell style typing

113584
int	chars
purists would argue that java and c++ are not truly oo as you cannot override or inherit the basic types such as int and chars and java does not support multiple inheritance

113652
put	get
all i need to know is that it s a black box i put something in and get something out and don t forget that there are limitations so always check that the output makes sense and if needed find the edge cases where it fails

113726
erd	diagram	erd	entity-relationship	entity-relationship	diagram
i ve explained that the conceptual entity-relationship diagram is not a table schema and still needs to be translated into one and some of the relationships in the erd might be one table with an entity and simplifying the schema will lead to a less normalized database

113779
put	get
the important thing even if the timer spawns both the processing and the update is for the update to do as little as possible call some function to get a value to put in the grid and nothing else

113796
pull	push
commits push pull are quick and one of the most important things is that it breaks the coupling between file name and tracking

113882
splist	spsite	sharepoint	spsite	sharepoint	splist
if you work with sharepoint you ll see classes like splist spsite etc

113945
getter	setter
additionally concepts like getter and setter or instance in languages like java are commonly called getfoo or setfoo and it makes sense to keep this convention

113952
hash	salt
by requiring 8 chars minimum they guaranteed that the 2nd word was not the same as for a blank password there was no salt so every instance of 7 blanks hash to the same result

113958
free	malloc
the sources i have come across so far mention dlmalloc but then only goes on to explain what malloc and free are rather than describing dlmalloc

114007
cvs	svn
the development team uses jira for bug tracking and cvs and some svn for version control of different java web apps related to the software application

114019
cvs	svn
branching and merging is a bitch with svn and cvs

114023
tex	mathjax
because of some very specific functionality i am running into practical limitations of javascript--they re not hard limitations but stuff that i would find easy in java like making an equation editor where you can edit directly as opposed to entering tex is difficult in js even using mathjax as a base

114037
mvp	presenter
i ve refactored my code using mvp model view presenter humble dialog box pattern

114078
vb.net	vb6
i work for a company which develops medical software and switched from vb6 to vb.net several years ago

114078
vb.net	vb6
vb.net is more similar to vb6 and it should make it easier for

114078
vb.net	vb6
the first reason is not serious as vb6 and vb.net are two different worlds and there is no significant difference between switching from vb6 to vb.net or c#

114078
vb.net	vb6
our company eventually switched to c# and yes we now have modules in vb6 vb.net and c#

114111
vb.net	vb6
lots of existing vb6 vb.net code

114139
primefaces	richfaces
richfaces primefaces etc...

114156
post	get
html4 xhtml1 allows only get and post in forms now it seems like html5 will do the same

114169
post	get
get and post have a clear content-neutral rationale

114171
daemon	cron
have you considered having a daemon or cron job run on the file server and collect the relevant information and put it in a separate file or pipe

114200
post	put
a post will redirect to an appropriate page usually but put and delete typically don t

114209
put	get
the kind of person that will put in 100+ hours and call in all the favors with all the friends to get meet a deadline practically jeopardizing many people s health in the process

114228
googletest	gmock
i am not using visual-c++ but i am performing tdd with c++ using googletest and gmock with qtcreator as my ide

114281
cvs	svn
long story short git is not like svn cvs or brrr tfs

114289
hash	md5
however my current thought is to gather the systems motherboard and cpu serial concatenate them together and then create a hash probably md5 out of that string

114316
post	get
i ll post more things as i think of them have to get back to reading and writing something only vaguely resembling c#

114331
implements	extends
when extends default exceptions to use within your own code are there any other things you could implements that are useful besides the more specific exception name that do not violate things like single responsibility

114385
post	get
i find a post it note with my current focus branch bug # feature stuck to my keyboard when i leave to be super effective in allowing me to get back to work quickly rather than recreate whatever it was i did last

114419
put	get
once the sprint is defined cards get printed put up on the board and we have a feedback loop between the board the online record

114432
mvp	presenter
my understanding is that this is a model view presenter mvp type pattern and more specifically a passive view

114432
mvp	presenter
i also found this bundle patterns practices web client developer guidance model view presenter mvp bundle which has sample mvp code

114436
mouse	keyboard	hid	keyboard
some may argue that any app that uses a mouse or keyboard is mvc by this definition but i would counter that from the concept of the application s top layer and not the os on which it resides wherever there is a cursor or pointer that is the direct target of input via an hid that is an abstract representation of the user s own hand that interacts with the ui elements

114436
mvp	presenter
mvp - the controller of mvc is replaced with a less-powerful more single-purpose presenter

114458
error-handling	exception-handling
exception-handling were created to simplify error-handling

114493
agile	sprint
agile methodologies solve this problem breaking the project s life span into several pieces sprint in scrum and repeating the estimation sizing stories each week

114616
mvp	presenter
edit according your example code when you are going to use mvp that will mean not to have a god object application where you place monitorurlsfromfile but a controller or presenter class mydialogcontroller at first hand

114618
put	get
because they like programming and because when they pick up some new idea during a course they will try to see how they can put it to use the first thing they get back home

114619
lisp	scheme
lisp and its many dialetcs including scheme has it

114620
3-tier	n-tier
people often claim that they are following a 3-tier or n-tier architecture and sometimes they then claim to be switching to a domain model

114624
3-tier	n-tier
the definition of 3-tier architecture is a special case of the n-tier architecture

114629
scheme	prolog	scheme	rebol
php pod prolog proto python python r rebol ruby sas scheme

114629
verilog	vhdl
troff verilog vhdl vim xslt xul yacc

114648
octal	hex	octal	binary	octal	decimal	hex	binary
is converting from decimal to binary to octal to hex math

114687
verilog	vhdl
it is a feature of dataflow languages such as hardware description languages verilog and vhdl

114692
vmware	virtualbox
note i don t have any stats to back this up but i ve noticed that virtual pc has a tendency to underperform compared to both vmware and virtualbox

114765
merb	ruby-on-rails
the only successful open-source merges i can think of off the top of my head are ruby-on-rails with merb and selenium with webdriver

114797
post	put
when the server receives a post or put it shouldn t just validate and store

114830
printf	strlen
you ll may want to look at actual c source to see some library calls they make since stl wont be available but i am sure you heard of memcpy strlen printf and etc so you probably know enough c as it is

114846
pascal	delphi
is the ultimate demise of pascal only due to borland s neglect of delphi

114850
pascal	delphi
delphi and objective pascal changed that

114852
free	malloc
malloc free vs

114852
free	malloc
new delete - get used to using malloc and free correctly as well as typical idioms for initializing heap-allocated structures

114882
pascal	delphi
pascal s last hope - delphi - was positioned by borland as a database development platform targeted at corporate environments

114905
vmware	virtualbox
ever since virtual machines like vmware kvm qemu or virtualbox are widely and freely for most available the job has become a lot easier

114930
ocaml	scheme	lisp	scheme	haskell	scheme	haskell	ocaml
you have essentially two choices a language in the lisp family scheme common lisp clojure or a language in the haskell family haskell ml ocaml f# scala

114930
lisp	scheme
the lisp languages aren t as pure but are simple to approach with a fairly minimal syntax especially scheme

114930
haskell	scheme
i recommend scheme or haskell since you aren t looking to make production code

114950
ada	pascal
pascal got a reputation among the cowboy coders for being a bondage and discipline language which i thought was undeserved as they never met ada

114956
lisp	scheme
scheme a lisp dialect dynamically typed

114973
pascal	delphi
but authorship of code in object pascal has been growing i don t know that the tiobe index means a whole lot for it but it should be clear that people are still writing code in object pascal and interest spikes whenever embarcadero releases new tools therefore actual humans interested in writing new not just maintaining old code are interested in delphi

114996
filtering	grouping
has methods for basic list processing such as filtering grouping concatenation intersection ordering etc that accept single-function interfaces and produce new linqiterables allowing chaining of these methods hopefully in a lazy fashion

115006
agile	sprint
the last agile job i worked at had releases every sprint

115048
versioning	upgrade
then with in-app billing i would actually be selling extra features to my app by providing an upgrade to a pro versioning not their work

115182
getter	setter
so far i have read that the members of the class should be private and any access to private members must be through getter and setter methods which are public

115184
public	protected
the first part defining access is done through the access specifiers public private protected and so on

115188
getter	setter
depending on who is teaching that concept encapsulation can have soooo many definitions that it is essentially a buzzword to be defined with a tens of other buzzwords sometimes even going to the ridiculous statement like your reported so far i have read that the members of the class should be private and any access to this private members must be through getter and setter methods which are public

115246
int	chars
so in the most commonly used architectures chars is 1 byte short and int are at least 2 bytes and long is at least 4 bytes

115252
scheme	racket
i hear about c c++ java every day whenever people starting talking about computer science but in my first computer science class we are asked to write in scheme racket

115256
put	get
better to put off learning the popular stuff as long as possible so it s not obsolete when you get out in the workforce

115256
scheme	racket
scheme racket will help you focus on the important concepts algorithm design data structures and information manipulation

115266
checkbox	dropdownlistfor
you can implement or get elsewhere a custom component that allows for checkbox in front of items in a dropdownlistfor similar to what you can find in excel

115283
vb.net	vb6
are former vb6 developers using mainly c# or vb.net now

115304
scheme	prolog
you can t use python or scheme or prolog for processing huge data sets which are common these times

115336
jboss	weblogic
for the higher level services and certainly for external facing services i d use soap or rest via an application server weblogic jboss or something simpler apache iis

115358
int	double
there are cases where the difference between short int and long and between float and double mattered because of memory constraints architecture etc

115374
gridview	formview	gridview	sqldatasource	sqldatasource	formview
when programming in asp.net you can get very quick effective functionality out of using databound controls gridview formview etc with an sqldatasource control on the page in my opinion anyway - i could be alone on that one

115375
lisp	scheme	haskell	scheme
actually as lisp scheme being a dialect is the grande dame of functional languages think of f# groovy clojure haskell etc then this training does not leave you at any sort of commercial disadvantage either as this is the hottest topic on the development block right now

115394
redhat	fedora
gcc 4.1.2 fedora core 7 and redhat enterprise 5

115406
salt	md5
with md5 then sha1 both with salt obviously

115412
scrypt	pbkdf2
take a look at bcrypt pbkdf2 or scrypt for example

115412
hash	md5
let s use some md5 hash in the password

115412
hash	md5
if someone has our stored hash value of password he can have a lot of computer power to calculate the md5 hash of every possible password brute force so he can find the original password

115414
hash	salt
here we avoid the early collision problem and we essentially generate a salt that depends on the password for the final hash

115428
hash	salt
however assuming you have a cryptographically strong hashing algorithm and a good salt applying the same hash function several times makes the hashing process more computationally expensive

115467
versioning	upgrade
i want regular improvements but i don t want it to break a 500 kloc codebase trigger a massive upgrade project just to make the code work the way it does with the previous versioning

115469
alloca	malloc
how would you handle platforms like the 8031 without external memory that don t support malloc or alloca

115495
short	base
a language that caters to relatively small projects or ones we know up-front have a short life expectancy a web ui can get away with breaking things relatively frequently because it s unlikely many people are going to continue using the same code base for say 10 years any way

115530
dddd	cqrs
ps fyi the web apps will probably be written with asp.net mvc as web framework and ncqrs+nservicebus to target the dddd pattern in a cqrs style

115530
event-sourcing	cqrs
edit as a backend mongodb is today our probable choice as nosql is marrying well with event-sourcing + cqrs no need for joins etc.

115577
feedback	review
a code review is a great way to focus communication and the instant feedback you can get can accelerate your learning curve

115614
jgrapht	jung
jgrapht jung jts are very good but again for concurrent access i will have to synchronize it externally which is becoming a pain

115672
ready	each
when the model is ready each layer can start working independently front-end and backend

115673
getter	setter
also in cases where we use non-oo patterns or oo anti-patters such as setter getter switch statements anonymous inner classes huge functions and the like i ve seen code reuse go down and boilerplate go up...significantly

115673
getter	setter
setter and getter cause oo problems because they allow you to operate on the members of an object an object should manipulate it s own members this distributes the code that operates on your class throughout other classes requiring you to copy the functionality around the setter getter

115697
super	extends
yes they do the ability to extends inherit from a super class cleary contributes to code re-use i am not sure how anyone could argue otherwise

115697
super	extends
you can simply extends a class and override one method while using the rest from the super class if this isn t aiding in code re-use then i don t know what is

115719
ready	each
i assume you are suggesting to redefine done as each story is done and add a new column called product ready to release

115772
codeigniter	kohana
this would make little sense with a framework such as codeigniter where you extend the ci_model which obviously won t be there in your kohana project. i ve also read several similar questions to some of my points here but this is the main point which i have not found an answer to

115773
jboss	glassfish
examples would be applications designed to run on glassfish java ee reference implementation jboss etc

115908
rss	feed
subscribe to interesting rss feed like joel on software google-code-blog martin fowler

115925
128bit	64bit
just â œthinking out loudâ â here but it just occurred to me that one could do interesting semantic things with the remaining 64bit on a letâ s say 128bit computer

115967
postgresql	mysql
basically the usual bunch of 1 1 1..n n m database relations stored in mysql or postgresql wrapped by doctrine

115974
free	malloc
malloc and free

115974
free	malloc
if you are using c++ - it is actually bad to use malloc and free

116034
getter	setter
remember to set the attributes to private and the getter and setter method public

116060
dictionary	map
the only parameter in the constructor of this bean should be a map dictionary with the key being the mail type and the value the name of the method to call

116098
mvp	presenter
when we tried that we found that the presenter quickly became very coupled to the framework and the more we developed mvp the more clear it was that mvp really wanted to be mvc but couldn t be

116105
jsf	seam
seems like that would be a good fit to me and imho jsf + seam is a pleasure to work with jsf is much easier than jsf and seam removes a large amount of boiler plate

116116
google-chrome	firefox
it s currently ie based but has some experimental support for firefox and google-chrome

116126
alloca	malloc
from a student s perspective alloca is a bir redundant since malloc is enough in most cases and from a good-code perspective you are better off explicitely mentioning how manual memory management is annoying and how other languages deal with this problem after all there are more things to memory management then alloca or raii so you really shouldn t restrict yourself to these and as you mentioned already its much easier to understand the purpose of alloca if you compare it to other more standard ways to do things in other languages or c99...

116127
free	malloc
the students think wow this is like malloc without worrying about the free use it excessively get stack overflow and have no idea what s up

116151
cout	cin
i ve taught it several times and the problem i ve run into is that students often tend to think c++ as an extension of c c with cin and cout

116231
put	get
if you put forth effort and you like what you do it s a guarantee you ll get better and be heading up that team one day or one like it

116263
lisp	scheme
lisp or scheme and there is clojure which gets you into jvm arena

116263
lisp	smalltalk
lisp dialects have exactly one syntax rule to be learned and smalltalk is a close second

116263
super	self
iirc smalltalk only has five reserved words self super true false nil and the entire language is based around sending messages to objects

116267
post	get
edit here is another so post that asks a similar question but the op doesn t get a complete answer

116273
udp	tcp
node.js supports tcp and afaik udp so you don t have to worry about the overhead of http although you d obviously have to deal with udp synchronizing issues yourself if you chose to go that route

116275
post	get
besides the so answer or the blog post aren t going to grumble at you or give you dirty looks if you keep re-reading them to make sure you get it

116281
mvp	presenter
i m using the model view presenter mvp pattern as described in the humble dialog box paper pdf with an mfc project

116286
jar	war
package your application up to be distributed easily either in a fancy installer a war jar zip file or even on a cd

116318
emacs	textmate	vim	emacs	vim	textmate
i primarily code ruby and i personally like to use vim whereas other developers on my team use emacs textmate or rubymine

116321
emacs	textmate	vim	emacs	vim	textmate
i can pair program in rubymine textmate vim and a smidge of emacs

116326
put	get
if i were google keeping track of all the forms everyone inputs and seeing which ones get email address looking strings put in them

116327
firefox	safari	opera	firefox	opera	safari	opera	google-chrome	google-chrome	firefox	google-chrome	safari
i m using constantly opera safari firefox and google-chrome for web development switching each two-three days

116335
getter	setter
in my view it s not as usually all the internal state is exposed through getter and setter

116340
getter	setter
it s not quite as bad as public fields - a getter setter implementation might one day be replaced by an implementation that does more logic than now validation logging etc. and then clients would receive the benefit of that without being recompiled but even that won t stop people from relying on the semantics of getnames being mutable

116345
getter	setter
usually all the internal state is exposed through getter and setter

116345
getter	setter
and note that the real point of the javabeans standard is that the getter and setter don t necessarily access a private field - they can just as well convert to and from a field in a different format you can have only a getter for a derived read-only property or whatever you can imagine

116441
srp	principles
in response to your comment read up on srp from the solid principles

116504
cout	cin
you can use easier c++ language constructs like cin cout references std string etc

116661
forth	algol
lisp was there too and so was algol and so forth forth wasn t quite there yet though we re still in the 60s

116705
int	boolean
however most of the time you will only use them to pass bit flags to a method as or ing together and passing a int and then then and ing out the settings is more readable than passing several up to 32 boolean in a long parameter list and allows the possible flags to change without changing the interface

116705
int	boolean
not to mention boolean are generally kept separately in bytes or int instead of packing them together like the flags does

116706
octal	binary
you would have learned binary octal and hexadecimal arithmetic and logic gates

116772
free	malloc
you re asking people who can t grasp that is better than malloc and free to learn something

116871
erlang	lisp	erlang	scheme	lisp	scheme	haskell	scheme
to actually learn functional programming your best bet is one of the prominent functional programming languages like lisp and its dialects clojure scheme erlang and haskell

116871
lisp	scheme
actually lisp clojure and scheme are also multi-paradigm

116871
erlang	lisp
to the best of my knowledge lisp and its dialects and erlang are better candidates than f# because they encourage functional programming over other paradigms what tdammers beautifully states as a language s starting point

116873
getter	setter
if you do you should be aware that oop can be done in c including polymorphism getter setter visibility rules etc

116916
heapsort	in-place
ok on a technicality it may be that heapsort is usually explained as using a separate heap but it s perfectly possible to implement it in-place

116928
children	parent
then the array index of the parent and children of that node can be found by

116928
heapsort	in-place
since the heap can be kept and organised entirely in an array then heapsort can run in-place by moving elements around inside the input array

116929
width	height
a good size for a basic code block is short enough both in width and height that you can project the guts of it during a group code review and have it all fit without the font being so small that the guy in the back of the conference room can t read it

117099
for-loop	loops
structured programming is any programming when functionality is divided into units like for-loop while loops if.

117099
imperative	declarative
declarative languages allow computation without describing its control flow whereas imperative is where explicit control flow step-by-step is defined

117129
lisp	scheme
functional - haskel scheme lisp and f# fall into this category

117133
lisp	scheme
functional paradigm is based on lambda calculus and examples of functional languages are lisp scheme and haskel

117149
blitz++	ublas	boost	blitz++
for some ideas of how to write competitive numerical code in c++ you might want to look at some existing libraries such as blitz++ and boost ublas

117156
resharper	justcode
i would also highly recommend running static analysis tools e.g fxcop microsoft code analysis resharper justcode for the ms world

117244
vbscript	jscript
so this may limit you to microsoft technologies that do not include powershell as powershell is an add on for xp - you are not guarantied that it is there - and assuming you can not make the client down load it this leaves window script host - and jscript or vbscript and for your sanity do not consider vbscirpt at all or a native application

117318
hide	show
if the url contains demo then show else hide

117326
hide	show
if url contains demo then show else hide

117342
getter	setter
i have always thought that this is perhaps the one exception to the above mentioned rule because otherwise you would basically have to create getter and setter for objects like the view to use or some other equally troubling sounding solution

117348
implements	extends
there s a big difference between implements an interface and extends a class

117348
implements	extends
isn t it important to the third-party developer using my code to know whether they will be implements an interface or extends a class

117349
implements	extends
well this is not about implements the interface or extends a class

117356
getter	setter	public	protected
most of the times you can just use your getter in the child class instead if in doubt go with private properties and public getter and setter and if at some point in the future you need protected properties just update your api

117356
getter	setter
when are getter and setter justified

117356
getter	setter
when or why should one use getter setter for class properties instead of simply making them public properties

117356
getter	setter
when or why should one use getter setter for class properties instead of simply making them public properties

117358
dbcontext	objectcontext
ef has special method getbykey in objectcontext api or find in dbcontext api to query the cache first

117359
put	get
raw ado.net is often going to be faster for very specific data-access scenarios but when you put all the pieces together it really doesn t offer a lot of important benefits that you get from the various frameworks

117370
accessor	properties
in ruby you can attach any desired behavior to the setting of a properties by defining an accessor

117408
google-chrome	firefox
consider requiring that the code work in all the browsers that you require not just firefox or google-chrome

117408
feedback	review
get a independent party to review the work and see how they react to the feedback

117409
jython	pypy
there are implementations written in other languages like jython written in java ironpython written in c# pypy writen in python clpython written in common lisp psyco also written in c stackless python written in c and python and unladen swallow written in c++

117449
agile	sprint
some may want a release every quarter for instance and if agile is being followed then the last released sprint should always be in a usable state where a release can be prepared for the client on a regular interval

117522
y-combinator	combinators
explanations of combinators that don t help me get work done such as the y-combinator

117577
vb.net	vb6
we have a vb.net app that was upgraded from an old vb6 app which allows users to pick their own color

117672
facade	memento
balking builder delegation facade memento

117719
late-binding	early-binding
conceptually what is the difference between early-binding and late-binding

117719
public	protected
explain the differences between public protected private and internal

117750
accessor	properties
the body of a method constructor destructor properties accessor event accessor or indexer accessor

117786
webkit	gecko
i m interested in how browser layout engines like gecko webkit and trident are architected from a high level

117788
debian	linux
let s take an analogy warden is like the linux kernel while devise is like a complete linux-based operating system such as debian or fedora

117832
hide	show
it depends upon the requirement if the options are going to be limited then i would suggest going with show hide functionality but if in the future these values require an asynchronous request then refactoring it will be painful

117895
spaces	delimiter
this would be a cached value comma semicolon spaces delimiter for times when you don t need 100 correct values

117897
sorting	filtering
if you re searching sorting and filtering on the tags a 3-table arrangement as already described might work best

117963
alloca	malloc
instead you re doing just one memory allocation and that s it and if you use alloca then your local stack really is on the call stack - alloca is essentially just an in dex increment while malloc can involve all sorts of expensive operations

117963
scheme	prolog
i used to teach scheme and prolog to freshmen and i d say that very roughly a third of them do and two thirds don t. entire books have been written just to get the latter kind of students over this hurdle and since you seem to belong to the former kind i don t know if i can convey to you how mystifying the concept is to many people

118039
getter	setter
so just have the one constructor with required parameters normal getter setter and comment the code

118045
ubuntu	linux
here is one way my way of solving this on a unix system specifically on ubuntu gnu linux 10.04

118051
getter	setter
if you have the one constructor with required parameters normal getter setter then your object is no longer immutable

118082
put	get
so at a high level you need an export component get stuff a transform component map to known format and a load take known format and put stuff somewhere

118091
postgresql	mysql
php on iis works and is a valid choice especially for a .net developer but you should really go with apache and mysql or postgresql instead of sqlserver to get the full php experience and also ensure that your skills are portable to any other popular os

118175
lisp	scheme
paul graham said that if he were to teach newbies he d do it in scheme but it sounded like scheme was still inferior to common lisp

118239
entity-relationship	entities
alternatively one can have entity-relationship representation of entities and data dictionaries

118267
implements	extends
however if you implements an objective-c style object capability without extends the language syntax then the code you end up with is quite messy

118313
free	malloc
when it comes to closing files in java it s malloc and free over there

118315
getter	setter
you can write setter getter just as you would in c++

118369
post	get
there are little to no http post get operations performed outside of ajax

118370
put	get
in my expereience most bas don t know what to put into the requirements once you get away from the fields on the user interface

118404
g++	gcc
besides the obvious answers of use g++ instead of gcc and cout instead of printf how can i ensure that my toy project is teaching me proper c++ paradigms and patterns

118418
free	malloc
use new delete instead of malloc free

118455
ienumerable	icollection
list t is a class and implements both the icollection t and ienumerable t interfaces

118455
ienumerable	icollection
also icollection t extends the ienumerable t interface

118455
ienumerable	icollection
if you have a list t you are guaranteed that this object implements methods and properties required to be implemented by the icollection t and ienumerable t interface

118455
ienumerable	icollection
the compiler knows it and you are allowed to cast them down to either an icollection t or an ienumerable t implicitly

118455
ienumerable	icollection
you know that icollection extends ienumerable so you can cast it down to an ienumerable

118455
ienumerable	icollection
whether you declare it as a list or an icollection or an ienumerable i m still requiring the program to create a list

118473
ienumerable	icollection
have a look at the msdn pages for icollection and ienumerable

118473
ienumerable	iqueryable
for example an iqueryable implements ienumerable and it s not a collection but is something that can be queried to return objects

118473
ienumerable	icollection
an icollection is more concrete than an ienumerable

118579
children	parent
the parent should tell all its children to render passing all necessary information as arguments

118583
boost	stl
however i m afraid that over time this means that i won t have a deeper experience and expertise so recently i ve been forcing myself to use c++ w boost and stl for everything even if i could do the task in python or perl much more quickly

118627
memcpy	strcpy
there is also a preference for the result first eg strcpy dest src memcpy dest src

118633
debian	linux	ubuntu	debian	ubuntu	linux
ubuntu is a desktop and server operating system based on debian gnu linux

118634
debian	linux	ubuntu	debian	ubuntu	linux
ubuntu is a desktop and server operating system based on debian gnu linux

118667
boost	stl
on the other hand if you ve previously dabbled in writing library core code that mimics some of stl boost functionality and found yourself being limited by the language because you ve come 95 to having a very cool elegant solution but then you were stopped because you found out language simply doesn t support what you want you will realize the truly awesome power of c++11

118688
sproutcore	javascriptmvc
javascriptmvc has been around forever and sproutcore too

118819
scheme	prolog
the first was an overview of a number of different programming paradigms - functional logic object-oriented - which were taught using scheme and standard ml prolog and ruby when i took the course

118841
put	get
you get to put a name on what those sub-functions are doing which clarifies your present thinking and simplifies the task of later maintainers

118909
ready	each
you can have a few code samples ready for each one and ask the candidate to read and explain them after they tell you which one they are more familiar with

118909
profiling	debugging
debugging profiling

118909
profiling	debugging
i ve always felt that php developers are lacking debugging and profiling skills perhaps only the php developers i ve worked with

118912
getter	setter
its sounds as thought they have a getter setter pair for each property as is normal for a typical bean and promoted all these methods to the interface

118919
firefox	safari	google-chrome	firefox	google-chrome	safari
i ve just run this on windows 7 x64 for google-chrome 15.0 firefox 7.0 safari 5.1 and ie 9.0 and they all score 100

118930
pascal	delphi
if you want decent documentation reasonably painlessly buy a copy of pascal analyzer pal i have used this on delphi projects and it was great - they may now have split the documentation functionality off into a product i m not familiar with pascal browser so you may have to buy both 300 usd but pal was a great tool for understanding where variables were being used where functions were being called from etc picking up all sorts of potential issues with the code

118938
mockito	jmock
if you are using a mock then i would recommend using mockito jmock or your other favourite mocking tool

118988
vim	emacs
learn vim or emacs

118996
actionscript	haxe
sharpdevelop for c# and flashdevelop for actionscript and haxe if you re so inclined

119005
emacs	gedit	vim	emacs	vim	gedit
on linux - emacs vim which have a learning curve of their own - or even just gedit

119012
agile	sprint
believe it or not agile methodology tends to be a political pursuit in many organizations making sprint a shallow artificial deadline eg

119018
for-loop	loops
why would the infinite for-loop be preferred over the infinite while loops

119021
ant	maven
build dependency management tools like ant and maven

119021
cvs	svn
source code control git cvs svn etc.

119066
int	boolean
these would be things such as + int boolean variables methods etc

119122
emacs	gedit	vim	emacs	vim	gedit	vim	bbedit	gedit	bbedit
it is not vim specific and is supported by a number of unix linux ms windows mac os text editors including emacs crisp vile a number of other vi clones nedit gedit jed ultraedit bbedit and dreamweaver some of these are via third-party plugins

119234
agile	scrummaster
the scrummaster s role includes collecting timesheets which are used to track progress instead of burndown charts detrimental to agile s efforts to build teams with motivated individuals

119241
haskell	ocaml
im trying to work out if generic programming was a functional programming feature which was then introduced into java c++ and c# or did the latter copy it from the functional programming languages like haskell lisp ocaml etc

119266
post	get
except for a blog post here and there describing the custom attributes someone created but that do not seem to get any traction - like one describing how to enforce immutability another one on documenting thread safety modeling the attributes after jcip annotations - is there any standard emerging

119269
vb.net	vb6
the supply of vb6 developers is going to dwindle while the vb.net c# ones are likely to increase and can keep your product moving forward

119271
vb.net	vb6
of course c# and vb.net now has taken almost the place where vb6 was 10 years ago

119303
pull	push
so now an extra step has been added where someone has to approach one of those developers tell him to pull and do the merge and then push again or you have to build an infrastructure that automates that task

119354
srp	principles
activerecord always felt like an extremely useful anti-pattern but i do agree that it goes against srp and additionaly that it goes against the dependency inversion principles

119405
postgresql	mysql
m in lamp is for mysql but postgresql is common

119463
screens	tablet
i mean today if we have a new tablet it s almost a requirement for coding to have for instance an external keyboard due it seems to me it s very difficult to program using the touch screens exactly because the coding assistance is not conceived to write thousands of lines of code

119472
i2c	spi
there might be a few more - eg i2c or spi drivers for eeprom eprom or other i2c spi devices

119551
post	get	feedback	review
i know there is a code review site on stackexchange but it s not really set up for large projects and i didn t feel like the community there is large enough yet to get good feedback if i were to post parts of my project piecemeal i tried with one file

119683
argumentnullexception	argumentexception
argumentnullexception is narrower than argumentexception

119754
ssl	https
first https is merely http built on top of ssl so having an in depth understanding of ssl will be beneficial

119761
daemons	launchd
the person or daemons who launchd the program

119785
cvs	svn
even if your server doesn t use git you can use it to stage commits locally before pushing to something like cvs or svn

119791
pull	push
of course this advice only works with an scm tool that provides both a commit and push pull workflow

119836
superclass	subclassing
there are actually several problems when doing that but one that i never saw a solution to is when a subclassing loses a behavior or property that was defined in a superclass like a penguin not being able to fly there are probably better examples but that s the first one that comes to my mind

119840
lisp	scheme
lisp scheme

119842
superclass	subclassing
but every property of a superclass should apply to all of its subclassing

119847
superclass	subclassing
however it can be argued that a subclassing is merely an arbitary extension of a superclass

119847
inherited	properties
in this particular case penguin is actively shadowing the bird.fly method it inherited by writing a fly properties with value undefined to the object

119865
post	get
just browse through the sproutcore group post at google groups to get a feel for what s going on

119933
matlab	simulink
however some subsystems like the attitude control system and the fault detection and a space simulation are currently only implemented in matlab simulink to prototype the algorithms efficiently

119933
matlab	simulink
maybe some sort of functional programming feature matlab simulink encourage you to use it too

119935
icomparer	iequalitycomparer	comparator	icomparer
in c# the variants of comparator iequalitycomparer and icomparer allow sorting in distinct setups so you might end up implementing all of them some of them maybe more than once since you can implement the generic strongly typed versions as well as the non-generic versions additionally you can implement more than one of the generics

119958
haskell	scheme
i never learned ml scheme or haskell because i have a job with c and c++

119960
implements	extends
so a flying bird has to explicitly extends implements both bird and fly flying

119969
public	protected
until recently i would have just pointed you at plenty of other existing questions that say that you generally shouldn t need access to any private stuff in order to write unit tests - as the whole point of tests is to test the public and protected interface

120030
client-side	server-side
server-side scripting php juxtaposed with client-side code html + javascript without modularity is common almost encouraged to the detriment of clarity readability

120038
public	protected
there s obviously much more to oo programming but in essence this is why c++ gives you options of declaring data functions as private protected or public

120046
wordpress	joomla
in this scenario there is no real benefit in choosing wordpress over drupal or vice versa or any other cms like joomla simply because the challenges of the scenario have nothing to do with the cms itself

120046
wordpress	joomla
i d advice you to evaluate all three major cms for php wordpress joomla and drupal and decide for yourself

120067
requestfactory	gwt	requestfactory	gwt-rpc
using things like jax-rs or restlet you can leverage the code you wrote for your gwt app using gwt-rpc or requestfactory

120086
erd	diagram
and don t forget your data model diagram erd - but erd is not part of uml

120105
apache	cherokee
you may have a local web server apache cherokee even m in your pc and php server installed

120108
irrlicht	quake
quake 2 source code review it s complex but you ll get an idea how a real game works and the irrlicht engine tutorials should give you an idea how game engines are commonly used

120189
int	double
but even if you use int and dbl for int and double variables what about the zillions of other objects

120195
erd	diagram
answer 3 convert results from 1 and 2 into a class diagram and or erd use cases and sequence diagram or bpm diagram

120219
min	max
i have seen so many people always tending to redefine their macros min max rather than searching for what already exists

120227
post	get
there s a few blog post out there to help get started with all this too

120244
public	protected
document public and protected methods properties variables

120246
ndepend	fxcop
null checks well not sure i agree with you but you may be able to write ndepend rules or fxcop rules for that one

120277
width	height
the canonical example is a square is a specialised rectangle. but rectangles have height and width properties which calling code may assume are independent of each other

120322
ant	maven
i ve been working with ant and with maven

120322
ant	maven
in my experience maven has a very strong edge over ant

120322
ant	maven
now i d rather be surprised seeing someone who prefers ant over maven

120324
nexus	artifactory
maven is much more powerful but it has some additional infrastructure requirements you ll want an artifactory or nexus server to host your builds if you share components among multiple projects

120331
maven	pom.xml
lots of other great java tools know how to read a maven pom.xml file the benefit of standardization so tools like ides can set up a maven project very quickly and build tools like jenkins can easily execute maven builds

120334
ant	maven
the other problem with ant when compared to maven is the lack of standardization which has been mentioned in other answers

120334
ant	maven
maven s aim of convention over configuration means that two different projects will have very similar structure making transition between them much easier than with ant

120338
versioning	upgrade
or even upgrade to another versioning of the same database

120457
nhibernate	massive
i ve been looking into the so-called micro orms like dapper and to a lesser extent as it relies on .net 4.0 massive as these might be easier to implement at work than a full-blown orm since our current system is highly reliant on stored procedures and would require significant refactoring to work with an orm like nhibernate or ef

120497
getter	setter
when are getter and setter justified

120529
entity-relationship-model	datamodel
some good examples are keet s formal comparison of conceptual datamodel languages uml entity-relationship-model and orm from academia and the meta object facility mof from industry

120558
imperative	declarative
it s an imperative language whereas spreadsheets etc. are declarative languages

120603
multiplying	multiplication
is booth algorithm for multiplication only for multiplying 2 negative numbers or one positive and one negative number

120604
versioning	upgrade
because if you don t then at some point you re going to upgrade and you ll run into trouble the build breaks because the build machine doesn t have the latest versioning

120604
put	get
one of the first things i did after i managed to get a build to work was put the toolchain under source control

120604
versioning	upgrade
no lone wolf can upgrade his own machine and commit a bunch of source code that depends on the latest versioning of some tool breaking the build for everyone else

120608
vim	emacs
after all we want all ides or editors like vim emacs to do syntax highlighting which is specific to each language and support many simultaneously

120624
division	multiplication
i first learned how to program and only then started studying math i knew nothing about math didn t even know what the nth root of a number even meant didn t know that division is inverse multiplication

120654
dia	visio
since a use case diagram is simple tools such as dia or visio can easily be used to create the image

120700
perl	tcl	fortran	ada
i have been paid to program in fortran c c++ ada emacs-lisp tcl java perl python ruby javascript groovy and a few others

120707
int	double
after user finishes survey client sends list of pairs id int + percenthit double

120718
post	get
usually people would just link to pages via the get method and issue any type of updates deletions insertions updates via the post method

120794
websphere	ibm
ibm publishes a lot of documentation about java because they ve implemented a jvm called ibm j9 as well as the websphere application server

120802
put	get
when you get an input field you immediately can t handle on your own instead of asking further information you simply put it in your front-middle-end interface and require the front-end guy to supply you with this parameter that will be passed unprocessed to the back-end

120828
getter	setter
when are getter and setter justified

120831
getter	setter
getter and setter don t violate encapsulation they provide it

120831
accessor	properties
a class which has a one-to-one correspondence between properties accessor and ivars can properly be said to encapsulate its state but it may not be using that encapsulation to best effect

120831
inherited	subclassing
example 2 it s often said that inherited breaks encapsulation because subclassing typically depending on the language have direct access to the parent class internal state

120831
accessor	ivar
despite this programmers can take advantage of encapsulation by using accessor sometimes private accessor to access state from a parent class instead of using the ivar itself

120849
getter	setter
they can be as noted in other answers getter setter by definition provide some encapsulation of the field within the object

120864
richfaces	trinidad	richfaces	openfaces	richfaces	icefaces	openfaces	trinidad	primefaces	trinidad	primefaces	openfaces	primefaces	richfaces	primefaces	icefaces	icefaces	trinidad	icefaces	openfaces
richfaces icefaces myfaces trinidad openfaces primefaces vaadin zk itsnat

120880
factories	presenter
perhaps a better solution is to use a factories class or method that knows how to build a presenter

120880
factories	presenter
the view would pass itself to the factories method and store the return value in it s presenter member

120958
fuelphp	kohana
kohana alloy fluency and fuelphp support hmvc natively and kohana s hmvc approach is discussed in scaling web applications with hmvc and optimising hmvc web applications for performance by sam de freyssinet

120976
int	double	int	chars
my guess for the first one ptr is a pointer to a function that takes as parameter an int and returns a pointer to a function that takes as parameters a pointer to pointer to double and a chars and returns a pointer to float

120976
int	chars
and for the second one ptr is a pointer to an array of five pointers to functions that take as parameters a constant pointer to chars and a pointer to int returning a pointer to a pointer of unsigned int

120976
int	chars
chars const int

120979
int	double	int	chars
declare p as pointer to function int returning pointer to function pointer to pointer to double chars returning pointer to float

120986
post	get
d - try to search for the word books in this site user experience - you will get plenty of post

120992
haskell	ocaml
for example there are functional haskell and ocaml versions which create a new board each turn by applying a function to the previous one while the graphical ocaml version uses two arrays and updates them alternately for speed

121019
inherited	properties
sometimes i m using multiple inherited just to split read and write access to some properties into public typically read-only and private typically write-only part

121020
int	chars
chars const const bar 5 int

121020
int	chars
declare bar as const pointer to array 5 of pointer to function int returning const pointer to chars

121020
int	chars
unsigned ptr 5 chars const int

121020
int	chars
declare ptr as pointer to array 5 of pointer to function pointer to const chars pointer to int returning pointer to pointer to unsigned

121026
accessor	properties
some languages demand the type of an accessor to be equal to that of its properties so you might need to change that

121063
hide	show
as a result it has to be surrounded by a lot of mpl code to handle events move data in and out of controls show and hide controls or gray them etc

121122
nullreferenceexception	argumentnullexception
add the argumentnullexception if they add code before the first dereference or simply add the code and later on allow a nullreferenceexception to be thrown

121125
nullreferenceexception	argumentexception
by giving them a more specific exception argumentexception they can construct their try catch in such a way to handle this error before the more general nullreferenceexception which may be caused by any number of other reasons that occur elsewhere like a failure to initialize a constructor variable

121188
rbac	acl
i ve read a little about acl rbac are they the patterns that i need to follow

121228
super	abstract
so based on that i would suggest you to use some external utility class rather than adding an abstract super class

121245
ppl	tbb
intel s tbb has only been around for a few years and microsoft s ppl has only shipped since last year

121245
ppl	tbb
if you use something like tbb or ppl then concurrent code is well not exactly trivial to write insofar that concurrency is never trivial but far from arduous

121256
put	get
we ve simply put 3rd party libraries in our own repository under lib libraryname tags 1.2.3 and using svn externals get those libraries to where they are needed

121334
switching	screens
if you re worried about spewing out large debug files you could write it all to memory and only output it to file or screens if you need to at user s command on exception or if a switching is on for that particular feature etc...

121336
cpython	ironpython
in fact the python tools for visual studio can be used for cpython as well as ironpython which is pretty neat though i haven t tried it yet.

121354
debian	centos	rhel	suse
our clients primarily run rhel and centos but we do have some using suse and even debian

121408
google-chrome	safari
in google-chrome 15 safari 5.1.1 the configurable attribute is set to true and delete result is also true but the final result is still

121432
ubuntu	debian
debian and ubuntu both use aptitude

121442
debian-based	ubuntu
you might be able to get away with an rpm for all redhat-based systems and a deb for all debian-based systems this includes ubuntu

121468
haskell	ocaml
i wanted to ask you people in which cases it makes sense to unit test statically typed functional code as written in haskell scala ocaml nemerle f# or haxe the last is what i am really interested in but i wanted to tap into the knowledge of the bigger communities

121479
scalacheck	quickcheck
in this case using quickcheck for haskell or scalacheck for scala can let you write down these properties as expressions of the language and check that they hold for random inputs

121493
superclass	subclassing	inherited	subclassing
template method patterns make subclassing to implement special code by abstract method and the subclassing inherited common method from superclass

121493
subclass	abstract-class
so i do not think this has many abstract-class it is only one abstract-class all subclass is instance class

121512
google-chrome	firefox
eclipse netbeans firefox google-chrome or chromium rather apache subversion git the list goes on

121517
vim	jedit
editors like jedit and vim

121554
restrict	shared
non-disclosure agreement nda this is optional confidentiality agreement ca confidential disclosure agreement cda proprietary information agreement pia or secrecy agreement is a legal contract between at least two parties that outlines confidential material knowledge or information that the parties wish to shared with one another for certain purposes but wish to restrict access to or by third parties

121591
pull	push
you don t have to distribute push or pull to or from other machines

121602
hash	salt
just image if it is wise to send userbo to outter world when it contains hash password and the salt

121604
multiplying	add
there are two ways it can go - the colleague will be a drag and you will end up redoing what he or she did or the skills of two of you will multiplying not just add up and you will really appreciate working together

121770
ant	maven
tools like maven and to some extent phing ant are built to assemble applications from various disparate sources - based on some sort of external configuration file generally xml

121771
switching	screens
to avoid this and to make the switching between contiguous frames smoother the graphic card uses double buffering one of the buffers contain the actual frame shown on the screens while the next frame is prepared in the other buffer which is not visible

121778
inherited	properties
in computer programming with object-oriented programming languages duck typing is a style of dynamic typing in which an object s current set of methods and properties determines the valid semantics rather than its inherited from a particular class or implementation of a specific interface

121863
versioning	upgrade
this is a good thing as it lowers the risk of things breaking when deciding to upgrade to the newest versioning of libraries

121883
pull	push
browser based clients can make ajax calls to push and pull json data between the web service and the browser

121960
versioning	upgrade	installation	upgrade
this makes the timestamp indicative of the build versioning not the time of installation upgrade

121961
rss	feed
they should all have rss feed

122084
solaris	bsd
dr-dos plan bsd sun solaris hp ux openserver.....and so on

122089
cvs	svn	bazaar	git	bazaar	cvs	bazaar	svn
ask what they use for version control git hg svn cvs bazaar etc.

122105
ocaml	scheme	lisp	scheme	haskell	scheme	haskell	ocaml
learn haskell or some other pure functional language lisp scheme ocaml to name a few you can find more on wikipedia

122119
subtract	add
for example in the equation the add function might follow the rules we learned in algebra and subtract 5 from the right hand side

122119
subtract	add
as for generating the explanations as part of the add function it simply records what it is doing subtract 5 from the right hand side. the computer has to take those steps in order so writing it out in english isn t that much additional work

122140
ubuntu	debian
choose which distros and which of their versions you are going to support and provide the appropriate package .deb for debian ubuntu .rpm for rhel fedora etc.

122140
ubuntu	debian
you might strike it lucky and for instance your debian .deb can be 100 good under ubuntu but that doesn t happen all the time iirc debian and ubuntu init scripts are different

122291
implements	extends
extends host objects to implements the dom api

122343
profiling	benchmarking
if you get to the stage where your application is not performing as well as you need it to perform then you need to profiling your application benchmarking it with typical and worst case application loads

122353
post	get
from a more technical perspective one can think about dispensing with the browser altogether and programming get post requests directed to my forum and other web-based resources

122353
google-chrome	firefox
among browsers i favor firefox and google-chrome

122385
firefox	safari	opera	firefox	opera	safari	opera	google-chrome	google-chrome	firefox	google-chrome	safari
there are at least four great and free browser alternatives on most platforms google-chrome opera firefox safari

122479
post	get
use a javascript library to do your ajax post get then use javascript to update the page based on the response

122507
backbone.js	javascriptmvc	sproutcore	javascriptmvc
the next challenge seems to be coming in the form of various controller frameworks knockoutjs backbone.js sproutcore javascriptmvc the list goes on

122514
backbone.js	javascriptmvc
backbone.js knockout javascriptmvc do not have browser normalization baked in so you need a tool for that

122603
int	double
you can get an int or a double or whatever type you want as long as it s in a certain type class

122603
int	double	int	chars
you can even have polymorphic constants so maxbound can be the maximum int double chars ...etc. all depending on what type it s supposed to be

122605
sorting	filtering
as the application grows you will probably want to add methods for sorting filtering highliting and transparently fuse in data from other data sources

122608
clang	llvm
now about objective-c i recently completely switched to the llvm toolchain with clang instead of gcc

122647
backbone.js	javascriptmvc
but javascriptmvc is much more powerful in terms of features vs backbone.js or spine

122647
getter	setter
.model supports associations getter setter defaults validations

122657
dao	facade
i think that if ledger was a table in db i suggest put these thress task to one class e.g dao .if the ledger has more logic and was not a table in db i suggest we should create more class to do these tasks may be two or thress class and provide a facade class to do simply for customer

122684
codeigniter	kohana
i currently work with zend framework but i also know about codeigniter and kohana

122692
quicksort	heapsort
quicksort heapsort bucket sort insertion sort radix sort bubble sort or a bunch of possible others

122704
codeigniter	kohana
i personally wouldn t use zend for anything below a certain size scope - things like fat3 or fuel are ideal for brochure sites whereas codeigniter and kohana are intended for mid-scale sites like blogs

122705
symfony	kohana	codeigniter	kohana
it s a python equivalent to php frameworks like zend framework kohana codeigniter symfony and others

122840
versioning	upgrade
customers are encourage to upgrade as new features and new platforms are only supported on newer versioning

122841
versioning	upgrade
if you charge offer a discount for upgrade to the new versioning

122841
versioning	upgrade
add at least a few new and useful features in a new versioning to incentivize the upgrade

122841
versioning	upgrade
also from a business perspective you shouldn t stop support of the old versioning until you can afford to lose the remaining clients that are clinging to the old versioning and don t want to upgrade

122848
lisp	scheme	haskell	scheme
there are other languages which may be better suited than php if you want to see things from a different angle - i suggest that you try a functional language like lisp scheme haskell f# or a weakly typed language like python

122870
lambda	first-class-functions
secondly in learning linq you will expose yourself to many of the powerful new c# features and .net language extensions such as implicitly typed variables anonymous types object initializers lambda delegates first-class-functions generics iterators using yield and extension methods

122898
imperative	declarative
imperative declarative procedural object-oriented functional and even logic all have their place depending on what you want to do

122898
put	get
you want a challenge that you can learn from but you don t want something so difficult that you get put off

122898
erlang	lisp	erlang	scheme	erlang	ocaml	ocaml	scheme	ocaml	prolog	lisp	scheme	lisp	prolog	scheme	prolog	lua	scheme	haskell	scheme	haskell	ocaml
clojure a lisp dialect for the jvm factor a stack based language go described as a cross between c++ and python haskell a purely functional strongly typed language erlang a fault tolerant real-time concurrent language scheme another lisp dialect fantom which claims to be portable across the jvm .net clr and javascript in the browser scala a jvm based language which combines oo and functional paradigms ocaml another statically typed oo functional language ruby popular with rails lua a small portable scripting language and prolog a declarative logic language

122935
versioning	upgrade
the company doing the upgrade also supports the previous incompatible versioning

122964
int	double
as for the second point what happens when a premature selection of int is replaced by long or double

122965
int	boolean
public boolean connect string h int p

122965
int	boolean
public boolean connect string hostname int port

122983
pop-up	dialog
the end result would pop-up a dialog with the contents hello world 15 it would also change the text of a label and make it blue

122989
ncover	fxcop
check out these articles on continuous integration for .net programming using msbuild cruisecontrol.net fxcop nunit ncover and subversion.

123011
post	get
you may also express your thoughts in case any of first 3 points get changed - the customer now wants our service to allow 10000 simultaneous users or we now need to only allow every single user to post once per 15 minutes etc

123118
ocaml	scheme	lisp	scheme	lisp	smalltalk	haskell	scheme	haskell	ocaml
i also think that learning a very different language like ocaml haskell common lisp scheme clojure smalltalk will change your way of thinking even on plain c++ code

