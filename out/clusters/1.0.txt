it sounds like the table is a lot larger than ram so this means something like 5555 disk reads -- likely to be the slowest partthe queue can contain any number of items but for google-chrome safari it is not more than 20they show up centered on mozilla firefox but in google-chrome it aligns more to the right hand sidehttp is not the internet any more than ftp telnet or world of warcraft are the internetplease always try to use post method for submitting data as it is more secure than get methodopen up the fiddle in both firefox google-chrome to see what i m talking about - in firefox the positioning of the background image is much lower than in google-chrome safariif your goal is to eliminate certificate fingerprint warnings during push pull there s a better way to do thislodash is another faster implementation of underscore.js that will provide a lot of utility methods for working wit arrays objects functions etcsome people argue gcc g++ is more popular on linux while icc is more popular on windowsi found it fairly easy to generate addition subtraction and multiplication questions at random however division is more trickyjquery might have better methods than fadeout fadein for this jobram is much faster then disk ioin my original project there is more than one textbox for currency description textarea chekcbox etcthe more general issue of overshadowing a model field with a property setter getter is more difficult and prone to caveats refif you insist on having many nbs you should merge them through multiplication or addition of logarithms which is the same from mathematical perspective but multiplication is less stable in the numerical sensetcp is slower assures data arrival udp is faster data corruption may be possiblegoogle-chrome is extremely slow for your code path but grep seems to be 50 faster than array.filter here making it 900 slower than the firefox runif you want to follow the spec then put says that the body is a representation of the url you put to while post is more general purposebut note that while stateful isn t used much these days it usually makes more sense to opt-in for stateless sessionscope is much more universal and fits into nearly any session-based scenarioi understand that kerberos has better performance than ntlmi have seen other people asking the same question why get method is faster than posttoo bad that find calls often end up verbose Ã¢ it s even worse with stl than with boost rangesalso one benefit of declarative programming is that purpose is usually more easily understood from reading the code whereas imperative gives you finer control over executionthe subtraction case is going to require a little more work than addition in this codeit is the equivalent of a goto but is more restrictive in that labels may be used only in break or continue statementshence memcpy and strncpy work almost the same here and memcpy is more efficient and less prone to errorrichfaces is more developed and tested generally since primefaces came out later than rfso no big surprise zsh being better than bashmore sophisticated distinctions between iaas paas and saas are also described in quite a few topics here on stackoverflow for instance in what is saas paas and iaasthe parent process always can keep track of its direct children easily as fork returns their id grand children gets more tricky ... and send a signal to any of its children on exiting gracefullybasically mongodb supports no more than 100 levels of nesting for bson documentsbut there are many citations of real world tests which show that heapsort is significantly slower than quicksort on averagewe ve recently switched from trac to redmine where i work and i think i like it a little more than trac and use the wiki functionality almost everydayserver-side validation is more secure than the client-side as the user cannot see the code even he does a view-sourcein my limited experience using objective-c code from swift is a more common use-case and fairly trivialyou can also use strtol which is obviously better than atoifor suitably large examples of each dictionary overcomes the constant factor by which it s slower than std map and will actually do operations like lookup insertion etchowever i suspect i m having a larger issue with using objective-c interfaces with extensions in a swift project or my understanding of how that worksdocumentation provides more information than private protected public does and a good system will have documentation anywayi have also found that a while-loop is faster than a for-loopif you need to do something a set number of times a for-loop is generally more concise than a while loopsthe main difference between avro and thrift is that thrift is statically typed while avro uses a more dynamic approachif almost all elements fail the filtering then it s considerably slower than just sorting everything since you ll end up selecting thousands of timesmysql s version is apparently marginally faster than postgresql but lacks some of the more advanced spatial features therefore it s pretty much limited to finding records that match a certain range of coordinatesyou can use the accessor annotation to specify a method to be used when serializing a properties which is a cleaner way of doing iti need to add more than one textview and imageview in listitem and also i need to add header s at some random positionsisn t testng supposed to a better than junitthe text-align center is for old ie6 whereas margin works for newer browsershowever if this is indeed the case - and the data does not fit ram and you cannot use map-reduce i suspect sorting and iterating - though will be o nlogn will be more efficient using external sort - because the number of disk accesses will be minimized and disk access is much slower then ram accessyou could also use nvl but that is a legacy function and coalesce is quicker since it stops at the first non-nullfread ... is extremely fast 10 - 100 times faster than read.table ... or read.csv ... for large datasetsbesides strtol is a better option than atoi as strtol can handle failures betterwhen the data is in memory - you can do anything much faster on it since disk io is extremely slower then ram so sorting it and reading it multiple times is expected to be much slower then manipulating the data on memoryandroid-query is better than picasso because while in offline mode no internet connectivity picasso tries to fetch record form server whereas android-query maintains its cache form where it fetched the imagestcp is much better than udp in terms of reliabilityi haven t used it myself though as per this answer it s quite a bit more confusing than lisp scheme macrosis it because request response handling on wildfly is kind of more lightweight than the jboss 4.2.3my experience say that apc is nearly 7-8 times faster than memcachedwhile vimeo is more of a professional site youtube offers html5 h.264 video playback support for all videos so they ll play on iphonehowever the tables are huge and the union all i read its faster than distinct takes forever to execute even with just two tables let alone 6it seems some operators do better with post s than get s - this is a feeling i get from what some nigerian users mentionit s just a little slower than using apache bench directly against nginxmy impression common lisp is more for getting stuff done scheme is more for education and funi prefer the beautifulsoup syntax as i find it more natural but i find that lxml is better when i m trying to parse unknown quantities on the fly based on variables-- generating xpath strings that include variable values which i will then use to extract specific elements from varying pagesi had created the website www.suezre.com and when viewed in google-chrome or firefox figcaption on the pictures looks good but on safari it takes much more spacethis should be possible maybe be aware snap.svg isn t so compatible with older browsers in which case you could look at raphael which is snaps older brother d3.js is very well established as wellsilex seems to have a bigger community than slim maybe it s just my point of viewfor xml documents it may be that the elementtree offered by lxml is more productivebut certainly wrong syntax in the for-loop is there better way to code it so that after loops i can geton the other hand you may want stable sorting in other contexts as well and so if you have the stable_sort function defined this approach would still be more straightforward than filtering out the numbers with each sign and recombining themthere is another lib folder in home username directory which contains older version of pythons alsothe one used by google-chrome and is slower than mobile safari s nitro javascript engineunion all will perform better than union when you re not concerned about eliminating duplicate records because you re avoiding an expensive distinct sort operationif google-chrome seems to finish earlier than firefox then that is the freezing glitch in actionwhat we can see is that regardless of raw hardware power google-chrome seems to run up to three times faster than edge and also significantly faster than firefox all updated to the latest verionthere might be some edge cases where gif is slightly better because the png format may have a slightly larger overhead from metadata but it s really not worth the worryinnodb supports better locking semantics so if there will be occasional or frequent writes or if you want better data integrity i d suggest starting there and then benchmarking myisam later if you can t hit your performance targetsfirst maven is a much younger tool than ant or make so you have to expect that its going to take time to get to the maturity level of those applicationsif you don t need to serialize raw pointers to things and instead either use c++11 style smart pointers or no pointers at all i d recommend using cereal as it supports pretty much everything in the standard library whereas boost has a more limited subseti ve heard that rar decompression requires much more memory than zip decompressioni m taking a quite educated guess here that firefox is more forgiving with the irregular syntax than google-chromeyou might try running say apache or nginx which is even simpler to set upthe bson storage format used by mongodb supports more native types than javascript including 32-bit and 64-bit integersi was also looking at sdl allegro sfml i didnt see much tutorials help on this but heard its better than sdlalmost any new cpu has more than one core or if it has just one it might support hyperthreading and thus pretending it has more than onescalamock looks more natural when developing applications in scala however from what i read it seems to support fewer test scenarios compared to mockito and it s also less maturewhile postgresql is less popular than mysql most of the serious web hosting supports itmyisam is almost 4 time faster than innodb which is not acceptable in the environment we are working as i mentioned earlier that every second is worth many dollers for usit s possible for icalendar software to make this a lot shorter with rrule but these calculations are hard and not everybody implements itin my opinion this is a more elegant solution than jsf and i think tapestry s ioc container makes it more powerful than wicketdownload xcode free and learn objective-c or swift swift is easier to learn than objective-cpost request are safer than get but that does not mean are invulnerableto be specific the quicksort runs faster than mergesort in the first test case and loses badly in the following 9 testsbasically what is happening is that when i expand one of the expander items and that itemscontrol contains a larger amount of items 25 the rendering of the list appears to be truncatedwhile you could use either tcp or udp i think you ll find udp gives better performance- i usually find debugging memory in hex x command is easier than binary so i will not use my solutionlong-term evidence is showing that pypy runs certain python codes slower than cpython and this drawback seems to be rooted very deeply in pypysafari is more secure than ie or google-chromeany execute statement becomes prepare sooner or later it need to be parsed optimized compiled and then executemy hands-on experience is that i usually am better of with getter setter and constructorsi created a php file which deals with file deleting and uploading but i this file is one directory lower than the folder for filesin my experience hide and show is a better approach because it doesn t mess with the domis it good idea to make serializer private static readonly to avoid spawning hundreds of temporary objects is it more faster than i didi switched a thread from extends thread to implements runnable implements runnable is better practice righthowever rather than extends actionlistener as in your second example you ll probably find that putting the listener implementation into a different class even an inner class which implements actionlistener provides better logical logical separation of your codeto avoid misunderstandings my question is not whether web2py or django is betteri know sympy has its own plotting module but the one in mpmath seems easier to use so far with the exception of this one issue of courseto achieve this you can consider instead of storing the state in an array to make use of .data to store the state show or hide is much easier to maintain and understandthis is java detecting what you are doing and thinking it may be a mistake on your part - int s are less specific than double sedit again one completely different approach would be to use pypy s sandboxing mechanism which should be much more secure than cpython plus a sandboxing moduleboth use the activerecord pattern so you ll actually get your database tables back in objects without fancy domain logic but datamapper is way easier to work with and is thread-safeeval is more dangerous than get post because the submitted content can run functions like include which can access any file apache has read privileges for or shell_exec which can do anything in the shell the apache user can do etcalthough i should warn you for anything more complicated than addition and subtraction and shifts you ll need to use non-trivial algorithmsthe above links to libc++ which is the preferred c++ standard library for mac os x with clang and a lot more complete than libstdc++ even when considering the newest gcci suspect the continued prevalence of cvs svn is much more to do with inertia than anything elsei have been working on a simple textctrl project to get more acquainted with wxpython and i have hit a small road blockudp is significantly faster than tcp and is why it is or was used for video and various things back in the daya hood technique is to tag milestone releases of your projects giving then a version number and then manage dependencies with maven or a similar tool a bit more sophisticated than anthowever if you want to use the sha256 hash alogorithm which is better than the md5 then here s a code sampletcp is very much analogous to a phone call whereas udp is more like mailboxesbut it doesn t seem possible to roundtrip the geometry as there are less setter than getter the geometry cannot be re-constructed from an empty object just by calling setterits was said that awt is faster than swing as it uses the platform component but due the arrival of faster processor etc ..labeled break like in java would be better than goto for this purposei had a situation where i needed to do more than just show or hide the one elementjust a wild guess here but if you re using cvsnt on the server this observation might be based on the fact that cvsnt simply is much better at merging than svn because it has the notion of mergepointsinnodb is affected by the primary key much more than myisam and it could make a noticeable differencewhen using embed in - uiview the new view will be a bit bigger than the subviewsquicksort is a partitioning sorting algorithm you might refer to mergesort which also is a partitioning sorting algorithm the biggest difference is probably the speed quicksort is faster even though both of them are o n log nthis means that memmove might be very slightly slower than memcpy as it cannot make the same assumptionson modern processors floating point multiplication is generally slightly more expensive than addition which is one reason why compilers will typically replace by x+xi recommend gson as this has small memory footpring just pull parsing is about 16k jackson is way biggerthe error is because the gridview is being applied to more than one listviewcan anyone give some details about oracle hadoop connectors will it perform better than sqoopwhat you have described in your question makes the use of this function better than mouseover and mouseoutthat means you don t know how many iterations you re going to need so a while loops is more suited to this task than a for-loopthe reverse while loops is generally faster than a for-loop as wellin such a simple arrays you shouldn t be concerned about memory usage but the for-loop consumes less memory than foreach because foreach uses an internal copy of the arraysthe other question is that what i am hearing from our group leader is that postgresql is better than mysql when working with coordinatesif i try to do a google search for website loading slower in google-chrome than in safari i get a lot of results about how safari is slower than google-chromeok there are some cases where myisam is faster than innodb but rarely enough that it s worth putting up with the lack of acid-compliancealthough both approaches are o n the for-loop has a larger constant because of loops overheador is it merely a hint to whatever tool converts between swift and objective-c to better deal with swift optionalsi need to send bulk mail in my php application but its outgoing limit was 500 if i purchase vps server for sending email if it grows more than 1000+ gmail hotmail will mark me as a spam so what is the solution for this issuefirefox works a bit better than google-chrome but the settimeout just seems to delay the final result being shown rather than delaying each steptry reading this link also for more study over hdpi and mdpi concepti have read that implements runnable is better than extends thread but i have no idea of howinstead i was hoping to just put the logic in a getter setter that seems more appropriate to mefrom my point of view the datamapper model is much easier to grasp but since activerecord is the defacto standard it feels weird to change the orm just for this little problemfor example when the setter or getter function is more complicated than just the triviali am using a sparse format but suggestions are welcome on other formats too i am able to use the data with weka in a dense format using the function names as variables and it works just muuch slower than with libsvmif further stream will not be used to read values from it it s istream part won t be used ostringstream is more suitablequestion is there a way to define conditional dependency in the build.gradle or another settings file so that a particular gradlew version is used for the build process that is ensured to be in compliance with the available java version either 1.6 or 1.8 either by manual definition or better by letting gradlew decide which version of itself to useperhaps a highly optimized and tuned implementation with sse avx multithreading is better for meinstall newer emacs by homebrew or macportsin our approach our test framework extends the standard test case class junit in our case but testng seems more capable that sets up and tears down the various database dependecies with each test using the following stepsif a post has a more recent reply i want to get the replies created_on value but also get the post post_id and subjectthe problem is that the server-side selectedindexchanged event triggers earlier than the client-side change event so the data never reaches the server-sideif you cannot tolerate that use getline it s harder to use so use fgets if in doubton linux these syscalls are often mmap 2 perhaps with sbrk 2 and since linux systems are mostly free software you could actually study and improve the implementation of malloc musl libc implementation of malloc the more common gnu libc malloc implementation is perhaps more complex to understandwhat i would like to know is whether there is something in php that could check test in some simple way whether a folder directory contains file older than sometime or even how many of such files are there without any kind of manual go-throughyou can also do this stuff the old fashioned way using sqlcmd from command line dbas love this for some reason but for us mortals ssms is much less of a struggleletÃ¢ s encrypt provides great scripts for apache 2 and nginx but not lighttpd which is much more comfortable for small systems like raspberry pi or old boxesi ve found that even if lxml is faster than beautifulsoup for documents that size it s usually best to try to reduce the size to a few kb via regex or direct stripping and load that into bs as you are doing nowthe other option is to use a foreach loops which is slightly slower than a for-loop but works almost equivalently for all practical purposesthere is a problem here because i already have more than 40 get post request with different url namesyou should be able to do this in flotr which has a better license than highcharts by just throwing what they showed in this blog post on its sidea lot of people seem to say that writing compilers and other language tools in functional languages such as ocaml and haskell is much more efficient and easier then writing them in imperative languagesif all you want is to include a padding then you can achieve the same thing with the box-sizing attribute set to border-box that has far better browser supportwith library purrr you can have a prettier more compact form see soto s answer for an even more compact one with dplyra subclassing is more flexible and is treated as an entire object which responds to all superclass methods plus it s ownawt is really out of date people have more experience with swing no days and even javafxnote that i am assuming a user can get invited to more than one post which seems logicali read in some tutorials that android automatically scales up the images when the screens resolution is bigger than mdpi2 using databasemigrations allows you to use an in-memory sqlite db for testing which is faster and more lightweight than mysql or postgresqlit possible to do this a bit better by using variadic macros to do the stringificationyou can not have multiple physical branches under one repository with mercurial like svn or bazaar but the good thing about mercurial imho is the easy user interface that is really straightforward and the performance that is faster than bazaar although bazaar is getting faster and faster in their recent releasejpg and png work well for most applications but the files will be larger than gif for very simple graphicsif you intend to do more than show hideif you have a really large matrix the example in your question is far from being large no worry there will be a ram hit and unlikely to be faster than a for-loop commented under your question because no copy of the matrix is made during loopsif their original password was longer than the salt + hash you may have just reduced the security of their password assuming a good password and ignoring hash collisionstrying to build a page of charts asp control objects that are smallish and then when we click on the image a styled jquery modal dialog pop-up that displays a larger version of the chartyou d be better off using mktime for this as it s dumber than strtotimeevidently firefox debugger firebug is better than google-chrome debuggerif we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getteras an additional note my suspicion is that you d need to indulge yourself in some pretty sophisticated benchmarks before you could conclude that udp is actually going to have higher performance than tcp for web servicesits not necessary and will potentially introduce bigger issues as you migrate your code to staging and production regionsnginx is more performant than apache in most cases with high-levels of requestswhy is implements runnable a better option than extends from thread classi am trying to make my div wrap the tag however it doesn t wrap the height is always higher of my div and my tag has no padding or margin i tried many things but doesn t work i am adding my style and the html code i am also going to add some screenshotsif one of the numbers is a constant your compiler might optimize by doing some combination of bit shifts and subtractions mostly for powers of two since hardware div mod is slower than addition or subtraction but on modern processors the latency already only a few nanoseconds is hidden by tons of other performance tricks so you needn t worry about itwhen the draggable is dragged over the droppable you change it s snapmode option from outer to inner and then when it s dragged out and the droppable is no longer active you change it backworks in google-chrome firefox a bit weirdish blur effect on hover opera ends look smaller safari ends look smallerbut for a really useful explanation you d have to tell us exactly which database and library you re using and which python versionÃ¢ cpython 3.3.2 s csv module seems to be a lot faster than cpython 2.7.5 s and pypy 2.1 2.7.2 seems to be faster than cpython 2.7.5 as well but then either one also might run your code faster tooÃ¢ and so onthe c function strtol is much better make it a habit to prefer that one to atoiif you need better performances than what scapy can offer you should probably use tcpreplaychildren is faster than find for example just like parent is faster than parentthe reason is that maybe like in my case the xcode bot was attempting to archive with the development profiling and development profiling is much easier to debugging than 4f96f173-7ebe-4892-b283-52489de2f409udp is not always faster than tcpthis way the upgrade rule detects older versioning and shows a custom dialog if it doesedit memmove is 2x faster than memcpy on the servertcp has bigger overhead than udp because it needs to add more data to your payload but you are guaranteed that your data will be received in it s destination in the order you sent it and not corruptedbut xquery will be more than schematron and i use xquery heavily to validate xml values and i should be able to produce html reports wellwhen you do get the parametres are written to url so you can access them easily on other hand it can be rewritten by user so post is more secure waypoor performance from mysql has more to do with it not being smart and automatically creating an optimized plan like sql server postgresql or oracle wouldor you could employ a request signing scheme in which certain request fields are hash together with the password of the user basically sending the password without sending the password similar to digest authentication but you can use something better than md5no problem mnt i mentioned possible compatibility between the method tried in 4.25 my solution and 4.00 your versioning but keep in mind the gap in time between these versioning is probably more than two years of upgrade and also a jump between backend databases versioning oracle 10g to oracle 11g r1.register spilling is pretty cheap on x86 cpus due to fast l1 caches and register shadowing and other tricks and the 64bit only registers are more costly to access in terms of larger instructions so it may just be that gcc s version is as fast or faster than the one you wantfrom reading this website it seems lxml is the most commonly used and fastest while beautifulsoup is slower but accounts for more errors and variationi suppose i could do this cleaner with int and or double using instead of likedecode the passwords yourself and re-encode them with a salt i recommend something a little more fancy than md5therefore the only types that should have access to a constructor are its derived types and hence protected makes much more sense than publicthe two vector graphic libraries you can focus are raphael and d3.js but d3.js is much more powerful with data bindingswt is more simple to use than swing especially if this is your first uifor example a lot of people that started at a higher level have no idea why shifts are so much faster than multiplication and division or the impact of branching etcit displays things normally on the screen of course but when you go to print preview in ie7 the only thing that show is longer description. so in other words it hide that first column and it also hide the second columnso far it has proven to be faster than smarty and it provides a compatibility layer to allow developers that have been using smarty for years to switch their application over to dwoo progressivelyi would make the conditions easier by ignoring capitalization by converting to uppercase before comparison and leading trailing whitespace by using the strip methodfor example english text has a particular kind of redundancy with some characters repeated more than others words that are repeated and more common than others certain words that are more likely to follow certain other words grammar punctuation structure etcalso robocopy is better than xcopythe only place where raphael defeats d3.js is fallback raphael supports older versions of ie where as d3.js is based on current web standards ie 9the swift runtime is smaller than the objective-c runtimei think it is possible to play better with the decimalformat and messageformat classes here is what i can come with it passes the test cases but i don t think it is that robustthe picture is in mdpi and hdpi and my testing device samsung galaxy s i think it s no more than hdpiif i do heapsort i can create the stack while i m sorting but would this be faster than a quicksort and then build the stack afterwordsreading a line of numbers spaced with white-space except n and then finally terminated with n is possible with scanf and ungetc but not worthy of coding except as an exercise as using fgets and sscanf strtod is far betterwhen i request the shares field i can see more than one post with shares but when i request post_id sharedposts for some of them i just get an empty data array in responseif you want a java gui that actually looks nice well nicer than swing or awt then you want to check out swt from ibmif you need to secure payloads that pass through multiple participants then you need something more than https ssl since https ssl only encrypts one link of the graphyou might be able to use mapzen s system as well but i haven t tried their system with large amounts of features whereas i know mapbox does work better than leaflet and openlayers for your scenariopotentially you are trying to model something in inherited that is better suited for composition or your base class should be taking in an object instead of individual related properties if the properties aren t related then perhaps your base class is doing too much single responsibility principlei wound up going with redmine and it s way better than tracx86 is considerably slower a few clocks plus a clock or so per function argument while 64bit is much less because most function arguments are passed in registers instead of on the stacklistview much better than the gridview dataview in that they let you write out clean htmli need a query to get results from stackexchange dataset in such a way that it returns me 100 top reputation users with not more than 3 post body of post for each userfirefox takes almost 3 times longer than google-chromeit seems activemq is better than rabbitmq in the sense that it is easy to set up and maintenance for clusterand is as far as i know faster than the combination of malloc and memset on the other hand malloc alone is faster than calloci find fireworks has an easier time dealing with vectors because they re first class objects while in photoshop they re actually a combination of a vector mask and a colour fillin the same breath i would also like to be able to run a specific number of child processes at any given time say for example n children running concurrently whenever one exits the parent process starts another child if needed but has no more than n children at any given momenttwitter desktop accomodates screensizes from around 1048px wide when you are on a screens that is smaller then that you are probably on a tablet or smartphone and if you open twitter from a browser on your phone you are instantly redirected to and prompted to download the twitter appfiltering before the grouping by is usually more efficient because it reduces the amount of data needed to process the aggregationyou might be better off looking at something more usable such as flask bottle etcnot to be confused ffmpeg is more recent and libav was used in some distributions of linuxmemcached has more functionality but is intended for distributed environments while apc works on single servers onlyas it happens my choice is textpad but just about anything which is more advanced than notepad ought to be able to do thisbut heapsort is assumed to be on average somewhat slower than standard in-place quicksorti was digging through the flask pluggable views documentation and while i find the methodview to be very helpful for making restful crud endpoints usually i end up wanting more than just get post put delete methods under a base route with common decorators and so forthedit i just came across saucelabs which seems to be even better than browserstack for manual testing and they also cover many web browsers tablet mobile devicesif you are looking for a more flexible build than ant or maven but at the same time utilize maven or ivy repositories you should consider gradleand before copying the directory it is better to zip the entire stata8 folder - that will significantly reduce copying time since there are plenty of small-sized filesand i want something simpler faster than creating pop-up dialogprobably you should start with something simpler than networking swing swt and androidplus being able to synthesise both getter and setter is a more complete solutionon the last iteration of the outer for-loop ndx is one less than array.length so when you call arrays ndx+1 that is equivalent to arrays array.length which out of bounds since arrays start indexing at 0since the flow of logic is still basically a loop but the api boundaries of the presenter is a cleaner boundary than view in mvp which helps decouple v and m in mvp than is possible in mvci know that declarative way is cleaner but sometimes imperative programming makes your business safer1 tcp is connection oriented and reliable where as udp is connection less and unreliableoh i see you need a constructor that has more access than protected but less than publicjs for tabs generally does no more than show hide maybe load contenti moved some .lib files from c program files x86 ibm websphere mq tools lib to c python27 libs and it compiled wellbut a get seems more logical than a post anywaywewtaco i noticed that your png file has wider dimension than the gif file and i am guess that could be a reason the black bars are showing upif i m reading your situation right it sounds like you d be better served by avoiding inherited on thing and instead thing about category-specific attributes as properties of the relation between things and categoriesespecially as vb6 is becoming more and more of a distant memory and the vb.net language takes on a life of its own in conjunction with the core .net framework advancingi am much more experienced with vbscript than jscript but i will give it a shot since not many takers on this questionpersonally i use sha-512 with a salt because a bigger number in the hash name means a better hashbut if you use public key encryption to encrypt messages you are a limited to small messages -- a 1024 bit rsa key encrypts less than 128 bytes and b going to pay in performance because public key encryption is much more costly than symmetric key encryption such as aes encryptioni ve also found unicorn to be faster than webrick especially in production applications and apps running on herokuwithout wanting to self-promote i ve also put together a blog post that goes into more detail on the aforementioned answer that should be of some usefor a unity3d game i m working on i have a situation where i want a read writeable property with a trivial getter but a setter which does some more workthis is better than using get comments api for every post to see if there is new commentit seems simpler to me because i m more experienced with server-side than client-side developmentconceptually it seems like a type of central authentication system cas but is more similar to shibboleth also a federated identity management systemon arm it is not or rather 32-bit os on 64bit uefi is technically possible only would still require the operating system loader to be 64bit but even fiddlier than on x86pypy which in general is much faster than cpython is considerably slower for this use caseaccessing and dynamically reloading non-class resources inside jar war files is way easierif your report is complicated and have many subreports and subdatasets its better to go this approach since ireport will make it quicker and easier for you to design and maintain laterfar easier than getting mysql or postgresql installed on a system.it s similar to the solution proposed by ckersch except that it has more overhead you re changing the dom every mouseover mouseout but is easier to implement and doesn t change the structure of your svg at allswift is neither easier to read nor understand than objective-cit is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn or tools based on it but svn2git which is much more suited for this use-caseis it more safe than get or postof course if appropriate you can use just static access syntax public variables or static setter and getter which is even more simple and clear than first methodi believe the error might be how firefox and google-chrome handles these multiple times included jquerys and it might be that google-chrome uses the older and firefox newer versionwhat is even better is oleksiy s solution because surprisingly .foreach method uses less memory than classic for-loop so if you re optimisation freak use .foreach but after all it doesn t matter because your arrays size is small so you won t notice any speed differenceswt is claimed to be faster than swing although in modern versions swing is also fast enoughfirefox seems to animate the element quicker than google-chrome does and so while a duration of 1s is enough for the animation in google-chrome firefox needs it to be 2s to be slower and show the effectis the performance of coalesce field constant better than isnullif you use post when get is more semantically correct it is less communicative of the intent of your request since post usually means you are sending a payloadi have not found a lot of times when implements an interface would be a better system than extends a superclasspart of the compiler toolchain includes an experimental jit generator now in its fifth incarnation and starting to work really well - the goal is for a jited pypy to run much faster than cpythonof those three ogg would usually be smaller than mp3calloc itself is slower than malloc because you have to spend some time to clear the contents of allocated memoryplease don t mention memcached i am already using it but it is not suitable as direct replacement of apc because i am doing many apc_fetch calls because apc is much faster than memcached for this purposethere are some situations when myisam is infinitely more efficient than innodb when manipulating large data dumps offline because of table lockanother way to do the same thing is to use jvisualvm which is much more user friendly but also more memory consuming than jhatdealing with a stateless cluster is often simpler then dealing with a stateful clusterif you ve been using laravel then you already know it is better than codeigniteraccess to disk is slower so when you ve written to a file it will be flushed to disk and no longer reside in ram which means that next time you need the file you might be going to get it from disk slow whereas in memory mapped files you know the file is in ram and you can have faster access to it then when it s on diskthe advantages here are that you can block off certain methods or certain parts of couchdb using nginx apache which is typically more flexible than the http options available in couchdbi know many of pypy s data structures are actually smaller than cpython s but again that has nothing to do with the jiti hear all this stuff about bazaar being slower than gitextends makes more sense to me here than implements maybe it s a typo in the bookcan i safely assume that vb.net result is more precise than vb6 and discard the vb6 result completelyfwiw i have never gotten freebsd to work properly under virtualbox perhaps if you need that you would be better off with vmware which doesi inspected the range object in both google-chrome and firefox and then noticed that firefox s range object is far richer than google-chrome sproto buffer and avro is better than than csv tsv file in terms of size but data is in non human readable formatrestful services does not implement an exact way to transfer the info you can use path query string form string or even multipart data so you can do it as you want but in your case instead of using get method with all the data in the query a post or put is more appropiate and you will not hit the query string limitif getting these in sync is an issue make the client-side timer shorter than the server-side oneit turns out jquery datatables is better suited for customisation and we have adopted this instead of using jqgridbut i d think bignum subtraction is a little slower than bignum additionthe c format is the same as is used by ctime but strftime is more flexiblethe problem i have is that some children have more than one parent but because in order to use the recursive parent nicely i need to group the results by id i only see distinct entriessome fancy compilers understand the un interrelatedness of instructions to a limited extent and will automatically interleave instruction flows probably over a longer window than the cpu sees to better utilise the processorsmost likely hashcode will be faster unless for whatever reason calling hashcode + equals once is much slower than calling compareto log n timespostgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use thatone camp most notably the linux kernel people thinks that struct a is clearer than the typedefpng images are always compressed lossless but their compression algorithm works better than competition gifusing any other browser google-chrome firefox and opera it s much quickerthe keylistener is an older interface from the awt days its still ok to use it with swing but is more of a general listenerthey are easily generated for udp simply by making the datagram bigger than the mtuas i noted in comments however if you re willing to rely on posix s strdup then that s cleaner than strlen + malloc + and has the same semantics you take responsibility for freeing the memory allocated for the copygenerally speaking passes in higher-level shader material systems yes higher than glsl cg hlsl like this one are a way of setting up states necessary for multi-pass renderingnow you can walk your collection with a for-loop without fearing that one arrays is shorter than another one or even use a foreach loops to go through elements without using an indexbut this operation inherently involves division which is expensive whereas computing an address from an array index involves a multiplication and is fasterthe thing is that gdi is still faster than direct2d if i draw to a bitmap and after it s done i bitblt the result back to the form it paints at 35ms and with the same graphics qualitythe level of abstraction of datamapper is way higher than the activerecord sfirebird was forked + - 18 years ago from interbase 6 which was opensourced for a short time since then it has diverged and firebird can no longer read interbase databases nor can interbase - as far as i am aware - read firebird databases more recent than firebird 1 or maybe 1.5while myisam can be faster for some queries innodb is usually quicker if properly tunedalso why does firefox perform way better than google-chrome on this benchmarki have a small table and the internet explorer 11 adds padding to the cells so the hole table is bigger than in google-chrome or firefoxthe reason i asking this is because i read tcp is slower than udp because tcp ensures order of packetsor you might be happier with a fast-forward mergei get the impression that most people think that hashing salt passwords is the more secure way of handling passwords but i can t figure out a way to comply with current company operations when using hash passwordsactually genson is faster and has more features than gson and has performances close to jackson but its a lot more lightweight seebut there are some cases especially in iot domain udp is more popular than tcp for its bigger transport overheadsuwsgi is better if you are using nginx i find nginx far better than apache personallyin the most simple way you can look at rsa one key of a keypair is nothing more than an exponent and a common modulo .if you re after a plain parametrization using sin and cos it s way easierusing strncpy 3 is better than strcpy 3 but things like strlcpy 3 are better stillon windows the while loops above is 20 faster than the original for-loop in google-chrome in ie and firefox both loops perform the samebut when i press page down button from keyboard it works fine but when i scroll using mouse takes bit more time to load data and scrollbar of gridview displays abnormalwouldn t swift be slower than objective-c in this case since it is layered on top of itand i ve read that using liblinear is far faster more memory efficient for such tasks as such i ve ported my libsvm classifier to accord net like soas the so link in your question suggests int comparison is faster than chars comparison and yield faster fetchpostgresql has a more comprehensive gis extension . mysql s is as dumb as a flapjack in flatlandmyisam is often faster than innodb in terms of raw performance mostly because it is not acidthe workaround is usually using a for-loop and manipulating the loop-variable appropriately but in your case a while loops is simplernot sure why people think myisam is more performant than innodb - it s a conundrum wrapped in an enigmai feel the need to mention that java s good garbage collection in general is better than malloc free of cbut there are other things you can do with little more than the addition and subtraction required to deal with indexing into lists etcalso with xquery you can re-use your existing skills with xslt + xpath as the languages have a lot in common but xquery is more geared towards database accessbasically ram is more expensive than the disk storagehowever postgresql s sql features are far more advanced than mysql s and mysql has a tendency to silently ignore things you tell it to do - especially in a default installation and if you rely on a foreign key to be created that might be a very unpleasant surpriseactually adding a new resource folder does nothing more then adding it as a resource directory in build.gradleif you don t need a full dom available and just want to parse and scrape manipulate html elements there is cheerio which is more lightweight than jsdom and still gives you a jquery-like apia post request would not provide any more safety than a get request any half-decent web debugging tool can forge post requestsat first to get post and get parameters is better to usethis does not work if any parent has more than one childrenyou can t get a patent any more because with this post i will claim prior art -apart from that you might want to give xuggle a try - it works on a much lower level than vlcj but this should give you much more control over what s happening and unlike jmf it s a good actively maintained project.subtraction is similar using subtraction of the base type and borrow instead of carry multiplication can be done with repeated additions very slow or cross-products faster and division is trickier but can be done by shifting and subtraction of the numbers involved the long division you would have learned as a kidif you were attempting to beat the performance of tcp by shifting to udp keep in mind that part of the reason you get lower performance with tcp is because tcp tracks and redelivers the lost packets for youid love to know how to solve this since using nginx sometimes is a better option than apache and having this issue with fuelphp framework and not being able to use this two great tools together is awfulalso settimeout is a better approach than setinterval as you explicitly reset it on each round tripan alternative would be firebird which is not so flexible but in my experience it is in some cases performing much better than mysql and postgresqli have a sample wpf app here and wondering why bmp is loading faster than pngconsider using swing which has much better performance over the old heavyweight awtwhy new delete is slower than malloc freeas for your question a for-loop is usually better when you want a piece of code to run a certain number of times and a while loops is better when the condition for the code to keep running is more general such as having a boolean flag that is only set to true when a certain condition is met in the code blockmaybe its your grasp of english which is the problem but its the lifetime of the connection time between connection opening and closing you need to worry about more than the timeout length of time with no activity after which the connection will be terminatealso pygtk is lighter than wxpython but i ended up bitting the bullet and using wxpython for the same purpose recently it is heavy but it didn t have any affect on the script performancesomething where the app is about serving different pages you want low memory and good context switching things like preforking unicorn or running on the rubinius version of ruby with puma that makes concurrency easier to code because it will perform well with threading as opposed to something like mri with a global interpreter lockone of the largest benefits of ironpython is that it has effectively no gil - meaning that if you are both writing python code and it is multi-threaded - you can often get performance that is better than cpython without having to spawn multiple process and pickle objects across the boundariesit looks like vim is slower than geanyc++ is not my first language and this is small part of code i can t figure out i ve chosen udp because it is always much simpler than tcpi ve noticed that the common lisp approach is more conservative than the approach scheme hasto any seasoned developer of a c-like language break will both read better as well as provide a cleaner solution than gotothat being said i find gitolite much more complete than gitosis like all those recent blog posts illustrateif you are willing to limit yourself to vista or later then direct2d would be a little simpler than direct3din firefox it seems that this is 1px lower than in google-chrome and safarii seem to remember reading that though infoset is great in many cases when you re dealing with larger datasets with sorting filtering it is more efficient to go direct to the table as using infoset requires each xml fragment to be parsed and elements extracted before you get to the datathe while loops seems tighter than a for-loop from previous answer but look up for vs while logici m learning swift and much less familiar with objective-c but for the life of me i can t figure out how they are trying to achieve the goal stated as build list of encodings sorted and including only those with human readable names.much as i used to love jmock i have to agree with the comments that mockito is far friendlier to usewithout draggable seems more like it but then i can t use the droppabletextedit is not the best tool to search and replace styled text for example the free textwrangler has more powerful skills to do thatyes swing has newer and better api s than awtimho the main reason that they didn t catch on is that they require tended to require too much skill and used awt swing which produces worse uis than what a designer with little programming skills could achieve with flashi tried jboss too but i think glassfish is easier to usefgetc is a function to read a single char simpler than using fgetsmax_size must be big enough because a for-loop is slower than lapply you want to do as little loops through the for as possible but not too big or the list extension overhead will make the program slowerapache is more friendly configuration wise htaccess htpasswd rewrite rules etc nginx is fast in regard to static assetsi strongly suggest either of the first two options over the latter option as the latter option does not always play nicely with the way rpm and yum handle transactions when more than one rpm are involvedoh and it can use cpython for its innermost loop or psyco - but pypy is faster than either especially on 32 bit systemsnote using apply functions instead of a for-loop is better but it depends on the actual purpose of your loopsit is only slow with google-chrome browser safari is much fasteri m more familiar with unicorn but based on the documentation i ve read you shouldn t have to start passenger in a separate processinnodb is often slower than myisam being a transactional db engine with acid propertiesmy guess is that server-side implementation may turn out to be more flexible and more powerful than client-side as i can add functionality to the server easily as long as the client understands iti know how to sort a text file alphabetically but i m trying to do more than sorting groupingi d totally go with flask unless one dependency bottle is better than three flask jinja2 and werkzeugfor similar functionality that speaks pandas but has more flexible features you could use the facetgrid object from seabornthe while executes much much faster than the fadeout fadein calls so you only see the last resultsolved the problem came from css specificity.bootstrap s css was judged more specific by google-chrome regarding my menu s selector but not by firefox and safarii need a sip server hopefully simpler more efficient and more secure than asterisk or other full-featured pbx to just terminate sip calls and play audio based on the incoming numberperforming addition on this slightly larger type will pretty much always be faster than doing division or modulo on the type itselfbut depending on the answers to those questions i m guessing that coalesce might do the trick for you better than isnullwhy get method is faster than postin google-chrome the same flow renders in 13 seconds but firefox takes more than 51 secondscommunication via i2c is more complex that with uart or spi solutionalso i can not use custom dimension because my piwik versioning is older and i can not upgrade it nowyes if one sql statement is execute repeatedly using prepare statements is much betterthere s a post on the subject on the birt world blog here specifically relating to xls emitters although the tribix emitters mentioned should also enable output to rtf a microsoft format readable by word that is much more concise than docswift also prevents us i believe from overriding a parent class s property but also still lets us observe changes to that property--this is much better than objective-c s approachone place where the enhanced for-loop is faster than a naively implemented traditional loops is something like thisyou can think of extends from a superclass if the derived class is of the same type.i mean that when a class extends an abstract-class they both should be of the same type the only difference being that the superclass has a more general behavior and the sub class has a more specific behaviortypically you would not allow a http client to determine the uri of a new resource so a post to blog would be safer than a put to blog article-uri although http does cater for appropriate responses should the server be unable to honour the intended urihowever you can t use a superclass value where a subclassing is expected because the subclassing is more specificso my guess is the hosting provider upgrade something maybe mysql to a versioning that requires stronger passwordsyour while loops always runs a fixed number of times so from a stylistic point of view you would be better off with a for-loopin fact v1 uuid is more fit than v4 if you use the uuid just as a table id - because it uses mac-address and time stamp to prevent clashesi am using yii 1.1.12 and recently upgraded my php from 5.3 to 5.5 and have found that apc is no longer to be used because opcache has been made part of php5.5as a note the su command is much older than sudo and the normal procedure before sudo was to su to root and then to another user unless you knew the passwd of that other userjedit is still pretty good but emacs is quite betterie 8 is much worse than firefox and google-chrome runs smoothlyi can write code that successfully returns the int of a single-character string however when it comes to ones that contain more than one chars i can t because of this type erroras multiplication of ints has more overhead than simple additionmalloc is faster since calloc initializes the allocated memory to contain all zerosopera probably is more complete to manage canvas than google-chrome but the problem is always to exclude the finger touch if i m using the penin my experience udp based code is generally less complex than tcp based codeas svick said it s no better way than profiling your program identifying hot spots and optimizing them using concrete benchmarkingrtsp is more of a handshake done with the server while rtp is the actual stream coming in once the handshake is done and you start streamingif you want to allow the integers to be delimiter by more than one spaces for indentation purposes or so and depending on the way you want to handle tabs and other non-newline whitespace you can use a more complex delimiteranother popular language that offers more power than haskell is agda - i don t know agda beyond knowing it is dependently typed on hackage and well respected by people i respect but those are good enough reasons to mecoalesce case can add implicit data type conversions whereas isnull has simpler rulesyou can send a lot more data with a post than a getwhile those queries look very similar i suspect orderdate includes time information so the sorting and grouping is much more expensive and lead to many more rows in the subquery for the second querybecause of this i m not sure if traditional crossover algorithms will work well for instance i tried ordered crossover and the children it created were generally worse than its parentfor or int which sounds a simpler case and chars could have been both implemented as member operators or as non-member free operatorsand finally from my experience nginx is faster than apacheyii has a higher learning curve than say codeigniter and cakephpmalloc free is harder because thereÃ¢ s also calloc and reallocthis may be optimal indeed if the table access to retrieve the values missing in the index is more expensive than filtering and sortingobviously as a result i need two folder in the directory folder one called bad which contains all the folder containing one folder and one called good which contains all the folder containing more than one folderi believe the storage formats were either jks the standard java keystore jceks a java keystore that provides much stronger protection of private keys or pkcs12i can t seem to figure out why removeclass doesn t work when my scrolltop is less than or not equal to my nav s offset .top valuesince an id is unique and the methods getelementsbytagename or getelementsbytagname returns a live htmlcollection it s better if you use these elements as unique variables so you won t ask your browser to fetch them many timesi would find this very useful if not more useful than box-sizing border-boxaccording to moore s law computers are becoming exponentially faster hence computing hash functions becomes much cheaper in terms of time especially quick hash functions like md5 or sha1right now i would have to say the put method is better since it works and i could not get the webservice to workthis code does more than just show or hide fabs on scroll it actually handles a pretty perfect action bar disappears on scrolling effectwhen i m in a hurry i use gedit purely because it is quicker than komodo editforeach can simplify the code in a for-loop but it is a heavy object and is slower than a loops written using for.the next solution is faster than using in and except clausesthis task can be easy done with getter setter method or with signal and slot but setter is more suitable herethis is not to say this is more official than jerkson just that there are many useful jackson extension modules that many developers are not familiar withi want to use a jpanel and then put jlabel if using jtable is easier then i will use that please tell me which will display the datai really miss this feature on virtualbox because i find vmware to be bloated and it slows the host system down much more than virtualbox doesfor next projects i m going to try redmine seems more clean and hipe than tracthe misunderstanding is that incrementing the exponent is not faster than doing a multiplicationi find that objective-c is much nicer for working with core audio than swiftif you re in a nested loop and need to break out of all loops a goto can make this much cleaner and simpler than break statements and if-checksalso note that i use objective-c more than swiftracket is closer to scheme than to common lisp but you could dip your toes into the lisp family without the speed bump of the emacs style of developmenttcmalloc is faster than the glibc 2.3 malloc available as a separate library called ptmalloc2 and other malloc s that i have testedalternatively use a gridview though i find that repeater gives you more control over the emitted markupram is a lot faster than disk so reads and writes are temporarily stored until the data is requested by the code or the disk is able to receive itobviously i could script each input into a get request address and replace the img src with that but post is more desirable and it seems there should be a more elegant way to make use of the form s submit mechanismlxml parser is generally faster html5lib is the most lenient one - this kind of difference would be relevant if you have a broken or non-well-formed html to parseyou might look at postgresql as i find it a bit easier to manage and maintain as i feel some aspects are more logical than mysqli ve found that firefox is greatly faster with imacros than google-chromedeclarative code is easier to make bug-free than imperative codealso since this is a bit old bcrypt is indeed better than pbkdf2 but scrypt is even betterif you have both post and get params with same name and if you using then it will take post variable only.because post has the higher priority than getmemory optimizations - phusion passenger uses less memory than thin and unicornpypy s jit can make python code execute much faster than cpythonit is in fact considered to be much more dangerous than strcpy since the null termination mechanism of strncpy is not intuitive and therefore often misunderstoodis the assumption that codeigniter modules work in kohana or at least can be massaged to without too much effort or is it just that kohana s got fewer moduleswhen not sorting before grouping it is much faster but then i get values from random parts of hourif pypy succeeds to be better than cpython in general which is questionable the main weakness affecting its wider adoption will be its compatibility with cpythonit s not any more secure than get but the general rule is that you want get for getting information and post for changing informationalso for my money i d create a swing gui not an awt gui as swing is much more robust and flexiblei want to check if my pubdate i receive from a rss feed is older that nowas you run queries it has to fetch data from disk which is much slower than rami reimplemented the mouse move press and release events for the inner widget in order to be able to move it inside its bigger parent with drag dropwhat you really need is an efficient way to insert into a priority queue when you know that the element being inserted is smaller bigger than the min max depending on whether this is a min-heap or a max-heapthis tiny overhead on add is vastly outweighed by the savings on lookups since all programmers should know and understand that case-insensitive compares are vastly slower than case-sensitive especially with unicode - the cpu can t just do a block compare of data but must check each pair of characters specially even using a table look-up this is vastly slowermaybe i would mostly always choose post over get it s more tidy and refreshing and going back issues with post method are a thing from the past in any major browser they just ask you if you want to resend the data don t theythinking you can format magento blocks any better in a cms such as expressionengine and use magento just for the backend will put you on a hiding to nothing to end up with a fairly useless setup that isn t going to go anywhereif anything i find working with svn easier and more intuitive than perforceor in short stateless is better than statefulthe function is available in browsers newer than google-chrome 39 and firefox 31when you say something like heapsort should be faster than quicksort what makes you say thatdo any of the other common architectures like arm mips sparc etc have an easier than x86 instruction seti am using the bash ftp command to ftp files however i have a problem where i try to create a directory that is more than 2 folder deepalthough several ci tools such as teamcity have better support for nunit probably would change as mstest becomes more popularcopied from comment below i m looking for a statement like in mysql and postgresql count is faster for short queries exists is faster for long queries and use queryset 0 when it s likely that you re going to need the first element and you want to check that it existsi don t know if it s activated by default on centos but it might be considering it is on ubuntu which is less entreprise orientedmyisam has proved to be faster than innodb for methis is actually the syntax of ocamlyacc which you should not use if you start a new project in that case you should use menhir which has a more readable syntax and is better for numerous other reasonsbut i ve had difficulty implementing this it seems as though nsprogress is meant more for long operations that execute all their code on one background thread but have separate sections that make it easy to determine when progress has been made if this is the case then the use of the term suboperation is a bit misleading as it brings to mind the use of nested nsoperationlxml is the faster parser and can handle broken html quite well html5lib comes closest to how your browser would parse broken html but is a lot slowerfirefox doesnt support the date format you have entered while google-chrome is more flexible and does support itpostgresql seem to better than mysql in terms of speedso for scheduling purposes i suggest you to use the setinterval approach while the settimeout approach is better for delayed execution and asynchronous workchange your paths to relative paths which mean they just have the bit of the path from the current directory in this case the projecta source1 bit if you ve set your current directory to your dropbox folder or just source1 if you ve set your current directory to the projecta folder which is a better ideai read in a blog article that buildr a ruby based build tool was two times faster than maven for a simple buildif you judge that the code is more readable with getter setter after fields rather than after constructor you re free to do itnserror is generally used to pass information between different code interfaces that are expecting a possible error where as nsexception is more so for errors that are unexpected or caused by the developer and thus should be handled during developmentyes generally post is a better way of submitting data than getif it s too slow i would ditch the autocompletion part of python-mode because it uses rope which is slower than jedithe new project has two job numbers so instead of using the job number text box at the top i need to add option button or checkbox whichever is easier to choose between the two different job numbers for the four groups of informationcoalesce is more correct of course you could just embed isnull over and over and over... but put that under a performance microscope and coalesce may just winusing a profiling is often more appropriate than benchmarking but it seems to be even more trickypost request is a little safer than get because the parameters are not stored in browser history or in web server logsas for reliability i think that postgresql is more reliable especially when compared to mysql using myisam - innodb is a lot better heredoes anyone know if the upcoming v8 versioning is easier to upgrade or if its easier to upgrade from a certain previous versioning compared to earlier versioningnote that using the beautifulsoup parser is a lot slower than lxml s default parserif the loop is very tight time-budget-wise there will simply not be any room for the browser to do other tasks such as gc - for google-chrome this task seem to be secondary versus firefox which gives this higher priority likely to get more performance out of its enginehowever if thats the case does this mean firefox is faster in execution than google-chromeyou could use beautifulsoup - but feedparser is much better geared towards rss handingi d also recommend postgresql over mysql if you are going to have nested comments as postgresql does hierarchical querying better than mysqlnote that there are plenty of python implementations other than cpython out there - for loopy code pypy tends to be much faster than cpythonif you want to use a counter in a loops a for-loop is typically more appropriatethis way of doing movement is much faster than using sin and cosif you are looking for a web framework simpler than django look at flask flask uses jinja2 as the default template enginethe alternate screens switching is much older and as you indicated there was not much to be done i did not investigate furtheryou could similarly make children the transient field if explicitly recording the parent relationship is more helpfulproper handling of the last case is more complicated under cloudant and probably couchdb 2.0 due to its totally broken quorum handling but that s a different topic.i always used uwsgi but realized that gunicorn is easier for simple projects like mineusing two one-to-many associations is always better than relying on many-to-many relationskeep in mind that union will return a distinct list - duplicates will be removed but it will perform slower than using union all which will not remove duplicateshowever in general one could expect that a division is a more expensive operation than a multiplicationdoes udp always perform better than tcpbut if today post is less than 10 post i will get back the yesterday post to queryi am using groupby on tickets then filtering my dataframe to those records where the count in that ticket grouping is greater than 1 using filteringfinally we concluded after we put print statement inside for-loop that it will take much more time than loops in the first case without print statementi heard that in php there are some alternatives for the functions substr and strlen which handles safer bitsyou d gain compatibility and durability because rss is more defined things will change less but if the feed doesn t include what you need it won t help youthe chance of receiving video streams over http is higher than rtsp rtp rtmp and so onfor example given gif may be deprecated in a system because png has proven better for the system s users - perhaps because it supports better colour depth preserving the colours more accurately or svg might be deprecated because some clients have been found to be using web browsers that won t display them jpeg might be deprecated because it s known the images in the system aren t natural photographic images and the format gives visually poor results despite larger compressed files slower processing speed and higher memory usage - lots of possible motivations for making things deprecatedand the second problem is that i want to use hover or hoverintent method better than mouseenter and mouseleave but im not sure how to use fadeto to get the same effectanother gotcha is that you must make sure that an instance cannot be a child of more than one parent or else destroying a parent could also destroy children belonging to another parentswing is far better then awt and should be educated to people who is writing gui-based java for the first timeonce you re out of ram and the system starts swapping - disk access is thousands times slower than ram so any potential benefits of 64-bit code are flying out of windowbut if you still wish to figure out the phpbb password encryption hash it is no longer md5 in version 3.0 or higher and is a custom hashalgorithms like rsa are much less user-friendly than aesironpython is faster than c# in certain areas but not faster than cpython however you can link ironpython to any language thus over coming problems but then again you can do the same with cpythonsince every browser has a limitation on the number of cookies they will store for most recent ie versions it is 50 for google-chrome and firefox it is a larger number but still finite the cookies build up until the limit is reached at which time the browser starts discarding the oldest cookies which means the session cookie for asp.net ends up being discarded causing the asp.net session expiration errorit also allows you to redirect the stderr into the stdout which makes it easier to readand division may be slower than multiplication or may still be fastdoing a single printf and strdup is faster and simpler than doing 2-3 printf callsget all the parent that have more than two childrenfrom my experience vmware 5 is faster than virtualbox 4.2 rc3 and has better smp performancebut i am still curios why is the policy set stricter with google-chrome than for example firefoxwill hide the exception-handling and since dealing with exception-handling is heavier compared to a simple if t why isn t the normal new t not considered less good practice considering we will have to use try-catch to check if a simple allocation succeeded and if we don t just watch the program dieif you have so many records in the table then the first thing is to change the table engine to innodb if its not innodb because for large number of records innodb is much faster as it caches the table data while on the contrary myisam engine only caches the indexes so each time it has to do a full table scan from disk if the data required cannot be fetched from indexfor example nginx is considered faster than apache and a nodejs application is considered faster than a php applicationimmutable tree maps have o log n puts and gets which is asymptotically slowerwe know tcp is better suited for this but the hardware development decided it s got to be udpwe propose to use udp over tcp since udp is faster than tcpyou don t want to use apache because nginx is better suited since nginx is built for async i oalso you should consider using nginx as server that s more flexible than apachein fact this presentation which still refers to an older incomplete version of mysql s opengis support suggests that with proper indexing some mysql geospatial actions may actually perform better than postgresql postgis though i m sure that s up for debatehowever properties become very useful when the setter getter actually does something more than just assign return an attribute s valueif i run ls folder | head in a directory with a lot of files the execution time is about 50 times faster than ls folder | tailwhen you call input.nextline as part of your exception-handling catching is it better to place it into every catch block or just inside a finally block at the end of the try-catchi am aware that a post is better for this kind of thing but my question is is this expected from a get requesti would say personally i find foreach a bit more readable over for loops but you should use the best for the job at hand and not have to write extra long code to include a foreach loops if a for-loop is more appropriateinnodb is more reliable than myisammemory is a bottleneck to performance ram runs slower than the cpu and if you re paging to disk than it s really slowin general mysql is optimized for pkey lookups and postgresql is more generally optimized for complex use casesinnodb consumes more disk space than myisam -- typically 2x-3xbut sometimes memcpy performs faster than strcpy because it moves blocks of memory at a time which allows it to perform some optimization i will not go into details herealso what makes nginx better than apache in this casenote i m not saying mysql s license won t work for you but postgresql is definitely simplerif you have a full version of visual studio 2008 rather than the express edition it integrates the inbuilt mstest much better than nunit does and cruise control also supports mstestthe subversion versioning on the server is older than the versioning on my notebook so i guess my newer versioning somehow upgrade the working directories so they are incompatible with the old versioning on the development serverin ie opera and firefox it looks much better because aa is used which is still clearly visible but not that badif the network between the two point have a very high quality udp is absolutely faster than tcp but in some other case such as the gprs network tcp may been faster and more reliability than udpi have noticed that content extraction is faster in itext but searching words using regex in the content extracted by itext takes longer time than pdfboxit s useful to know that extends bound is much more common than superfyi postgresql scales better than mysql on multi-processor overlapping requests from a review i was reading a few months back sorry no linka profiler gives you more detailed information which can help to diagnose and fix perf problemsi ve generally gone with openssl though gnutls is newer perhaps betterhowever it also breaks pickle maybe not dill and is less dynamic then this approachi think that as a commenter suggested reflection is the way to go - you can get more than the public ie protected variables but still apparently can t get private onesi usually use the fall-through switch idiom so that if a user is more than one versioning behind you publish a versioning 3 and a user is still on versioning 1 they will go through all the necessary upgrade sequentiallyalso if all your classes extends class super it s better to write instead of raw classthe question is a bit wider than serializable deserialization and applies to any situation where some object could be uniquely rebuild from jpa persistent data and vice versamultiplication is faster division is more accuratemy another question is if i put the data size smaller than mtu into sendto then i can guarantee call sendto once socket only sends one tcp udp packetyou have to make sure your local sql instance is exactly at the same build versioning versioning like the hosting provider otherwise your local sql may upgrade the database structure and you ll be unable to restore it back on the hosting provider or you ll be unable to restore in on your local server if your versioning is earlier than the host sinnodb is transactional so inserts will generally be slower than myisami know that sqlite in tests should be fast because it is run in-memory and all that stuff but it is just still much slower than normal postgresql mysql databasenote however that doing so means that each encrypted chunk has its own padding and that rsa is much more computationally expensive than aesin fact nginx can use select instead of epoll if you compile it with the --with-select_module option and i bet it will still be more efficient than apachenote that lxml is probably a better option than beautifulsoup for this kind of task nowadays for the reasons given by beautifulsoup s authorso why while loops is faster than for-loop and why need bunch of liststhen i thought about innodb but then i read that myisam is better with many write operationsalso i think typedef is a better choice when you want to define a structnote that at least in my opinion sscanf and scanf are actually more powerful than cin and cout in a lot of ways-for this kind of parsing specifically and without bringing in external libraries they re almost always my first choiceif you are using a linux mac unix machine most of time i have had to either start from the root folder such as users .....to the source folder or when using a directory that is closer just use in front of itmodulo can also cause a divide-by-zero and it has a higher precedence than additionmanaging changes that need to be made across these branches is a lot easier with svn than it was with cvs but it s by no means pain-freeif the hash function is more complex and cryptographically strong md5 or sha1 then it is theoretically not possiblehow is aes less secure than rsa in this scenarionow when clicking a time less than 1 millisecond will be displayed however it obviously takes nearly a second on my computer until the changed color actually is displayed where btw. google-chrome seems to be faster than firefoxfor instance strtol is better than atoi and you should be checking each time whether strtok returns nulldjango is also a wonderful framework but web2py is just better in my limited experience opinionalso if i change all to png is not bigger and alos i am using prawn pdf outputting these images so cant use gifor depending on the use case and generally less clear especially if you have more than one exception-handling expected - you don t want to have try-catch imbrications...ssl the s in https has more states but since it follows a fairly linear progression does not really have any kind of complex diagrami did a search online comparing myisam and innodb but all of the articles i read judged myisam being faster than innodb on select queriesthis type of flexibility is what draws me to bazaar despite the fact that git is wildly more popular and fasterformally it means division cannot have a complexity worse than multiplicationthe atom feed option seems to load faster than the rss one fwiwi d say the intersect method see answer by dasblinkenlight + any must work better than contains + anyalso i have tried the accelerometer sensor and it worked but i m asking to check whether the gyroscope is more accurate to this function or the accelerometermay be because vvcospif it is wrapper under objective-c runtime and converting data structures copying of memory from intel simd - objective-c - swift runtime is slower then tiny costhe public properties accessor gives you more flexibility in the futureto show it open the command window search for user keymap and select it and then paste this if empty or edit accordingly this is the file format for versioning 0.7.2 upgrade to it before if your versioning is olderusing union all is quicker than using union since a distinct check does not need to be doneinterestingly quicksort performs more comparisons on average than mergesort - 1.44 n lg n expected for quicksort versus n lg n for mergesortredmine is an open source ruby on rails application that supports multiple projects much better than trac and seems to be much easier to administernow assuming that your inner loops is more complex and the simple for-loop is slower let s look at how much memory we save by avoiding broadcasted data in a parfor with 4 workers and a dataset with 50 million rows for about 760 mb in rambtw for cron at jobs is better to use absolute directory pathes not relativefor example for small amounts of data an memcpy optimised for large amounts of data may be significantly slower than a strcpy that wasn t optimised for large amounts of datai ve been using bower info package and npm view package to see which package manager has more versions of numerous packages and have found that bower goes much farther back to older versions of the packagesi m not an expert in the inner workings of mysql but it intuitively feels that retrieving and sorting int fields is faster than chars fields i just get a feeling that a z is more work that 0 1 and seems to feel much more familiar from a computing perspective in which 0s and 1s are the standard on off flagsswing is relatively similar to awt apart from the fact that swing has more capabilities awt is probably the simplest form to start out with and has most if not all of the tools to complete your project hope this helpsi have a larger view with a textview and an imageview inside of iti noted that while in languages like c variable identifiers can only be alphanumberics and underscores common lisp allows many more characters to be used like and at least scheme doesexpression-blend has much more advanced wpf silverlight visual designer than visual studio including wysiwyg animation editor etcloosely speaking ram is 1000 or more times faster than disk and cpu is faster stillin vb6 at least so i assume it s true in vba replace is faster than concatenationthe bind method really isn t for the repeater it s more for the formview or gridview where you are editing just one item in the list not every item in the listedit true the file on disk is not larger than ram but the in-memory representation can easily become much larger than available ramspecifically i m trying to store some information acquired in the for-loop in a different arrays i think there s a more efficient way to do this but we haven t covered more than single-dimensional arrays in class yet so no matter at a parallel index as the current interationwith gtk it s more common to use cairo already mentioned by jeff fosteri need to change my dropdown menu which works well with a mouse but i would like to make it more accessible with keyboardyou can do this by looking into the source code or better with firebug firefox or developer tools ie google-chrome in the network tabi was exploring around with c regarding strncpy since most people says that it is safer than strcpy additional parameter length to avoid buffer overflowssorry that this post is more of the and for further information... type than a direct answer which i think has now been given-- i just thought it was helpful not to get things lost inside commentsassuming you are working with 32bit x86 64bit x64 is harder to deal with you would have to eithertry this lib that s a good one with the jackson we use only in the server side because jackson is more slow in the android than gson at least in our teston the project i m using bower to manage dependencies because i found that it has way more available versions than npm doeshowever when i switch from multiplication to addition it looks much bettermuch nicer than strtotime mktime etcbecause disk access is orders of magnitude slower than ram accesshowever instead of using two nested for-loop you can use count arrays which is more efficientthere are more than 1000 folder inside this directory which are mainly celebrity name like angelina joulie etc and inside that folder several images are there for that celebrityi am a beginner with python and from the hardest way to learn python i know that while loops should be avoided but rewriting to a for-loop is even slowerudp uses datagrams chunks of data which are received whole on the other side unless the size is bigger than the mtu but that s a different storyi think reductio will make this easier but with raw crossfilter this would look something likethis is to demonstrate that you can achieve this without for loops however a simple for-loop is much more readablegoogle-chrome extensions are considerably more limited than firefox extensions Ã¢ Ã¢ they can only hook the behavior of the browser in certain predefined waysin safari the background of my menu navigation drop-down menu s is much wider than in google-chrome firefoxso it should have always been gkagent under objective-c in order to be strictly correct however objective-c is less type-safe than swift so you could get away with it with the possibility that you d get an unrecognized selector exception if a gkagent object was ever passed to the delegate method and you assumed it was a gkagent2dmigrate to enterprise linux or freebsd postgres works much better on unix type systems mdashi want a task or cron job that will scan these folder let s say every 1 00am and delete all folder that is more than 15days old or 15days prior to the date when the folder is created in the directoryi have worked pretty heavily with both flavors of the gwt extjs libraries though i ve spent more time with gxt recentlythe last fallback is to go the snail way - to mouse over to click on the red close window button but any mouse movements are slower than a keyboard shortcutthis redeclaration allows a cleaner way to access and mutate the property internally without resorting to fragile ivar synthesis which is becoming an antiquity now that the compiler does it for youthe difference you notice is very small but i think the multi-thread processors is spending more time because the concurrency for the cpu resources between the threadsedit for those of you coming later i also learned that like sml in f# the order is specified and deterministic--unlike ocaml which is even more crazy considering how close the two are in syntaxusing settimeout for such purposes is better idea than setinterval as you don t have to clear them and they won t get crowded - if your fight takes longer than period then this won t run into next fightwhile i am more familiar with mysql than with postgresql i believe it is true for both databases that sub-queries have a negative impact on performance relative to joinseven if you use a lowly for-loop it s much easier to loops over the elements of a list than it is to construct variable names with paste and access the objects with getbut drupal i believe is more powerful than wordpress and joomlathen the buffers won t need to be treated as arrays of pointers and passing arrays of say floats between objective-c ++ and swift is easiercalloc returns tha address of a block of memory initialized to all bits zero which has the same effect as calling memset but is potentially more efficientbecause post method storing capacity of response is better than get responsea virtual memory is a concept to work for files bigger than ram by using the pages and swapping with disk and rami understand that mp3 is much smaller but it has worst audio quality when is compared to wav files2 second loops is and easier for-loop to readvb6 vba though a little better than vbscript in general still has many similar issues where for their domain they require much more boiler plate to do simple tasks than what i would like and have seen in other scripting languagesbut obviously this would render script less usable after google-chrome and opera start supporting unicode 5.2so i feel that on x86 memcpy is faster than strcpyit seems to be younger than zen-cart and oscommercesince a 53-bit mantissa is too large to fit in less than four 16-bit registers or two 32-bit registers performing an addition with a 64bit mantissa isn t any slower than using a 53-bit mantissa so using extended-precision math offers faster computation with no downside in a language which supports a proper type to hold temporary resultsa heartbeat is by nature a connectionless contrivance so it goes that udp connectionless is more relevant here than tcp connection-orientedi have installed both cakephp and codeigniter and it seems that codeigniter is much smaller a little less overwhelming and documentation is cleareras for debian being more stable than ubuntu for using as server it can be true in very rare occasions where the package is very obscurei d recommend redmine like the other posters as it is more complete than tracit is possible that the config of your innodb engine is more efficient for your searches than the way you have myisam set upthe net effect is that the backtracking implementations i like that name better than traditional nfa are slightly more expressive than dfa implementations because they can match regexes like which matches three or more word characters repeated twice something that can t be matched by a dfaswift comparing to objective-c has it s own benefits like swift handles strings more easily swift tuples offer compound variables and also coders don t need to spend time annotating variables with type information and risk making mistakesrsa is also a better choice than dsa because it has much better breadth of support for signatures still considered secure by nistyou can often get better results by searching vb6 which is almost the exact same thing as vbahowever it isn t clear how much the value can be for the standard tumblr api you can t get more than 50 post at a timethe multiplication should perform somewhat better than divisionhowever if g is guaranteed to have only non-negative weights g is non-positive weights then dijkstra s algorithm could be better choice over bellman-fordfrom that point the servlet file actually the web server tomcat glassfish jboss etc is behaving more or less like the iis and aspx filethe amfphp library is not only faster than regular post get requests it also allows you to pass php objects into flex objects and flex to phpvcpu reg are virtual cpu registers that exist on many processors that have things like multiple cores hyperthreading or other features that enable higher layers to believe that there is more than one cpu present when there isn t -- such as today s x86sas for me jboss implementation is smaller than the whole glassfish so i m usingin firefox it s less noticeable but in google-chrome it s very noticeableaccording to my own experience postgresql run much faster than mysql especially handling big tables 1.4 gb lineitem table in my caseif it is true then timsort will always take less comparison than quicksort because on real life data there is some pattern except data is truly randomunfortunately looks like it requires uninstaller and reinstall as the locations seems to have changed drastically from some subsubsub folder off of appdata to something higher up under user directorybut for the example you give it doesn t matter - if it s going to fail it will be in the initial strlen so strncpy doesn t buy you anything in terms of safety and presumbly strncpy is slower as it has to both check bounds and for nul and any difference between memcpy and strcpy isn t worth changing code for speculativelyif they are internal then it s debatable whether it violates ocp or not but the violation of srp is even worse anywayonly one disk read - since the disk is much slower then ram -another downside of this angle is that querying the updated time of the parent will still give me too many children and is less efficientudp has a much lower overhead than tcpalso i think you d be better off with setinterval in this situation instead of using an infinite settimeout loopi have look at similar topics but i just get more confused with how strncpy or printf are not good or you have to have a 0 added at the end or some other detail that makes picking what to do more difficultbut as you can see the first versioning is way better not to mention that all php versioning below 5.6 are already outdated - so i d strongly encourage you to upgrade insteadalso addition is faster than multiplication and multiplication is faster than divisionbut as i understand it ntlm disallows the more secure kerberos domain credentials if they re availableas a new newbie programmer i find that making daemons over systemd is much easier than over init.dthe short version is that having concrete base classes makes it easier to accidentally slice off your child object use arrays incorrectlyfor the case xcode versioning is lower than ios device s image you can either copy the disk image from other already updated xcode or maybe the internet or upgrade your xcodeyes post is better than get because post data is not usualy logged by a proxy or server but it is not securebecause heapsort is actually slower than quicksort for each nthere are two reasons that i can think of as to why a ram disk is sloweras it stands d3.js is not just better than raphael and processing in many cases but is also a viable replacement for jquery underscore.js and other frameworkstime spent learning a profiling is probably better spent than time writing and debugging micro-benchmarksyou can customize kate and i think you will like it better than geditdoing things like 1000 successive fgetc is much slower than doing one single fread of 1000 bytespost is not better than getfor this reason since calloc uses two arguments of type size_t it can allocate bigger blocks than malloc will ever be able to since malloc takes only one argument of type size_ti tried replacing the gridview with a listview and the scrolling of the listview is much fasteryou need to preserve the grades as you go or keep a running min and max which uses less memory but requires more custom code you can get wrongnotice that memcpy is faster than strcpy unless the source string is much smaller than the buffer s size which is rarely the case with ip addesses.and then all your users are relying on your left right controls no matter whether they re using a mouse or the keyboard which gives you more control over how it looks at each stagewhen summing an arrays over a specific axis the dedicated arrays method array.sum ax may actually be slower than a for-loopheapsort has a better big-o than say quicksort yet quicksort performs much better in practiceat best it is a computationally expensive hash function like whirlpool that for example is five times slower than md5 and thus allows only a fifth of the number of hash operations in opposite to md5and if your csv files are stored in more than one directory you will want to pass the folder name as a parameter tooi think that in that case the put verb is more appropriate because post really means i want to create something newit would be great if someone can point me to a document for some javascript guide for better performance use hide show is faster than insert delete a domcan be fast or it can be awfully slow even if division is done entirely in hardware if it is done using a div instruction this instruction is about 3 to 4 times slower than a multiplication on modern cpusin any case if addition is faster than multiplication a better solution might be to use a table and index by ittake a look at the jackson json parser it s faster than the one in android and faster than gson and supports streamingbut lastly unless i m missing something this would be easier with a map or an object used as a dictionary of idsthe whole thing just no longer working after i switching my iphone to airplane modeloops recur is faster - it s one of the most efficient constructs in clojure done correctly it should match the speed of an equivalent for-loop in java codea repeater might be a better decision than a gridview as they are friendlier for using custom layoutseither way gitolite is easier to maintain and more up-to-date than gitosis see how do programs like gitolite workof course two parent can generate more than two childrenif i add font-weight bold they get a little bit thicker but still thinner than within safari google-chromeyou could try using c-types with ff which is a regular dll being called by javascript in your add-on this is way better approach that using xpcom because if the interfaces you use in there can change in each ff version indeed you will have to do multiple dlls each for your add-on supported ff versionsi assume the same control in vb.net would be datagridview and i m fairly sure that you can probably make it look better than in vb6 but if you want really good looking ones you might want to look at thirdparty grid controlsbut during upgrade setup launches the older versioning setup bootstrapper uii have code that does the same thing but the avx version is considerably slower than the sse versionmany other antivirus software that works just as well if not better than norton like avg avast and others do allow you to uninstall from the add removein its implementation foreach executes a closure over every element in the arrays this is typically more straightforward and transparent alternative to old-fashioned for-loopthere are libraries that allow on-disk data structures comes to mind and another one whose name i can t recall at the moment but disk accesses are orders of magnitude slower than ramvimeo will always have fewer users than youtube because the user experience is poor for low bitrate usersinnodb has better performance than myisam though innodb needs more attention to tuning the configuration innodb supports atomic changes transactions foreign keys and innodb is much more resistant to corrupting data in a crashmergesort - in general mergesort is consistently faster than quicksort however quicksort is done in place and doesn t require allocating memory unlike mergesortfollowing the first answer it appears that postgresql is more compliant to sql standard than mysql so it needs a group by clause for each selected column you want to display with your aggregated functioni like the idea of sqlite but i m more comfortable with postgresql mysql even ms access or oraclei looked at gson metrics and it seems slower than jackson...but i am not sure which method is better such as gdi or directx nor how i would implement said methodsversioning of php older than 5.6.0 are eol and are no longer receiving any security updates so from one professional to another i would strongly encourage you to upgrade if your versioning is older than 5.6.0from my experience webrick is slower than mongrel is slower than thini know mergesort is better since it is stable and doesn t have n 2 as worst case but i required to implement quicksorti think it is a few cycles slower than addition but yes division is very slow compared to the otherstestng is much friendlier to this paradigm than junit thoughon most machines int is faster than short chars so there s not much to think about thereif you are doing physical simulations things like division or square roots are going to be way more expensive than additionsomehow webkit seems to do better than gecko on the html5 single-page spec scripts and i can t figure out why at this pointfinally you might want to look into uicollectionview which provides a lot more visual flexibility than uitableview and can be seen as a sort of generalization of the latterfor some requirements tcp is better for some udpmost attacks involve generating hash for common passwords so for reasonably complicated passwords it becomes harder especially with salt some people use usernames as salt others use randomly generated numbersalso have a look at strncmp which is safer version of strcmpalthough since you re already using c++ in your function with cin and cout it s probably better to use std string instead of a char bufferunfortunately in postgresql select count is often slower than mysql to which it often get s compared toit should be mentioned that sinon provides many more features for smart stubs spies than jasmine so both can be used togetherbut when myisam is really better than innodbaccording to the answer of the foreach vs for-loop question assuming it s correct for loops on list are a bit more than 2 times cheaper than foreach loops on list and looping on arrays is around 2 times cheaper than looping on listfor example javafx the reason why it is much faster than awt swing ever were is because it contains uses a huge amount of native codei know you re thinking why did i use awt instead of swing but at the moment i am more comfortable with awtan xlarge screens is defined as a screens that is significantly larger than a large screens such as a tablet or something larger and may require special care on the application s part to make good use of it though it may rely on resizing by the system to fill the screensif i have a bunch of fields in a parent class that all need to be inherited by subclassing is it better to have the subclassing nested in the superclass make the fields protected rather than private or use protected accessorin general the tcp protocol manages the available network bandwidth better than the udp protocolthe get method is useful for passing a reasonable amount of non sensitive data between pages while the post method has less limitations and is best for more sensitive dataalso see i ve replaced mouseout with mouseleave which should work better than mouseout text will not jump up and downthis is little strange to me why if-statement is in this aspect treated worse than for-loopthere s not much to recommend one over the other except that the direct ivar access is slightly faster the properties version creates a temporary array and sends an accessor message to make the new condition create its copy of that arrayperhaps the class should be decomposed in other classes or subclassing if in your case inherited is more valuable than composition so every class has a well defined responsibility in the systemspeed-wise the above seem to be at least an order of magnitude slower than glibc malloc free on my machinei had previously used aptana 3 for a couple days and may have come to the conclusion that it is better than dreamweaver at actual html css codingwxpython is probably easier than pyqt or tkinter i don t want to start a framework wari recommend using either my own twelvemonkeys imageio plugins supports tiff ico and adds better jpeg support but i guess you could also use apache commons imaging or other libraryin my opinion myisam use to be faster than innodb now they are pretty much the same in speedi ve found that rendering client-side is nice for small controlled internal uses but for anything where you want tight control over the output server-side is more reliableinstead of the conventional read.table i feel fread is a faster functionif this is an issue you could try sd stream diff which doesn t require sorting like comm does nor process substitution like the above examples is orders or magnitude faster than grep -f and supports infinite streamsntfs filesystems actually supports longer names 32kon most processors division is slower than multiplication for the same data typesanother option is to spend a bit of cash on a 15000 rpm disk or a ssd solid state disk although that ll be slower than a ram diskare there any studies on whether functional declarative or imperative programming is easier to learn as a first languagealso as an aside objective-c has a foreach loops that is more convenient than manually setting up a for-loop with a counteri guess i m just surprised that the documentation recommends the approach of querying presumably continually in my case versus keeping a tailable cursor open i would have thought that push would be cheaper than pullalternatively it can be used over udp which is less hungry than tcpboth systems have large suites of available software packages available freebsd is likely larger and there s a better chance something may have been ported to freebsd over solaris depending on the niche of the package of coursewhich loops is a better fit do while or a for-loopengineyard also seems like a great company but i think they hold your hand a little less than herokua udp stack is considerably simpler than a tcp stackother hash functions such as sha-1 also have hash collisions although it is much less likely than md5put another way let s say i start with a new innodb table and insert 20 gb of data assuming that 20 gb incorporates all the excess innodb stuff i realize data stored in innodb is larger than myisam then i delete all data then i insert 10 gb of datai haven t tried comparing the two but this pypy bug seems to suggest that multiprocessing in pypy is slower than in cpythoni ve found stripes to be really effective and surprisingly lightweight....it aims to be more lightweight than strutsnote i recommend using opera - it is much faster than google-chrome as it doesn t have memory leaks and comes with a built-in ad blockerpostgresql will always be a little bit more mature than mysqli am using installshield 2011 and what i want to do is on an upgrade to install all the files that are equal or greater than then versioning that is already installedfor example do you use keyboard more than mouseor maybe flip them on my machine sin seems faster than cosso if you want a entire file of 93mb to be reassembled by transferring fragmented packets over the network such that no packets are dropped then tcp sctp is a better choicei have searched it in google but most of the articles talk about how to use database cleaner gem with activerecord but none of them clearly specify how to use databasecleaner gem with datamapperyour loops would be cleaner as a for-loophowever if you must use the same route you could separate them by get and post since post is more common with registration type scenarios anywaythis is kind-of the functionality you for instance see but you instantly already see that there it s called at an instance and the fact it requires to extends rather then implements pdostatement has more to do with the c-level implementation functionality of that classafter reading a question related with the performance of sin cos why is std sin and std cos slower than sin and cosit seems npm 3 handles duplicate dependencies much better than old versioning of npm so delete your node_modules folder upgrade to npm 3 and the run npm i again this should solve the problemi don t need more than 2 localization now english and portuguese but i might need more later so it should be easy to add a translation if my app gets used by an russian site it should be able to send welcome emails in russian and with the name of the site brand that uses my app so i supposse what i want to do is something like a whitelabel productif your function is quite short like getter setter it is more common to see the function directly defined in the class definitionthe jruby runtime alone is already pretty heavy much heavier than mriinstances are created on the stack which is a lot more performant than malloc free callsa public field is not worse than a getter setter pair that does nothing except returning the field and assigning to itnginx is better suited than apache as it is light and single threaded vs apache thread per request in most normal setupsthe mismatch between blackbox and module io emission is a legacy api for better integration with verilog ip where the chisel designer has little to no control over the verilogi ve done a small experiment as will be shown below and it looks like that a while loops is faster than a for-loop in perlactually if you would like to retrieve specific task with all its details get request would be more suitable than postan alternative to using your own mock class they start to build after a while would be to use a mocking framework such as nsubstitute or moq it s more of a learning curve but quicker in the long runcan a nsis section create more than 1 uninstallerthis is actually simpler than using dill pickle as the autowrap module produces and compiles c code by default that can be imported as a c-extension module 1 2i would like to change it so you can send files however udp does not support this and tcp is slower than tcpalso it seems like a for-loop is of greater cost to the compiler than a while-loopassume this plugin config is in a parent pom.xml only maven super pom.xml is higher up in the hierarchyusing printf isn t faster than cout but scanf is a little faster than cin 0.04s + - 0.05ogg vorbis is better quality per meg than mp3 plus no licensing legal issuesyour getter or setter is more than just a trivial assignmentyour desired output does not reflect what you have as input if you want to grouping common sublists you can use itertools.groupby considering you want sorted output using a dict and then sorting makes less sense than just creating the grouping from the sorted list using groupbymaybe google-chrome is more lenient when it comes to illegal characters in the url than firefox or something like thatas to why multiplication is faster than division and when the divisor is fixed this is a faster routedeclarative programming is not always simpler than imperative programmingit works fine in firefox but in google-chrome it sends more than one requests to servlet and finally there is exception in servlet and it doesn t workthis would explain why in your case mousedown or click are slower than mouseenter which in a touch device happens as soon as you touch the element being monitoredyou would like reading this post too as whenever you start comparing you might understand better difference between hashmap linkedhashmap and treemapany decent libc will have an efficient strlen that s much faster than looping a byte at a time so separate vectorized strlen and toupper loops are fasterpost requests are no safer than restful requests which are no safer than get requestsdjango turbo gears web2py which is better for whatrepeater is more light than datalist as datalist creates the view by creating a table whereas repeater doesn ta boolean would most likely not yield better performance than int since the excel formula engine is dynamically typedthen i tried the metaphone function and it worked far better than soundexany idea why in google-chrome it is looking fine but in firefox the margin-top is slightly higher and in ie it is even higher than firefox and google-chromeif you need to run all 3 in 1 click then you are better off with maven ant or something similar that has a good integration with eclipseif making a tcp connection is analogous to making telephone call then sending a udp packet is more like mailing a letterpostgresql requires more tuning than mysql to achieve optimal performancethe vm mentioned in here is not like in vmware or virtualbox it is more like java virtual machine jvm as well as python and rubyto my mind a for-loop is simpler to understand than traversing the list backwards with a while loopsi ve got arr in front of a client s ssrs setup right now no difficulties reported and it s 100 modern iis rather than legacy nlb which is less flexible when it comes to web-centric activitiesas compilation is mostly reading small files i wonder if buying a fast usb key to work on can speed up compilation time compared to a standard sata drive and with a lower price than an ssd drive 16gb keys are 30at home w ubuntu linux virtualbox is easier to maintain performs as well as i require and is freegeneral consensus including the php docs is that metaphone is much more accurate than soundex when dealing with the english languagetroubleshooting the build maven is less reliable than ant especially the non-core pluginsbut it s a lot less powerful than vim emacsthis is tied to the framework although i don t know any language where a property has more than one getter or settergraph beeing cut in google-chrome is a known issue google-chrome does not respect some print css and works much better with firefox not all versions stillwhile tcl syntax looks more related to shell syntax like bash or tcsh tcl is actually more closely related to perl or php or rubyi m sure there s a work around to use get for emails but the alternative post is much more easier and doesn t require any hacks to get aroundwithin your for-loop the statement command.parameters.addwithvalue is potentially adding to the command additional parameter but no two parameters can have the same value so if your loops is executed more than once you ll get the error you receivedso when i see that the salt is stored in the hash password and that you use that hash password as salt i think crypt + salt is not more secure against a brute force on output hackers who managed to steal hash passwordslibstdc++ does this a lot more than libc++ and the former is the default library for llvm-g++ gcc llvm the latter for clang apple llvm which means a lot of errors will seem to go away when you switch to gcc llvm or just stick with apple llvm and switch your library but your code is still wrongwhat i found is that if i build the app using xcode 4.2 base sdk 5.0 deployment target ios 4.0 the size of the text in my uilabel and uitextview renders smaller by maybe 3 points or soanother reason is that mergesort needs more memory because it s hard to implement it as an in-place sortif your client connections are more or less permanent and not too many clients are connected at the same time tcp is only slightly worse than udppost method are generally consume more secure than get because when we use get method than it can display the data in url bar.if the data is more sensitive data like password then it can be inggerisif you want to compare you re better off putting your result through getstring and compare the much less secure hash even less secure than md5 already isstill while it might be better than multiplying by say 17 16+1 or 12 8+4 as they only add in a couple bit-shifted copies of the original value instead of five it s a very weak hash compared to hash functions that do more than a single running multiplication and i ll illustrate that using some statistical analysis.i d recommend agda as the better vehicle for getting to grips with the ideas behind dependently typed programming but idris is the more practical optionwhich one is faster is indeed a cpu-specific issue or at least how much faster is cpu specific yes division is typically seen as slower than multiplicationso if you working with only in-memory data collection ienumerable is a good choice but if you want to query data collection which is connected with database iqueryable is a better choice as it reduces network traffic and uses the power of sql languageit was introduced since the nat traversal for tcp is much more complicated than udpkeep in mind though that jackson is a larger library than gson so depending on your case you might prefer gson to avoid 65k methods limitationi read somewhere that safari has more stringent requirements on cross domain scripting - it and google-chrome share the same code basei think from my tests perhaps firefox has more strict standards than google-chrome about cookie manipulationbut i haven t yet figured out whether it s me writing sloppy code with firefox perhaps being more forgiving than safari or if it s safari or if it s jqueryif you actually need dao s this is something that comes out-of-the-box in appfuse and put partly in spring roo but there is also a great addon for spring roo hades addon that does a great job at this maybe even better than appfuseyou may want to use the rabin hash which is faster and more collision resilient than cryptographic hash such as md5 sha1 et albut with the udp protocol in particular this is easier than for tcpit would be slightly more sensible to bind the click to an element closer to the form and if you use getelementbyid rather than getelementsbytagname it s more simple since you don t have to worry about the index of the number you re binding todatatables has better customizations as far as clientside bells and whistles where as jqgrid is a little harder to make look as pretty but can do some pretty good serverside interaction from what i understandnote that doing this will get the values via post var instead get wich makes more sense since you are sending via post your formsince loosing some packets doesn t matter but speed latency is crucial udp is much better than tcpin addition the need for polyfills for mathml complicates matters further as they may handle the interaction differently as can be seen in the sample below when using the button to load mathjaxand between we are just looking to send and receive data over tunnel there is nothing more or need to control computer on the network all we need is to route data through corporate firewall and should support multiple vpn servers such as cisco microsoft etci have used it and the api is cumbersome and the performance is overall lower than eigen and armadilloinnodb is much much stricter than myisamyou can use array.prototype.find method to check if the element exists in arrays which is much better than perform a traditional for-loopeven if jboss is the better product in my next project i will shift to glassfish because of the better documentationyou had a better chance with kohana 2.3.4 as it was derived from codeigniter and was similarusually in ajax get method is faster as it doesn t involve proccessing post fields and as you are only getting information i would stick itif you decide to use a language that s larger and messier than scheme try common lispif the most-recent versioning is lower than the running app versioning run your upgrade and bump the versioningi wanted to know that what makes spi faster than i2cthat is if you have then you are guaranteed that a happens before b and that b happens before c regardless of the fact that a is involved in an addition which is lower precedence than a multiplication-- in which scenario configuration would i get udp to perform better than tcppygobject is nothing more than a thin layer of glue making gobject gio .i have to use a while loops for this project i know a for-loop is probably easier but just the way this has to be donethe underlying websocket technology is bidirectional more info here but pusher s pub sub model is unidirectionalthat way quicksort can reach recursive base case more quicker than mergesortnote that there are exceptions to the above - for example tcp generally traverses firewalls better than udp which may be blocked due to security to traffic policy reasons so voip speech may sometimes be sent over tcp for part of its journey at leasti aways heart that nginx performs better than apache serverdivision is much more expensive than multiplicationnamedtuple have a lower overhead than dictionary since the duplicate keys don t have to be stored per item but have the convenience of named accessloops in c++ are most basic than python the for-loop is more simpler it is based on the three expression initializer expression loops test expression and the counting expressionthe problem is that i ve now accumulated a bunch of backup folder in each project directory which makes it harder to find the specific change i was looking forbut the text turns out to be much bigger under firefox compared to that under google-chromegenerally i know it sounds banal xslt is better at transformation generating a new document from each source document while xquery is better at query extracting a small amount of information from each source documentthis is analogous to the way you can compute exponent using successive squaring much faster than by repeated multiplicationinnodb uses row level locking while myisam can only use table level locking that is why innodb has crash revovery is better than myisambut in my include directory there is also a opencv2 folder which has more subfolders and in general more filesgson is more about json-based persistence in the vein of xstream which can do json too and sounds a bit too heavyweight for just an appletumd is even better supported since it is compatible with commonjs and amd so that would be a safer betor if the arrays is a straight numerically indexed one you can use a for-loop which is more efficientfrom reading other so questions such as this or this gives the impression that memcpy should work faster than memmove and intuitively this should be somight be better off with i2c or spi like people have suggested herea tooltip has more in common with a popover but they are generally regarded as a popup historicallyudp has less overhead than tcp and is therefore fasteri believe the reasoning behind it is that it allows the parameters to be named nicer by preventing shadowing of member variablesfortunately ecto 2.1 has a better alternative since it s supports the built-in calendrical types from elixir 1.3another side note single-quotes inside xpath string looks a bit tidier than escaped double-quotes imoalso innodb is slower than myisam unless myisam is blocking for a huge selectwe inline the call instead inlining is way better than tail calling and opens the door to many more optimizationsmarcus yes memmove is faster than strcpy and faster than python but whyi d like to add that couchbase is a faster and more scalable option than couchdb the 2.0 version introduces views at a high level it s a distributed memcached membase server merged with couchdb but of course more sophisticated than just mashing them togetherif memory serves this is the same technique slide rules used although they also took advantage of with the idea being that addition is easier than multiplication but my exposure to slide rules is limited to an eccentric high school physics teacher and a cryptographic teacher using it to explain certain tricks with big number mathit seems like you re a little confused about what a subclassing and by extension inherited symbolizes instead of thinking that a subclassing belongs to its parent class pretend that a subclassing is a more specific version of its parent classrather than editing batch files which you may have to do for other rubygems bundler it s probably better to do this once and do it properlyusing the hash value with a salt is much safer if someone breaks into your db no password is therescala does not provide an alternative and any alternative that was provided would likely be less reliable as typesafe does not have the resources that sun oracle ibm etcmysql mariadb is slightly worse than postgresqlftp protocol is more complex than http or telnet form examplebut as that reference points out murmurhash is way faster than md5 and sha functions although it doesn t do a direct comparison to the object.gethashcode method i mentioned abovei am not concerned about the fact that firefox runs faster as browser js implementations will vary so much as the wide spread of results encountered in google-chrome that makes getting an accurate result impossiblethough i was thinking the addition is more simple than multiplicationuse hash and choose hashing algorithm that suits you well if possible something stronger than md5 but don t go all the way to sha512 eitheras a note and for a shorter code using the css display none and jquery show milliseconds and hide milliseconds is quicker you can even animate it by using time like thisget is more appropriate than post for queries because of its safe semanticsone reason to use rar it is sooooo much better than zipthis in turn means that a generic for-loop is worse than a range-based for-loop for auto i v for the compiler because in the latter case the compiler simply knows that you are going to iterate over the whole range and not go outside of it or break out of loops or something while in the generic for-loop case specially if your code is more complex the compiler cannot be sure of this and has to insert extra checks and tests to make sure the code executes as the c++ standard says it shouldwith a salt md5 is much more secure than without but you re better off using one of the sha hash such as sha256managedif we assume that you live in a poor coverage area and your phone and your tower are constantly dropping the signal then re-establishing a spdy connection is no worse off than re-establishing a tcp connection modulo ssl handshakei am checking it in firefox and google-chrome and see that in google-chrome spacing between letter is larger than in firefoxgeneraly get is shorter than postfor floats and double it s more difficult as with plain int as these may or not may be in the host machines byte-ordermultithreading is faster takes up less resources there is no separate namespace for it and you can run them 4 times more than the fork but multithreading requires build php with non-zts some extensions do not work with non-zts and requires something you would understand pthreads modelat the bottom there s a partial code of a form i m trying to build it has only the upper gridview and details view for now but you can see my problem in the screenshot i took the erased row has personal data the gridview and the detailsview drops lower then the second centered subtitlewhen writing code in jscript as i am wont to do as i have never been a fan of asp.net and jscript is infinitely more elegant than vbscript you can call upon the arguments collectiona better bet might be to install spim and to learn mips assembly which is more straightforward than x86 anywaysit s true that the yosemite compatibility exists but i ve found that earlier mac machines does not have the propper hardware and you experience some lacks in memory and graphics when upgrading more than one osxostream is more general subclasses support writing to different places ostringstream is a specific one writing to a stringafter a lot of googling i ve found that most sources say that the dijkstra algorithm is more efficient than the bellman-ford algorithmrythm is a high performance 2 to 3 times faster than velocity pure java template which use razor like syntaxthe good news is that dexterity content types are more lightweight than archetypes content types and doing raw listing by iterating over folder.contentitems in your template should not be that expensivefor a low traffic site the huge tokens that kerberos send across the network actually makes it slower than ntlmfgets or fgetc is a better approachbottle is rather faster than flaskif you want to support better than just addition and subtraction you could do it as an eval if you are careful about how data gets into #numberyou may want to look at turbogears which is built on top of pylons and has more out of the box things for you to usethe code could probably be improved a bit by preventing expected being incremented with negative int values coming from random.nextint 1024 by using random.nextint 1024 instead of random.nextint 1024 but i assume no one ever ran into issues because no one uses a shutdown command longer than 1024 charsbecause you can determine what code in a compiled-language is likely to do better than a dynamic-languages it has been determined more error free to use a compiled perspective for more things so as you can see with the availability of offset-management and lookup compiled behavior given to you in core perl there is no reason to mess with the symbol table if you don t have tothe nltk library includes a confusion matrix that is simple to use and produces a nicer output than scikit-learni would say pure actionscript is better for programming whether you use flash ide or flex ide is not that relevant and mxml is better for non-programmers to combine the components programmed in asi was just going to say radix sort however that could be a bit above what you were looking to implement introsort is generally the accepted sorting solution for data it s a variation of quicksort that switches to heapsort when it reaches smaller sets as it s faster on smaller sets than quicksortin usual programming practice one wouldn t bother and simply multiplying by the floating-point representation of 180 Ã¯ because multiplication is so much faster than divisionyes some functionality possible only on device but you can try also bluestacks app player which has more possibilities than android-emulatori think the listview is better than gridview in this situationnote i am looking for a more elegant way than strsplit or substrthat s obviously quite a bit more than the 16-bit that s mandated for an int but equally obviously less than the 64bit mandated for a long longsimilar to pmg s solution but still faster because multiplication is faster than division -if what you are making is a map from one word to another you might be better off with a dictionarynote that if the arrays are not chars int the optimization does occur and data_p is fetched only once because chars can alias anything but int is more limitedthe reason udp is faster than tcp is because there is no form of flow control or error correctioneven though i liked many design aspects of swt and it is simpler than swing imo swing is the one to learn because imo it has far far better documentation examples etcif you use map_shared | map_noreserve you can use a memory map much larger than available ram + swap -- but if you run out of disk space or quota your process will receive and die from a sigbus signal.all of the object files are dumped into the output directory and the executable is placed in a different folder that is kept cleanerusing this hint we can try to guess that a fixmap must correspond to a dictionary data type in c# since a map is more or less like a dictionary of key-value pairsso i ve started learning swift because it looks way better than objective-ci understand that ram is typically thousands of times faster than disk but i o speed is not the only code runningpost data isn t inherently more secure than get datain general encapsulation of fields by getter and setter leaves more flexibility for changesfollowing my comment on your original post here s some more information that will help you get through thiseven in your original post the subclassing is actually more restrictive than the superclass so doing something likethey are for example too big in a phone and too small in a tableth because the screens of tablet has more centimeter than the pone screensswitching to 2.2 framework which has better compatability with screens resolutions and densitiesfor your first problem make sure that both the classes are in the same package and the members are declared either public not recommended or protected better or don t specify any access specifier which is a bit more restrictive than protectedi have a simple parent has_many children relationship and i m trying to get all parent that have less than n childreni can t say whether toupper or tolower is faster thoughi admit that gin index on hstore is much more expensive than its equivalent for jsonb but even then it is faster to just do seq scan on hstore than use index on jsonbyou can also look into strtol which is better than using atoi in terms of error checkingor it can be disambiguated by type inference unification is a more appropriate term or an explicit type signature like thilo said in their commentgranted iisexpress is much better than cassini but if there is no reason to not use full iis then i conitnue to advocate it s usethe question is is mysql somehow more resistant than postgresql to sql injection attack under the perl dbi and why might this be the casersa is not ment for bulk encryption as it s quit slow compared to symmetric algorithms like aes it s more than a factor of 1000 slowerd3.js is much harder to learn than raphael but in both cases you will also have to learn svg to be able to create better animationsthe other way round returning a subclassing that is a more specific class does not break the contract because the subclassing has at least the same functionality as the superclassnvidia is more permissive for example nvidia lets you cast wrongly ie float4 to float only making it a warning ati won t erroras disk i o is orders of magnitude slower than ram i o this can cause a very significant difference in query execution timesyou would allow post get post is more secure to the php file and would then run an http post get request from c#i was going through internet and so and understood that web sockets are encapsulations to tcp which by itself is slower than udp ofcourse at the cost of reliability but i couldnt find much info if websockets or udp would be ideal to implement such a serverwhile mysql is more famous for serious enterprise-quality database where preserving your data is critical i recommend postgresqlusing a hash or similar to detect if the transmission was decrypted having a salt hash makes it harder not impossible to change or forge message contentsa filesystems such as xfs is more suitable for thisso both can use quic instead of tcp and it s usually faster than tcp hence the name which sounds like quick and is an acronym of quick udp internet connectionsa directory or folder is nothing more than a location on a disk used for storing information about filesas you can see the program is much quicker under pypy than cpython which is why i moved to it in the first place but at the cost of a 10-fold increase in memoryif you don t already know vb6 there s little point in learning it now - your time could be put to much better use by learning vb.net c#if you use linq using max min method is a better way than sortingthe specification of atom feed offers more value than the rss one with internationalization content types and other things and every modern feed reader supports itsecondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factorif you are happy with this sequence of permutation there is little more to doi m new to nginx and want to try it out since it apparently is much faster and less resource-hungry than apache but i can t see why this would be such a hard thing to achievewav files are about 3 times larger than mp3 files so it would need 1.8gb additional space to do the conversionwondering mainly if svn uses less disk space or more than the same in cvsi ve seen mention that it is two orders of magnitude slower than host malloc and freeso now i just want to forget this virtual directory system and make the solution explorer to be nothing more than a folder tree as it is in real just like a windows explorerearly this month i started learning swift as i found it fun and easier than objective-cif you want only very coarse parallelism at best and you intend to stick with mostly functional structures then pick based on something else like syntax i think haskell is much nicer here but that s subjective or available libraries haskell wins on quantity availability but ocaml might edge it out in the graphics department nonethelessa get post is easier in that regardthe only thing i can suggest is that you use ppm format which is even easier than bmp for you to read fromfirst off get is no less secure than postthe superclass has a more stringent constraint on a property content blank false than the subclassing content nullable true and i am using tableperhierarchy falseit should be in my opinion more strongly noted that password hashing with salt is no longer secure and should not be used as others noted use pbkdf2 or bcrypti am working on udp socket programming and i have to stop the transmission in application if requested data is more than mtu valuei think it can be better to do form submission through javascript so on submit function can be controlled more wisely to kill popup on more than one submit click....am i right if yes plz guide this wayi ve considered that udp is more suitable for sending a series of discrete data sets but i need the reliability of tcpxcb is lower level than xlib and allows you to minimise the number of round-trips to the x server leading to lower latencythis garentees that while a can be issued to the pipeline every cycle it will have a higher latency than an add subtract circuitdoes anyone know of a jquery plugin that would stack elements like masonry or isotope and displays bigger smaller elements based on importancei find cobertura and emma to be largely interchangeable in terms of coverage checking just that cobertura has a better maven plugin and emma has a better eclipse plugin in my opinionthe various alternatives calloc realloc work roughly the same way calloc is easier to use when dealing with arrays and zero-fills the data while realloc is useful when you need to resize a block of memorynevertheless i would recommend sticking to the queryover versioning it s much more intuitive and you avoid magic strings especially that you don t have to upgrade the nh versioningspi is not less limited than i2c in this casei ve seen plenty of questions asking whether quicksort or mergesort is better and when to use each of them but what i d like to see is some input on when to use them with regard to the size of the data being sortedi ll add that if this is the first time you use bsearch and qsort it s better you look at the samples you can find aroundin terms of performance py4j has a bigger overhead than both of the previous solutions jython and jpype because it relies on sockets but if performance is critical to your application accessing java objects from python programs might not be the best ideathe most interesting thing i noted is that certain test combos in firefox are much quicker than even google-chromeif you need more than integer accuracy but want to avoid floating-point consider using fixed-point arithmetic insteadalso it looks like when i transcode webm to mp4 2.7 is 30 faster than webmi need to prove that git is better than cvs and svn to my team.the only thing git lack is a standard serversince mantis is a bit more complete than bugzilla when it comes to features you could define separate issues with custom field for your taskspostgresql specifically has gotten easier to manage while mysql has lost some of the simplicity that gave it an advantage without picking up enough features that really matterany suggestions on how to manage the android actionbar in phonegap - i ve seen some other similar questions but generally asking how to show it seems like getting it to hide is less popularno more caching by google-chrome or operai ve found that using a simple for-loop iterating over all elements in the string and comparing using charat performs faster than indexof or regexon linux google-chrome displays text about one pixel higher than firefox and operaa uicollectionview works very similar to a uitableview but gives you more control over how the cells should be displayed and alignedalso the for-loop is more readable than the while loops because it puts all loops variable manipulation in one placefor this reason i deployed a 2 cores 4gb ram and more than enough disk to run through the getting started example of the enterprise integratorultimately the check point is do not use more than one for-loop and never use the while loopsedit it seems junit has more printed books as references compared to testng on amazonmysql is more than capable of serving your needs as well as alex s suggestion of postgresqlso what this says is that provided your subclassing doesn t have any more values than the superclass used to determine ordering implementing is reasonablealso when you open a matlabpool the workers are launched and ready so the overhead of parfor is much less but still not zero as the body of the loop needs to be sent to the workersi suggest using a template engine such as freemarker for this or velocity but freemarker is better imomaven is definitely better than ant and well used for big projectsbut the research i ve done so far all points to multiplication being faster than divisionyou cannot directly use an expandablelistview for the spinner popup any more than you can directly use a listview for the spinner popupi think d3.js looks so much better than leaflet but for quick zooming panning functionality my first question is is this better off in leaflet or can d3.js handle slick zoom pan even though it s not tile-basededit the proposal by jens from the comments using the min max is probably more what you re looking for if you re not interested in complete ordering of your valuesthat is actually not the case with rsa which is --- more so than aes --- just a math equationit is even slower since i could only upload wav which is way bigger in size compared with ogg and opusin the compareto method you can then write the code which will call the getters for the year month and so on until it figures out whether the current object is less than equals to or greater than the object o being passed into the compareto methodit looks like google-chrome is smaller in your screenshot there so firefox could just not be at the defined break-point yethowever it is better to do this on the php side and work more securely with post instead of getso after googling this i found that using gyroscope sensor is more accurate than the accelerometermultiplication takes less time then division so you can try thisis the foreach loops slower than the for-loopobviously google-chrome is more persnickety whereas firefox defaults to moving and sizing the printout as necessaryfor security http vs https is more important than post vs getwith firefox it was very easy i just grabbed the apk from their ftp server run the adb install command one would think it should be even easier with google-chrome but it s really nothardware-specific optimizations makes the code even more complex such as sse avx optimizations for x86 x64i d like to know what is the difference between heroku and openshift for now i m going to use the free package for my blog i ve noticed the openshift has more supported techswell we typically don t do too well reading binary and hex is a better substitute for thatso in my practice using war app easier than jar to manage and re-configurei m more familiar with mate than cairngorm but what i do in this situation is to back up my pop up with a model and dispatch the events off of the modelmuch better than opera firefox and google-chromemodulo is a bit weird for floating point - it returns negative for negative so you still have to have a branch and it involves a division which is slower on some machines as in i ve not found a machine where is significantly less expensive than going round a loop with a couple of subtractions two or three timesdoes this make ant more complex than mavengenerally i noted that jstl sql taglib is much slower than java code because it put all the result set into an hashmapi want to have another textview underneath these two but i am having a problem when the textview length is less than the imageviewi wrote a plug-in a short while ago that will handle text input much better than keypress keyup and keydown eventsit takes longer than google-chrome or safari to load but it does load successfullyyou can parse it like what you are using or you can do the same with more less code and more performance by using gson as described in this answer or you can use jackson as described herelibxml2 libxslt also come with their own much lower-level python bindings but lxml is much more straightforward and pythonic and it seems to have great performance as wellhttps is more flexible than ssl an application can configure the level of security it needsthese formats allow various data compression codecs note that snappy is now much more popular than lzo and can also provide other benefits such as fast serializable deserialization column pruning and bundled metadatasctp mapped over udp ipv4 allows more private hosts per public address but udp mappings in ipv4 nat gateways are notoriously tricky to establish and keep maintained due to the fact that udp is a connectionless transport without any explicit state for a nat to trackthe genisoimage man page suggests using -r or -r which has better defaults for ownership in addition since the rock ridge standard supports 255 byte file names and folder depths greater than 8 directory and is a real standard unlike jolietalthough this is much faster than explode without the limit it is not as fast as the substr solution suggested by the user set sail mediaif you need to load from a well-defined filesystems fat or ntfs this is more tricky you have only 450 bytes of space because 60 of the 512 bytes are used by the filesystems internally for code that interprets the data of the filesystems finds the file containing the code and loads it into memorynote there are many more differences between zsh and bashavoids n calls to malloc free it s faster and simpler to allocate deallocatethe above assumes you are in the same folder as your docker-compose.yml and the directory is all lower case charactersraphael is very much similar to d3.js but is more on thd lines of a graphics library and the added advantage of compatibility with internet explorer 6 through 8 using vml instead of svg.here ajax form breaks after adding html5 attributes in google-chrome safari is a better description and workaroundas a general rule udp is faster than tcp due to less protocol overheadmit scheme is known for strong interactivitiy support while plt racket feels much more staticin your example i would suggest to use rbac rather than acl because rbac is more flexible for enhancements and maintenance which will be always in system like university management systemeither way applying gain and or attenuation to time-domain sample data as in a wav file is much easier than trying to apply these effects to frequency-domain data as in an mp3 filejust one tip if only job for the http server will be just proxying the play apps consider using some lighter option than apache for an example nginx or lighttpd you ll find sample configurations for all of them in play s documentationinstead of dropbox i could use key value store as rest web service which i want to do later but have no time for this for now in my opinion my solution is more reliable than icloud and which is very important i have full control on how itÃ¢ s working mainly because itÃ¢ s my own codenow if you free some values on the heap and allocate more with malloc you may be given back some of that dirtied memory that you scribbed on earlierhowever post data are not much safer than get data anywayalter how i am joining the tables together so that the sorting of the results for the grouping by is more efficient and then hopefully remove the tmp table as wellif it is useful to you you are more than welcome to it note i m more familiar with vb6 vba than vb.net so this udf is more in the vba style but still works in vb.netthere are simple examples 1 2 for intercepting get requests in the documentation for http-on-modify-request however intercepting post requests is more complicatedsince clicking the mouse is significantly more difficult for me than typing i was wanting to make a simple program that would just run in the background and click the mouse for me any time i press a specific key on the keyboardotherwise there is still the possibility to change a public access to a protected or package private access which will be much more restrictive than publicnotice also the the cpu cache is much more important than processors registers todaybitwise operations are usually significantly faster than multiplication and division operationsthere is no way that you can detect if the user entered more than a chars by scanning a character.you ll have to use an int .since all your case s consist of numbers you re in lucki know maven is more powerful than antthe advantage here is this membership provider uses pbkdf2 to derive the hash which is more resistant to brute force attacks given the number of roundsmoreover this even used to apply to all integral types larger than chars until one of the tcs for c99 standard finally required all-bits-zero pattern to be a valid object representation for int zeros of all types on all c platforms.with current hardware at about twice the number of active threads as execution units cores ht logical processors however the architecture handles multithreaded execution your cpu starts spending more time scheduling thread execution and managing thread states than it is actually executing the threaded instructionsdialog makes it easier for you to create a pop-up window with customized contentsfor-each loops is an iterable form of ordinary for-loop which is a better built data structureso it seems like the opposite - mri 2.3 gets 2-5x slower than jruby 9.1furthermore protected is actually closer to public than to privatebut whether or not your use an anonymous class is orthogonal to the question of whether implements runnable or extends thread is the better mechanism to define your thread taskreadability is a big reason for functions using recursion rather than loops makes them easier to follow and for using the iteration methods where possible map to transform an arrays values-by-value rather than a for-loopgoogle-chrome s parsing may be more strict than firefox is at having things like trailing commas as specified by the standard at as stated in danilo celic s answersome elements require more than simple mouse keyboard interactions due to the complex rendering carried out by extjsas a general rule png is never worse and often better than gif because of superior compressionin this case a traversal-oriented approach is best maybe gremlin is better since cypher doesn t allow you to specify traversal orderthis would be easier with server-side php plug-in s unless the file is loaded client-sidethe map set multimap and multiset are normally implemented as binary trees with red-black balancing rules for example and deque is possibly more impression than knowledge a circular queue in an array exploiting an array-doubling or similar growth patterni ve been teaching myself a bit about declarative vs imperative programming and i ve come to the possibly false understanding that declarative programming is more or less just abstractionmouseleave div becomes thicker which will cause an almost automatic mouseenterso the easiest way is to use one either webkit or gecko webkit has probably better support for svg these days plus i can t find package of gecko right nowedit 3des is better than des in the sense that it s significantly more secure but still less secure than aes but its performance is of necessity significantly worse than aes des or twofish because you re essentially applying des three timesscriptaculous can do what jquery provides plus moreudp lends itself to real-time less latency than tcpit is worth mentioning that there is a commercial product named jrebel that is much more powerful than jvm hotswapgetting proficient with a mix of sr and keyboard mouse is much easier than full hands-free operationyour macro with memset and memcpy was not any safer than strcpymost likely a trie is more efficient and you didn t sort your dictionary and it doesn t use a binary tree or ternary treethe alternative is to write slightly more complex c code which can split on either spaces or tabs note that you can pass strtok more than one delimiteri ve read that mantis contains less project management tools than redminegecko seems to like anti-aliasing more than webkitsimply i just kept only the latest .android folder in this directory c users user name removed the duplicated one and then emulator started working for methis is better than strtotime and strftime because it does not try to guess what is the format of the date but rather use the date format you providewhich of these gecko or webkit uses less memory in general caseoracle has kept improving innodb by so much that they declare that it is better than myisam in virtually all situationssublimetext 3 needs much more time several seconds more then scite before the opened file shows up and i suppose it is because sublimetext does some pre-evaluation of the file content like detecting areas suitable for folding there are fold triangles available depending on indentation of non-white characters in the filei would recommend postgresql for a beginner as it has far fewer surprises than mysqlof course ordering could be forced obj.gettype .tostring and using lexical order but since a strict order is not necessary only grouping i was wondering if there s a more efficient way than sortingi am using jquery ui dialog to show more than one pop-up on one page each pop-up will have its own id and it will be triggered by an anchor with a attributeso for example a galaxy note 1 calling a gs3 experiences more delay than a galaxy note 1 calling nexus 7 tablet asus and galaxy note 1 calling a xiaomi mi-2 phoneyou will notice that swift bundles are always about 4-5 mb larger than their objective-c counterparts and this is precisely whyin google-chrome the button should be a tad smaller than in firefoxanother important difference is that valgrind can report a lot more information than gprof does but that s not specifically related to using itany pointers would be appreciated i d love to get this working as you can imagine doing the post synchronously is considerably slower than asynchronouslymousemove is more intrusive than mouseenter but it tracks your mouse position all the time so that the tooltip moves accordinglyif a subclassing needs more information than the standard parameters which came up for us you have the option of a second parameters class type that you use as a second parameter but then you have two types of constructors in the tree or using inherited in the parameters class hierarchycan anyone help me to hide it onload and show when is more than delta and hide on scroll up when is before deltawhile it is simpler with mouse keyboard is kind of trickyfor example filtering and sorting takes longer in javaedit more recent scipy does a better job of not always padding to powers of 2 length so is closer in output to the pyfftw caseobjective-c is much more free and easy with types and compilation checks where swift isn tsubclassing must allow more than the superclass not less and going from an argument being optional to not optional is allowing lessmy view is that option 1 is clumsy code and involves unnecessary creation of an arrays even though the for-each loops is more efficient than the traditional for-loop in option 2a side effect of many division routines is the modulo - so in few cases should division actually be faster than modulowould an arrays be faster than a for-loop in this casein a language like c a for-loop is more or less syntactic sugar for a while loopstried both google-chrome and firefox google-chrome is much worse normally a 2nd or 3nd link clicking will triggerthe justification of realloc is that it s faster than 2nd malloc manual copy freeeven with md5 salt it is weaker besides themif you use the share button on the xcode documentation window to open the page in a web browser i had much better luck with safari than google-chrome 31 you can click on the mac ios developer library link in the top left corner of the webpagei searched a lot about a tutorial or even a documentation describing how to add custom settings fields to general settings page in vbulletin admin panel but no way unlike the wordpress which is much easier to get tutorials toit seems like the linux method just using linefeed makes a lot more sense saves spaces and is easier to parselocalization it s easier to translation text than imagesno trivial support for cache accessing ram is faster than accessing disksince the fixed position in general is not all that stable on touch some more than others google-chrome works great it is still acting up in safari ios 8 in situations that used to work in ios 7 therefore i generally just use js to detect touch devices including windows mobileglassfish v3 vs jboss 7.0 in using in production environment i know more people use jboss the application server but glassfish has more features and stability over jbossbut when looping through an arrays it s better to use a regular for-loopsvn in much better than cvs and have lot of mature tools for every platform- if you move towards more static content or go the fastcgi way lighttpd is faster than apachethe problem is that the post shipping takes longer than the call get alert then shows me the session variable not updatedwith correct locking for safety reasons and heavy concurrent use postgresql performed better than mysqlwe have a few clients who have very high traffic sites running apache slower than nginx with varnish in front of it and they get way more traffic than you are saying with little to no performance problemsusually i subclassing the stock cocoa classes customize to my needs and if i need custom methods in more than one subclassing i will declare a category on the superclass rather than relying on inherited to provide my custom behavioryou could do something like configure a reverse proxy for certain paths in lighttpd to go to a different port which nginx owns but this will still push all the data through lighttpd and just use more resources than having lighttpd serve it directlyoverriding choice for me is macports as it has many more packages than homebrew and it puts its stuff in opt local to stay out of the way of other programsaccessing the main memory ram is much faster than reading values from the hard diskverilog and vhdl allows for more optimizationi know tcp is a safer choice but let s assume i can only use udp and i need to ensure i can send packets over at a high rate with no missing packets what should i dowebm is usually more robust than mp4 which can be all over the placelooping with a for-loop is nothing more than a basic iteration of an arrays using a for-loopin practice this means that tcp is better suited for continuous transmission of data whereas the more lightweight udp can be used when reliability isn t importantbut on all of the mobile browsers i ve tried firefox google-chrome opera it s much smaller around 25 of the size specifiedthe first solution i thought about was using the keydown and mousedown that seems more worki understand the difference between these functions but my question is when checking for a single null value would isnull be any quicker than using coalescenote that json representation of mongodb document could exceed this limit since bson is more compactto navigate to f you must go to c users folder a b c d e f within each directory there are a number of .html files and potentially more than one folder also2 yii a bit more structured than codeigniter but you have a basic app up within 10 mins and if your familiar with mvc design its a great way to develop portals incredibly quicklyconan uses a more direct and easier approach to library dependencies management than biicode supporting both binary packages as building from sourcecopying the description in both getter and setter is even worseso i decide instead of writing out chucks of code for each of the 10 possible health point not to mention there are other player stats that will be done in the same format i decided upon scraping together a for-loop with two if-else statements to attempt a loops to fill each grid element as long as the health value is greater than the for-loop s iudp sockets have much lower overhead than tcp because packets are not acknowledged by the recipienti solved this myself the problem was just qt errors no problem with the code at all for some reason it didnt like that my project files were in a folder structure of more than one folder before my project files used the exact same code in a new dir and it workedocaml is closer to c++ because of it s imperative and oo features but i recommend you learn haskell as it is more functional more mindbending and has more resourcesalways favor disk persistence disk storage is cheaper than ramit has functionality the same as a canvas but swing is more advanced and has better features than awtpostgresql supports some more security features than mysql for example integration with gssapi or kerberos for logins last i checked mysql didn t have thesesettimeout evaluates your function once setinterval is more suited to call your chrono at specified intervalnone of this is intended to say that clojure is better than common lisp or schemeis division more expensive than multiplication in c++also calloc is slower than malloc from operating system memory allocation perspectivewhy nginx might be better than apache when one is long polling and why long polling is better than periodically polling a serverhowever take some time to consider how you re currently using uialertview and whether you are able to give ios 8 users a better experience by supporting uialertcontrollerthe performance in google-chrome is best less so in firefox and iei won t go into the discussion whether wicket or jsf is better this is mostly a religious battle anyway but due to the popularity of jsf there are simply more people experienced with it and there is a large community offering many things for jsf like component libraries and extensionsbut native hibernate support regarding inherited mapping is more powerful than standard jpa and single table per class hierarchy or table per subclassing mapping strategies are more suitable for polymorphic queries and associations than table per concrete class strategyi only mention this because a lot of people are more familiar with mysql than postgresql so linking lastval to something familiar might clarify thingsthe same speed as addition though still faster than multiplicationit seems to me that swift would be way simpler to learn then objective-c for beginners i know because i learned it in like 2 months and swift is less complicated and better laid out then objective-cunless you are using the static typing feature xquery is no more strongly typed than xsltso the solution for you would be to have static contents contents of apk like its manifest file jar file dex file res folder etc ready in a folder create a copy as a temp folder modify resources contents and not names as per user needs then finally create zip of this temp folder and sign it to have the desired .apk file no need for java complier thenusing the post method isn t necessarily more secure than getan alternative approach with getc fgets or fread seems better suited to you needsif you are more comfortable with updatepanel these should still work if you have everything inside a form tag and a scriptmanager within the form tag toonow why chat to int works because every chars is represented as unicode in java so you can think of it as at backend chars is a smaller version of intobviously dynamic allocation with malloc or calloc is more flexibleit depends on the browser its definitely true for ie and firefox but seems slower on google-chromethe other ram disk questions like ramdisk slower than diskvmware has more features but costs 80 virtualbox on the other hand is more basic but is free for most users see virtualbox licensing faq for detailseven if you can handle them with npm it s better to use bower since it s optimized for this purpose no deep dependencies among other thingsi think that s why i can t use to launch my project this way works but jar way is better because everything including the main_class is described in manifest.mfi m in debian wheezy which is much more recent than ubuntu 10.04ps i ve noticed that in google-chrome situation is better than in firefox but new line still starts beneath tagmy personal experience with both richfaces mixed better with other jsf libs icefaces has more advanced ajax capabilities like server sided push kinda like comet the basic ajax functionality is easier to set up and use but plays difficult sometimes when you mix it with other jsf libsstrtol is better than atoi with better error handlingif strcpy is anything like strcpy it will write one byte more than strlen returns to zero terminate the stringhere s what it looks like if the parent is bigger than the childreni am trying to bind it with a gridview or a datalist whatever is more appropriate without successthen the right events to do it is keyup more than keydown since the value isn t yet in the field at this moment or on changebut right now the sorting step is taking way longer than the filtering step so i would like to combine them in some wayin contrast to turbogears django is more out-of-the-boxthe swift one is dramatically slower then objective-c implementationnote that this algorithm avoids any math more complicated than addition and multiplication so will likely have much better performance than something that requires trig functionsand because hex is much more readable and useful than binary - it s often used and shownfor input and output to complete gandalf the grey s answer if you like to use cin and cout it s better to use std ios sync_with_stdio falsea while loops or do...while loops is more appropriate here than a for-loop because you do not know how many times the user wants to execute loopsi though that udp was faster than tcp but do you think that tcp will be faster due to the congestionbut that seems a lot uglier than implements a facade pattern and just extends the map code but that is a lot of intermediate code to create a facade forhowever if that upgrade includes myself say i have a package named server and part of the upgrade includes a newer versioning of server then the upgrade failsudp is less reliable on a wide area network but in a closed environment of a vm talking to its host you can safely skip all the tcp reliability stuffis it a microoptimization or are there real significant examples when memcpy is faster so that we really need to use memcpy and not stick to memmove everywherei guess you can just manually check the condition within your for-loop continue if it s not met but a while loops makes more sense imohowever in most computer architectures there are at least 2 registers to return values that are twice or more as wide as the word size edx eax in x86 rdx rax in x86_64 v0 and v1 in mips why mips assembler has more that one register for return valuemake sure that you re running a versioning later than 1.0 you may want to upgrade if your versioning is older than thatin general strncpy is a safer alternative to strcpyanalytics -- when you can scan via the clustered pk you get better performance with innodb than with myisam which has to bounce back and forth between the separate index and the datai know that it would be easier with the parent knowing it s children using a list but that s not what i m afteri prefer to use beautifulsoup better than lxmlfurther more gson really seems to be faster than jackson jsoninnodb scales better than myisamadditionally you may have to write nested try-catch blocks more frequently if you are using traditional try-catch . closing a resource also throws an exception-handlingthe application has far fewer threads than the cpu has processors coresquicksort is usually faster than mergesort just because it s easier to code a tight implementation and the operations it does can go fasterpypy is now faster than cpython in most casesknowing that a division is much more costly than a multiplicationif you use another library like glut or sdl it becomes much easier let the library worry about setting up a window and then you can focus on learning openglthe quicksort algorithm is faster than mergesort which is what sorted will get you when called on a sequence of objects via java.util.arrays.sortmy suggestion would be to try to use a testing framework testng or junit which gives many more features than just parametrizationin php you should use metaphone it is more accurate than soundexas the simple for-loop is faster than a foreach loopspostgresql is better than mysql in many waysalso your comparison would be safer as a for-loop that ensures value is less than 100 rather than a while loopsfor example mdpi is basically 72dpi as your computer monitor hdpi resources should be around 1.5 times larger than mdpi resources and so forthis opencl just there to make multi processors cores just more portable meaning porting the code to either gpu or cpu or is opencl faster and more efficientscheme is older than common lisphigh-availability will be easier with couchbase or aerospike than with redison windows xp however it works fine on local file systems but when watching folder on a mapped network drive it throws an ioexception when trying to watch more than 50 directoryi m in the hate it part so anything i said is biased plus in our test prototypes developing in wicket was faster than jsfdisk files are of course an order of magnitude slower than ram and thrashing your virtual memory system could actually be worse than that depending on your access patternsmultiplication is higher precedence than addition and addition is left-associative so this is equivalent to but knowing that only tells you that the first addition will happen before the second addition and that the multiplication will happen before the second additionfrom this question i found out that iis server is better than cassini for my purpose but i don t know how to check the default server of my websiterythm is a strong typed java template engine using razor like syntax with high performance 2 to 3 times faster than velocity and fmseam is more powerful with jsf but not necessarily richfaces or icefaces for they mostly just extend the component set which is anyway fall down to standard html components when rendered by jsfwe can send fewer data with get method compared to post methodobviously reading a block from cache is much more efficient than reading it off the disk since ram is much faster than diskthe post get may fix the problem - get is much more lax with security than postunfortunately including .class only goes two directory deep and does not copy any files that are deeper than two directory inside of the bin folderthe first time i run this on a device i realized that i was on a wrong track for some of the local phablets tablet mobile that have large screens has less screens densitymyisam table is much faster than innodb but no rollback is possiblethis isn t to say that xhtml2pdf is bad just that it s going to take time for it to be as good as rendering in a browser and if pdf output for its own sake is what you really are interested in i think using reportlab directly is a better choiceyes pow is slower than multiplication multiplication is slower than additionresearch showed me that mantis is simpler to use over bugzilla so i decided to use mantis but have no idea how to install it.can anyone please tell me what are the steps you need to take in order to install mantis bug tracking system in a small company to track website mobile portal bugsnormally you can just call parent class methods directly by doing parent.foo self ... but in case of multiple inheritance super is much more usefuli am more familiar with vtk than itk so propably what comes into my mind is a bit biasedi have some buttons i want to order in a table layout and everything is working fine but of course a tablet screens is much bigger than a normal smartphone screensedit you probably only want to validate when the value changes and field loses focus that s why imo the onchange event would be more appropriate than onblur not onblurei changed out total for sum which is more consistent with other databases sqlite aggregate-functionsabout the inexactness problem you should be aware that double can be more inexact than intimplements runnable is better because you can extends other classesif you do mind using linux you can use ubuntu which is more user-friendly but not really recommended as a server at least for the default versioni haven t tried it on ie 9 but i can only imagine it being harder than google-chrome firefoxthe cpu affinity is more like a suggestion to the kernel regarding which cpu to usethese methods which give us access to private members are known as getter setter or better knows as accessor mutatorsexcel cannot process data more than 64bit big it will store it in powers of 10 but in our application i want 128bit data for that i have formatted particular cell to be text format in excel sheet so that i can enter very big numberyou might want to try running your trainer under pypy if you aren t already -- it s significantly faster than cpython for some workloadsparam should be params and therefore your data is not being serialized which would explain why the server is rejecting your post since post requires more privileges than get presumablywell if it is a single calculation you wil hardly notice any difference but if you talk about millions of transaction then definitely division is costlier than multiplicationas written malloc would be better than calloc but the question used calloc and it would not be hard to make it sensible for use with this code too for example a conditional assignment in set_matrix such asso if your document bson is larger than 16 mb mongodb throws exceptioni feel postgresql is much more mature and robust than mysqlgiven that you re seeing extra tasks causing a slowdown you likely either have resource contention via locking or your tasks are cpu bound and having more tasks than processors cores will cause slowdownsthis is why rsa is much slower than dsai m building an application in both bottle and flask to see which i am more comfortable with as django is too much batteries includedmyisam supports longer rows than innodb doesanyevent http resolved several issues i had with my program locking up and also offered better control over ssl cert validation and use of proxies including socks proxiesif the data is critical you should go for tcp which is slower as compared to udp which in fact doesn t guarantee the packets will arrive in order or even if they d arrive or not3 if i have a large object to cache i find serializable and deserialization takes a longer time in ignite and retrieving from distributed cache is slownginx s static file performance is better than apacheyou seem to be compiling more than one hdl probably vhdl and verilogi m also looking for more examples and explanations of complex combinators more complex than fold in common programming languagesthe point of such an architecture is because i have news with some text between which i want to be able to switching with paging effect but the news text can be bigger than the screensmyisam is more space friendly than innodb you can start with that onewhy is enumerate slower than xrange + lst ia boilerplate setter getter is no better than a public membersplitting the min and max operations seems more simd friendly thus i suggestcolt does this already but i have found it is more complicated and more powerful than jama which may explain why simple functions are slower with coltbit shifts have lower precedence than addition subtraction see in docsit is well-known that the processor instruction for multiplication takes several times more time than addition division is even worse upd which is not true any more see belowi just wanted to point out my answer since i know for-loop is faster then loopsnote without the mouseout it works better but tooltip stays until next mouseovertextmate isn t known to perform well on large files but sublimetext supposedly performs better than vim on large files and yet supports legacy textmate syntax parsersyou are right because myisam is really faster than innodbinstead of firefox or ie i use google-chrome and i superficially feel google-chrome is responding betterif mp3 ogg is better try different compression ratios and sample rates to see which goes fasteras i said postgresql is far superior and i hate mucking with mysql s bizarre bugs and i think that overall postgresql performance is probably better than mysql for any even slightly complicated queryin my case i found jackson little faster than gson i used default serialization because so far i don t have a need to customize serializationwhether you use a plugin or write your own code css only is a no go for google-chrome safari and as you said firefox is better at dealing with itstrcpy incoming connected will overwrite dataa and maybe datab if your first token pointed to by header is shorter than strlen connecteda similar tool is now present in firefox you had to use firebug before but google-chrome is more used partly because of its more powerful js engine v8apparently opera ie and firefox works better withactually calling memset after malloc is closer to calling calloc than the option you suggestsmall in firefox is smaller then small in safari so never ever use themi have never used glut but i know that many people will say sdl is betteror use a single for-loop and there is no need for nested loops that makes it more complexnote that this will work when the variable is public but it is best to limit the scope as much as you can so protected is more sutable herefor use with types other than boolean and int this is more complex but still possible - but it would be easier to use an initializerhardware design with vhdl or verilog is more like programming nowadaysfrankly i care less and less each day as i become more and more impressed with clang llvmi feel swift is better than objective-c in many aspects but my major question is - will swift dynamic libraries support older version of swiftbut if firebug donÃ¢ t enabled after launch firefox Ã¢ time equal 2ms that faster than opera and google-chrome and difference between empty filled array disappearsjust like it would be possible to come up with arithmetic expressions that could be written with less parentheses if addition had a higher precedence than multiplicationas such traversing a nat through udp is much easier than tcpif lob-storage isn t in ram at the time of a query execution then we need to read it from a disk which is of course much slower than from ramheapsort has higher overhead than quicksort but its worst case is o n log n vsto get the html instead of hardcoding it as above use the webclient class since it has a simplier api than webrequestas mentioned in comments use the post method instead of get because post allows much more data characters across in one messagefirefox doesn t support mp3 on html5 they support ogg which is better anywaymore mathematically you can think of a class a set of all objects with some similar characteristic and then the subclassing surrounds the superclass and has even more characteristicsas suggested in the comments since you are saving data post is more appropriate than getentity-relationship diagram are simpler than uml diagramthe non-random random behaviour is more a reflection on the quality of the rand prng Ã¢ it is often not very goodnow imagine writing lots of small packets across a network udp may cause congestion whereas tcp is better controlledtcp windowing is more expensive than raw udp but if you use udp to go faster and add a custom loss-recovery or seqno ack resend manager then that may slow you down againmy ipad 1 safari js benchmarked 38 times slower than google-chrome on my pcyour colleague may be right in the general sense using try-catch to test your exception-handling handling is less desirable than using the provided expectedexception utilitiesas mysql_real_escape_string escapes characters according to default charset so it is better than addslashes function and it properly sanitizes sql injections arising out of abuse of multibyte character sets but in another article here a workaround-scenario is shown that explains that injection can still be donewhen i try the demo in google-chrome or safari it is indeed much faster but when i ve tested it in firefox it s consistently slowerdisk even ssd are orders of magnitude slower than ramdill has a better serializer that can pickle socket objects on any os and thus sending the socket object with multiprocess works in either caseif i have a class hierarchy in which subclassing require use of more specific types than those specified in the superclass ivars is it better to declare the superclass ivar as id or to type it and then cast where necessary in the subclassingi ve thought in using a pairing function but that makes children exponentially bigger than parent so after a few splits there is an integer overflownow i want from all user that have more than 1 post to get all post except the most recent postin general multiplication is more costlier than subtraction rightin many cases emacs or vim is more productive than a huge ide that makes coffeealso i want to know if google gson is better than jackson for json parsinga third possibility would be to send out some form of discovery packets either by broadcast or better by multicast udpcompare the very active django tag on stack overflow with that of pylons or turbogears though and i d argue getting started is simply easier with django irrespective of anything to do with codefrom what i can gather arc4random generates much better random numbers than rand does however i haven t seen a way to seed it and i would like to just like using srandalso which database syntax postgresql or mysql is closer sql mssql syntax and structurewith this set each time you boot and the sata negotiated link speed of the ssd is less than 3 it s going to reboot until it s 3 however many times it takesi would advise you to try wicket it is very easy to learn much easier than jsf and it let s you re-use many existing components as wellsimple function in zsh to parallelize jobs in not more than 4 subshell using lock files in tmpeven if addition is faster than multiplication i think that you will lose more because of the branchingfrom a software engineering point of view as soon as you make a function protected you expose it to other users of course much more limited than public exposure but still much more exposed than private and you create expectation about some stability of the apii would also recommend you to check hikaricp as its way much better than c3p0hex encoding is far more readable than binary that s why sublime uses itnow i went into this script there are for loops which are adding some values to the classpath for there are more than one for-looppost has a lot more advantages than getwhat i want to do is if a user checks the more than 1 checkbox all radio button must turn into checkbox and users must be able to check more optionsalso note that some mysql engines are faster than others for example myisam may run faster than innodb at expense of the lack of real foreign keyshons generally runs slower than cons because in creating a hons an attempt is made to see whether a hons already exists with the same car and cdrwhile the post method can be submitted with forms or ajax calls and it is pretty safe at least more than the getfinal result will be of type ienumerable and in terms of performance this would be better than iqueryable since here join is taking place between in memory collections| application expects grails versioning 1.3.7 but grails_home is versioning 2.1.0 - use the correct grails versioning or run grails upgrade if this grails versioning is newer than the versioning your application expectsalso a while loops seems more appropriate and self-explanatory in this situation than a for-loopthen you run that string through a good hash algorithm--something like sha1 is fine even md5 is more than adequate despite reports to the contraryis sending packets via an established tcp connection after all hand shaking has been done a method to be faster than udpirrlicht has a cleaner api lower system requirements and works better across platforms than ogre in my opinionit is clear without any performance tests that native javascript for-loop is faster but there is no big difference for small arrays like 10-20 small itemsthe speed for tcp in comparison with udp is sloweran additional bonus i find that conda works better as a package manager than virtualenvsince i am using two for loops it is consuming more time and is affecting the execution time of my entire program which already had a for-loopi keep hearing from some people that graphicsmagick a fork from quite a few years back that branched off from imagemagick is significantly faster than imagemagickso i think a custom checkbox is the better choice here but if you really want to use a button i would use a hidden checkbox field and apply onclick functions to the button to change the value of a hidden checkbox field2 since superclass is smaller than subclassing one should use memory object carefullyfirefox handles this better than google-chrome does but neither exactly the way i wantneo4j and cypher is still faster and obviously this has no effect on the gremlin queries on neo4j but that might be just a issue with the gremlin implementation for neo4jhaving said all of that i do think that maven is a very interesting and useful system i m not calling it a tool like ant is maven is broader than that for software development configuration and build managementfar better to use a surrogate key and yes a join on an int is often faster and you can join in delete staments in many databases not use the slower subquery especially since names tend to be longer than a few charsthe setter complexity can be higher than the getter and thus validate a unit-testadding lightweight generics to your objective-c api makes it easier to interface with swift because your api gets translated more preciselysecondly you will find a for-loop is easier than a do loops for implementing the logic as you don t need to keep track of loops counter manuallybetter than get use post method to send and retrieve user databoth old and some modern systems implement a special vfork call which has somewhat strict limitations although less strict than the posix requireemnts for vfork but avoid this copy for performance reasonsnss is more strict than either openssl or gnutlsbtw i concur that udp is far more appropriate than tcp in this caseit might be helpful to see why quicksort is usually faster than mergesort since if you understand the reasons you can pretty quickly find some cases where mergesort is a clear winnersortedlist is faster when you want to enumerate the elements and you can access the elements by index and sorteddictionary is faster if there are a lot of elements and you want to insert a new element in the middle of the collectiongiven postgresql s reputation for doing things better than mysql or at least as good as i daresay that postgresql would demonstrate similar performance if properly usedi finally ran it through pypy and was delighted to discover that when the lists got really deep pypy was running significantly faster than cpythonif you have not programmed assembly before i suggest you choose mips since it is easier than x86 and then b looking at how to transfer data with the serial port to begin with since this illustrates memory-mapped i o that is usedquestion iÃ¢ m seeing some compromise in mp3 quality my converted mp3 is lower file size when compared to wav but my audio quality is little poor than wav wonder if i can increase the quality of the mp3 filepost is a little more complex than get thoughthat continued usage of 1024-bit prime field elgamal or dsa keys is much riskier than it is for 1024-bit rsa all are still commonly used because once a successful attack has been conducted against a single well-chosen prime field all users of that prime field may be affected at little additional effort.this is relatively slow since reading from the hard disk is slower than reading from ramentity sql which is not available in code first and dbcontext api - you must access it through objectcontext api is more powerful because it is not dependent on limited functionality offered by linqwhat makes quicksort faster than heapsort in practice is its constant that was ignored by big o analysisnuxeo is definitely more advanced in this because with its web interface you can customise almost everything but alfresco has other advantagesi also find sorting and filtering is also easier on windows formsansible is in an earlier stage than chef puppet and other tools out there when it comes to community supporta better solution is not to use myisam for tables where the data is constantly changing - innodb is much more bulletproof and as paul correctly points out you can use transactions on innodb tables but not on myisamhowever using get rather than post is typically more appropriate for things like this where you are only selecting different options rather than changing data on your serveri think adhering to the dip principles makes it easier to comply with the ocp principlesi am not sure if vmware server will be much better than virtualbox4 i d like to understand why nginx might be better than apache when one is long polling and why long polling is better than periodically polling a serverprobably the project has deployment target setting higher than sdk versioning you have installed - try to change it to the lower versioning that is supported on your mac or upgrade your xcode to newer versioningi had an outlet of a viewgraph which was a subclass of uiview in which i drew some graphics.in landscape mode the size of the viewgraph is larger than in portrait modefirefox renders the video correctly and it matches the background and in safari it s always brighter whether you add the filter or noti mean i think realloc is way smarter so why do we even need mallocin the cleanup even in normal case scenario i would regard the use of goto as being clearer than the do while 0 constructs among other things because the target labels themselves practically cry out look at me far moreso than the break and do while 0 constructsonly firefox and opera seem to have this issue opera even worse than firefox but i don t care that much about operaif you could upgrade to that versioning there is less that has to be donedrupal makes it easier for the developer to accomplish much more complex tasks than joomla or wordpressusual way with tagging is to get objects by tag but if tags are used by few applications it may give more than postan interesting answer about this can be found at why is quicksort better than mergesortthe above delta timer is better than setinterval method 1 makes use of settimeout method 2 but also corrects itself starts the timer using a function method 3 and doesn t pollute the scope with a special clockstart function method 4this will work for hotfixes and it is simpler than cherry-pick your development changeset from your default branchnote if we replace math.h by cmath the program does not compile with a warning of ambiguous call to pow seems a better conditionwe don t need the getter or setter it s more for conveniencebenchmarking the and versions against a for-loop with set is informative here and demonstrates that loops version is faster than either of the approachesocaml is faster than racket for most of the benchmarks on languages benchmark gamethese relations naturally arise when you impose restrictions on what you can handle--then if a subclassing means that the method can handle less acts as a superclass of since can handle everything that the subclassing can handle and morea side note since you want all rows using union all is faster since it does not need to perform a distinct to eliminate duplicatesfrom what i heard quicksort should have better average case performance but from my tests it performs 4 times worse than heapsort for array of random integersthere seems to be a consensus that nginx serves static content faster than apachei suggest if possible that you not code in awt but rather code with swing which is much more robust and flexiblesays that enhanced for loops is 3x faster than the regular for-loop well that great and its easier to write anyways but what if i need the indexyou just need to connect using the entity framework driver and if you develop in any of technologies that uses dbcontext includes code first model first and data base first but is lighter than objectcontext you can use the list belowand normal for-loop is faster than for-in loopswe could still do this with settimeout but setinterval is better suited for this jobtostring itself uses an iterator just like equals but is a more inefficient approachredmine is definitely much more popular but trac is getting more popular in particular as 1.0 version is around the corneruse a dawg which is more efficient than a trie in terms of space wastenow this test tests more things than one post put delete which breaks the idea of a single unit of work..you could do it with a while loops as well but a for-loop is niceralso swt is actually newer and more actively maintained than swingellipsis still wraps in google-chrome but is more user friendly in firefox by adding the .they have their differences better stick to one i prefer for this example to use keydown just plays better with me you can use keyupit s more effective with firefox more than google-chrome or any other browserswith the exception there is more data with the post than the getif you overload it you must also define it as protected or define it as public which is weakerclass cplayer has a lot more fields than i put here but they are not relevant to this postthe only reason i was considering postgresql was that some research suggested postgresql has much better support for changing schemas along the way than mysqli also kind of get the impression that scriptaculous drag and drop is better than jquery ui drag and drop based on the online demosthis can be done in a repeater but a datalist control is more straightforward and is just as easy to useif you re just going to use vim the same way you use gedit don t bother - gedit is better than vim at being geditwhy do you think that push is far more scalable then pull for startersdecimal types libraries are fantastic for financial applications because we re used to dealing with the style of rounding required in financial stuff but there is the cost that they tend to be slower than ieee floating pointstep #3 if you see that the last versioning is older than your current versioning do whatever upgrade logic you wantat this point i m putting off worrying about client-side validation since server-side is more importanti presume it s why is pypy faster than cpython some of the timebecause the unification performed as part of type inference transcends quantifier scope you can sometimes end up in a situation where ghc would have to unify a type variable in an outer scope with a quantified type from a nested scope which is how you get compiler errors about escaping types and skolems and whatnot the latter i assume being related to skolem normal formafter looking it s seems that hmac is much faster and better in term of security even if the underlying hash function sha1 is broken which is not the case when using rsa-sha1when you call pandas.read_csv you can use a regular expression that matches zero or more spaces followed by a comma followed by zero or more spaces as the delimiterif you want to stick to lower level basic file operations ant is better bet than mavenin my opinion swing is easier to start because there are tools like the eclipse windowbuilder which enables you to create your application in a graphical interface but javafx is more likely to be used in the future because it has some great improvements over swing like css skins etc.easy make the pro bundle have a higher versioning than the lite bundle - upgrade only kick in when the versioning is higheras in c# development in my past i never create a new instance of some tcp socket in loops if i want to make it asynchronously - i create a single instance with delegates to async functions and if there is a similar situation in c# project like in javascript code here in the question s content because it s doesn t produce new objects in for-loop it takes less memory and as for architecture it s represented as more clean and good solutionwhen i run my http web server on google google-chrome it gives more 324 error than in firefoxinstead of implementing all these over udp it is much better just to switch to tcpupgrade actually installs newer versioning of the packages you havei have successfully deploy pm2 on amazon-web-services elastic beanstalk it has more than one way to achieveon the other hand you may very well have legitimate reasons to have a bunch of properties that are no more than getter and setteractual mounting of filesystems is trickier business and really depends on what you are mounting - ntfs fat ext3 xfs nfs cifs webdav etc etci think lwjgl has a implementation too but the jogl one is betterthe swing library is much more portable than the awt librarysimilarly as the subclassing gains more methods it inherited the list of superclass in the order in which they were named that precede itthe compare dialog of tortoisegit is more about file and with git you have to compare two master branches not just two commits of the same branches both pointing to the same svn central repoalso on implementations like jython or ironpython could be a lot slower than with cpythonon unix like environments emacs is more native and you can use slime which is usually available as a os package or as a separate download for aquamacsthe fgetc loop variant was consistently 45x slower than the fread loopi am running into an issue where for some of the folder there are too many subfolders and it spits out the directory name k really long path blah is too long not the actual dir- the actual dir is longer than 260 charsthe results end up very close but the emgucv image comes out a little bit blurrier than the opencv imageso i am using the music graph api to access and display artists similar to the current one in this case the who. however when i use a for-loop to go through the results .text artistnames only prints the last name in the arrays in this case it only prints pink floyd even though the arrays contains more artists. however console.log prints every name in the arraysalso note that the fact that the avx are a newer than sse doesn t make the avx faster whatever you are planning to use the number of cycles taken by an function is probably more important than the avx vs sse argument for example see this answeruse dsa it tends to be more compact than rsaif using a decently recent version of bash or zsh it s much simplercan anyone more experienced with ionic angular give me a hint what is wrong herea properties is nothing more than syntactic shorthand for a get set accessorin general try-catch is more robust does not require you to define an exact position of where to test could be a block and provides info about the exception-handlingxmltype is being stricter about the validity than clobi am scraping a list of rss feed by using curl - look at the xml from the rss feed that s giving the problem there s more than one feed so it s possible for some feed to be right and for the feed that are wrong to be wrong in different waysyou can for example store a hash stored with something stronger than md5you ll have to use jta if you need transactional access to more than one jms sessionaccording to this test - hide is slightly faster then fadeout since it doesn t use animationsyou should know that strdup allocates more memory and returns its pointer which you then overwrite the original pointer returned by malloc so it will be impossible to free that memory since you no longer have the pointersinnodb not only has the advantages you list but it is also faster than myisam in many benchmarksjust making boilerplate getter and setter is better but is almost as bad as public propertiesthe upgrade works correctly but if uninstall new build for example build 9 and install an old one example 3 i got an error although nothing currently installed on my machine this versioning is older than installed onensurlsession also provides nicer interfaces for requesting data using blocks in that it allows you to combine them with delegate methods for doing custom authentication handling redirect handling etc. whereas with nsurlconnection if you suddenly realized you needed to do those things you had to refactor your code to not use block-based callbacksbut using the prototype instances can inherited properties which means less memory and you gain a lot of flexibilitymost of the patterns i ve seen will either break when inheritance level is more than 2 levels child parent grandparent or use more resources by implements super through closuresthe reason being that sorting less elements which the grouping generally produces is going to be faster than sorting all input documentsmyisam is better for high read volumes innodb for high update volumes due to table vs row lockingespecially look at the last two results for longer strings for which the preorder inorder approach is much faster than brute forceadditionally you should reset i each time you go through loops and a for-loop makes more sense than a while loops especially if you re using c99 as i can be declared within loopssql server is probably smart enough to translate isnull into the equivalent sarg expression but if you are bent on using a function then coalesce is a better choice because it is part of the sql standard allows for multiple values instead of just two with isnull and avoids using quite possibly the most confusing function name microsoft ever devised in isnullusing a ram disk is even better though often more of a challenge to get it to implement for youhere it is with reshape in base though joran is right melt is likely easierthe int version seems to execute much faster than the boolean oneoracle s other application server weblogic still doesn t even fully support java ee 7 - both they and ibm seem to have similar strategies of maintaining stability in their full-fat releases while being more bleeding edge with glassfish for oracle and the liberty profile for ibm s webspherei think it is because the disk is slower than ramsimpletest is slightly easier to grasp but phpunit is the best in my opinion at least so if you want to start learning and using a framework start with the one you re going to use when you ll be a master in tddi m working with both ubuntu mac but i like staying with the linux system feels faster and more stable for mebut also it shows incredible differences between speeds of the browsers ie 50-100 times slower than firefox or google-chromei ve been trying to sum up values over a swipe and see how different browsers report values and they vary a lot with safari reporting order of magnitude bigger numbers on almost all platforms google-chrome reporting quite more like 3 times more than firefox firefox being balanced on the long run but quite different among platforms on small movements on ubuntu gnome nearly only +3 or -3 seems like it sums up smaller events and then send a big +3i did a simple performance test and i noticed postgresql is slower than mysqlif you re building a simple demo of a rendering mechanism glut is way better than sdl it takes care of a lot of the details that sdl would otherwise requirealso with the for-loop it s considered better to limit the scope of the iterating variable i and to use println you need system.out not just system and you need a string java arrays do not override tostring so something to output the numbers the user entered after loops likeif you are not using transactions while storing or updating tables switch table type to myisam its quite faster than innodb with much less overheadp the second thing is porter stemming algorithm but then i realized lemmatization is much better for my cause.safari 5.1 still renders smoother than google-chrome but it is now clear that google has done much improvementafter thinking about playing with it some more and reading some other posts using objective-c typedef in swift here is a better solution i thinkit can be with post or get get is simpleri m significantly more comfortable with apache but learning to use nginx has been pretty exciting or as exciting as learning to configure a new webserver can beit sounds to me like you are asking for the union of the filtered session values from the two tables and as you want the distinct set you do want union rather than union all union all is actually a much more common requirement than unionapplication expects grails versioning 1.1.1 but grails_home is versioning 1.2.0 - use the correct grails versioning or run grails upgrade if this grails versioning is newer than the versioning your application expectsit also caused a bigger problem with serializable and deserializationbecause webclient is higher class of httpwebrequest and its slowerbut firefox keeps being less responsive than google-chrome or ieqnx is most famous for being the real time operating system of which there are two versions qnx rtos v4 is an older product but is still used in many existing systems and still supported by the companynexus looks better choice than artifactory because of using filesystem instead of database to keep repository1 yes there is a obvious benefit reading from ram is faster than reading from diskhistorically floating-point could be much slower than integersendmessage type functions will be slightly slower since they have more coding inside them allowing them to work with more than just mouse and keyboard functionalityto protect your user s passwords you need to do better than md5 hash the passwordswhen i ran the test individually with a timer google-chrome actually performed better than firefox hope this helpsbut apparently tracing garbage collection is so good that it is better than using malloc freeit s much better compressing than zip rarhowever people often argue that postgresql is cleaner and easier to use that mysqlmaven is more like a replacement for antactually we could say that tcp is a higher level protocol compared to udp because tcp includes some advanced features which might be useful .also in this case keyboard input is essential and more important than mouse interactionyou could use memcpy memset for strings too but strcpy is simplerif you don t mind the libc allocation functions realloc is even more efficient it wont copy the data on a shrink just mark the extra memory as free and if you grow the memory and there is memory free after it will mark the needed memory as used and not copy eitheri have a validation on the droppable for not adding more than one draggable per droppableif you re unsure which version you have or you are targeting a version earlier than air sdk 3.2 you can download the latest air sdk pre-merged with flex sdk from adobe s gaming site download the adobeÃ¢ airÃ¢ sdk save it to disk and link its location to flashdeveloppostgresql is picky pickier than mysql -- all fields in the select list when using distinct must be present in the order_by and group_by clauseshence your subclassing is accepting less classes than the superclass contract promisesmore than this methodology i would suggest to you to do the training directly in keras as it claimed that keras optimizers are 5-10 times faster than tensorflow s optimizersupgrade solr to a newer versioning seems have sort this problem likely newer versioning has a better heap memory managementthis platform is probably not representative of your microcontroller but the test shows that on this platform the subtraction is considerably slower than the divisionhowever if you have special needs regarding properties such as specific get accessor implementation needs then better define a function which gets the value as you need itthe for-loop here is more efficient for 2 reasons a you don t have to construct a temporary arrays of tuples like with zip and b it returns false as soon as a non-match is foundme too don t get any advantages for joomla it s big system and it just as good as wordpress for regular projects just wordpress is much simplieri want to add a uiview of smaller frame as subviews to parental view but i am not getting the neededunless you re doing very heavy processing working with a single frame is probably faster than transferring it to the server as far as i know emgucv in c# isn t considerably slower than opencv in c c++i second macports it is more up to date than fink and closer to the freebsd ports system where i come fromwe even setup replicas outside aws using stunnel and put ssd drives as the primary block device and we get ridiculous read speeds for our reporting systems - literally 100 times faster than we get from rdsbut you will have loops the outer arrays in order to get it to work which would be better done with a for-loop so you reference both at onceperhaps 128bit distributed-system internet-wide pointers but no more than 64bit in a system call or perhaps even a legacy 32-bit limitin my personal openion mysql is slower than postgresql and mongo dbobviously for something like show hide functionality a checkbox makes more sense than a buttonthis is where i learned that localization is a lot more than translationmost noticeably if you look or google-chrome firefox and then internet explorer 9 you ll notice that the terms and conditions are slightly higher than in google-chrome or firefox and thus slightly touching the main content areais there a better function than show hide which looks as nice as the accordion doesits really strange that the same doesn t work with a while loops as is said that a while loops is more fundamental that a for-loop2 that code appears to be less secure than the bsd solaris versions since it doesn t take into account the saved setid bitsi m well aware that inline is more of compiler decision than of user going so far as even to inlining non-specified inline-functions so the user control is almost negligiblelast to address other answers while you should use post data when modifying something it is in no way more secure than getdelphi users might want to look at free pascal s paralel implementation of libchm since a pascal solution makes it easier embeddableit looks like the onload function is a more modern convenience method and the old way of checking the result is using onreadystatechange insteadi fixed this by adding after the for-loop and before the return statement which fixes the problem but if the for-loop is written to continue while i is less than the arrays length and when the arrays only contains a the length is one and i is 0 shouldn t it also pop athe f indicates an rtp profile where the timing of rtcp feedback is more relaxedwith explicit superclass calling your subclassing can accept more or fewer arguments than its superclass and can decide itself what to pass when calling the superclassthe fresco docs explain how to use drawees and you can see right from their xml definition that they are much more customizable than imageviewi tried to do it in server s pom.xml file and i set the impl module to provided scope so the jar file is not longer contained in war but now the tests are failing as after unpacking the war file used for running the tests does not contain the impl jar file which is required for thatas others have mentioned you want to be careful with your hash since it s easy to do something that s not really secure h salt password is far weaker than h password salt but at the same time you want to balance the effort put into this with the value of the site contentbut i don t know anything about sinatra and padrino is the footprint and speed really that better than ruby-on-railssome browsers implement the mouseenter mouseleave events that i ve noticed are more accurate than mouseoutsolution c using slideup and slidedown it works smoother and nicerits just a name they choosed it because odoo provides more than openerp for example web site modulesremember disk is 1000s of times slower than ramthere exist battery-backed packages of ram modules which can act as an ultra-fast hdd substitute but if they attach via sata scsi or other typical disk interface the still are slower than system rami ve been told that coalesce is less costly than isnull but research doesn t indicate thati was also going to recommend nginx + fastcgi as i prefer nginx to lighttpd it s better mantained or at least that s been my perception the last few yearsopengl is better for playing around and experimenting because you can easily draw triangle without messing with hardware buffers available on larger selection of platforms plus glsl is better than hlsl because it doesn t compile into assemblyis there a simpler way than a for-loop to create this arrays or nofor other databases like mysql and postgresql there is simpler solutionbut if you want a full-fledged java ee 6 server then glassfish 3 or jboss 6 is a better alternativethe conditional test and subtraction is typically less expensive than a modulo especially if the sum does not frequently exceed modif the apps versioning number is bigger it s an upgrade and you now need to save that as the last installer versioninggoogle-chrome always reports 250 for both widths as expected but firefox always reports a larger number though the exact number may depend on the os and or version of firefox and or phase of the moonnormally a server wouldn t need to know the client s address beforehand but udp s knottier than tcp the more usual stream-oriented approach to socket communication in many waysfor removal and transliteration there is a better tool called tr translation or delete charactershowever if i d built a new site with a cms on java i d probably go with magnolia cms because the documentation and community is more mature despite that it s newer than opencmsunion all is generally faster than using distinct or groupingon the other hand functions like printf or puts have more overhead per call than putc printf has to process the format string and puts has to call strlen or equivalent but that overhead only happens once no matter how many bytes you re writingin firefox it s much better than google-chrome but still not as black as ieinnodb is more strict in data integrity while myisam is not asso how is it possible for pypy to be faster than cpython also becomes fairly obviousalthough because pbkdf2 applies your hash function a large number of times a long salt is less important than in traditional straight hashing applications. for my application i use a 32 byte random salt unique for each users account where i m hashing their password with pbkdf2fread performs faster and more efficiently than read.table but read.table produces less no errors on the same data setthe bitwise operators are generally faster than modulo and division operatorsit s much more than post get etcsince most data-storage mechanisms in-ram in a database etc. get a lot slower as you put more data in them you should ensure you re only timing your http access and not looking at overall crawler throughput including storageinternet telephony is a lot more than sip - rtp rtcp sdp on-device audio handling etc.when people say that unix filesystems are better they might mean to be saying oh ext3 stores bits in such as way that corruption happens way less than ntfs but they might also be talking about design choices made at the common layer abovereplaced strcpy with strncpy which is much safer apparently and that removed the segmentation faultsome possible options that might be nicer than multiple dialog pop-upbut in my opinion for most sites expressionengine is a better choice than wordpressit looks like at least on safari and firefox prototype runs significantly faster edit not 20x as stated earlieri also know there is nginx and haproxy although i have never used either of them and have a lot more experience with apachehowever linux pretend i said ubuntu is even better environment for ruby on rails development and it installs great in vmfrom my pov the object pascal paradigm used with fpc object pascal dialect which can coexist with the default object pascal code is more advanced lightweight and integrated than the interface-based plumbing of delphi xe2 compiler with on-the-fly marshalling using rttiif my guess is incorrect please edit your question and add the missing information column separators number of columns... note that the tsv and csv format is trickier than it seemslxml is supposed to be much faster and efficient and can do much more than beautifulsoupmyisam is faster for certain queries and supports fulltext and spatial indexes while innodb is transactional and more concurrentit is great if you want to use git as frontend for an existing svn server but for a one-time conversion you should not use git-svn but svn2git which is much more suited for this use-casetechnically accessing the ivar directly is faster than using accessor but there are very few situations in which it will make a significant performance difference and would probably be a case of premature optimizationrichfaces has better ajax support than icefacesgetimagedata has a for-loop i realised that each index in loops is called more than oncewhen people talk about pypy using less memory than cpython this is a major part of what they re talking aboutbut when i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp for 10mb of dataour team use django as our frame before but now we use flask as our frame because it is more light than django but we still use django template.if you pick up something like mips and get the hang of it x86 is less of a monster to learni have an imageview that is bigger than a textview and i want to center the textview on top of the imageview both vertically and horizontallyif i have to use the value of counter in my program then i think while loops is better than for-loop64bit amd and later intel machines run faster than 32-bit x86 machines because when amd designed the new instruction set they added more cpu registers and made sse math the defaultbut if it works with large datasets the users will notice that using the malloc -only program slows down other programs much more than the realloc -using program with the same dataif you take that segment of html code and run it in a browser i tested it with latest google-chrome and firefox it adds one more th element in the table the final page has 4 columns instead of 3 and i have absolutely no clue why this happensspecialname is more than properties accessor event add remove methods count here as well that s why you have to check the names as wellin short it s worse design to move things to the base class than it is to downcast to the specific classmongodb supports no more than 100 levels of nesting for bsoni simply want to get the genre id3-tag of an mp3 file but the id3v2 utility returns more information than i require and i don t understand what this data representsif it can be practically determinized this give you a dfa that can be exponentially larger than the nfa then by all means do thatin addition to the previous answers the strncpy char pointer which seems unsafe for my opinion and the malloc which is safer but you need to remember to free it outside of the function and its inconsistent with the hierarchy of the program you can do the followingcannot sleep run atomically in soft irq context and are guaranteed to never run on more than one cpu of a given processors for a given taskletatof is indeed better in reading floating point values than istreami am more familiar with express than koa but could also see it going in the entry server.js fileyou are mixing libraries and levels of libraries jogl and lwjgl are both pretty thin wrappers around opengl iirc lwjgl has more wrappers for openal audiothe reason to do this is because even though there is an integer division instruction div idiv in the instruction set it s typically very slow several times slower than multiplicationin my opinion it will probably be easier to integrate with codeigniter although someone more experienced with cakephp might prove me wrongi find setinterval is a little cleaner than chaining settimeout callscpython runs on more architectures than pypy and has been successfully adapted to run in embedded architectures in ways that may be impractical for pypypostgresql is stricter to the sql standard than mysql isbut avro offers far more than just doing away with the need for your own writables although that is in my view a considerable plus it offers fairly efficient serialization the choice between serializing against generated entity classes like thrift requires or using a so-called genericrecord structure instead and not having to have tagged datathe reason to use post for sending sensitive data is that it prevents data leakage via the query string although another way would be to use get with custom headers set although post makes much more sensethe rule of thumb is that if a cpu is given more than double the count of actively running threads as it has execution units these are the physical cores on a cpu chip and logical processors like hyperthreading technology that splits one core into two then the os will spend more time scheduling threads and switching between them cache-thrashing than it will spend actually running the threadsto be perfectly honest i junit is way more popular than testng at least here where i work and livejust because you have data that is larger than your ram amount doesn t mean the node should go down it just means that not all documents will be available in ram and the node will sometimes have to fetch from disk slowerfor large and complicated systems yes there are enough bugs quirks that can rear their ugly heads - i am convinced that the reason that people tend to always go with mysql over postgresql is that the name mysql is much more attractivethis particular jboss runs in a vm with 4gb of ram and 2 cpu s and more than enough disk space it has never has less than 5gb free at any timeturns out this was a hardware failure the aes commands need more power than the des crypto1 ones 50 more which the antenna failed to deliver at the reading range i was testing withon top of that fink gives you access to more packages than macportsyou might want to give the data.table package a try check out the fread function which is much faster than read.tablefirst of all i recommend you to use ogg instead of mp3 has better performanceyes sha1 is a better hash than md5fifth many-to-one is much easier to use correctly in nhibernate and i assume hibernate than one-to-many collection mappingit s a little less magic than metaclass but it also means you re going to have to remember to decorate each subclassingdoing it with mouse is much more slower than it can be done with keyboardbe aware that guaranteeing immutability by having no public or protected constructors is easier to break than making the class finalram is always faster than diskgtk and qt are two of the most common ones these days but there are others such as motif which is older and doesn t look as niceeither the tcp or udp protocols could be used to achieve this although tcp is probably easierwhen you put more than one qwidget on a qt form you should always use some kind of qlayout the quickest way to fix your problem is to select all items in your form and click on the grid layout button the one with 3 x 3 small squares on top of the designer boxi think having each permutation in their own container that you hide show is the better solutionrelatively speaking the string concatenation in your code is probably going to be slower than the int and boolean comparison operations you have herethose attributes let you create objective-c code which is more understandable by swift and complier warn you when you break the rule for examplealthough the calculation method that uses a prime a multiplication and an addition is slower than a single xor it gives you an overall better hash code in situations when you have multiple fieldsif you just expect puppet to restart httpd simple because you asked it to then you either need to use a program like ansible which is more of an actual task manager or use some kind of inotify thing to see that a certain file has been changed so httpd must be restartedit api seems for me easier than swt you haven t got to manage disposing components by hand to prevent memory leaks you adding component to panel instead of constructing components with parent panel information former is closer to my previous experience...etc. native look and feel you can get in swing too overall performance is enough good swt should be faster because it s using native components of backed os - but is the performance gain really big proplease keep in mind that qmake and qbs are two very different build systems with fundamentally different designs and capabilities and qbs verbosity is in part due to its fundamental architectural differences which make it far more powerful than qmake will ever be capable ofyes i know ftp is better than telnet but right now i m stuck with telnetfurther than that i wouldn t use apache at all if i needed to optimize things nginx is much better as a server it s even faster than node.js for serving static files for examplei want my permalinks to be accessable via more than one slugthis example is a bit looser than the inherited model provided by languages such as java -- an animal instance can have any behaviour at all rather than one of a specific set of behaviours depending on its subclassingi don t want to use boost because that s a library i haven t used extensively yet and i m doing this partly as an exercise to gain greater mastery over the stlas for not reinventing the wheel like many have said already make sure to first explore the possibilities in the standard template library stl which is much richer than you might think and then look at boost www.boost.org which has libraries for a lot of diverse purposes and they are extremely high quality and some are just works of art like spirit proto lambda and mpludp is actually expected to work better than tcp in lossy networks or congested networksi am trying to use an svg form an image on a website as it s far more crisper than an png gif or jpg that i can usedisk access is much slower than ramtry-catch rsources is fine for some cases but this is the old way and works better when you have more than 1 exception-handling in a blocknot only does postgresql have a far more flexible indexing than mysql but the table approaches are very different also meaning the appropriate indexing strategies are as different as the tactics arei wrote this brute-force converter but your values don t seem to exactly match up with .net type precision - double 64bit is too low precision and decimal 128bit is moreyou likely aren t using appropriate plugin and would do better with droppable and draggableas you can see the swift example is more complex and error prone than your objective-c codehaving seen a question here on so about joining strings i have done some testing and came to knowledge that joining a string in a foreach is slower than with a for-loop and using the indexes in the arraysnote it is preferrable to use a series of if statements instead of a switch as long as the old versioning is smaller than the versioning for the n-th step upgrade that stepand it would look better with the firefox s google-chrome hiddenwith these options jruby on rails gives about the same or better performance than mrias far as tcp goes i think tcp is more generally used protocol for more data-centric requests like chat or things that require packet integrity udp tolerates packet loss to lower latencyhow can i make the two droppable div s to not accept more than one draggable elementsnginx works great by itself and will likely be much faster than apachesome common examples are the crc checksums of which crc32 is very common but you can also relatively easily compute 64 or 128 bit or even larger crcs much much faster than an md5 hashstd map though is actually implemented in a way that many operations are slower than dictionary as its size gets largea malloc free pair can be better than a realloc if you don t need to keep around the original memorybut when is fork and clone better than pthreadsobviously this may cause problems such as missing functionality that was released in later versioning of devtools but if you can t upgrade it s better than not having iti have made some testing and it came out that rsa is lot slower than dsadr don t just repeat the old quicksort beats heapsort it s more complicatedbecause of tcp requires connection and provides security it is slower than udp and therefore it should not be preffered during a video streamingalthough putting data with post method little harder than simple getbut even in that approach i always prefer to use the safer strncmp than strcmpif it s only one colour you want selecting you can use a radio button instead which would be a better idea than a checkboxit seems that zsh is more configurable than bash but also more complicatedi was testing on google-chrome win7 but with firefox it seems worseat times the get rate is slower than the put rate and we see messages backing upone framework that tries to do more in the template while remaining less bloated than jsf which isn t that hard anyway is apache tapestry2 install the firefox extension there s also one for google-chrome but the firefox one is more reliable -- so if you re a google-chrome addict like i am then use boththis approach seems more complicated and possibly less clear than inheriting protected and then using into public the base class members your child class actually needs to exposetraditionally there was a huge difference in speed imperative has fewer overheads because it s more directly like the computer works but some more modern compilers of declarative code seem to be in the top few of the speed tables a lot of the time - compiled verses interpreted makes a much bigger difference than imperative vs declarative which is why python etc are often slower even though they re imperativenote that i much much much prefer the ansi standard coalesce but sql server has done us the favor of documenting why isnull is better effort that imho could have been spent fixing the problemthen again it s better than settimeout setinterval which fires only once per second if the tab is not active in google chrome a common use case for audio file listeningalthough allocating with and freeing with is probably more c++ than malloc and freei have made an app similar to yours for android we use boofcv whose surf is much faster than opencvmyisam is not faster than innodb anymore for most types of queriesif you want to use something in front of it though i suggest you use something like nginx better than apache since nginx is also asynchronous like node and it s performs really well at serving static filessame functionality different machine code output bit shifting operations are almost always faster than multiplication division on most architecturesanother analogy could be using map dictionary to model anything objects data event handlers etc but using a more specialized form of map dictionary makes things more expliciti would also suggest to replace terms like a l1 0.3e1 with as multiplication is faster then divisionwhat i want to do is to check how many seconds the time is after loops and then if the time taken to finish the for-loop is less than 60 sec than run the mysql updateit is often useful to have different accesses for the two most often a more restrictive setter than getter and so the likes ofthe upcoming canopy 1.2 release in a couple of weeks will include more complete integration with ptvs and visual studio that will automate this and remove the need for canopy to be the default python environmentok guys i cant find better solution with show hide or something so i added snippet to be more easy if someone find solution why when back to top opacity still 0 i need when back to top opacity to be 1i also checked prolog and it seems a pretty cool language easy to do relations between data and easier than lisp but i d like to hear what you thinki would say that the quicksort is simpler for parallelizing than the mergesortalso symfony on windows with xampp will run much slower than on linux ubuntu systemhttps can be quite slow over a 3g connection as the overhead in terms of number of packets to setup an ssl connection is higher than a plain tcp connection.i tried to use jquery and the scroll event it s working on google-chrome but not on safari and is definitely less smooth than on the exampleit appears to be centered in ie but in firefox and google-chrome it appears more to the leftwhile mysql has a larger user base postgresql is gaining more an more popularity ever since implementing several crucial features that were missing in earlier versionsudp is way lighter and faster but somewhat less reliable than tcpmost importantly for your image processing app the compiler will optimize swift code to run faster than objective-call have more or less cumbersome and non-obvious error checking involving errno strtol is way much better than atoi in any case so avoid using atoiinnodb has better crash recovery while myisam is poor at recoveringnsstring is more general as it leaves you the oppertunity to create another subclass of it that could add the altering functionality without using the nsmutablestring s implementation why ever you would want that to doalmost all sip voip providers allow you to forward calls from an attached did telephone number to more than one sip device so your request could be satisfied by a basic account on your friendly neighbourhood voip providerivy but gradle does it betteryou can hide show the status bar on android 4.1 api level 16 and higher by using hide show functionalityx-tag 2 is now using the polymer polyfills so it may not be much better than polymer but worth consideringfiltering indexing sorting all is simpler that wayusing a virtual machine such as vmware or virtualbox makes this easierfirefox has a more advanced plugin than the google-chrome extension but both workwhen writing your server bear in mind that the sequence of events for a tcp socket is much harder than for a udp socket since as well as the normal socket and bind calls you also have to listen and acceptgoogle-chrome is letting me get into bad habits and is happy to parse that format but firefox is stricteryou can use the javascriptconverter class when you need more control over the serializable and deserialization processg_vertex_buffer_data and g_color_buffer_data are the arrays of data to use you will likely need to set up some shader code and the render code still has to be added but this is how to have more than one vbo texture coords colours normals etcthe memcpy version is not more complex or more dangerous than the strncpy versioncan anyone please let me know what is difference between for-loop or foreach loops which is faster from both of themboth commands works in the same way only difference is yum list installed output maybe bigger than rpm -qa because yum will show package dependencies also in its outputyou should also keep in mind that sortedlist performs worse than sorteddictionary during construction if the items are not inserted in already-sorted order although in this particular case it is highly likely that dates are inserted in chronological sorted order which would be perfectbasically the way google-chrome renders text looks ugly and i want it to look like or almost like firefox or safari which looks thinner and betterwithout adding any extra complexity to the rockauto site it appears to structure it s tree view as make-year-model-variant but year doesn t really have any attributes or children or parent it s more like an attribute of modelto me it looks like safari gets it more right than firefox text is generally more around a middle lineand naturally a pragmatic design where you wrap the various records in a class the userprofile class with getter setter methods makes transitions simpler as you can easily hack in versioning at one placedirectx is way faster than gdithough it has a couple of rules that check for specific security issues it s far less advanced than veracode coverity or fortify in this respectswift is lot smarter than objective-c about singleton classso whether or not method 5 or 6 is faster depends on the cpu i can only surmise this is because the branch prediction in the command processors of the cpu is smarter on the new processors but i m not really sureafter you upgrade the application such that the versioning number in the app is higher than the versioning number in the database on disk the sqlitehelper code notices and calls the +onupgrade + method with the old and new versioning numbershowever i can t tell you right now if this cost is higher than the serializable and deserialization costbetter than modifying superclass output would be to modify the superclass so that the subclassing can provide the appropriate shape namenow since the pseudo-element is below all of the floated children the parent div happens or better yet seems to contain the floated children as well - which is really what you wantthere are certain types of browser event that selenium struggles with that sahi handles much bettercentos is more consistent and reliable because it is enterprise while ubuntu is geared towards desktops and personal computerswhen the data is on disk titan is faster than neo4j cause it has a better disk representationif your default audio subsystem is pulseaudio common for fedora ubuntu debian it is better to properly recompile pyaudio and underlying c library portaudio with pulseaudio support only without jack and other subsystemsyou should check this thread why get method is faster than posta fairer comparison would be comparing stringstream to the printf sscanf line of functions which would be slower than strtod but still faster than stringstreamhave a look at this post it is probably easier to get the selected radio button by changing your itemscontrol to use a listbox with the existing datatemplateif you use svn then it still okay because svn handles binary files much better than cvsthere are lots of cpu gpu combinations where a 32b integer multiply is faster than a 32b floating-point multiply on cpu and vice-versa on gpuan initial get request to a page usually costs less than subsequent post anyway so there s not much reason to avoid itpost or get is not really make difference in security if your code is vulnerable to injections post or get method would not make any difference or even you can say get is more secure because get url will be logged entirely in log files and if there was an injection in your code you can find entire injection code part in log files but post data will not be loggedit s simpler deals with salt for you in a completelly transparent way makes way for updates both in encryption algo and in hash time cost and comes bundled in a nice apion a button click javascript validation should be if a user select one checkbox it should allow to process further to any script but when user selects more than one checkbox it should prompt that you can select only one check boxif old is greater than new free the extra old pointers on the end before doing the first realloc so you don t leak memoryi want to have the milliseconds or better captured by fluentd and then passed on to elasticsearch so that the entries are shown in the correct orderin your case postgresql may be a better option than mysql because your query is going to likely be against secondary indexesi have been trying out redmine to see if i like it better than mantiswe updated freetype in osx 10.6.5 and fontconfig which links against freetype wants this newer versionin your check there is only one loops needed and a for-loop is much more conveniantbecause sha256 hash are much longer than md5 hash you can detect the hash algorithm by looking at the length of the hashafter doing more research i now feel that using a dependency manager like the documentation recommended cocoapods or carthage is a better option than manually adding the framework to the projectmy issue affects all browsers ie being slightly quicker than google-chrome or firefox according to that issue ondisconnected was delayed only when navigating to another page in the project - in my case ondisconnected is not called immediately even when i close the tab or navigate to an external pagealso keep in mind that once ram is exhausted your program will start running in virtual memory on disk which will probably cause far more disk i o activity than the program itself so if you re concerned about disk i o your best bet is probably to make sure that the batch of data you re working on in memory doesn t get much greater than available ramthis approach using purely images screenshots and generating mouse and keyboard events is more similar to manual testing activities performed by real people which have just monitor mouse and keyboardyou didn t provide a full code sample that includes the surrounding loop presumably there is a surrounding loop so it is hard to answer definitively but the main problem i see is that the latency of the dependency chains of your fma code is considerably longer than your multiplying + addition codefirst the sub-directories of your src directory should mirror the sub-directories of your include directory this is just to keep things intuitive also try to keep your sub-directory structure reasonably flat shallow because deep nesting of folder is often more of a hassle than anything elsefor certain kinds of transactions a stateless session may perform slightly faster than a stateful sessionsnappy also consistently decompresses 20 + faster than lzo which is a pretty big win if you want it for files you re reading a lot over hadoopthe boilerplate code would multiplying rapidly when the express get more complex than addition of two termsas far as easy goes they are both equivalent in terms of difficulty both provide assembly and c except that the gnu toolchain for avr is more complex than microchip because it requires use of unix command line etccreate new string which will collect edited versions of each word you can use stringbuilder or better stringjoiner with delimiter set as one spaceslxml is much faster than beautifulsoup and probably the fastest parser available for pythoninnodb table is a bit slower than myisam tables but i don t think it is a major problem as you told you are using drupal system is that a kind of mult-sites like a word-press systemand looks like your php versioning is less then 5.5 so upgrade your php versioning 5.5 and it will worki have to say that this combination is much better than aptana radrails 2 or aptana 3 for developing ruby on rails appsif you always keep track of the lengths of your strings you can compare lengths and use memcmp which is faster than strcmptherefore serving and caching images from nginx or apache still seems the better choicei think that functional declarative programming haskell scheme lisp etc is more powerful and more abstract than imperative programming and therefore is intrinsically harder to learnwhat i am hearing from our group leader is that postgresql is better than mysql when working with coordinatesnote also that gson comes with less features out of the box than genson or jacksonout of experience i m involved to a project that uses huge amount of data using mysql and we mostly prefer myisam for data that can be generated it allows to achieve much higher performance losing transactions but generally speaking myisam is faster but innodb is more reliablefor example i ve noticed nvidia s glsl compiler is a little more picky than ati s and rejects some shader code that otherwise works finethe use of a presenter is closer to mvp and gets away from the dependency injection model advocated by apple mvcfirst sort the dataframe by time this should be more efficient than sorting each grouping by timei ve already done the rsa but dsa is bigger deal to meyou should use strncmp to compare your strings it s safer than strcmpapache activemq which is way more popular than qpid or rabbitmq - or indeed any jms provider would work just fineyou ve struck lucky with the requirements - because you re going from udp - tcp it s actually a lot simpler than doing udp - udpanemic domain is when a product or other class doesn t really implement anything more than data setter and getter - no domain behavior- coalesce should be more portable than isnullthis blog post provides more info to get startedthe first one can be solved by using svn +ssh which is the more comparable format as cvs uses its own protocol as welli wrote one query but it will fails if a particular parent has more than 10 childrenthis is because multiplication and division is faster in sse the 80-bit vs 64-bit issue again and that the sse registers are faster to manipulate in the fpu you can only access the top of the stack and rotating the fpu stack is often the slowest operation on a modern processor in fact some have an extra pipeline stage solely for this purposeyesterday i needed to reboot production server on debian 6 with more than 3-y uptime and 3rd party configured billing system on itthe advantage with sphinx is easier integration with mysql and postgresql however lucene is more feature-richgoogle-chrome decided to treat them as function declarations and hoists them firefox treats them more like function expressionsswing will save your more time than awt as all the code of components of swing are purely written in java whereas of awt code of components are written in native language that is other than java thus compilation time of awt is more than swingit is much better than ant because for most common tasks you don t have to write a complicated build.xml maven has very good defaults and it s all convention over configurationthe query optimizer in postgresql is more advanced than in mysql and copes with complicated statements much better especially when it comes to sub-selectsthis gives you more flexibility than subclassing because with subclassing you are automatically inheriting all the methods in the superclass which is far more restricting than simply using some of the methods of another classthere can be times when mouseout is a better choice than mouseleaveoften gcc g++ code is faster than anything i can produce in asm probably because i am new to assembler and so i don t know very many instructionsmips is much more orthogonal than x86 could ever dream of beingi do understand that traditionally they are saying that lxml are stricter than beautifulsoup however what i do not get is the followingpreviously discussed on so why is quicksort better than mergesorti am looking for a good new component that offers more help with wav and mp3 files too but not found what i am looking for yetthis way it is not ok if the parent has more children let say they are input soften myisam is fine in certain other cases innodb is betteror will this result in an md5 hash that is more likely to collide than if i would concatenate the content of all dependent files togetheralternatively you could seek out a user-agent parsing library which turns the string into something more useful such as google-chrome windows or safari iphone in which case you could reasonably use a shorter varchar valuethanks to opencv i managed to rewrite everything with wxpython which i know better than pygtkhmac is better than a plain hash because it is not vulnerable to hash length extension attacks64bit code is not actually faster it is usually a bit slower than x86 codehowever naive multiplication will get slower and slower as the exponent increasesthe eclipse builder uses simpler logic than maven so sometimes the things m2e does are just not enoughaccording to some - browser - statistics ie6 market share is still bigger than google-chrome safari and opera together nearly as much as ie7the answer is simple here - pickle on pypy is slower because it s implemeneted in pure python as opposed to c in cpythonit s like complaining that a sha256 hash is bigger than an md5 hash - yep it is but only one of them might slow the attacker down for a whileso if you are just starting out beautifulsoup may be easier to use instantly but in the end i believe lxml is more pleasant to work withyou may try to listen to uideviceorientationdidchangenotification within your subclass cell to rotate the webview and within your view controller with the table view and run a -reloaddata on your table view in order to properly resize the cells assuming the landscape webview is way higher than the portrait webviewgoogle-chrome is just more forgiving for some mistakes then firefoxi also dilemma to choose in between whileloop and for-loop but think that while loops is more suitable because unknow how many time need to insert the wordsmd5 is no longer secure and it can be broken with a good gpu no typo you can use your graphics card to break a hashpostgresql is older than mysql so it might have influenced themusing a solution such as a prepare statement where it is not possible for a user to directly influence the actual sql query being execute is a safer alternativein addition to the suppositions in question 4 supposing that my message is no bigger than the mtu - udp header - ip header size is the udp datagram that results guaranteed to fit into 1 ip packet on my local network at leastyou can always develop an application without using getter and setter methods.as you have explained.but using getter and setter is better practice because access modifiers private public gives you encapsulation which is oops featurehash password + salt is better but still not good enough.this command uses key as is if its length smaller than md5 hash block length 64 bytes otherwise its uses md5 key as key and not key derived using cryptderivekey rc4 md5 key like in your implementationif your application is self-sufficient i would recommend going for tomcat as jboss is much more resource intensive as well as weblogic moreover weblogic costs some moneydatamapper is potentially more complex then activerecord but it s a lot easier to develop your domain model and database asynchronous then with activerecordactiverecord is much simpler then a datamapper but also much more limitedany hash function like md5 sha1 sha256 etc obviously cannot be 100 unique - because they have a fixed length and due to the there must necessarily be non-unique results for input content that is larger than the hashsubjective phpunit provides much nicer code coverage reports than simpletestin the case of overflow a free malloc pair costs less than realloc because of its internal hidden memcpyif your author field is selective and sorting is cheaper than filteringthis is a radical concept i know but the mouse is slower than keyboard shortcutsif your compiler can do this then writing functions in a way that the compiler is able to inline is better than manually inlining the calls yourselfif you have the money ericgorr is right perforce is much nicer to work with then svnthis is my first experience setting up lighttpd as i thought it would be more suitable than apache in this caseso in what platform and how memcpy can be significantly faster than memmove if there is none why providing two similiar functions instead of just memmove and lead to a lots of bugxfce runs much smaller than gnome and is full featurednone of the .net libraries are there and there are some syntax differences as vb.net is more strict than vb6 isbut i don t know why the size of mp4 video with h.264 codec is bigger than the size of the image set in the only implementation i found so i made my own archive format that is basically the imageset merged together in 1 file and compressed with snappy plus the info for split them againdata should be in post or get.if you dont put your data in your form then you will have to use get which is less secure than posta get request will be slightly smaller than a post although using websockets would give a more accurate figureparsley is more robust and adds a lot more features than robotlegs which is why its been used in the world s largest flex applicationsi hate to answer a request for a solution in language a by suggesting a solution in language b but what you are doing here falls into the class of problems which xslt handles much better than xquerysince package protected is less accessible than public the code is reducing the accessibility of the foo methodgenerally the division is more costly than addition i think but not much difference in this casethen again smarty 2 is years old v3 has been with us for years and twig is far more practical in the html5 agei have tried firefox and it better than google-chrome crash issue is not always happen but not solved this issuethe class of problems you can solve with while loops is strictly more powerful than those you could have solved with the strict for-loop found in pascalmultiplication is more expensive than addition subtraction and division is more expensive stilltesting and support of ant code is quite expensive and integration with maven adds even more complexityto convert to integer a string passed as argument to your program use atoi or strtol which does better error checkinggenerally the performance of hard filesystems like ntfs is better than that of traditional unix filesystemsyou will probably use both in large projects - put the definitions of the functions that should be inline and templates in the header and put the ones that inlining makes less sense for in the cpphowever as things stand right now ironpython is much more mature and has much better performance than ironruby so you may prefer to use thataccording to this analysis aes rijndael-128 is more than twice as fast as des 3des with a bigger key size more secureit s even possible that you could implement pong using only integer arithmetic which is likely to be faster than floating-point -- but the difference is unlikely to be criticalalso take a look at silex as this has lower overhead than symfony and works with symfony formsjust keep in mind most of the time c is faster than python but then again most of the time pypy is faster than cpythonit s not even a webkit issue unless google-chrome s got a newer version than safarii found programming google-chrome extensions easier than firefox but i couldn t come across something similar to xpcom in google-chromeif you re just going to loops through point use a for-loop as while-loop is more prone to dropping into an endless loops if you forgot to increment counter or doing wrongly or do it in multiple placeslxml uses libxml2 and provides a nicer interface the elementtree so you get most of the benefit of libxml2 s speed and all of the benefit of it s xpath evaluationusing comparator instead of putting all the logic directly in the comparable gives you more flexibility in the order that things are compared inbut the the foreach loops takes more time than a the for-loopnginx also happens to be better than apache at writing logfiles interestinglyin this case post may be better than get anywaysinnodb tables are about 4x bigger than their myisam counterpartsi have experienced situations where union s made a query much slower than union all with a distinct afterwardsit has to do with the fact that multiplication is itself done by means of binary shifts and additions - far fewer than with divisioni prefer using for-loop instead of foreach loops for-loop is preferably faster than foreach loops when you do not have to do something to each element and can solve your problem by just using the index as followsfirefox is just better for web development and i prefer safari overalli d question whether get is the right verb here considering you need to pass a complex type it sounds like it would be better served as a posttcp is subject to higher latencies than udp as it requires the client to send back packet confirmationshowever a post request is less efficient as a get request - bear that in mind and only use post if you really need toi have a file that i need to transmit through udp reliably i know tcp is the better optionif you are looking for location based queries in relational databases postgresql is more matured compared to mysqli like the idea of the of editing inside the terminal and like the key bindings of vim but the text highlighting in my vim is much worse than in textmateraphael supports older versions of ie whereas d3.js is based on current web standardscurrent task looks like flask is ok for it since it is smaller and simplier than djangoghostscript and imagemagick convert should also be able to do this for you although libtiff is supposedly quickerif you want to upgrade dependencies major versioning it s more trickierthis solution has the disadvantage that if the other factor is not constant the compiler and you can t reasonably avoid the division int_max n to be done at runtime and division is normally more expensive than multiplicationin all other cases division appears to be several times slower than multiplicationuse clutter which is much more suited to animation and integrates with gtki use rspec and capybara together but the language syntax of capybara makes more sense is semantic as rspec when testing for request expectationsmost lisp dialects have this concepts in scheme it is rarer since hygienic macros are supposed to reduce its usefulnesspublic is higher than protected so there s no problemhowever if the keys are not comparable how are we supposed to tell whether the children are greater or less than the parenta for-loop is more adequate than a do while for simply iterating an arrays stringi m having an issue where my glsl 130 code wont run properly on my somewhat modern ati 5850 hardware while the identical code runs perfectly fine on an older laptop with a nvidia card i havethis works because a parent thread will always have an id which is less than its childrenin codeigniter and zend-framework which is the better optioncan any one tell me which one is better between session facade class and singleton object design patterns in asp.netif you want to bind data to gridview datalist datalist controls then better option you should use datatable dataset or you can use list ex listmore or less the same thing as the accepted answer can be implements more succinctly by extends the gridviewpager like thisactually it is much better than soapui because with jmeter you can easily read the data from csv and parameterize itusually multiplication has a higher precedence than addition but the grammar you have posted has the reverse that might be part of your problemwhile you can munge together a solution with ant maven is a better solution for managing dependencies than antafaik malloc is not slower than memcpyit would be better to use strtod for this purpose as it allows for error-checking but atof is simpler to use and so is used herealso this loops is better created as a for-loopthe google-chrome renders the letters using pointy ends but the firefox uses more solid and bold effectmaybe not productive in the same way - i d say vim is quicker for editing files emacs is better at doing everything else again i would personally say things like flymake-mode vcs bindings are such are quicker to use than the vim equivalenti believe gridview allows much finer grained control of display than does listviewif you want the fastest encryption algorithm then there s no substitute for testing it yourself - somewhat strangely php s sha1 implementation is significantly faster than its md5 i know these are hash - this is to illustrate that performance depends on implementation as much as algorithmmalloc + memset is slower than calloc under certain conditionsi recommend you to use nginx as an reverse proxy since the configuration is easier and the performance is much better than apachei know mysql has to choose for either mandatory or optional but mandatory seems the illogical choice for me as this is 1 much more difficult to implement in sql and 2 less common than a parent with optional childrenchanging it will require a reboot. that will slow things down a bit as the swap file on disk is much slower than ramjunit is older and have more extensions dbunit cactus etcit is slower than nginx because apache with the event mpm is very roughly equivalent to an event-driven http proxy nginx varnish haproxy in front of apache with the worker mpmmyth 3 strncpy is a safer version of strcpyi create new branch add those new features and than i once again made pull request but now the features i implemented in the master branch are also in my new branch so my second pull request has more features than i want to push to the original projectnot that i think this is a good idea but in c at least you can check if your unsigned integer is greater than int_max for two s complement anyway not so sure about the sign magnitude and one s complement variants but they re probably rare enough that you could safely ignore them until a problem pops upit won t do anything to change the fact that disk io is orders of magnitude slower than rami would like to find better solution than serializable and deserializationthe nice thing about letting the plugin install it for you is that if you re more familiar with ruby-on-rails than padrino as is my case this will not only set things up for you but also show you were the directives need to goi d strongly recommend to go with allegro 5.1.x it s a little bit more difficult than sfml but very functional and easier than sdl it s got nice support and it s compatible with plenty of osinspecting the assembly shows that in the sequential access case eigen is faster because the sum becomes vectorized while it does not when using raw boost multi_arraythus ilist is more than ienumerable and you won t be able to get away with itbut using post instead of get presumably adds one more level of protection for xsrf types of attack it does not you need some form of explicit xsrf protection token with post or with geti can verify that by unchecking the checkbox it does flip the value because i enable disable the next button depending on the myproperty value - i have more than one checkbox btwi would also be moderately surprised if the multiplication actually was faster than the additionthe tcmalloc library for example can be easily inserted into an application to evaluate performance gains in heavily threaded applications where tcmalloc tends to perform a lot better than libc s malloc implementationbasically a given branch of the tree may be found under more than one parent branch but wherever it is found it has the same childrengenerally speaking the inline keyword is used more now to allow you to violate the one definition rule when you define a function in a header than to give the compiler a hint about inliningi haven t chosen a db yet so if mysql or postgresql is better in some way over the other please provide your preference and perhaps why if you have timeso congratulations - you can pat yourself on the back your avx routine is indeed about a third faster than the sse routine tested on haswell i7 herei suggest that you to move jmock which has a better api or even to mockito whose protocol is even simpleredit added some getter and setter that makes it clearer how you access object infoit certainly looks nicer and has better usability than mantis or bugzilla but it s not open and it makes some tradeoffs for a simpler interfacewhile in google-chrome usually another page refresh fix it firefox is more stubbornhex is somewhat more readable than binary if i happen to be loading a data dump in a text editor etcof course you might still ask whether to use strncpy or strcpy in implementing that abstraction strncpy is safer there provided you fully grok what it doeswhen you install a msi with abovementioned settings msi will check if any other product installed with same upgrade code if it finds a product then it will check if the new installation has a higher versioningi success in plotting distance with points but i need more visual plot with heatmapphpunit is more popular and up to date as simpletest hasn t had a new release for some time though for testing webforms it s still very useful as phpunit does not have good support for thatcrypt with hash is simply more expensive than md5gitosis which is obsolete for a few years now gitolite is much richer works with bare repos repos without a working treeif you don t need it to be public it s often safer not to due to getter setter allowing better control over what values can be assigned then you should declare if protected or privateedited to add myisam is faster than innodb because it is simplerwhile memmove will be only slightly slower than memcpy due to the assumptions it needs to make about the source and destination in memcpy they cannot overlap it should still be far superior to any standard loopmyisam is the perfect choice since the database is almost only used for reading and myisam is significantly faster that innodbuse socket for tcp and datagram for udp its a lot faster than tcp but less connection orientedthis may help in case you have a real nth root precision problem but my experiance is that the builtin math.pow double int is more precisefor this particular application sending simple data chunk to the client from an index given by the client tcp will not perform any better than udphence as compared to tcp udp is more attractive for delay-sensitive applications like audio videowhen i try to access reporting services via the broswer such as google-chrome or firefox it prompts me for username password in which i do enter but then it gives me an errormost optimizing c compilers optimize it out to a multiplication operation which is much faster than division it can be done only if the divisor is constant thoughmayavi makes it easier to visualize the data but matplotlib looks more professionalsince your disk even if it s an ssd is several orders of magnitude slower than ram the systems gets unresponsiveexplain in postgresql is way more useful than in mysqlto the operating system a single thread which i assume is what you mean by java process essentially cannot use cpu on more than one processors which may or may not mean a physical core-- see below simultaneouslypost is not any more secure than getin general ogg achieves better compression than mp3 which is a plus for things like download size bandwidth resource usage etcif your tree is not binary that is a node can have more than 2 children it might be worthwhile to introduce a virtual parent node that has all the real roots as its child nodesalthough lxml has better documentation better xpath support and better code for technical reasons i cannot use lxml so i am forced to use elementtreei am not sure could this be because now the older links after upgrade is been pointed to newer versioning and just linking is not sufficient and need to modify something more on linuxfor simple time aggregation influxdb has shown much better results than postgresql and mysql in the order of ten times faster to respondput is preferred for database updates and post to create new entities so post is better on this casealso i would recommend doing a dual boot to ubuntu it s much easier to work with opencl in a linux cli fashionfirstly i switched from innodb to myisam which is better designed for mysql spatial extensionsi d rather not use use extjs directly - i m looking to expedite delivery and ext.net seems much easierthe server-side way is more reliable and browser-independent while the client-side approach will decrease the amount of incoming traffic to serveralso using private and protected instead of public is more about good programming design than security and i recommend you read about it as well as polymorphism and inheritancealso you can make your code simpler by using isnull or coalesce to handle columns which contain nullsthe lone exception is myisam which is an older mysql storage engine which does not support transactions is more prone to corruption and generally tends to perform worse than innodbinnodb has better crash recovery while myisam is poor at recovering data integrity at system crashesto draw you can use either plain gdk which is more basic or use cairo which is more flexible drawing library nbthis does not seem to occur in safari or ie and a similar permission error occurs sometimes in firefox but is reproducible more often than not in google-chromebtw google-chrome is less close to w3c specs than firefox de 42+ i d opt to start using firefox for your initial testing and then test it in ch to detect quirksdexterity arguably has more better documentation than archetypes see plone.org products dexterity as well as my book professional plone 4 developmenti cant get the orientation through exif because of my server don t have root access to fix that so i was just going to see if the width is less then the height then rotate them but the code isn t working properlybecause hard disk have a much slower memory than ram virtual private server performance may slow down considerablydo you find rails with postgresql is slower than mysql knowing that it produce more query on the backgroundi resorted to split the two in swagger list-without-search as get and list+search as post just to put the page in the swagger documentation also if the latter actually works also as getregarding your question about safety -- the answer is post is absolutely no safer than getwhen i want to write the full contents of a file into an outputstream i usually allocate a buffer as a then make a for-loop to read data from the file s inputstream into the buffer and write the buffer contents into the outputstream until the inputstream has no more bytes availableperhaps write a config file for them bower.json for bower and package.json for npm that makes things cleaner and you can ensure installation by running npm installmany people don t know about 8-bit png which is usually better than gif in size.the reason this is happening is because firefox renders the select box as a taller element than google-chrome and the container of the blue text is getting caught on the select s container element because it s now sticking out lower than the othersit ends up in a state of confusion...you basically cannot release the drag of the table it keeps getting bigger and smaller as you move your mouse - but you can never let go and release it to get the size you wantin some benchmarks i see that myisam is faster than innodb but seems i have a little improvementwebclient is a shorter and more concise syntax but behind the scenes it uses a webrequest so in terms of performance it won t be faster it will be equivalenti have used a lot more than 10 linux distributions and i now stick to opensuseconverting between time zones runs in constant time as there is nothing more involved than simple addition subtractioni also know that it can deal with flac better than wav and oggfirefox is more tolerant when it comes to image headers then ie and google-chromeany suggestions as to how i properly set up the setter getter is more than appreciatedudp suits well for passing short messages but for transferring large amounts of data tcp is more preferableapache is more flexable then nginx but it comes with a high price in performancebut when anyone human looks at it they look at it in hex using a hex editor which is much easier than reading binarya post has broader application and is generally used to send persistent data to a server in fact prescriptively get should not be used for this purposeyou can safely store the salt in the db because working out a string from its hash is just as hard when you know some of the string as it is when you know none of it provided the password itself is longer than the salt and long enough and strong enough to take a long time to crack by brute force at least 6 chars with at least one case change and a number or non-alphanumeric i d sayanother post outlines some more details on this how to get master-master replication with subversioni planned on using svgs for the entire site but with only 20-30 svg images of medium to high complexity used in the page and google-chrome already seems to be showing som jank and high paint times for scroll and firefox is even worse though safari seems to do a lot betteri saw this swift vs objective-c and it does lead me to believe that swift is more accurate in terms of timing that objective c but i wanted to make sure that was accurateif we remove the font-size it appears properly in google-chrome but shows up smaller in firefoxinteger math is often much faster than floating-point so such a function could be a major performance wini thought about aborting the request if the interval between mouseenter and mouseleave is lower than a threshold but it does not helpthe opengl sin cos implementation has probably higher precision but not by muchin future these lists may be read from disk and larger than available ramthat answer is pretty clear a chars is smaller than an int and when objective-c was designed back in the 80s shaving off a few bytes was always goodgoogle-chrome is just faster than firefox which just faster than ie at bit-wise operationsespecially in opera there is much more green in the painting than in google-chromeyou do want to upgrade no further than versioning 2.1.6 at the moment as it s the latest one that supports rails 2.3.xi have been told innodb is faster on executing writes but slower than myisam doing reads i cannot back this up and could not find any article that analyses this i do however have the guy that told me this in high regard feel free to ignore this point or do your own researchthis will make your work easier as searching sorting filtering than handling 3 parallel arraysso assess the situation the development cost of a udp transport is higher to significantly higher than tcp and to some degree you are re-inventing tcpif you want to move directives attributes from parent to children this is way more complicatedi have no concrete figures on that but from my own experience i d estimate that instrumented tests are around 100-400 slower typemock seeming to be faster than ms molesd3.js is not wrong the data is incorrect and leaflet is more lenientno sw is running on responder side - allows much lower latency 10 times less than typical tcp udp latencyone might want to define kerberos access to more than one ldap serverudp just has a smaller overhead than tcp but that comes at the cost of reliabilitygoogle-chrome is lightning fast when you use the dom api but vastly slower using the .innerhtml operator by a magnitude 1000-fold slower however firefox is worse than google-chrome in some areas for instance the append test is much slower than google-chrome but the innerhtml test runs much faster than google-chromeif you re simply looking to hide the value from your cross table you shouldn t need anything more than the show hide items menuif i set the cpu affinity to cpu0 the cpu usage is 5 but after setting affinity to other cpu the cpu usage increased to 9 12 especially set to cpu20 the cpu usage is more than 25therefore accessing myisam consumes less resources than innodbinnodb is usually much better than myisam at tables being available while insert update and delete are happening because innodb uses row level locking for updates whereas myisam uses table level lockingfirst option with var as local vaariable and two getter and setter defines better as property because it give option to control input validation and do custom code when setting value like raiseing eventthis goes in your root .htaccess but if you have access to httpd.conf that is bettersince ubuntu 10.10 is newer than debian squeeze if you can do it on squeeze you can certainly do it on ubuntufurthermore since at least in java you can only have the access modifier for an overwritten method to allow more but not less access than the superclass method you are still gonna drag either protected member variables or protected getter and setter all the way up in your subclassingwith swift the code is much more readable than with objective-ci ve read that aes encryption is more secure than the triple des encryption ms is using in their example aboveaddition happens to be exact in fixed-point as long as it does not overflow but fixed-point multiplication is no more exact than floating-point multiplicationthat prohibits you from doing something like having a protected and public overload where the protected overload is the better matchc++ std map behaves more like a python defaultdict than dictionarytimsort is used by python and java for their sort methods and is rather supernaturally fast but it s a more complex algorithm than mergesort which matters if you re working in something like c - so if you just need something that works pretty well and is simple go with mergesorti would however argue that ubuntu or centos is a better option when it comes to server installationsalso it seems that my view gets called more than once according to the log outputs and that is normal except it should be a post then redirect to a get but it seems to have more than one post requestit uses less resources than unicorn but has more requirements to your code it better be thread-safe because puma is a threaded serverif it is unavoidable node.js has good options - try to use the module cheerio which is faster than heavy weight jsdominnodb is slower for read only databases because it has features acid compliant row level locking that myisam leaves outnote that i ve incorporated dshin s comment that multiplying is faster than division however the performance improvement is about 90 removing the binary search 10 multiplication vsit works fine and fits all my needs but recently i found that git works better than bazaar so i decided to use it but i face a problem with git usability because most git s gui not user friendly as bazaar explorer so i want your advice based on a practical experience which best git s gui user friendly or which one is most similar to bazaar explorerthis is happening because of speed of for-loop which is faster than your time .as loops iterates in time of less than miliseconds and generates values.you can only call it when you want to insert single value to database and don t iterate for valuesi am trying to explore kde a bit but many of the tools i rely on have fonts that appear so much bigger under kde than gnome even though the chosen font size is the same and the resolution is the same 1920x1200of late firefox has had much better performance than google-chromenow don t get me wrong regenerating the session id on login or more accurately as oswap put it on privilege level change is indeed a very good defense against session fixationudp gives smaller latency with many many issues to discuss here of course tcp gives bigger latencyi saw he used checkbox which to seems much more useful than button since you can take multiple objects out at a timeyou can make your life easier by extends each of the components you use to a custom component that either implements its own event but then always the same event like contentchanged or takes a java 8 consumer function that is called whenever the content changesalso you can send a text only to given client determined by the url it can be post but put looks niceras a side note using toupper is more efficient than using tolower so toupper would be the way to goto prefer isnull over coalesce when given the choice is that isnull tends to produce query plans that are more efficient than coalescein google-chrome there is more files download 47 than in firefox ie 42i think that the boost manual could have explained how the allocator is used more explicitlyexecution of aes is more faster than rsa for same key sizesif so then you can just pop lines off the array using settimeout which is better than setinterval for most animationsusing post is more secure than get in the sense that data shown into the url in get request but not in posti tried using schedule static num_threads 4 and noticed that my programme always completes in 11.5s to 11.7s always below 12s at about 320 cpu runs more consistently and uses less resources even if the best run is half a second slower than the rare outlier with hyperthreadingi also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoidfor looping over lines in files you can use a for-loop which is more readable than while loopsmultiplication is more complex and you can reference the solution in the question efficient 128-bit addition using carry flagnoexcept was added rather than just removing all throw specifiers other than throw because noexcept is more powerfulanother suggestion change you to because you can keep an extension method for more collections because the ienumerable is more abstract than ilistthe only thing i can think of that is easier with the mouse than with the keyboard is resizing windowsyou can possibly achieve slightly really marginally higher throughput with udp but then you have the hassle of recreating all the goodies tcp gives you for freethe animations are slower than google-chrome and operai ve tried firefox and google-chrome and seems that firefox is faster and comsumes less resources is there anything else that is like text basedwhat is the best way to get the better visualization with bokeh or seabornit seems to be slower in google-chrome and firefox but is significantly faster in operait has some downsides- namely working with both ant and maven so the actual pom.xml is more difficult to comprehend but it does allow for more flexibility than is otherwise possible with mavenotherwise you will run into issues of trying to fadein and fadeout at the same time if your delay is shorter than your fadeinyou will find that coalesce works better than isnull herewebkit is stricter than geckowell i have written this class wich do this but when use cin cout works no moremost of the time reading the table from rom is still faster than multiplication divisioni already create the xml for some beans inside the larger bean with xstream and append them as elements to the jdompostgresql is way better than mysql in nearly every respectalso i believe the ironruby team is smaller than the ironpython team4 fewer merge options than in git though the fossil workflow makes merging less likely to occur in the first place.not that these are bad granted they tend to be an order of magnitude slower than addition subtraction negation etc. but they aren t needed and if they re present it probably means the implementation isn t really that efficienti found that orientdb is too slow at least much slower than neo4j even on relatively small 150k datasets when searching records by text pattern despite the presence of indiceswhat s bad about this is that when microsoft were designing asp.net mvc they opted for declarative validation logic using data annotations instead of imperative which is much better suited to validation scenarios and can handle just anythingits slower than in google-chrome and firefox but now finallythis method also allows you to put the url within the action parameter of the form and uses post which is more secured for transferring password informationif the code is to be distributed consider compiling that java class with a target jvm versioning that is somewhat earlier than the latest Ã¢ otherwise some users will be forced to upgrade their jvm to run your software and some of those won t have admin rights to do that.but i guess multiplication is more computationally expensive than additionif you have a newer processor with sse or avx extensions then ensure that the compiler is compiling to use these features usually this is done automatically when you set optimizationsi ve learned partly by trawling this site that the google-chrome security is fussier and the app loads correctly without errors in firefox and ie but i can t find any resources that are loaded from a non https sourceso at this point in time pypy is just over 9 times faster than cpython in this micro benchmarkinlining inlining produces fatter code which is faster the inline functions will not appear in the call stackso even ignoring practical considerations like disk is slower than ram it will be slowerall in all t4 to me is more of a inside vs code-generation tool to quickly create c# or other files while xslt is more of a data-processing data-transformation tool to turn data from xml into another format typically html or pdf using xsl-fophpmyadmin also shows the larger number however i have switched to heidisql since i find it s gui is superior for my local developmentif you have more than one show hide box you ll need to create more tablesfrom my experience collapse filtering is much faster than groupingaddressing issue #2 if your mdpi phone has a smaller screens than 600dp it will use the layout in res layout folderif you want to search a volume a quadtree or octree works betterbasically imagemagick was only slightly slower than libjpegbetter if you have a code swift is better but is not problem objective-cif you re going to stick with maven and want a plugin for maven that will do the code-coverage job i think cobertura is a better choice as emma stable last build is from 2005having nginx in front of apache is a better set up in my opiniongoogle-chrome dev tools are by far better than firefox ie whatever imhoit does not have master worker as unicorn or passenger thus uses less memoryobjective-c print is more readable compared to swiftspoiler its namesake may betray why addition subtraction is more costlymaven is higher level than make makefile the classic c c++ build tool or ant build.xmlwhile leaflet aims to be more lightweight than openlayers openlayers is by far the more mature projdoes that mean perhaps rails team favor postgresql slightly more than mysqlas for the suggestions in the comments keeping the fork result in a variable a then waiting with waitpid is safer when you have more processes as wait waits for the first ending process not a particular onethis i suspect serializable takes more time to process serializable and deserializationi ve ran into out of memory errors on firefox with canvas heights greater than 8000 google-chrome seems to handle much higher at least to 32000usually if you re going to consume all the elements of the iterator in a single loops it is better to use the for-loop approach and it will be better using the enhanced for-loop that already uses iterator behind the scenesit s called web audio api and is currently a draft but is well supported by webkit you ll need to use prefixes and a little less by geckofirefox and opera unfortunately fires many more keypress events than others ie and webkit which have the most sensible implementation the one the w3c is about to standardize in dom 3 events afaict but in that case getcharcode is 0 so you can safely ignore themtftp is used because it uses udp which is simpler and had a smaller footprint than a full tcp-based ftp servernote the show hide effect is much softer because of the commented fadein fadeout declarations that were triggering console errors probably because jsfiddle uses jquery slim now16 cores apache would scale better than nginx while nginx would process more client requestschunk features includes branching looping and macros and has a simpler syntax than velocity and freemarkerif aes is negotiated it s faster than des and 3des used by default by older applicationsswt has a more platform-specific look about it but java ships with swing built-in there s no messing about with external libraries as with swt although the use of eclipse may make that much easier i still develop quite a bit of my stuff from the command line unfortunatelyrecently we noticed that cypher queries run faster than gremlin so we decided to convert our queriesthe iodbc included with os x has some things that are listed as deprecated and i ve had better luck with unixodbc in the pastinnodb performance has been improved to the point where it is hard to come up with a benchmark that says myisam is fasteri have worked on codeigniter but yii is far more ahead of thati think it mostly depends on the interprter engine in browser which responsible for interpreting th scripts which server sends to your browser and another thing about firefox as you have mentioned the extension in firefox is also responsible for it and another thing which i think matters a lot the developement of the browser as you can see google-chrome has same ui on all windows linux mac since it is mostly written in java so it requires jvm to run hence it is slow as compared to firefox which is written separately for each os using the respective oss apis hence it is fast since it directly interacts with os than interacting with jvm which in turn interacts with os like in case of chrome.still google-chrome is faster in incognito mode because of its intelligence to keep frequently data cached if you ll see the temporary files created by google-chrome they are huge in size as compared to that of firefoxlike remove the jar s from your war in case the version of your jar is same or lower than that of jboss s or replace the jar s of jboss and remove that jar s from your war in case the version of your jar is higher than that of jboss sthis may help those confused by dask and hdf5 but more familiar with pandas like myselfthe google-chrome console gives more information than the firefox consolekmz loads much quicker than gpx and can be integrated with the google maps api as a kml layereven then google-chrome s fonts look thinner than in firefox or ietry catch inside for-loop is probably closer as long as you don t mind the unassigned values left in the arraysif so what is the nature of the output of lz77 that makes it more suitable for huffman compression than lzw or some other method entirelyas well i used innodb engine but myisam is better if most of the queries are select and you are not going to do many writesi guess post would be also fine but get is always better for our usethese steps were taken from this blog post which contains more details about how to investigate and what output you ll geti know that swift is buggy as heck i run into bugs everyday but ill bet objective-c was even worse when it started out benefits of hindsight so in a couple of years swift will be equal or greater than objective-c keeping its basic simplicity as wellthere is another principles which i like even more than srp - dryjeff kaufman has a good demonstration of how box-sizing works and why border-box makes more senseit simply comes down to the space available a tablet gives more room to developers thus allowing developers to put more on one screensthis one s an overflow but i think it illustrates the unreliability of isnumeric in general especially for int - for double it s much more reliableit s like asking whether sin is faster than sqrtif you know buffers cannot overlap memcpy is fine and may in any given library use optimizations that allow it to be faster than memmovescenarios when quicksort is worse than mergesortit seems to be common wisdom that if you are deploying django on an apache server then you should still put an nginx server in front of the application to serve static files at which nginx is more performantyou can also user a stemming which is a simpler version of lemmatizationthis article seems to suggest that this is possible by swizzling a fake location into apple s cllocationmanager class to be used by other apps but i am unfamiliar with the objective-c code more familiar with swifteclipse compiler for java jdt ecj is much smarter tool than actual javacmy rails app is coded in jquery but for file uploading i ve yet to find anything better than fancyupload better imho than uploadify or swfuploadi saw that the discrepancy was because in safari the text element is taller than in firefox and includes a slight amount of whitespace on top that doesn t show up in firefox in firefox the top of the text element is exactly when the text startsedit explained as i m guessing you are somehow forced to use glut but i agree with other posters glfw is a better option if you can choosenoexcept allows for more efficient code generation in that it does not have to perform rtti on throw exceptions instead if an exception is throw from a call-frame underneath a noexcept-declared function std terminate is called short-circuiting the crazy std unexpected machinery specified by the 98 standardit works in firefox because firefox is more lax about this security restriction and google-chrome happens to be more strict on mixed-content errorsi myself did not use brew before but this page says it is less intrusive than fink and macports so you may give it a tryclient-side will also be more responsive than server-side because there s no request-response but that s really only a perceived performance issue for high-latency connectionsalways use tls which is ssl which is https more or lessnotably this doesn t happen in all browsers google-chrome renders more smoothly than ie and firefox for instance but is there any way i can make those white lines stop appearing when the user zooms inor if there is too much intermediate output to be shuffled your job will become slow as you will need disk based shuffle in such a case which will be slower than ram based shufflessd disk are good but they are still much slower than ramwhile testing my implementation i discovered that although it generally performed better than regular quicksort heapsort consistently outperformed bothudp communication requires much less overhead than tcp due to the number of messages exchangedin the above code #header seems to overflow out of #header_wrapper because of and which adds up to more than the height of #header_wrapper and even though box-sizing border-box has been applied its still overflowingthe active selector handles the mouse click much better than mouseup down you just need a way of reading that state in the onmousemove eventif you work with data that doesn t need construction destruction and requires reallocations a large array of ints then i believe malloc free is a good choice as it gives you realloc which is way faster than new-memcpy-delete it is on my linux box but i guess this may be platform dependentnb weka contains its own implementation - smo but it also provides wrapper for libsvm and libsvm runs faster than smo note that it requires installed libsvm see docsunwound before program execution is terminated. he said code using noexcept is more optimized than code using throwi suggest you try increasing your maximum to just under half your main memory and attach a profiler visualvm is better than nothing and see if where objects are being retainedhowever innodb tends to be slower as myisami have no idea what i m doing so i dove nose-first into nginx -- which i had never used before -- because someone told me it s better than apache at dealing with lots of small tasks and requests -- not that i would know how to turn apache into a proxy mind youquicksort is not better it is well suited for a different kind of application than mergesortit s much easier with a shapefile than a geojson as shapefile are much more common in gis softwarethe hash idea should work minor note that sha-256 wouldn t present collisions md5 is no longer secure but it depends on the trade-off if the service involves something really really critical a client-side ssl certificate would be the best way to proceedbasically collections are things that implement some kind of iterable interface and they internally use the same iteration method though lodash source is a bit more convoluted than underscore.jsfrom what i ve read i was expecting quicksort to be faster than mergesort but on my code it is not so i assume there must be a problem with my quicksort algorithmtwip for parameterized testing the junit stuff isn t the greatest in fact testng does this better as well -you might have better luck with a repeater a datalist or a datagridjsf is a web ui framework whereas seam is a more general web application framework that integrates not just jsf but conversational contexts workflow jbpm and object persistance preferably ejb3as i am benchmarking my cluster i discover that for large file my get command is actually slower than put commandi prefer using these short forms because to me year getdate is shorter to type and better to read than datepart yyyy getdateso i have a form that submit to a database and i want to prevent more than one submission if the user clicks the submit button more than once...with a little research this seems easily enough done however none of the solutions i found worked for me as i am using the jquery validationengine plugin to validate the form client sideif you need a surrogate primary key using an auto_increment field is better than an md5 hash because it is fewer bytes of data and database backends optimize for integer primary keysas objective-c is the older programming language for ios or macos applications swift allows you to use those classes structs in your codeif i am parsing an rss feed with php and xml how can i parse more than one feed using one fopen statementtruetype opentype font that provides better compression than woff 1.0though if you are going to eventually fill a substantial portion of the map the dictionary method is much less efficientwrite the application differently - create a matching interface and write the service provider implementation against it testing that and also write a minimal subclass of the abstract-class that does nothing more than forward calls to the interfacethe resulting page identifiers will also be shorter than md5 hash and will only contain digits so they will be easy to include in url query strings etcactually i want to move it to the top while dragging and move it back afterwards but this problem can be illustrated in a simpler way with just mouseup and mousedowngson 1.6 now includes a low-level streaming api and a new parser which is actually faster than jacksona heartbeat mechanism pull model is definitely easier to implement but a push model is far more efficientnote that in any case for increased security and fast static file css js delivery you might want to add a reverse proxy layer nginx usually provides better performance but apache works as well before the nodejs python serverusing get is much easier than using post for most of developersso if your code has tough data dependency problems addition is about 12 times faster than divisionvirtualbox no vmware because virtualbox is more user friendlyfirst you have many different library you can use instead of retrofit the basic one and i think the simplest is okhttp but you have to understand that okhttp is no more supported but still work when you downgrade your sdkversion and you can use volley to perform the same service as retrofitas you are no doubt aware from your searches innodb is primarily better than myisam for high volume inserts not counting non-comparable features like foreign keys or full text searches which are exclusive to innodb and myisam respectively while myisam is primarily useful for tables which are read more often than they are written toin future if they add more than one directory at the root level i will handle it but for now you can assume they will only put in one top level folderthe answer is simple so that you don t upgrade to a versioning newer than the versioning in wheezy by accidentalso throwing illegalargumentexception makes more sense instead of nullpointerexception when string has blank empty or null valuesalso post is generally considered better than get for ajax calls as it doesn t have the same string length limit slightly more secure toohowever i could not find it the documentation so it may inherited more than propertiesquicksort usually is better than mergesort for two reasonsso union is much better than the union all with distinct in performance-wiseyou can do the same thing with much cleaner code with chr ord and array_mapas you see i too mistrust whether the tab chars are real tabs and also use two or more spaces as delimiterin firefox the input button has more padding than in google-chromeand web2py is more lightweight than django rails whatever on pretty much all countspd note that firefox s developer tools are better and more complete than google-chrome developer tools but in essence are for the same purposeps again i am aware that relying on client-side script is way less secure compared with handling all execution from within the server-sideso yes at least in this respect csc is smarter than vbcalso note that in my code above manually calculating the euclidean distance is much faster then calling pdistif you have recently upgrade to a versioning of apache greater than versioning 2.2 the authz_core error error might be coming from your httpd.conf or httpd-vhosts.conf file in the tagsi ve already built a view that can take a drawable can use focused pinch-zoom and drag can auto-scale images can switching images dynamically and takes images larger than the screensso a 128bit adder will be slower than a 64bit addbazaar is easier to extend in an api way git is easier to extend in a unix way pipesi don t think it get s simpler smaller than http get post and json unless someone can correct mein the past the redis developers experimented with virtual memory and other systems in order to allow larger than ram datasets but after all we are very happy if we can do one thing well data served from memory disk used for storagebut better ogg than wavanother alternative for javascript ajax is writing a google-chrome add-on easier than firefox or embeding a web browser within your applicationi prefer user getter and setter because is less code and more legiblewell for that you ll need jsf that is better integrated with seam and jsf does not handle file uploads that actually everyone use so you have to put also icefaces that actually are better managed by maven that you currenty are not using... neverending storybut my directory structure is more organized its more like app lib mypackage folderto answer klochner both seems quite popular but ruby is not a language that i am familiar with and django seems more heavy and complex to me than web2pya system with a lot of ram will have advantages when switching between different instances of visual studio because their state won t need to be written away to slower than ram disk be it ssd or notif you write your own reusable components then writing them in actionscript may sometimes give you a little more control but for non-reusable views mxml is much betteri changed the genrandom function to genrandomword length and instead of using a while loops i used a for-loop which is easier to see how long it will run forwhat i meant to ask is it can be argued that npm has a wider user base than bower some even argue that we should stop using bower altogether like here and herei believe that ubuntu is better than centos when it comes to mono as it is much easier to setup and seems to be better supportedi ve tested this on a few devices a nexus 10 tablet which gets the bigger version of the file from the xhdpi folder a generic tablet using mdpi a galaxy ace phone mdpi again and everything works okanyone who thinks myisam is faster is either not tuning innodb correctly or has such small data that who caresi am not sure but by reading the documentation i think you need to download the pyodbc it seems to be better supported than adodbapii am however no cpython guru and can get so much more out of ironpython than cpython as i can easily leverage the .net platform on which i am far more at homein the first example sqldf is 3x slower than data.table and in the second its 200x faster than plyr and 100 times faster than data.tablemicrosoft s free application for stress-testing wcat is underpowered and buggy but the full blown test edition goes up against products like loadrunner but is easier to use better-integrated with vs asp.net and for much less money per virtual usertranslating this to gremlin is a tad bit tedious pattern matching in cypher is more natural but lmk if this is in the right direction and i ll do ithere the working header request with firefox bigger than google-chrome requestyou could use nant to send email but teamcity is more appropriate as it can provide a centralized place for notifications including emailsso you can do a django redirect_to urlconf entry but you d be better off with an apache or nginx or insert-your-webserver-here redirect so the initial request never has to hit django at alli am not sure if this is no longer true myisam is faster than innodb for readsi assumed the version using chars variables would run slower than that using int s due to the conversions but on my 64bit dual core ii system the int version is sloweri ve been looking at services and the two most comparable for grid testing look to be saucelabs as mentioned above and also browserstack which offers a cheaper unlimited package i believeusing post over https is better than using get and httpsince the upgrade or mac clients can no longer connect through safari and firefox is no longer accepting the about config setting of network.automatic-ntlm-auth.trusted-urisdus anyone knows if there is something wrong with my json or if google-chrome is harder to get than safarii interestingly think using min or max is the more pythonic approachudp is also more work than tcp if you need reliability which is built in to tcpa for-loop is faster than a foreach loopsmyisam has historically been viewed as faster than innodb but for recent versions of innodb that is true for a much much smaller set of use casesyou can t cast a superclass in a subclassing because the subclassing may have a bigger interface than the superclass means the subclassing can have functions like getunixtimestamp that the superclass doesn t havei have coded a routine to compute the cartesian product of different tables as in a database with the only exception that the tables are stored as files in my case and for computing the cartesian product i am using file i o for reading files i am using filereader coupled with bufferedreader and for writing files i am using filewriter coupled with bufferedwriter now as i am performing every computation externally in files i.e i compute the product as follows i take a row from file-1 which is table-1 in my case and concatenate it with every other row in file-2 which is table-2 in my case and write it to an external file which holds the resulti came across a situation where i need to implement a for-loop with more than one loops control variableuse of malloc free is even more rare and should be used very sparinglybeautifulsoup is more forgiving in terms of well-formed xml structure see i had to edit the xml a bit to make things work for elementtree and it s actually much easier to work withavoid public attributes in class use getter and setter it s just shorter theresome recent tests we did showed that postgresql does perform faster than mysql and we believe the table partitioning feature in postgresql will be very important with a table in our database we foresee to grow into 100 million rows and more in productionwith get and put it is more likely that the media-types are symmetric however that is not a hard rulethe reason why you get the exception mentioned is because when you call byte.parse but the string that you put in is greater than 255i did not make any changes more than change protected to public but i add another class in a new package to print the rules by these following codesie handles updates better than google-chrome and firefoxperformance i did some test with simple game similar to swing copters and found that game created with libgdx consumes 15-20 more ram on ios device that the same game created with cocos2d-x but then i used apportable to run cocos2d-x game on my android device and found it almost not playableyou could for example generate a random aes key encrypt it using rsa and store it in the output file and then encrypt the file itself with aes which is much faster and doesn t have any problem with large inputsfor python there is a pypy project which it includes jit making possible the code to run faster than in cpython in many casesthe uiview is taller than the screen so in ib i pulled it out of the scroll view so i could see it all but i never moved it back to being a subviews of the scroll viewrealised that templates are incredibly powerful and don t need to be slow and use of the stl and boost is much more widespread than 10 years agoie is much slower than google-chrome firefox for all js work not only complex onesin the end you have a scheme whose encoder is more complex but whose decoder couldn t be simplerhe says he uses debian and is less familiar with centos and so i am posting herecounter1 can be used with instanceof and inherited but is more verbose and doesn t have real private properties eg count properties is exposedfollowing the linux kernel coding gudelines i don t fancy typedef because they tend to make the data definitions opaque if something is declared elsewhere as the typedefined type understanding that is a struct is somewhat more complicatedi ve replaced settimeout with setinterval which is more appropriate for repeated tasksthe logs only seem to work with a google-chrome browser which is a laugh as usually firefox is better at running google apps than google-chromemost importantly you can easily supplement udp with some reliable delivery hand-shaking that s less overhead than tcphbase is schema less and from hbase you can create impala or hive external tablesand if you find yourself with more issues after this post i check my github daily so logging an issue against my repository will get more help in a better place for a back and forthso yes it can be used with flash or rather pure actionscript but it is a little less convenient than with mxml where everything is set up by the framework because it takes more under the hood configuration to be able to run all the necessary parts for remotingi ve also found scheme ides much more user-friendly than lisp s plt scheme is a good onegitolite is far more advanced than gitosis and is quite easy to install directly from your workstation based on ssh communication with your git repository serverkeep in mind that implementing udp traversal is easier than tcpi assume this is because comparison between int is much easier than between chars strings but i was looking for some literature to back this assessment ideally some database structure bookanyway the most important issue is that web2py is easier than django pylons php and railsi suppose the first option is good for small arrays but a for-loop is probably better practice as the amount of code would remain the same regardless of arrays sizethe coalesce function is used here because it is more portable than nvl or ifnullfrom how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but fasteras you can see ie 8 is about 5 times slower than firefox 3.6 and almost 20 times slower than google-chrome 9 at least when using sunspider testsmysql is more permissive and allows the non-standard use of distinct but postgresql throws an errortake note of this there is no way to subclassing more than one superclass at a timein fact one could theorize your approach of having it show up after the finger is released is better than what google-chrome and safari is doingwikipedia defines web services as a software system designed to support interoperable machine-to-machine interaction over a network. as implementation they are more complex than rss feed and are usually used to integrate business applications like connecting an erp with a crm systemif necessary i can switch to tga though png is more convenientyou got at least put and delete although they are used much less frequent than get and post as in hardly everi used apache-poi for excel sheet and i know that it has a good api support for word doc too but i heard that docx4j is better in handling word documentsthe mtu is closer to 1500 and this applies to tcp not udpsafari and opera work with the google-chrome setting but firefox and ie display the iframed page larger than google-chrome causing part of the text to be cut offif you will have only yours commits on your branch issue is much simpler you can do squash those git squashc++ allows you to define struct without the struct keyword so the typedef is used less oftengrouping has looser constraints than sorting so in theory it could be marginally faster than sorting but unless you re dealing with a lot of data you re unlikely to see a speed differenceit was never intended to be some safe version of strcpy - that s complete nonsense since strncpy is far more unsafe because of the null termination issuein few words strncmp is safer then strcmp but it is slower toollvm compiles code faster than gcc may create code that runs faster and the clang frontend provides more accurate error messages than gcc Ã¢ so there are definitely reasons for switchingi ve used python on windows and on ubuntu and linux is much cleanerit is also usable from emacs and vim but this time the emacs interface seems more polisheda for-loop fits better to your requirements than a while loopstriggers in postgresql have a syntax a bit more complex than mysql because they execute procedures as the actionremember the tuples are saved into the disk which is vastly slower to access than things in ramthe code makes some reasonable assumptions but it may fail to detect an escaped field if its doublequote is followed or preceded by more than 3 spaces before after field delimiterfor example matlab multiplies two 1000x1000 matrices in 0.15 seconds on my computer r needs 1 second while c++ armadillo lapack blas needs more than 10 seconds for thathow can i make the droppable to not accept more than one draggable divthis seems to me like a bandwidth error or something like that originally i ve got the error when i played with the html 5 audio api and if i loaded the audio file 10-15 times sequentially then i ve got the error but now i ve discovered that i get the error without the audio api too just by reloading the site a lots of times also safari gives me the error much faster than google-chrome wtfmyisam is faster than innodb for reads mythsetting it on a many-to-one or many-to-many relationship is more awkwardalso try post ing using ajax as get is much more likely being cachedit is suggested in this so post that c# is more efficient with toupper because microsoft optimized it that way. but i ve also read this argument that converting tolower vsdr your heapsort is not faster because it isn t actually a heapsort it s a backwards insert sort followed by an in-place ordering reversalthis is also one of the few places i think you d be better off with setinterval rather than settimeoutswt became slower than swing because it uses proxy to os widgetsin innodb the count s when where group by or join is not used execute slower than in myisam because the row count is not stored internally2 integration would be easier with jboss eap support from eap 5 or wildfly however if you don t need any java ee technologies i would go with more lightweight server like tomcat or jettythis is why pypy may be slower than cpython sometimes it needs a warm-up phase in which it can actually optimize repeated operationsalso for printing arrays i recomend to use the enhanced for-loop it is easierusing options such as -os for the compiler to tell it to make the code small in other words don t inline-functions unless the code is shorter by inlining than by calling the function and don t unroll loops etc etc - but do inline-functions called only once as that does make the code shorterthe point of this cache is to store data that the cpu is using quite regularly to speed up transfer time since the cpu cache is physically closer to the processors then ram isfor example quicksort is faster than heapsort in general although their time complexity are the samebtw this is not essential for this solution for windows 7 and 10 xcopy is superseded by robocopy which is much more performant and powerfuleven if you re on linux it s much easier to get a precompiled version sudo apt install r-cran-rgl on ubuntu if you have the appropriate cran repositories set uppersonally i would recommend testng although if you re just starting junit is slightly less of a learning curvealso i can t see your table engine but myisam is better for full text searching rather than innodbnuxeo is based on open source but you have to pay the license and is pretty expensive at this point documentum is better anywaythus i suspect when people say that nunit is much faster than mstest it is because of the loading and updating delays but the actual test execution time appears to be very similarmercurial is significantly faster than bazaar it s slower than git though by a much smaller differencesometimes it is good practice to use onmousedown event instead of onclick because onmousedown is fired sooner so ga script has more time to execute event tracking it s only a few milliseconds difference but can helpi m trying to create a template in velocity since i have more knoledge than freemarkermvp offers greater seperation as your presenter have no knowledge of web centric conceptsfor me apache is easier to use but i prefer nginx as it is much fasterif you include the explicit rbind version it is slightly faster than the do.call rbind rep list a n version but not by much and slower than either the apply or matrix versionsi can t use anything more than basic addition and subtraction and string parsing functionsthat is for symfony so not sure if silex has some better sugaranyway i just prefer not to use it because gecko is slower then webkituse httpwebrequest instead of webclient it s just more robusti prefer the command line because i have a shell window open in the source anyway to run builds and tests and along with file name completion using the keyboard is faster than using the mouse for meit is understandable that memset is faster than memcpyspring security is fine too but if you plan to use jsf 2 you probably also use cdi provided by seam weld which is integrated into the java ee 6 profile from glassfish and jboss it is easier to use shiro as spring heavily relies on its own dependency injection methods although spring security does not need that much injected classes but you should stick to one way of doing thingspuppet chef always have a place in my heart stack but ansible is just easieron the other hand a usb connection is far more reliable better supported and of course has the inherent advantage of speed and since it is well supported does not suffer from all the pitfalls bluetooth connectivity doesi can make this work if the z-index of the droppable is less than the container but then you can t see where the draggable is since it s hidden behind the containerit is much more efficient than gridview listview for complex layoutsi have just noticed a site i am working on looks different in google-chrome than other browsers saf firefox everything is more saturated in google-chrome even a background-color rgbalso datamapper is much more ruby syntax friendy and features like lazy loading when doing chainable conditions like activerecord in rails 3 are there from the beginningyes but if you think of your diagram as a topographic map the subclassing have higher altitudes than the superclasshaving used both i can tell you that it s a much more polished platform the servers are about 4Ã£ faster you can run as many apps as you want and the heroku toolbelt is much more powerful than the openshift s client toolstcp streaming for audio can be less helpful than udp rtp as you d have to turn off naglingscylla a cassandra clone which is generally more efficient than cassandra also has similar issues with huge partitions as in cassandra moderately large partitions are fine but these issues are actively being worked on including re-designing the file format so eventually scylla should support arbitrary-sized partitionsif the above is true doesn t this mean that the foreach loops is much slower then the common for-loop since it involves making copies of each element of the arrayswe started with ehcache terracotta server array cause it s well-known backed by terracotta and has bigger community support than hazelcastno intel or amd x86 manuals ever guarantee atomicity of anything wider than 64bit except for lock cmpxchg16b so this talk of sse vector loads stores being atomic on some cpus isn t something that you can reliably take advantage of or detect when it s supportedthis package and my answer here may not solve your problem because reading the numbers directly as chars is an easier way to achieve your goal but i thought i might post this anyway as an information for users who may need to use large int with more than 22 digitsi know for a fact hotmail is using a rules based spam filter which is quite strict and gmail uses more like a self-learning system which could explain why gmail accepts your message and hotmail doesn tand it seems working fine antialiasing is much better however this beats the idea of a transparent background in the processi really do not get the appeal it s marginally better than textwrangler bbedit s free little brother but if you re spending money you may as well buy the better tool for a few dollars moreobjective-c s relatively lax type checking makes this easy to deal with but swift is stricteryou do not need to set up these remotes but having them for all the repos that you frequently work with push or pull changes makes things easier for youpersonally i ve used mayavi in the past and found the performance much better than matplotlib for 3d scatter plotting though the python bindings are somewhat in question moving forward i thinkyou should not be using the post method for requests that contain no actual data get method is better for thatthis changes the variable curve so that it now points to the middle of the arrays that was previously initialized so that the follow-on for-loop indexing is likely easier for the programmer to think about and a bit cleaner to write debug etcalso if you have very limited memory processing resources it is worth bearing in mind that udp is a less costly protocol as it avoids a lot of the overheads tcp incurs due to its inbuilt connection managementmy another question is if i put the data size smaller than mtu into sendto then i can gurantee call sendto once socket only sends one tcp udp packetso how i create my layout bigger than tablet screens using xml and just do something that will hide show the listview 1 or listview 2 to work using any tabletit feels like arangodb is focused on graph operations and neo4j fits more the needs of using graphs if you have more relations than rows the reason to use graphs instead of relations with joinsthe big caveat here is that apc generally has less memory available for storage though. default being 32mb memcached s big adavantage is that while still fast it s distributed so if you have multiple servers running they could share this datausing webclient is potentially slightly on the order of a few milliseconds slower than using httpwebrequest directlypersonally i find shark more useful than instrumentation for profiling my code and finding out what s taking up time when it mattersyou may be interested in looking at the constexpr keyword which i think is better than the inline keyword when you can make use of itdivision though is an iterative process in logic the implementations you see on educational sites verilog vhdl are simply doing the same thing we did with log division in grade school but like multiplication it is much simpler than grade school you pull down bits from the numerator in the long division until the number being checked against the denominator is equal to or larger basically the number can either go in only zero times or one times into the next number under test unlike decimal where it can be between 0 to 9 timesmemcmp is simpler than strcmp and can be implemented even more efficiently in places where the strings are known to be properly alignedrunning a quick benchmark it seems that the for-loop is 4x faster even in the worst case where you have to replace every single time and you construct a new arrays to hold the replacementssince you re presenting multiple columns a gridview control is a better alternative to checkboxlistnonatomic properties don t use locks but direct ivar is faster because it skips the accessor callthis breaks the inherited and the subclassing is no longer an instance of the superclassperhaps in the same vein and i had a problem of this sort with some of my other data trying to convert character names in matrix and data frames into factors results in more confusing behaviouralone push is better in the accepted answer can t quite work as a push-operation in some class can require a new pull at the pushed objectgoogle-chrome is smart enough to guess where things should be closed and still work correctly but firefox has more strict of standardsbut is there any specific situation when while loops is better than for-loopphalcon is more powerful verstile but to get started with it i feel you have to be a better php developer than you do to get started with something like cakephpi have a working script to stream over tcp but i understand that udp is the better option for video streaming however i m not really sure how to do itfor a counterexample i think scheme programs ran faster and used less memory than the lisp programs that preceded them mdashthat would theoretically cut the time in half but it seems that robocopy is much faster than xcopy at least for this use so it took way less timeif you are still having problems jdk 8 has the ability to play mp3 files which are significantly smaller than wav you may want to try thisin this approach you won t get much from django you are better of with bottle flaskfor example on the blog page of my current project i have two widgets in the sidebar one for latest tweets and one for latest music news however as you can see on this page the content of the blog post all test posts... are much longer than the height of the two widgets and would of course get larger as more post are addedeugene s suggestion of using ecc is a good one - ecc keys are much shorter than rsa or dsa for a given security levelin my opinion it gives a nicer solution than the mouseenter and mouseleave eventthe subviews version is definitely faster since having the controls loose on the uiview took more like 2 seconds to updatealso the hash algorithm itself is much slower than sha1 md5 sha1 md5 are made for speed - not a useful property when storing passwordsany sort of reverse proxing of tcp udp connections is more scalable at a lower osi level ie layer 3 or layer 2 instead of layer 6 7 as nginx is operating atsince ntile might put the same number in more than one percentile i use a query to calculate the percentile using ranki think silex produces a bit uglier code than slim but i m afraid to choose slim because it s changing constantly and i will be stuck with the current version if it breaks backward compatibilityi can only guess at the reasons and i don t worry much about the occasional downvote but perhaps some readers think i m advocating cvs as a better system than svn or gitusing fgets and fputs is faster than multiple calls to getc and putc all you need is a buffer a little buffer in this case to store the current linetheses two links are great specially about to know more about the main reason of this header that is portability but for me what i like most about it that i think uint8_t is cleaner than unsigned chars for storing an rbg channel value for example int32_t looks more meaningfull than simply int etcsince myisam is better on selecting while innodb is better on writingprobably you can take a look at rythm template engine which is much faster than freemarker and velocity also much easier to useit might not be the most efficient way to do it but i ve used ordereddictionary though sorteddictionary is probably more appropriate for handling the out of order issue in the pastan add action like that would be better done as a post request partly for semantic reasons it s sending data rather than get ting it and partly to avoid annoyances like thisonce you ve done that you can use strcmp to see if the string is equal to stop and if not then call atoi or better yet strtol which has better error checking to get the numerical valuetypically mergesort is slower than heapsort and quicksort but that s usually under the assumption that comparisons are faston most processors a boolean operation has no reason to significantly be slower or faster than an addition both are basic instructions even though comparison may take two of them subtract then comparing to zeronewly created groups click more than 2 checkbox then a group button will appear now click the group button then an alert pop will appear asking you to enter group name.enter some name and click ok.then that name will now appear on the right side group table.now clcik the group name then those members will be selected.i want to the same from existing groups also.please tell me howi would go with kohana over symfony because kohana is much easier to understand out of the box and doesn t require any special setup to work withgenerally innodb is much better for preserving your data integrity so stick with it and do not go back to myisam there is also a matter of what each engine is best fore but unless you give us more details there is no point in dwelling on thati don t understand why the division multiplication in c++ is so much slower than addition subtraction where the managed c# version is more reasonable to my expectationsfor instance if the high word is less than the modulo then it is safe to perform the division like thisbut one below query which was editable in ms access versioning before back-end upgrade is no more allowing editsoften running the equivalent commands in the terminal be they ant maven etc. is clearer when failures occur because you ll see the full error outputthat s why realloc can temporarily require more memory than a malloc free pairbut becuase reading from ram is usually faster than from other kind of memory storage divice os copy the program from disk on ram and start executing program from therehttp is an application layer protocol which could be encapsulated with a protocol that uses udp providing arguably faster reliable communication than tcppolar is well-suited to rotation operations and scaling i guess but sticking with cartesian where a rotation is four multiplies see below is probably going to be cheaper than using cos sin acos asin every time you want to do a vector additioncalloc does take longer than malloc because it has to zero out all the memory you asked for before giving it to youlastly if you are frequently finding yourself running long running process i advice you to try jruby which is works much better with long running processes due to jvm lot faster than mritcp as you know udp is faster than tcp even if udp may miss somethen i thought of putting each integer from s into a binary search tree and searching for first occurence where one of children is smaller than query and parent is bigger than query but i don t know if this will workyes it is an old wives tale that myisam is faster than innodbmvc is the most extensible and if you are familiar with how things work under the covers you ll probably be better off than implements a hard to extends ms thing like odata and wcfyou can do the whole job in a single for-loop reading from stdin look if it is larger than the max smaller than the min and so you do not need the arrayshaskell has higher level bindings to llvm than ocaml the haskell ones provide some interesting type safety guarantees and haskell has by far more libraries to use 1700 packages on making it easier to glue together componentsto summarise the differences controllers in the mvc have more control over the ui and handle events while a presenter in the mvp is more passive and just presents information through the uiabove is a simplified version of my actual code where the c arrays is much larger so i have to use a for-loop to get every index1 i guess dask will be slower than pandas for smaller datasetsin my case i needed speed right out of the box and silex provided me with the speed and although i am using most of the symfony components it is a lot faster than symfony out of the boxuse a for-each loops to go through a range it s not as fast as using a variant arrays but keeps things simple and offers better speed than a for-loopi generally use mongodb because it returns queries in json format integrates well with angular.js and its bson format is much faster than jsoni am wondering if there is a cross-platform allocator that is one step lower than malloc freei think the single responsibility principles srp is much more useful in practice -- as long as a class only does one thing it is okay to modify it if the requirements for that one thing changeduring writing test for angular app using protractor i faced a lot of problem related to handling spinners some of then i solved but i don t know how to test spinners which hidden by wrapper for example if parent tag have ng-if or ng-hide statements and spinner has a height and width that is greater than 0from what i read on the net multiplication is usually easier to compute than divisionside note it looks like you re using the post form of file upload which as the docs say is considerably more complex than putlonger answer 64bit x86 has more general purpose registers which gives the compiler more of an opportunity to optimize local variables into registers for faster accessrunning with debug option -x seems to imply that command substitution is similar to subshell since bash outputs a deeper nesting for itnote also that onclick would be much more appropriate than onmouseup for thisthis is the reason why working with the higher-dimensional arrays ends up being so much faster than the for-loop -based codedivision is inherently a much slower operation than multiplicationif you want to cover the largest audience possible set up a streaming server like icecast and broadcast over mp3 and or ogg both is bettersometimes your mxml does not get you the itch of what you are looking and actionscript gives you more powergoogle-chrome renders passwords smaller than firefoxon the other hand for-loop is more like counter based where you want to specify for how many times should loops happeneduse firefox network in development tools and check your requests sometimes it just sends options request in cross origin i insist on firefox because it s network tool is much more detailed than google-chrome and safaricomparator does everything that comparable does plus morebut do also remember that in your case get request looks more appropriate and as balusc says its not good practice to use post for bookmarkable page-to-page navigationif you need to do more with the parent like paging or fetching the children you could split this problem into a sub query note that the line is not required it s just an example what you can further do with the querydisk space is probably always going to be cheaper than ramgoogle-chrome shows it better than firefox firebughowever bash has useful interactive features dash does not zsh is still better imhonevertheless in my opinion break is not much better than goto its both not a good programming stylei have one parent resource which can have more than one children of one attrbiute and one than more children of other attributei m not sure exactly how you re drawing the conclusion that ironpython is faster than cpythoni would like to know how to only get the post that the user either hasn t read at all no record in views or the post latest_reply.id is bigger than the one saved in viewsand i think post is better than getbower packages are simpler than npm equivalents and don t have subfolders with module dependenciesalso nice to know is the fact that the latest version of google-chrome and also opera don t know since when but longer than google-chrome supports userscripts out of the box no need to install any add-onsbut that seems like a ton of redundant code i m using squants to track units so there s more than just int and double to worry about that i d like to avoid if possiblewhy postgresql is more capable than others mysql etc. on djangoadding a dynamic salt to each user would mean that you will have to hit a datastore to retrieve the dynamic salt and the hash version of the user s password then you will have to perform the cpu intensive hash function in your code twice -- you are hashing a hash which is less secure and more likely to have collisionsif you overwrite the env versioning the rake db migrate will go downgrade rather than upgrade if versioning is smaller than last known versioning in db schema so please check and avoid similar environment variablei suggest you to give a look to tcpdf which is far better than fpdf also because it is actively developedif there is a junit extension or similar framework that provides a better solution than testng then please let me knowpull - do a asynctask in your android app such that whenever the app is opened it checks asynchronously if there are any upgrade by having a versioning code in a url and show a dialog to the user if the versioning code is greater than what it is in the devicegridfs is not a server-side feature but rather a convention on how files larger than the bson document size limit of 16 mb can be stored in mongodbas for streaming it s better to use udp first because it lowers the load on servers but mostly because you can send packets with multicast it s simpler than sending it to each connected clienti read that nginx is faster than apache and i want to try it with some of the projects and leave the others with apachemy requirement is i need to upgrade the existing versioning currently installed versioning on the computer of the application if and only if the new application s versioning is higher than the existing versioningreference from here link for ntp commands as i am more familiar with ubuntu debian based commandsget requests are no less insecure than post requestsit s easy to use a gem for this such as devise which does a lot or sorcery which does less so may be easier to understand and alter as you likeone thing is that if your inserts are not in the order of increasing primary keys innodb can take a bit longer than myisamwhenever a top parent reply tile goes out of the viewport it is disposed as expected but when trying to bring it back into view it scrolls right to the top and looks very jumpy even worse whenever a bigger thread with multiple children tries to come back into view it doesn t scroll at allquicksort also has a better cache access behavior than heapsortif a task is cpu bound calcuating something making it multi threaded will only improve performance if you have more than one processors to run the calculationsif you subclassing has less arguments than a superclass and you could make them optional in the superclass just add placeholders in the subclassingwell unless you re targeting older than google-chrome 1.0 firefox 8.0 ie 4.0 opera 7.0 or safari 4.0 it s safe to use insertadjacenthtmledit double metaphone was specifically designed to be better than soundex and work in languages other than englishthis is the proper solution don t ever rely on passing a string as a function when using settimeout or setinterval it s slower because it has to be evaluated and it just isn t righton windows machine i would probably go with textpad personally i now use programmers notepad 2 however it does not support a spell checker and i don t really thinks it s better than textpad by any measuretestng is more flexible than junit and have multiple advantages like support for parallel testing for exampleiirc floating-point multiplication is much less expensive than division so this might be faster than bothone of the primary distinction betweeen vi vim and emacs is emacs is designed and supposed to be run at times without quitting where as given the quick load time of vim it is easier to quit and start for editing tasksi feel like using scripts ant maven is more natural for this task whereas java needs to work hard to read all the files folders to heap and write them to another folderoo class diagram is more abstract and has more features than entity-relationship diagramof course you might be able to make the first step from long string to number easier by using nsscanner or by taking a substring of your long string cutting out everything except for the number itself and then using the nsstring method integervalue or doublevaluei know there can be problems with posts_per_page but nothing is working i ve searched a lot to get the query to display more than one post2 location + reverse geocoding - seems more reliable but requests location services on the device does it work on wifi only tablets and for it to be enabled and requires time to a fetch location b server call to reverse geocodeibm makes it easier for those who can t afford websphere application developer or rational application developer which are both eclipse flavour to use eclipsei know i can do a client-side redirect with html but i understand that the server-side redirect is nicerhaving getter and setter is a better thing in oopuse floating divs instead which looks like a modal dialog but are better than the pop-upnow i have it so that the line is split into an array of strings using the .split method however it splits on white space and punctuation meaning that cities with names longer than one words won t workin studio 3 much of this sort of functionality is still coming as aptana is going more of a textmate bundle route for a great deal of their features which i think is really coolunless something has changed a lot with 2010 the basic vsts install is more or less the same as the pro version of vs - and then you install the team explorer on top to gain the tfs specific client-side extensionsalso you can do this with textarea or better with pre html elementi ve been messing around with different ways of implementing this and would like a bit of advice on whether tcp or udp is a better protocol to implement the communication between client and serverif you re really concerned with portability i m not sure that there s any better option than using printf and strtod and assuming that you may not necessarily have any more accuracy than the absolute minimum required by he relevant specification section 5.2.4.2.2 of the c99 spec.this will be made less onerous by ruby-on-rails 3 which is intended to be orm agnostic after the merge with merbi ve made some programs and saw that scanf and printf are considerably faster than using cin and coutit is a great tool if you want to use git as a frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-casesince you tagged this with python you might find rdflib more useful than jena but the real question here should be about how to do the conversion not the library request since library requests are off topic for stack overflowneither post or get is securer than the other in that way and so if you need security you should use httpsswift is more strictly typed than objective-calso as mentioned elsewhere show is a better option to css visibility as hide sets display none and not visibilitymemcpy is usually faster than strcpy for longer stringsif you select a versioning that is greater than the compatible versioning the file may be upgradesaxon-ee supports streaming of large xml documents using xslt or xquery streaming is better supported in xslt than in xqueryif you will only use put remove get it s better to choose mapif you have six versioning less than 1.10 upgrade itis this something that would be easier with paperclip shrine or refilefor example locality of references has influence on cache hits or misses which is the reason why quicksort performs better than mergesort2 - i have read about myisam vs innodb the conclusion for me was that myisam is faster when it comes to read-only whereas innodb is designed for tables that get updated or inserts more frequentlyif you re looking for more of a site-wide solution especially if you want the ui to do complex behaviors based on the url hash more than hide show a tab in one part of a page you might want to look into a proper javascript routing library like crossroadsthe double_unit stuff is how random actually does it internally because multiplication is faster than division see floating point division vs floating point multiplicationsince the screens of an ipad or other tablet is bigger than a phone s display and that would leave me with a bunch of open space i was wondering if there is something in codename one to have an image pop-up on a tablet but that it is not visible on a phone s displayafter searched in google found that jackson has better performance than gson i plan to replace gson with jackson in my project but i got a diffrent result when run test codebefore do git pull and git push it s better to make sure that git status result is contain text working directory cleana presenter is better to accept some kind of a view factories or a supplier in general as we can already hold an existing view especially in a gwt case and let the presenter decide when instantiate or accept the viewand of course the results - if they are reproducible - might suggest that google-chrome is faster than firefox or that firefox just prioritises timeouts over dom eventswhen comparing my quicksort implementation with std sort on my compiler and my implementation of mergesort i noticed an odd pattern on large data sets when operating on 64 bit integers quicksort is consistently faster than mergesorti have an expensive for-loop that is taking more time than it should due to dynamic casting overhead inside loopsedit although this answer works it is little more than objective-c transliterated into swifti d definitely use ant or maven - my preference is ant because it s more flexible and i think it would suit your development style more than maven as welltoday gradle comes with a full-fledged dependency management implementation that no longer builds upon ivy except for some traces that haven t been removed yet for backwards compatibility reasonsyou re using des in your example which is a flawed and obsolete algorithm alternatively use 3des so i suggest moving to aes which provides better encryptioni used to use dbcontext for all of my db models until i read ways to optimize entity framework after following the steps i found my self forced to switch to objectcontext instead so there were alot of code changes to be done but i am not sure that i doing the right thing specially after googling the deference i ve noticed that dbcontext is newer and better than objectcontext and also i noticed that i lost alot of things while switching to objectcontext like migrations and find method and much more.in general the way to handle this issue with a managed bean is absolutely right but keep in mind that if you have to deal with big data it would be a performance problem because the programmatic way using java data objects including operations such as sorting filtering etc. is much more slower than to work with indexed data xp dominoviewthe structure of the hmac algorithm makes it less susceptible to attacks on properties of the underlying hash algorithmis a search through numbers int faster than chars in an mysql databaseis swt faster than swingas an added benefit nginx can also serve static files much faster than apache and nginx also uses much less ram and can handle much more connectionsthe same result can be obtained also by comparing tostring of each map as you suggested but using equals is a more intuitive approachas expected the performance got better with both and avx 2 faster than sse 4.2 but when i profiled the code with papi i found out that the total number of misses mainly l1 and l2 increased a lotif the query itself and the response are small a few bytes consider using udp instead of tcp it s faster and you can use lower values of sendintervalwhat would happen if my udp package is larger than mtuif you want to use inherited properties it works more like thisi ve had to replace lyebox with colorbox which is much faster and seemingly has less problems conflicting with other scripts lightbox fancybox and others wouldn t work for mesome people use array.prototype.slice to do that but i m not a fan and i think a for-loop is faster in most browsers - but either way i have nothing against for loops and the slice often feels like a hack to meon the other hand passing an element and its attributes like maps to a call to document.createdocumentfragment which is slower than createelement followed by a write to the classname propertyconverting to maven requires more work -- afaik there is no official tool or wizard that allows you to generate a full pom.xml configuration from an existing eclipse projecti d recommend datamapper for orm not only it s way faster than activerecord but it s also very modularly built and plugins are actual gems that you can easily installthe longer the arrays gets the more iterations your for-loop will needi know tcp is better to send file but i have a homework about sending file via udp protocolin my test keyup gives a smoother transition as compared to keydownit looks like while google-chrome and safari are trying to do the right thing with 0px firefox is sticking closer to the standardinstead of toggle be more explicit with slidedown and slideupin some cases hand-writing a for-loop is much faster than the equivalent accelerate functions because the compiler can optimize your loops better than the functionwhen comparison function is a callback function like in quicksort libc implementation quicksort is slower than mergesort by 15 on random input and 30 for already sorted array for 64 bit integersnot sure if it ll work any better than junit but there is testngif you forget to use this and your default umask is more restrictive or less restrictive then you will need to re-run the non- sudoin this case i would use coalesce which provides more levels than isnull rather than the case stementit can be even shorter with show and hidefound a way to make sure the mouseleave mouseout works betterhiding state behind getter and setter gives you more flexibility to change the internal representation of the class state without breaking other classes that uses the statethis is happening because the concatenation operator has a higher precedence than the addition or subtraction operators but multiplication and division have a higher precedence then concatenationdes turned out to be even slower than aes but for my current requirements a much simpler algorythm rc4 is sufficienthash password by using security salt is more secure than plain text passwordthe article painting in awt and swing goes into more detailwhile you are at it you might want to try the hikaricp database connection pool instead of c3p0 i suspect hikaricp is better at recovering from broken database connectionsregearding your comment i also know that it can deal with flac better than wav and ogg that is not really the caseis postgresql a better option than mysql for partitioning tables by datefor comparison 0.68 usage means this outdated google-chrome release is more popular than the current and previous versions of opera the penultimate version of safari on ios and ie 9 or 10i considered changing them to innodb to make the database 100 the same but then read the myisam is fasteroverall common lisp is much more uniform than scheme and more radical language experiments if done at all are usually embedded as a portable library rather than defining a whole new language dialecti am getting a problem using printf and fgets as in my code printf is written earlier then fget but it does not run it runs after fgets runsit s easy much easier than installing freebsd or god forbid opensolaris pretty straightforward and the perl and python will be 64 bits out of the box and part of default installationi have tried with sublimetext 2 and it work very very good better than gedit pwe don t actually multiplying it s slower than simple addition and as you can see we destroy temporary register t0 but don t touch s0 s12 however coalesce requires all arguments to be of the same data type thus being stricter than nvl which will first attempt an implicit conversionyou should treat submit as what happens after you ve done any pre-processing so binding to click events then conditionally raising the submit is better than always submission but conditionally stopping the submitnginx is quicker though honestly you ll struggle to see the difference except for very high volume sites and has quickly become the web server of choice for a lot of people if you don t have any specific need for apache for your codethis way is better than having getter and setter in base of performance not to have reduntant code of two methods getter and setteri don t know why arch linux is slower than ubuntu on your machinein fact svn does stores binaries a lot more efficient than cvs for more info see the svn-faqi think you should install phpmyadmin on your server this will allow you to access your database from work school cafe etc mysql-workbench is more advanced and gives you more features so you can deal with changing the structure and editing any rows columns relations and much more look at phpmyadmin s features it has most if not allusing multiprocessing is probably not going to speed up reading data from disk since disk access is much slower than ram access or calculationswhich is more efficient is up for debate but based on cpu bulk instructions which can copy an entire block of memory in one instruction memcpy is probably faster as strncpy would check each copied byte for a nul characteri ve got a script for ensuring the user doesn t check more than 4 checkbox but i can t find a way to ensure that the submit button is disabled if they have selected less than 4 itemsin firefox the render of new tiles and the panning is laggy this is not the case when using maps.google.com so it s not an issue of google-chrome being better than firefoxi think put and get on ignite cache would likely to be slower than native put and get on my inbuilt key value storeother posts which reference this error message seem to think it s a problem with not having an upgrade versioning of virtualenv but its versioning is higher than the troublesome versioningbetter use google-chrome even thought firefox is not slower than google-chrome for once probably the tracing for the image comparison pays off yaymouseenter and mouseout afterwards is cheaper for what you are doing and fires it s event only oncecan be that the memory operations calloc memcpy is slower in one systemthe quotation you brought up just claim that maven does more than ant so that it s not fair to compare the twoif all you need is a different layout for portrait and landscape there s an easier way to do thisyou might replace the max subquery with a rank max is usually slower only when cus_id is the pi rank might be worseprobably webm will load faster than standard mp4 but i am not so familiar with webm formatit is possible for swift to be faster than pure objective-c in things that you would traditionally use c or c++ for anywayeach line can do one of three things it can call a function which modifies it s argument start a while loops which is really more of a for-loop or assign a variableant is older and while it is still used in a number of projects it is rapidly losing ground to mavenoh and just incase you were thinking innodb is slower than myisam - the myisam implementation i tested was twice as slow in all countswhile 256-bit aes might sound less secure than 4096-bit rsa they might actually be quite similar from the offered protectionmore over it seems that get requests are more lightweight than post under high loadthe compiler or the jit is likely to convert the first case to the second anyway since multiplication is typically faster than divisionthe fact is not all routers support this scenario and always require port forwarding for udp traffic tcp traffic is easier because there is an on-going connection the router can maintain with the clientspidermonkey firefox is slower 50 of google-chrome max speed but the speed is consistentudp is simpler protocol than tcp and you can still simulate features of tcp using udpcalloc is faster than malloc + memset because calloc knows that the mmap d pages are pre-zeroed and memset forces the allocation of physical rambasically - httplib is lower level while urllib is high-leveli have no problem with methods declared inline in a header in some cases - a struct s constructor a simple method where inlining measurably makes it faster we have some math functions like this etceven if underlying implementation is not so different memcpy is much faster because it does not have to check what it s copying strncpy will stop when it ll copy the end of string character nullfor example on ati cards you ll want to manually vectorize code using float4 int4 data types or accept a nearly 4x performance penalty while nvidia works better with scalar data typesit might be that latency of various instructions is much better covered by the processors thanks to hyperthreading or cache behavior as sizes differi worked on it to make it more consistent between google-chrome and firefoxhex is easy octal is even easier to convert to and you dont need to do the backward thing for a quick check can reverse it by hand after you see the resultsince you don t do updates i think myisam would be better than innodb in this scenarioi use objective-c more than swiftbut then sorting by age grouping ak is more difficult i thinkfor the sake of completeness i would like to mention another less powerful algorithm with addition subtractionwhat i have thought of so far is that tcp is going to be more reliable than udp and in rmi corba we want network reliabilityi admit i only skimmed the rfc link but it looks like more than one spaces can be used as a delimiter so you might want to change those to +the latter doesn t do any dynamic memory allocator and is more than 10 times faster than std to_string on boost karma benchmarksuse a radix tree wiki or trie wiki if you are concerned about performance.the radix tree is more memory efficient compared to a triei cannot tell if this happens in ie or edge also because it never happen to me with them but i m using them rarely because i m more accustomed with google-chrome and firefox s web developer tools - source console etcthe consensus seems to be that corona is easier to use but that cocos2d-x has the advantages that come from being open source easy to customize merge with other code community etchowever even this version is about 2-3 times faster than using sin and cos on every iterationall in all jackson is considered to be faster but i ve also read that gson gives better performance when working with large objectsgood options are llvm libc++ static library fewer features more compatible with clang and gnu stl static library more features i had an issue that required me to turn the clang optimizer to -oz to prevent a segfaultinstead you can support more than the jks and try the default keystore type and if it fails try the #pkcs12while udp has less network overhead than tcp it generally relies on you the developer to come up with your own mechanisms for flow control fragmentation handling lost packets etc.asymptotic analysis reveals order of growth of heapsort in the worst case is big-o n logn which is better than quicksort s big-o n 2 as a worst casealso changing your imagemagick install from a 16bit one to a 8bit may improve speed as i belive that is one reason graphicsmagick is fasterby the way the code with show hide is also more readableafter inspecting the test in ie 8 9 and seeing its results look like those of firefox i think there s an explanation for the google-chrome results i m pretty sure google-chrome webkit has a better optimization in the first version of the test especially the parseint part which gives a better result for parseint therequicksort is not better than mergesortif you want to batch and parfor at the same time open one less worker with matlabpool than you otherwise wouldwhat you try to achieve is certainly possible with xquery or with xslt which is more convenient for transforming xml trees especially for multiple transform passesas for whether to use xslt or xquery the proof is in the pudding xslt is better at transforms and xquery is better at queriesbut settimeout would be better than setinterval because with setinterval if your previous ajax request is not complete and you start another request there will have multiple requests which would sooner be problematici assume that is parsed correctly because the two operators have different precedences meaning that associativity does not come into play and that your grammar correctly implements precedence although you should note that is a more standard example for showing that multiplication has higher precedence than addition since simple left-to-right parsing of gives the same result as your parseri just recently switched databases to postgresql which has given me a slew of problems although i must admit i like it a lot better than mysqlfor that purpose i want to transform the simulink model into a c version and launch it from a matlab script so that the process would be much faster than opening simulink environmentone thing to note is the soak time you have for your application - if it is big then you might have to provision for more machines with ram and diski know that teamcity has a way of achieving this but i think that jenkins is more constrictivefirstly multiplication and division is actually quicker in some circumstanceshere the for-loop header takes actually more time than loops body thus profiling results could be distorted.in kohana for example also codeigniter but kohana is more flexible you can build internal requests withi managed to use andlinux + wine to get this working but honestly i think the vmware virtual pc virtualbox route is simpleri m sure there are other holes like that too - but the code above will work on any system which supports paging and where disk access is much more expensive than ram accessi personally use codeigniter which probably falls in to the heavy framework category but is at least much lighter than cakephp and lighter than zend too i thinkin a native application i would use udp for the most data player position ... because it s way faster than tcp and it s uncritical when it is lostthese are situations where udp is good but in most other situations tcp is betterand also does anyone know why is firefox so much slower than google-chrome in 3d renderingfiltering is a lot less expensive than sortingbe the result of form data probably url_encoded and use the correct request method get is perfectly correct but coming from an html from post is much more commoni built a site and the problem is google-chrome display font-size 1px bigger than firefoxupdate3 now it works here which means that i couldn t fully reproduce my bug to show it to you but in general the problem is that the height of 5x5 table in google-chrome is less from firefox on 22px which is 22px gap between table container and a table itselfbefore we move on i just wanted to mention that spring oauth2 already provides an implementation for the above interface meaning that we could make our life a lot easier by actually extends the only implementation of the above interface clientdetails which is org.springframework.security.oauth2.provider.client.baseclientdetails rather than implements it from the beginning leverage all that can be done from baseclientdetails and add our own custom fields hence the myclientdetails looks as follow thena for-loop would be more compact but a while loops is perhaps simpler if you aren t used to python s loopshowever there is a desktop application framework called griffon that uses the same language as grails groovy which should be easier than using swing or swtpypy compiled with jit is almost always faster than cpython frequently by a large marginit is said that if you have a mostly read based application you should use myisam as it is better than innodbfor example the patricia trie or the radix tree that is far more space efficient than an hash table for strings but of course being a tree lookup computational complexity is o log n and building it is o n log nwhy simd for-loop only 14 faster than foreach loopsmousedown mouseup is indeed the only way you can get notified of middle button interaction so detecting a down-then-up event without intervening mouseout event is more or less the best you can dotcp is certainly going to be more reliable than udp since udp doesn t guarantee packet delivery which is probably why you application is hanging on the receivein your example fn is attempting to call call but it s not specifying the context which typically defaults to the window object but in this case it just makes it undefined which triggers a weird error in google-chrome as you discovered but firefox is clearer about the problemand the results is that foreach loops is 5-6 times faster than the for-loopmodulo is more mathematical if you like while the remainder in the c-family is consistent with the common integer division satisfying and this is adopted from old fortranant pre-dates more modern tools like maven and gradle that have this feature baked infirefox on nexus 7 is a bit better at producing reasonable sample rate readings but the updating of the display is even more sluggish than google-chromenote that if you have json and rest then retrofit is going to be better than pure okhttplxml -- 100x better than elementtreelxml is significantly more powerful and robust than beautifulsoup in my experienced opinionmy thought is javascript show hide option is better for usability and the customers journey especially on mobilesusing getter or setter function is bettermany current processors chips incorporate more than one cpu and a cpu may itself be able to interleave a couple of threadswhile function calls can be a little worse than inline code for very simple operations repeated inlining of non-trivial functions can create arbitrarily worse code bloaticomparable is an interface that defines that two instances of the implementing class can be seen as greater than less than or equals to one anothera very quick test suggests that the difference is probably negligible in google-chrome but that firefox is substantially quicker with indexof for short strings at leasti understand that laravel is what s hot right now but i ve never played with it and am not sure if learning laravel is more time-effective vs using codeigniter which i know pretty well but just doesn t excite me any morea property is nothing more than a getter and setter functionyou may want to use junit in the part of unit testing but testng is more than a unite testing frameworkyou might want to look at one of these options if you re running in a vm since xfce is slightly lighter weight than gnome although not all that much lighter these daysthe first possible issue i can think of is that because udp doesn t have the overhead inherent in the transmission control that tcp does udp has higher data bandwidth and lower latencygit and mercurial both handle this more easily that you re imagining and easier than say svn or cvs doa quick googling says that apc is 5 times faster than memcachedthen you should achive them with a counter and maybe a for-loop is better then while loopsi was going to use reliable udp but tcp seems more appropriatehowever on smaller int sizes quicksort gets slower and mergesort gets fasterntfs filesystems actually supports longer names 32k but there is no easy way to allow long names for programsit s not necessarily true that the matlab fixed-point arithmetic provides less precision it can be used to provide more precision than ieee floating-point typesneither one of get and post is inherently more secure than the other just like neither one of fax and phone is more secure than the otheri ve copied a file over to a ram disk but i get an error message that doesn t make sense as the path is actually shorter than on the physical disk and is certainly less than 260 charactersi found jackson better than gson performance project activity better docs ...fakeiteasy seems to have an overall nicer syntax than moq like the strongly-typed way the former deals with passing parameters to a constructor of a faked classre-order your script so the subtraction test is timed first then the addition and suddenly addition becomes the faster operation againas you see md2 is also much much shower than the other hash Ã¢ the same outcome as with the php code but md5 is much faster than sha-1 and overall it took less time in delphi to do the same on the same machine as phpit seems ironpython is just slower than cpython for reading text filesi realize this is an older post but we just ran into the same issue and resolved it by setting the z-index of the bubble pop-up to something higher than the dialog windowwhen you add more than 5 uiviewcontroller objects to your uitabbarcontroller ios will automatically create the more button for youyes division is usually much slower than multiplicationsince you already learned c++ you should use something more serious such as tbb or ppli ve tested the sample on firefox and it s a bit slower than google-chrome but usabledata is not an accessor for properties it s both more and less than thatthe authors of redmine are trying to create a better trac than tracthe latter where is called without arguments does indeed have a lesser precedence than the properties accessor - so that your expression evaluates as new number.tostringalso sml has stricter precedence rules than haskellgrails upgrade if this grails versioning is newer than the versioning youryou could try running it in pypy - for some cases it can be significantly faster than cpythonin inheritance the father should not access the methods of the children it is better to inherit and implement new methods that have nothing to do with the parent in the child classthe difference between the two boils down to the syntax with which objects are instantiated - classical inherited uses the more familiar constructor functions and new operator which hide the inherent prototypal nature of javascript s object creation and inherited propertiesbad buffering can also be a result of a slow computer because statistics show that google-chrome is better for a normal-fast computer and firefox works best on slow computersmy question is how can i execute more than 1 prepare statementfor the stand of file operations writing to memory ram is always faster than writing to the file on the disk directlythe pypy jit for python is also much more complex than cpython but also typically much faster Ã¢ increased complexity is a fairly typical cost for speed. the four levels of disassembly for julia code give you access to the representation of a julia method implementation for particular argument types at different stages of the transformation from source code to machine codestill you cannot inherited from a as superclass cannot have a lower visibility than subclassingsrt is simpler than ass but lacks features so you may need to use the force_style option in the subtitle filterin the event that the quicksort starts to degenerate it uses heapsort which is o n log n worst-case but slightly slower than quicksort on average to guarantee o n log n worst-case runtimesdata structure to implement reverse functionality of a dictionary that is more than one key map to a common value using pythoni am guessing this is because modifying a double is a more complex operation than modifying an intif you want to accept a number rather than a digit and only a number strtol works much better than atoi as it allows you to check for failuresa for-loop is usually faster than a while loops and it is more difficult to build an endless loops than it is by using a while loopsbut as programs grow and structs deepen keeping track of what s been malloc d where and what s appropriate to free gets harder and harderplus you have to make your tables myisam which is generally less suitable than innodbmyisam delivers better read performance compared to innodb at the cost of being less acid compliantunion forces a distinct to occur and there s little slower than distincthaving used it myself in my opinion it s also far nicer than swing in its api more like swt in that respect looks far nicer by default and far more flexible in what it allows you to doi m concerned this is going to get worse as we put more tests into the specflow projectin mobile platforms except larger screens as on tablet the affix would be disabled entirely and the page would only rely on the responsiveness of the gridanyway you will have a huge performance loss due to the fact that your disk is way slower than your ramfinally sha1 hash are safer than md5 i tell you that because you used the md5 tag in your postrunning pear -v gives me versioning 1.7.2 when i run pear upgrade pear it says my versioning is newer than the current noe which is 1.9.0 if ran pear upgrade -f pear to force an upgrade it downloads the files and installs successfully but i still have versioning 1.7.2 and cannot install phpunitprism is more of a modularity framework and caliburn is more of a mvvm framework i know both have overlapping features but it would be great to take best features from two frameworks when they are combinedmaybe a repeater is better but you will be fine with a gridview if you are familiar with itie edge s loading time is longer than google-chrome and firefoxalso if you can do the above you can probably just as easily turn your code into a for-loop which seems more appropriate given your desire to a break out of loops b use the operator to cause side effectsbut if you want some header functions in header column like sorting or filtering that is more complicated and you have to implement by your ownudp is great if you plan to have your client for the game account for missing information by using approximation most fps games do this as well as just about any game that requires very quick reflexes where tcp ip is simpler will greatly reduce errors in transmission and be more prone to lagwhy is quicksort better than mergesortas far as efficiency rsa is going to be orders of magnitudes slower than aes so the trade-off you make is that you give up simplicity you give up the simplicity of using aes in favor of some rsa chunking in return for poor performance you get the slower performance of rsa.i made a docker image to use it with my builds of a project in wercker i did this because i thought having the require packages already installed in the environments is better than installing them in each build of my projectalternate way is to use awt - which is an older and worse technology than swing and in that case you can t use flowlayout - it puts all the components into one rowwhy the access modifiers for the getter setter is more restrictive has in my opinion something to do with easier implements interfaces which always have implicitly public propertiesdivision is one of a number of operations which as far as computational complexity theory is concerned are no more expensive than multiplicationjboss has a larger community than glassfishalso nginx uses a lot less memory than apachehope you get the more clarification by this postyou can verify with a simple objdump symbols objfile.obj that the length of decorated symbols by using typedef s is incredibly longer than their similar counterparts split into struct s microsoft compilers have historically used a proprietary name mangling schemeapache is more popular and has more features nginx is smaller and faster and has less featuresinnodb was faster when data was present already and generally performed better except for hdd-space - myisam is smaller on diski now think the combination of emacs and vim is better than either alternativeor generally speaking is it possible to add the same children to more than one parentpush log files to a central location ftp is faster than smb the windows ftp command can be automated with -s scriptfilein short as an authentication protocol kerberos is far more secure out of the box is de-centralized and will put less load on your directory authentication servers than ldap willas an example my android tablet s stock video player app has a feature that allows it to be less than full screensin practical programming languages the distinction between the two is a bit blurred but is important to know that the c java for-loop is closer to a theoretical while loops while the pascal for behaves more like the theoretical for-loopi still have to do more testing with the multiplication and division but other than that it seems to be working wellit is similar to incron however config uses a simpler to read ini file instead of a plain text filefirefox s default textbox includes more padding than ie google-chromealso google-chrome s map function is up to 2x slower than firefox on my machinehe concludes that nunit wins for unit testing but mstest has much better abilities for integration based testing and team testing with team systemif you plan for long term i don t see more options than swt or swing for gui development in javaare you using the jquery ui accordian or using the jquery accordian which is more or less a series of show and hide which is used more commonly i would thinkit runs on a number of platforms and supports more than just elf files i believe it also supports coff and a few othersas for the last question floating point arithmetic particularly double precision is much more complex than int arithmetic so on a reasonably modern pipelined processor each instruction will take longer to executephantomjs achieves a better accuracy than firefox slightly lower than google-chrome but in around half the time of firefoxi m doing a project at university which i decided to do in javafx as it is more stylish than swing but i m having difficulty to find an alternative to the filledoval library for the canvas awt as i can t use the canvas awt in javafxjava tends to be much more verbose than swift so i doubt what i m asking is too broad it is more likely that i don t know how to use the objective-c messagecomposer object because the documentation that i linked to above is unclear with regard to usage in swifti am using a for-loop which iterates i time and every time it is checked whether the ith number of the arrays is greater than 1 or noti have just spent a few days playing around with web2py and really like it and i am wondering if django offers something more that i am missing out onthe while loops is essentially the same thing implemented differently but in this situation the for-loop looks cleaner and easier to followi noticed that when i flip my phone from portrait to landscape everything gets biggerthe decision on yours the tcp protocol used for connection oriented network that is more secure than udplooks like postgresql is a little more compliant than mysql so try this insteador you can add a pop-up dialog which is more customizableit might seem unintuitive but it has a lower precedence than multiplication addition and modulo operationsi got it to work by using a child process from pexpect which is much more flexible than telnetlibalso i am not sure why everyone is suggesting onblur isn t onchange is better for validation purposeconsider taking a look at splinter which is a simpler webdriver api than seleniumhowever since around 2006 think ie7+ firefox 2+ google-chrome etc browsers no longer provide the full file path they only provide the file s name without directory informationbut if you are allowed to store whole tree into memory you can use lxml.html which is faster than beautifulsoupwhy with this grammar multiplication have higher precedence than additionthis is an enormous amount of extra work and explains why calloc is faster than malloc and memsetfirst let me say that i m more experienced with verilog but have been plugging away with vhdl for awhile trying to fix this issuebut innodb has improved dramatically in the past few years and in most cases today innodb performs faster than myisamoften google-chrome is understanding more thing then it should and firefox is bringing you the reality back in your face ehehfor fat filesystems that s less complicated but still you ll have to study the fs for a whilesse has precision more comparable to gpu you need float4 or float8 in your kernel such that compiler can produce sse avx which has closer precision to gpuin ... for-loop it s consider better practice to loops trough it with a regular forjust to goof off a version using boost string_ref is much faster still due the reduced allocatori did test it a while ago with the result that a for-loop is much faster than a foreach loopsit s not the first time that the plugin for firefox works better for me than the one for google-chromethis actually happens more commonly with tcp connections but i see no reason udp can t have this problem as wellwhere the parent can have one or more children many but the child can exist without a parent but it can never have more than one parent zero or oneanother thing that bothers me is why in nhibernate always it is being used ilist and not ienumerable which has less functionalityis there a way to do this in an easier fashion with httplib or urlliba realloc can occur significantly faster than a malloc memcpy and freemy stackoverflow search indicates that it can be turned off by setting setopt nonomatch then zsh behaves more like bash glob the pattern and pass it to the program if no match is foundnginx or lighttpd in fastcgi mode use less ram than apache and they can handle more concurrent connectionsa much better solution is to be sure that the code that needs a reference to the active and displayed itemsform instance has one either directly through constructor or setter getter method calls or better indirectly through a m-v-c program structuresay your first versioning of application had the databasehelper extending sqliteopenhelper with constructor passing versioning as 1 and then you provided an upgrade application with the new source code having versioning passed as 2 then automatically when the databasehelper is constructed platform triggers onupgrade by seeing the file already exists but the versioning is lower than the current versioning which you have passedtrac s issue tracking is little better than bugzilla s...i know a lot of folks love trac but i find it very inflexiblei have used this pattern with apache before and nginx seems more capable in most respects so i m sure this must be possibleyou can use isnull also in place of coalesce as isnull is comparatively faster than coalescethere are many more out there magento oscommerce zen etc.so then i think to go with that approach i would end up with a for-loop and loads of add calls but surely that is even worse than the arrays copy isn t itaddclass removeclass is far more efficient since it contains all the styling externally where it s easy to add remove that styling to the element when neededthe while loops runs 3000 times faster than the for-loopi used soundcloud api and sdk and it is better than the grooveshark api which till now i don t know how to embed songs and use my own player anyways soundcloud is good just try it goodluckhowever if you re making a pop-up dialog it s better to detect if the user is not on a mobile device then use the css position fixedthere appears to be a common mis-conception that post is more secure than get simply because it seems more obvious how to get a browser to manipulate the post variablehave you considered changing to innodb - it has much better concurrency support and in some contexts will run faster than myisamthis is to learn something new but also because it seems like implementing maven within ant is less of a standard than is just pure maven.i have directory with many folder each mail folder has more folder intohowever quicksort s worst-case performance is significantly worse than heapsort s isfor-loop is faster then foreach and foreach is faster then for in loopsif it s a very deep inner loops however and you need to squeak out every last nanosecond my experience has been that with release build code a for-loop indexing over an arrays is measurably faster than a foreach loops with a slightly smaller performance loss for using delegates with linq vstwo words of warning against wxpython it is not possible to install it via the popular fink package manager on mac os x currently which makes it far less portable than pyqt and tkinterand also apple does might not confidently announce that swift is more faster than objective-c in all the casesthe for-loop question is more of someone building a loops with exit criterion inside the actual loopsas far as i know the division is more complex and slower than other operations like addition so is my code incorrect thenthat said modifier keys are important in vim even if less than in emacsbecause int comparisons are more efficient and simpler than unicode chars comparisonspbkdf2 also uses a more complex construction in particular hmac over direct digest to make recovering the input password from an output value more difficulti think udp will perform better than tcp gcdasyncsocket in your case video transferif the code doesn t run on php 5.2+ then you can t use a current phpunit versioning which is definitely more of a concern and my first general recommendation is to find any issues an php 5 upgrade might bringa pipe write read is atomic up to pipe_buf chars and an int is way less than that so the reads are predictableit is likely that you could do an sha hash of 100kb in well less than 10 second though and though sha-1 is still theoretically flawed it is of higher strength than md5png achieves better compression than gif because it applies a pre-filtering step before the lossless compression deflate roughly equivalent to lzw. see wikipedia s explanation of png filteringcharles has a much better ui than fiddlermemset behaves like strcpy but the difference is that memcpy copied the data as it is byte but strcpy copies the formatted string as well so takes more time than memcpy to executehowever my experience is that configuring it in apache is significantly more complex than configuring it in nginx and even with worker it still is not quite as efficient with nginxfor radio button and checkbox it is better to use change events using .on event handler attachmentmyisam is more prone to locking problems than innodb i believelxml also has more features and offers beautifulsoup toohaving said that web2py has a lower initial learning curve than django as it was specifically designed as a learning toolsince i am more familiar with jackson here are some aspects where i think jackson has more complete support than gson apologies if i miss a gson featuresettimeout is better than setinterval here because setinterval will start at every 5 secs but settimeout will start once each time your job is done and wait for 5 seconds which will make your script adaptive to server response timingsalso using a separate httpwebrequest or webclient gives you more control over proxies handling redirection authentication etcto explain why a for-loop is faster than a for in loops is basically understand the underlying data structures used to store the data in memorymyisam generally performs faster because it lacks certain functions innodb has such as rollback... but it has only table lockingdivision may be heavier than multiplication but a commenter pointed out that reciprocals are just as fast as multiplication on modern cpus in which case this isn t correct for your case so if you do have 1 x appearing somewhere inside a loop and more than once you can assist by caching the result inside the loop and then using yin practice the fifo queue approach is often faster than using a priority queue dijkstra as mentioned in this answer are there faster algorithms than dijkstraso far this works how i wanted on google-chrome but it doesnt look the same when on firefox and looks even worse on ie 10the reason i ask is i am running proficy ifix 5.0 and when i run aero it adds annoying scrollbars to everything as the titlebar of the window is bigger than it normally isi d have one project team responsible for localization which may well involve more than just translation - different countries have different legal requirements currencies payment providers etc. and one team for improving the code baseyou can also supply a timeout for these requests meaning any requests that run longer than the timeout window will be terminate after allin theory insertion sort and quicksort are worse than heapsorti guess that the maven version contains much more than the ant versionthe reason for using lxml for such a task is that it cleans html files better than beautifulsoup doon the other hand relaxing from private to protected public is less traumatic because you don t have to worry about previous access to that property from without that classmouseover rather than on mousedown makes it easier to catch movingi have been working with linear parsers lately and noticed the performance in google-chrome v37 was much slower than in firefox v30it uses swap space on disk to allow for processes much larger than ramedit using an enhanced for-loop is a lot better than using arrayswe are having an issue with uploading ipa files to our mdm solution when there is more than one info.plist present in the ipa filegenerally when passing lots of data to the server to be processed or stored using post is a good idea since get has a lower limit than that of postyou don t need to write any new members - it s just a marker interface - but there are other methods you can add to give more control over serializable and deserializationinnodb is a safer acid compliant engine with some integrity features that myisam lacksso basically when box2d is more about how objects will behave themselves during application running the scene2d is more about how you write your code before application runningpuremvc is more invasive than cairngorm meaning that your code is heavily dependent on the framework you have to subclass implement the framework classes interfaces but that doesn t mean that cairngorm isn tswift seems to be less dynamic than objective-c in these stuffsif not multiple fgets calls will still be faster than multiple fgetc calls because the overhead of the latter will be greateraccording to this benchmark nginx is a little bit better than lighttpd for serving bigger static contents so nginx would be a good choice for static flv video contentsyou might want to use r markdown and knitr which is easier than using latex and r as also zhaoy suggestedthat being said i think svn is better in every other respect and you probably shouldn t start a new project with cvsit s just a matter of preferences and browser implementation eg firefox works faster with brackets while google-chrome works faster with the dotssince multiplication is more expensive than addition you want to let the machine paralleliz it as much as possible so saving your stalls for the addition means you spend less time waiting in the addition loop than you would in the multiplication loopthe problem is that the dropbox folder is no longer in my user directory so r cannot find the directory.just a tip but from personal experience i ve found that freebsd works much better on low-end hardware than a modern linux distro doessame passenger + mri 2.3.0 is 3 times faster than puma + jruby on same rack appfrom testing this in google-chrome and safari it seems google-chrome is more forgiving in that it parses the style string and puts the right style in place for you but safari does notusually i find swift s method naming to be cleaner than objective-c s but init methods can be an exceptionultimately if the structure of a loops is more expensive than the operations within loops and the tiny performance overhead from loops is actually significant then you might have a case for-loop unrollingin opera it goes little bit lower than in firefoxas others have stated the python for-loop is more like a a traditional foreach loops in the sense that it iterates over a collection of items without checking a conditionscenario where udp is better than tcptcp - more reliable than udp but this comes with some overhead there is a distinct connection a better match for games which require less frequent data transmission such as turn based games as is your gamethe only problem is when i hover the parent the children is blinking more like fading out and then fading in again the jquery is doing this but i dont know to fix thisedit i was hoping not to turn this into another flame war but i guess that s inevitable so i will just say that i have considerably more experience with autotools and no desire to learn cmake or scons or imake or ant although i seem pretty much stuck with the latter when working with java these days or whatever new tool is invented next year or the year afteris there a better way than show hide that would be easier on the memory performancethe libsvm results seems much more stable but scikit-learn results have some drastic fluctuationthe size of maven jar is bigger then ant jar i don t know why help me pleasethis overlap is somewhat forced when the draggable is bigger than the droppablewhy is this slower than memcpy or memmovewhen i generate rsa key pairs by openssl it seems like private key private exponent is always less than public key modulowhile ruby and python are both interpreted-language and operation-for-operation slower than compiled-language the reality is in executing an application only a small portion of cpu time is spent in your code and the majority is spent into the built-in libraries you call into which are often native implementations and thus are as fast as compiled codewhen the user wants to check for an upgrade download the version-file if the currently installed versioning is smaller than the most recent one then download the apk and install itmoreover tcp has more processing overhead than udpeventually i went back to post because we needed the fix quick but it has been bugging me because semantically a get is more correct in this casepostgresql is worth learning and much more advanced than mysqlan earlier than versioning clause in conflicts prevents dpkg from upgrading or installing the package which declares such a conflict until the upgrade or removal of the conflicted-with package has been completed which is a strong restrictionthat is pointless if you are expecting more than one output from your resultset you need something more than a jtextfield maybe a jtablespecifically it makes it possible to write objective-c code that plays nicely with swift which is more strongly typed than objective-ci want to do this in tcsh i know bash is better to use but i have to use tcshlast version on ibm s website is from 2008 redhat enterprise 5.2 and fedora 9 - has anyone an experience running this ibm sdk on fedora 13 or at least any version higher than stated fedora 9 and is linux available of sufficient testingthe reason heapsort is slower in practice than quicksort is due to the better locality of reference in quicksort where data elements are within relatively close storage locationsi guess the point that the article is trying to make here is that a facade is easier to implement when you already have this command-pattern in placeof course as a general rule it s highly recommended to wrap your ajax calls in a unified method that concatenates the csrf token to the request be it get or post although post is safer and much more correct from architectural perspective so when you make ajax calls you focus on the business input values only and don t need to worry about csrffor example exposing the students property in swift means different places can all modify it and the delegate would be notified also it s not clear to the coder that setting students property would trigger a delegate notification for averagescore whereas having a dedicate method in objective-c makes it more clearthis may make for various race conditions and may necessitate using events which give you earlier notification than mouseup mousedown mouseenter mouseleave mouseover mouseoutstderr is better than stdout for errors for a couple of reasonsuu-parsinglib is definitely worth the time to explore but i would suggest that getting familiar with parsec first is the better course for these reasonsalso it seems jackson lib has better performance than other packages such as gson which i haven t tried personallybased on this answer here s how you can simulate a double click using mousedown mouseup mouseup is probably better since click is fired after the user lifts their mouse and not when they first press ithowever it is not possible to rotate in the current situation since both children end up in becoming lesser than a parentstruct foo is easier to parse then typedef d foo as the name-lookup is simplerby promoting the mating of more similar parent the children are less likely to be much worse than the parent because the parent just were compatiblejackson is more suitable if you have a complex deep json tree because gson creates a lot of temporary objects which leads to stop the world gcsif your primary user base is using ie6 7 or even 8 the page speed is going to be significantly slower than firefox or google-chromeprotected functions maintain a weaker invariant than the public one before and after each callit s just a supposition but try recreating the form widget onsuccess or even hide the form onsubmit actually onclick is better and show another form to the useri am not certain if xcopy or robocopy is the best solution for this but coming from server administration i am more familiar with robocopynetworkx is much easier to deal with and usually performance is good enough but for large brute force algorithms like this igraph will probably be at least an order of magnitude fasterpostgresql is much better suited for data warehousing compared to mysqledit as gregs points out in the comments you cannot be sure that the private exponent of the key you want to encrypt is smaller than the modulo of the key you want to use to encrypt withif vim seems too much by the moment i think that kate is better than geditif your curl is older than that versioning then you need to upgradeyou can do this either in a push or pull based fashion pull is probably simpler just poll for changesin this default implementation the jks format is better suited for a single keystore that is to handle both trusted entries and key entries in the same containermongodb is fun to toy with and i ve built a few apps using it myself for that reason but it s almost never a better choice than postgresql mysql sql server etcmodern operating systems usually get in the way especially if the file is larger than ram you will end up swapping code since the system will treat your already stored on disk data as swappablei did this very successfully with scipy.ndimage in the floating-point domain way better results than integer image processing like thistype book why do we need anything more than http get put posti m using facebox and fancybox both smaller than thickboxsvn was supposed to be better than cvs but in some areas that didn t work wellmanytoone if you plan to have a tree as a parent can have more than one childrenvba is in fact a superset of vb6 not a subset -- vba has more functionality built in than vb6 itselfwhen you use post data is a alot more safer than get and you can send large noswift in that case would not be safer but less safe than objective-cif in-order processing is required a much better design would be to use another message processing library that supports a pull model which i think would fit your scenario much better than rebus push modelthat suggests another aspect where a declared properties is more than a pair of accessor methods that is more static type checking although it is undesirable hereso if i modify the nsurl path with a new image because nsdata bytes is already greater than 0 i don t make the additional call to fetch the new imagefor example post request are considered more secure than get request as creating a post request is relatively harder than creating a get requestother databases where it was about the same for a transactional database as oracle sql server where were better than mysql postgresql etcthere is a lot of already done frameworks like flask and django that gives you more power easilybtw when you use settimeout or setinterval it is better to pass it an actual function instead of a string with the source code for a functioni was told that postgresql is a better choice than mysql for displaying hierarchical data so i installed postgresql and i m ready to gowhen you analyze a program with valgrind memcheck it requires more than twice as much memory than the program would do by itselfin any case vorbis clearly has the most coverage google-chrome has more of the market than safari now opera is about half of safari and obviously firefox is huge and it doesn t really have the strong opposition that theora hasi would recommend strtol which provides better error handling than atoi or sscanffor multiplication division it s harder ie more instructionsthe difference is large enough that the constant factor in front of the n log n term in quicksort is lower than the constant factor in front of the n log n term in heapsort which is one reason why quicksort is much faster than heapsortif puma or unicorn makes this easier or more robust i d love to hear thatin google-chrome it is appearing higher than the original in firefoxscheme is intentionally more compact than common lisp and you ll find that you can learn the language very quicklyyou can write a simple test script to verify this but using test unit rspec or minitest is even bettermyisam is slightly faster than innodb and implements the fulltext index which is quite useful for integrating search capabilitiesis html better than odf as a templating markup for generating emails letters documentation for rtf pdfthis is of course subjective but i think learning common lisp or standard scheme is generally more useful just for the simple fact that you then will not be limited to one compilerwhen browsing news sites with firefox it will display a rss icon in the addressbar if the site has rss feed which makes it easier to discover feedcypher seems much more clear to me than gremlin and in general it seems that the guys in neo4j are going with cypheri have done it by using ogg files instead of using mp3 files in my application ogg files consumes less amount of memoryinstead of using a uitableview in this instance perhaps you might consider using a uicollectionview - they are built for something like you describe more than a uitableviewthere exist processors on which using an integer vector load movdqa to load data that is consumed by a floating-point operation requires more time than using a floating-point load to get data for a floating-point operation and vice-versaim going to have a second for-loop that makes more arrays and names these arrays as the strings from my previous arraysother than the fact that get has one character less than post i doubt there is any performance differencethis means that once you can t scale vertically any more by adding ram disk speed etc to a single server you will have to be careful about how you choose to shardif you want to get data from simple list thnn foreach loops is good to use but if you want to data from exact position or to store from id than for-loop is betteri faced with the same problem in firefox google-chrome limit is greater as i seeoften especially when using mink to test web applications you will find that behat goes faster than your web application can keep up - it will try and click links or perform actions before the page has had chance to load and therefore result in a failing test that would have otherwise passedconsider umbraco its architecture is definitely better than dotnetnuke sit is relatively unlikely that they ve got anything faster than memmove memcpy availablealternatively you could initialize i outside of the for-loop but then it s scoped larger than loops itselfstrncpy is not safer than strcpy it just trades one type of bugs with anothermy question is similar the same page in my pc renders fine firefox google-chrome but the same one on a server rendered smaller by firefox google-chrome okeach iteration in quicksort is a lot simpler than heapsortusing declarative effects is better than thunks for testability but the saga pattern can be implemented on top of imperative or declarative codelemmatization implies a broader scope of fuzzy word matching that isthat s basically possible but it would take hours as hard disk access is so much slower than accessing ram cachesfor example pyqt is already available for python 3 as well as 2 and you can use postgresql a splendid open-source sql database engine much more standard than mysql via py-postgresqlto save both subprocess s stdout and stderr is more complex because you should consume both streams concurrently to avoid a deadlocki m seeing a strange issue on windows in google-chrome the framerate is almost 2 times lower than in firefox on mac google-chrome and firefox have similar frameratesalso you might take the time to compare postgresql and see if there is something about it that meets your needs as well or better than mysqlshort answer if you can tolerance with any packet loss udp is better otherwise tcpswift is stricter about runtime type correctness than objective-c so duck typing alone is not enoughxrange will give you an iterable object that won t use memory as you iterate a for-loop is cleaner than a while loops + counter if you ask meusing dedicated methods for getting and setting properties is also more clear in inheritedusually division is a lot more expensive than multiplication but a smart compiler will often convert division by a compile-time constant to a multiplication anywaythe plugin defaults to requiring a post request to logout but using the config setting you reference you can make your application more convenient to use but less secure by allowing get or post requestsif the currently installed versioning is older than the updated versioning then you could display a please visit the store to upgrade type message instead of the main app uiso a question for those who know better is datamapper newer than activerecordthe syntax for nginx configuration is different but more clean than apachethis allows me to keep all of my models from having to inherited from a base class that has a messages properties and gives me more flexibilitypost is better but if you want it to be truly restful you should ensure that the uri uniquely identifies the resource and use putnote that udp packets bigger than the mtu s at every hope between your hosts will be split by ipa stateful service is typically harder to develop and scale than stateless servicesthe code in the setter is far more interesting than the getter should it not take precedence and be defined firstbut since division is pretty expensive i think that this is even worse than 2 multiplicationthat among other things is why tcp is considered more reliable but slower than udpmy linq query return type would be more adequat with ienumerable int it works when i do this but i was wondering if i could mix in the same array list queries that would have handle strings double or whatsoever.jemalloc and tcmalloc with some setting changes can be more aggressive than glibc to release memory to the os - but again it depends on the allocation patternsit is optimized for downloading larger files where the setup overhead is amortized over the size and number of downloads http is very light-weight you can communicate to an http server using telnet much easier than ftp especially before passive ftp and is designed around html -- the concept that in the course of your navigation you will be visiting many different servers and grabbing only a couple of files at a time from eachpersonally i m using emacs right now which i find easier than vim for searching and navigating the code but everyone has their tastethe strange thing is that when streaming is done via rtsp unicast rtcp generates both sender reports and receiver reports but when streaming is done via rtp multicast only sender reports are generatedtldr in firefox filter is slightly faster in google-chrome that s the oppositeif you want the users to select only one option perhaps a dropdown or radio button list is more suitable rather than checkboxi know django forms uses post but in this instance i feel that get is more appropriate which means i don t have to use django forms but does that mean i also don t have to validate the dataminitest or rspec is more or less global to your test suite in that all of your specs will be written using that same frameworkfltk is really a full-blown gui toolkit though rather small as gui toolkits go that has a built-in glut emulation that at least the last time i played with it seemed considerably better implemented than glut itselfbut if the use of mongodb is a must then i suggest that you reconsider using django in the first place because mongodb has a better integration with flask through mongoenginedon t use a for-loop when a while loops is more appropriatehowever ico files if stored properly are not significantly larger than png files because since windows vista ico files can store pngif you are using anaconda conda is a better alternative to virtualenv as it manages conda packages which are not limited to just python packagesinnodb is harder to tune since it has more knobs but a properly tuned innodb system can often have higher throughput than myisam due to better locking and better i o patternsdivision and multiplication have higher precedence than addition so what this is actually doing isthe ansi standard function coalesce is simpler than using nvl and decode which should be obsoleted anywayturns out using onunload is behaving as documented in firefox but google-chrome is just smarter with it or something still investigating but i ll mark this question as answeredyou should see impala as sql on hdfs while hive is more sql on hadoopin other words serving static files from django will have worse performance than using apache or nginxalso mysql version starting from 5.5 - innodb performs faster than myisammaking the members private and providing getter and setter is no better than making them public in the first place okay it s a bitter better for debugging purposes but conceptually it s the samei guess rsa is older and dsa is newer4 some email providers might mark that email as spam however most spam checks are based on spf and dkim checks more than email existence checksalso note that using post is absolutely not more secure than get because the request parameters aren t immediately visible in urlbut unless you re using such excellent testing practices and patterns i d be suspicious of abstractions that have a single concrete example -- interfaces with just one implementation no less than abstract-class with just one concrete subclassthis is one of the few cases where a while loops can be clearer and simpler than a for-loopweb2py may be young but the mailing list has 2000 messages month which is similar to django and far more than turbogearsdue to that swt looks more native than awt swingexample the salt field might only allow a 64 characters while the generated salt might be longer therefore when you save the salt it gets trimmed which ultimately changes the hash passwordpersonally i d say yii might have the edge as it encourages convention more than codeigniter wouldif you re doing non-unit testing testng might be a better option than juniti need help in a vba macro that ll delete files in a directory that contains more than 2 _ and is older than 3 months old however there are some folder sub folder in the directory that must not be touched or modifiedsome people have said that for reads myisam is faster but recent improvements in innodb have either alleviated or eradicated this differenceam passing the word asdasdasd to the text area with the id source and triggering the click event.after that trying to check whether the result value which is wrapped under the newly created span tag or not.for that am checking whether its parent with the id result_box has more than one childrenin its stead you can use isotope - which does filtering a lot easier than masonryand that is for performance reasons assuming that a gethashcode implementation should always be much faster than an equals implementationfor this reason it seemed natural to me to initially load the file into memory and interpret it later at my leisure since reading from ram is supposed to be much faster than from diski m working in a spring mvc project and i want to use a template engine i originally choose apache velocity because a slideshare presentation that says it was two times faster than thymeleaf page 41 and since i m working with big tables i need to use a fast template engine does apache velocity supports html5 if not is there other template engine that supports html5 that is not thymeleafi don t know how safe could it be and how difficult is for the hacker to determinate the technique i use the thing is that the result has the same length as the hash and is harder to determinate a salt so if for any reason in the history hacker uses a rainbow table and catches a probable result it will be the wrongcurl commands seem to work as do some other post commands from older code but when i log out req.body all i get isi require a c c++ macro to trace the for-loop iterations in the existing source code and to print some message if loops is running more that 50 iterationscassini was much better than iis express but doesn t properly support the integrated pipeline...i suggest doing all of the scripting from within the vbscript file and avoiding the use of .cmd .bat files completely if you can as vbscript is much more readable and powerful though i prefer using the jscript language instead but that s just menew delete operator are usually invokes constructors destructors and they are a little bit slower than malloc freei ve noticed however that jruby is more sensitive to memory leaks than mrito me the path without x86 is also more visually appealing and indicates that it s a modern application - adapted for 64bit operation where necessarymaybe an interface that isolates the properties accessor is betterstick with post on any action that does more than get data avoid xss-issuesfrankly if you need to increment decrement a for-loop makes sense if you don t know the bounds and there is no real increment decrement a while loops makes more senseit s not true unit testing however it does run much faster than mysql or postgresqli would like to be able to let children have more than one parentmurmurhash has 64 and 128-bit versions so you can experiment between the two and it s faster than md5 largely owing to md5 being a cryptographic hash function whereas murmur doesn t have the added expense complexity of being cryptographically secure i m assuming that you re not concerned about anybody attempting to intentionally generate hash collisions or anything like thatnow - your i7 cpu have 4 cores + hyperthreading which results in more threads spawned for processing thus you can get more exceptions because for example 4 things can be processed at the same time when exception occursdevise is mostly used for authentication but cancan is better to deal with user privilegeshowever the isolation part of acid sounds more like consistency model in particular the sequential consistency modelprefer map filter and reduce to for loops in general but donÃ¢ t obsess over it sometimes a for-loop is betterwhile loops aren t normally used to iterate over arrays as for-loop syntax is less verbose and allows the sentinel variable i to fall out of scope while the for-loop syntax does notif you want to have all all shortest paths from all nodes to all other nodes you can just run dijkstra from each node or you can try bellman-ford which is bit faster but a little bit harder to graspi d have said that postgresql is more security aware than mysql supporting roles more authentication methods ... but that the database itself has generally a very limited impact on the security of an applicationcertainly tcp has more overhead than udpext4 is a reasonably mature modern filesystems while xfs is older but still quite reliableyou can have more than one get post etc per resources by defining different routesget is basically for just getting retrieving data a get should not have a body so aside from cookies the only place to pass info is in the url and urls are limited in length get is less secure compared to post because data sent is part of the urlto my knowledge and research so far - javascript s native for-loop is quicker than arrays map for iterating through the arraysif for some reason you want to use an implementation that does not give you a full parse tree then i would suggest parsing the resulting html using lxml a python wrapper of the c lib or html5lib pure python both of which can return an elementtree object and are much faster especially lxml and more forgiving of invalid html especially html5lib which acts more like real browsers in the real worldi m wondering if there s a way to effectively force a type on instance variables rather their setter and getter that s easier than manually defining themiterate over the primes already found which are less than the square-root of pxquery is more amenable to static analysis than xslt because it lacks the very dynamic template despatch mechanismi think you ll find that your team will like either trac or redmine more than bugzilla or mantisfor instance quicksort can outperform mergesort although mergesort is provably better than quicksort in the worst casesince you don t need animation and want to stay with loss-less compression you would get somewhat better compression with png instead of gif and png is patent-freeand postgresql has fewer experienced administrators than the big databases and mysql which i believe contributes to the reputationi had the idea to switch automatically between get and post for example if cookie set because get is more fast and cache able and post is more savetest code updated so you can see that both it works identically whether using varargs or not will fail if your home directory has less than 5 sub folderthese two are completely different logically speaking and you should choose only one of them to go further with note that swt is more customizable and tries to combine the best from awt and swing while swing is more limited and uses the platform s native widgetsfrom a hacker s point of view a get forgery is much easier than post forgery at the first you only post a link at the second you need to point to a malware website with hidden iframe and autosubmit forms but both of them fail if tokens are checkedi use tcpreplay to replay it on an interface but the problem is that the number of attempted packets in tcpreplay is different less with number of packets showing in wiresharkif you want to have content synchronized between all the microservices in your case the header and footer i d suggest zookeeper it s designed for distributed orchestration and has more of a push model - you d update the header in zookeeper and all of your services would receive that update almost instantlynote that at time of writing rouge has lesser language support compared to pygmentsoverall kohana is more flexible than codeigniter and a great base to build a web application and api on2 caf seems a little better than wav but not muchnote that a quadtree can be queried very quickly and efficiently but updates are a bit more costly that is if your items move a lot across your map this becomes more complicated to do with a good performanceyou can see if you look at the bottom and right hand edges of both google-chrome lines up perfectly but firefox seems further in both directions and i cannot work out why either in firebug or google-chrome dev toolssometimes a class attribute could have more than one getter or setter let s illustrate with a silly short exampleas we can see copying manually with memcpy is always slower than realloc because in this scenario malloc is guaranteed to allocate new memory and you re forced to copy the data in every allocation which shows us that realloc is indeed reusing the same address and enlarging the block size in some casesgenerally speaking innodb is slower than myisam as innodb is atomic while myisam is noti did this with for-loop too and while loops was clearly faster than for-loop againand a wiki for why postgresql is better than mysqli like that ini is more for config purposes but with todays interest in json it seems more logical for the config be designed with json in mindyou can use python ncurses it s a part of standard library on nix systems or you can use urwid that is a higher level library for creating console interfacesperformance swing components are generally slower and buggier than awt due to both the fact that they are pure java and to video issues on various platformsso latest codeigniter 2.0 is better than yii according to this benchmarksso even if your ram is much smaller than your disk you could assume you can read data that s already in ram 90 of the time or morepost is also more commonly used for partial updates as put generally implies sending a full new representation of the resourcehowever my tests have shown that on a 64bit system an anycpu prefer 32-bit application which i confirm runs 32-bit can allocate more memory than an x86 onei want to design a screen which contains some ten identical components each component contains textview and imageview .what s the better way to design itfirefox has even fewer as far as i know and opera has nonehere the content for the length item is this is a super duper long snippet because we need to see how labels behave when they more than barely extends onto multiple lines. the content for the power cycle item is have you tried turning it off and back on againi want to set my own time limit rather than use the browser s default i believe google-chrome s is much longer than firefox sbut goto is better than break when you have nested loops like thatthe client post scores and fetches highscore lists from the server and everything seemed to be working perfectly we had been testing it for a month with no problems and the code is really simple with not much more than a put getsince socks proxy is in theory nothing more than a ssl tunnel i thought i could give that property another trywell swing is richer in terms of out-of-the-box components than awta post request can include all the information that a get request does plus more which makes it seem like it should be able to do everything get can do plus moreif picasso doesn t satisfy you for any reason you can also try android-query which does much more than picasso it s not only for images but the same rules applyfinally i haven t done much with animation but i think you re entirely correct - d3.js provides more animation support than protovis especially in terms of animated transitionsthus i think firefox is perhaps more right but other developers at google-chrome think otherwiseadd is faster than mul but if you want to multiplying two general values mul is far faster than any loop iterating add operationswhile objective-c was good at dynamic type inspection swift is much better of you allow the compiler to do the type checking at compile timebluff charts get really weird when scaled to more than 800px flot has a very limited api and the tooltips on multi axis dont work plotkit and jquery visualize doesnt have tooltips and i couldnt find any good documentation on gpraphael my best shot was jqplot which was meeting all my needs until i tried to print it on paper they print unalignedthe reflective approach using an existing class like beanutils is less coding but probably an order of magnitude slower than calling getter and setter in a simple wayi mean it came as a surprise to me that drupal is so much faster than wordpress and joomlatripledes is generally not recommended because aes gives better security more efficiently you might like to see some comparative timings of block ciphers that i took in java to see just how bad it isit works nicely but from the rich ui perspective it s boring so i was wondering since the draggable image is bigger than the droppable how could i do assuming it s possible to have the droppable container suck the bigger image until if fills its dimensionsin general it is nicer in c to have the caller allocate memory not the callee - hence why strcpy is a nicer function in my opinion than strdupi am using postgresql before which i tried mysql mysql is even worsethe repeater is still faster than the gridview but the difference shouldn t be big if you code it rightit s hard to guess whether this will really be slower or faster than using strcpy followed by strlen thoughi remember it says something like division takes much much more time than additioni ve only done one experiment with angular material myself and i wasn t experiencing any real performance issues at the time but i did read some people writing about it being slower than plain ionicnote i know the jxtable variant of jtable has some more options for filtering and highlighting rows but i did not find a solution yet.i have configured tomcat with apache web server in past and never slowness problem before and practically speaking nginx is said to much lighter and faster than apache web serverit seems to work fine in google-chrome but in safari it causes some hover issues on linksi don t think this capability utf8mb4 exists in mysql 5.1 as evidenced by the query below making this yet another reason why you never run a versioning on a slave that is lower than the versioning on the master and when doing upgrade you always want to upgrade the slave firstit s worth pointing out that in general the foreach loops is more expensive memory-wise compared to the for-loop see here for detailson some hardware platforms it might turn out that int types work faster than chars types so the selection of the specific type becomes a speed-vs-memory trade-off but once again in many cases when the range of chars is naturally sufficient it might make more sense to use chars instead of intthey say that implements runnable is more preferrable than extends threadbut if you re dealing with children that have more than one parent then you re dealing with graphs and for that reason mysql it s not suitable for youhowever if you re developing a serious application sdl is more likely to be the tool you need to use as glut abstracts more than a real application would normally want toi understand you are trying to load more events that are currently shown on screens so that they are cached and prev next switching works fasternot totally sure what you want to do but using a while checking if the user input is equal to next and if not trying to cast to int using a try except is a better ideain production it is much better to use a more sophisticated server like phusion passenger or unicorn since they have better performance than thin mongrel or webrickif there exists a np-hard problem that is not in np to the best of my knowledge no such problem has been proved to fall in this category at this moment of time such problem is harder than np-complete problemsin that case the answer is basically both. normally int won t be bigger than a processor register unless that s smaller than 16-bit but it could be smaller a 32-bit compiler running on a 64bit processormore importantly in this case i think post is more appropriate than puti run the ab test several times with same results post is faster but get is lightertcp is a slower more reliable protocol than udp isso simply httpwebrequest is better option then webclienthi everyone i need help with this i ve already set up nginx + php and it works great faster than apache my problem is how to setup a multiple projects in one ipfor my website i noticed that tooltip delay in firefox was much higher than in google-chromecakephp is considered slower than codeigniter but you can tweak it to enhance speedproperty declarations are nothing more than compiler-generated getter and setter methodsmicrosoft has the microsoft speech api sapi however if you want simple ivr it is better not to reinvent the wheel and customize an asterisk implementation which i guess falls under the great ivr library for c++ category it s c not c++ but if you know c++ you should be able to understand the c . using asterisknow you may not even need to write any custom code it may do what you want alreadyi ve even tried to pin archetypes and atcontentypes so that the buildout uses older versions example those used in plone 4.2 by adding the following to my pinnedversions.cfg file which gets called after everything elsethe problem with using tcp is obviously that it is a lot slower than udpdirectory.getcurrentdirectory will give you the current folder which is more of a context as you can create a shortcut and pass a completely different folder as your current directory than the one where your exe is presenti personally would use aes for my encryption as it is lighter and more secure than tripledes in fact i think it is the de facto algorithm at the momenti am using icheck plugin to make my checkbox and radio button looks betteragain same error but while loops clearly survived more than for-loopcommon lisp has a separate namespace for functions which makes operation like this more verbose than with schemedisk is 100x slower than ramphusion passenger is the de facto apache mod and yes it s better than webrick which is really only good for tiny sites or testingudp scales better than tcp because of reduced states that need to be maintained in the operating systemsecondly the current version of pypy consumes much more memory than cpython in a rather large set of casesi was wondering if you guys could help me with a function i m trying to make to determine whether an unsigned integer a is bigger than bi could just throw away customsetup and put all the custom code after super but having that abstract method makes clearer what you re supposed to put therethe operating system will give your program all the resources it needs the reason your process is not consuming all the cpu is probably because it s waiting for the io sub system more than the processorshttp streaming servers will in most cases use tcp as their network transport rtsp servers usually offer rtp over udp which is more suited to multimedia streaming where some errors packet loss can be tolerated with the benefit of lower latency and less network overheadsmaybe it is but it is much easier than launchd agent in other session from daemons when implemented right with different corner cases supportrint is measurably faster than floor or ceilsee also why malloc + memset is slower than callocand last if you know the number of loops it is much easier and better to read when you use a for-loop instead of a while loopsif i don t have a grammar i ll use parsec it is more flexible powerful than happy and its more fun to work in haskell than generate code with happy and alexif i enable this then any setup is ran every time it will be asking for upgrade either it is on lower versioning over higher versioning or higher versioning over lower versioningsince i have seen many reports of the macports package manager being less reliable than the fink package manager i would suggest installing fink and then simply doingin simple words we can say performance of repeater is far better than gridviewany db tech is fine with me as long it does not need lots of ram and uses less disknow i want to work on this read-only also i have better experience with bazaar than svn so i want to change this repository from svn to a bazaar repository for working locally how can i do that and one additional thing does svn support local repositories like bazaaraverage asymptotic order of quicksort is o nlogn and it s usually more efficient than heapsort due to smaller constants tighter loopsmultiplication is generally slower than additionpost is more secure than get this is just a quick examplealso ie and firefox seems to work better than google-chromei am setting the policy to constrained-resize to get rid of the extra column based on this so post tableview has more columns than specifiedaccording to the postgresql which i gather greenplum is based on documentation for sequence manipulation functions it should return the value most recently returned by nextval in the current session.cron jobs works well with wordpress even if a server cron is bettergetter and setter gives you more flexibility in general than propertiesi think using post is more elegant and has more options for further development than passing them via getreason why double can t be declared volatile it s 64bit which makes it more than the word size on x86 which prevents it from being declared volatile in the cli if i remember correctlyi have studied the x86 assembly and architecture and it appears to be a lot more complicated than mipsi ve heard it suggested that i use nginx as a reverse proxy in front of apache and node.js is that a better solution than just nginxthe comaddin base class makes it a bit easier to create an office add-in and reduce infrastructure code to be more familar with vsto - thats the whole ideai d send an action from the child to the parent it s always easier to communicate upstream than it is downstream due to the fact that parent don t always have childrenpost is also more secure than get because you aren t stickingyou should always use the timeit module for time trials it is far more accurate than cprofile heremake the form get not post because the request is not changing anything on the server so get verb is more appropriate and also the get verb will pass all the form values as a query string parameters so you ll get the desired effectto get more help with that post information about your table structures and contentwhat i am hoping to get from this post is a better way to do this or hopefully someone can tell me why is happening i know that the latter might be hard since it can be a bunch of reasonsthe most straight-forward c implementation is 100 times faster than cpython pypy is 10-30 times faster and passes the challengeeven if you give the inputs a attribute firefox renders them wider than google-chrometcp is but udp is fasteron top of that the i2c bus is slower than spi because there are control data exchangedif you want to use sql i strongly reccommend postgresql it seems to deal with large databases and frequent writes a lot better than mysqlbigger better than wordpress you re typically looking at joomla or drupal there are others these are just the most common onesin my opinion a for-loop is usually better for doing something a specific number of times and if you re just iterating over every item in an arrays foreach is usually more straightforwardusing capybara instead of rspec is a better solution for request intergration testsjava object serializable deserialization is not faster than xml writing and parsing in generalit may not be the most elegant method but when you just need to convert something ad-hoc thinking of it as comparison and subtraction may be easier than divisionnumpy min max is much faster than the build in functions but only for large arrays below lets say 50 the buildins are fasterissue you re experiencing with a video working in landscape but not portrait sounds more like an issue with the email client than your codeis there any reason mousedown should be inherently faster better than mouseupnote that if you convert your png files to gif images they are likely to look uglier as gif files can only have 256 colors and do not support alpha-transparencyin other words if a subclassing is more accessible than its superclass then the access modifier of the superclass loses effecti am asked to apply to all the actions of one mvc project for security reason says post is more secure than get which i disagree withthere are various object systems you can load as libraries when you want to do oop but integration with existing code heavily depends on the scheme dialect and its surrounding culture chicken scheme seems to be more object-oriented than racket for instanceto be able to calculate very big numbers bigger than 64bit 128bitso for creating a friendship post method suits better than getgoogle-chrome seems to allow this i do not know why but firefox is somewhat strictera while loops makes more sense to me than your use of a for-loopjboss 6.4 had no problems with that but yes wildfly is more strict looks likenote the use of std getline is safer and more convenient than std istream getlineunfortunately the directory also is a git repository and has a .git folder in it which is much bigger than the directory itselfthis is a huge performance boost look like myisam is much more quicker for fulltext in mysql than innodbis there anything more i should do more than changing post to getmy main and pretty noob question is it ok from an mvp perspective to have a presenter that communicates with more than one interactor or should just be one interactor per presenteri have a comment on your for-loop q is never considered in the stopping condition therefore putting it within loops is more logical in my opinionsince emacs is much older than the extensible vim as opposed to the relatively non-extensible vi it has a much larger collection of extension modes covering almost any purpose you can imaginefirst its not a bad idea to use node.js to satisfy your requirement the uniqueness of node and added advantage compared to conventional technologies like apache-php is clearly explained in this following video why node.js is better .the notion of node being just used for advanced or complex applications is wrong you can use node for building applications which are very simple to anything of huge proportion.it would be a not so comfortable task for a node beginner to code without using any frameworks but by using this web application framework called express you need not code from scratch and its very easy to setup html pages using its simplified html templating language called jade and route requests also you can even use your html pages if you are not willing to use jade for rendering the views of your application .here are the series of tutorials which would help you tutorials on beginning with node.js basics of expressjsthe reason is that the modulo is slower than subtraction3 a first of all if you haven t done yet change the storage engine to innodb which has row level locking and in newer versions of mysql has more optimization than myisam hasthis question is similar in nature to whether ant is better than maven or c# better than javakeith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskellimperative is the traditional step by step recipe approach while declarative is more this is what i want now you work out how to do itif you re using older versioning it is better to upgrade and avail benefits of c++11 features as much as possiblesome background i m learning haskell now having earlier worked with scheme and cl and a little foray into clojureif you compute modulo a power of two using bitwise and is simpler and generally faster than performing divisionso i wonder the benchmark is also influenced by the installed extensions or google-chrome is really so much higher than firefox in performancenow if you aren t generating your html server-side and are instead writing it by hand you can make your life just a dash easier with a client-side transformation like thisi think i generally agree with your summary - it makes sense that postandasyncreply is slower than post so if the caller doesn t need to get a notification from the agent when the operation such as putting value into the queue completes it should definitely expose a way to do that using just postmergesort is more difficult to implement in-place but the out-of-place version is very cache-friendly - i suspect real-world implementations accept the o n space overhead - ram is cheap but memory bandwidth is a major bottleneck so trading memory for cache-efficiency and speed is often a good dealwhen send a udp datagram larger than the mtu size only the last fragment of the udp datagram is putted out to the destinationi m not totally sure what you are asking malloc minus free is less than the actual usage because of the memory fragmentation if you really need that number you have to use custom allocators which are tiny wrappers around existing ones everywhere in your code which is going to be painfulon google-chrome it s significantly faster to do this using 1 0 but on firefox it s slightly faster to do this using boolas already pointed out in other answers memmove is more sophisticated than memcpy such that it accounts for memory overlapsi would not test that compressing a particular input produces a particular output because that might break if you upgrade the compression library to a versioning that does a better job of compressingif you are worried about memory then do look into scikit-learn since equivalent models can use significantly less memory than nltkfrom a practice standpoint - excluding accessibility - modal windows provide an alternative that are less startling as say dialog boxes and feel less intrusive than pop-up windowscalloc does the same thing as malloc but initializes all bytes to zero -- useful when you want to insure all memory is initialized and only slightly slower than malloci would need a scalable database so probably postgresql would be better than mysqlin minitest i could add this check for each class with 1 line include diameterizableinterfacetest. in rspec it takes 4 more linesit is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but the right svn2git which is much more suited for this use-casei found the production of wmv much better and easier than flv because all windows flv encoders i tried are not really good and stable whereas pretty much every tool can natively output wmvit uses lxml underneath and is much faster than beautifulsoupi haven t tried any of these in a jsf 2 application but i would recommend using the primefaces one at least the documentation is better than richfaceskeeping your business logic in ejb jar will pay off when you ll need more than one war in your ear different security realms etc.since you noted thoughts on other browsers would be helpful opera s kiosk mode seems more powerful than google-chrome sonce the jvm has warmed up rails requests under jruby are usually significantly more performant than under mri both in terms of raw execution speed and garbage collectionfeed dialog is more intrusive in the sense that it has a facebook pop-up windowi have a program an awt frame yes i know that swing is better but i am restricted from using it that has 2 moving objectsmyisam is still widely used in web applications as it has traditionally been perceived as faster than innodb in situations where most db access is readsthe rss feed-splitter component of mule returns only a single item even if the feed has more than one items if the pubdate for all the items is samethe internal view hierarchy of uialertview is much more complicated than it appears and starting from ios 7 it is not even added to any uiwindow so it s no big surprise that it doesn t participate to the responder chain as you expectwhen i test the app with 2gb of allocated memory instead of 12gb i saw that the performance of the cpu when using ram is better than when using ram disk when i just write data into my db 15 vs 17 cpu usagewhen all you want to do is jam a bunch of shapefiles together or convert a large series of rasters to a common projection gdal ogr is faster to startup and run as it doesn t need to load the whole arcobjects com library to access one or two functionswhy don t you do a simple test that tries to read and display an image in a jlabel first since using a jtable is more complicated than using a jlabelmef seemed a bit easier than prism and i started to do a hello world mef app with this tutorialyou d still have to filtering to get a range though it ought to be faster than sorting at leastbut if some of the 14 parameters are optional it becomes a bit hard to read then i think either the use of separate getter setter is more readable or a paramater object mimicking named parametersi think you can best use the for-loop this gives you a little bit more control over loopsso just change your versioning to something else which must be greater than the upgrade versioning so that again first condition will be false and system will not check further and will connect without using tlsso firefox is better than google-chrome - but both suck in that regardnote that you should check if index is within arrays bounds in such cases and that system.arraycopy is more efficient and arguably simpler than a for-loop for copying arraysit works great in google-chrome and safari haven t tested ie but i m sure it s somehow worse than firefoxfixing bugs in swt is much harder than in swing most classes in swt are final or contain hostile checks in the constructor to make sure no one extends them the package is signed so you can t simply replace classes and so far i tried several times to compile swt from sources - and failedyou could also use apache cargo which is more general than the tomcat maven plugini have taken on someones project that has automation using task scheduler while i am more familiar with cron jobsit is a structure similar to but twice as space-efficient as the dawg that is more efficient than the trie which only compresses prefixesthey use iframes in firefox which seems better but in google-chrome they do this by putting manually defined span and font tagshowever a sdp object local description by firefox does not contain datachannel at all and moreover the sdp is much shorter than google-chrome and less information bundledmemcpy is still a little bit slower than memmoveusing for-loop is much simpler if you use condition as limit for breaking loopsthis gives me but when i loop through it i get duplicated parent when this parent has more than one childreni am using the compareto method in java to try and check if a certain date is greater than or equals than 24 hours after another dateif your .so are statically linked to c++ runtimes - you should free objects in the same module where they were allocated since new delete is something more than malloc free and need some extra info to work properlyis it possible however to implement common lisp s macro system in scheme which is more powerful than syntax-rules using syntax-casei ve found that the font-size in firefox is a bit larger than in google-chromei can order by id but this doesn t feel reliable as even though i know in this case that children will have a higher id than their parent i can t guarantee this will always be the case in every circumstance i want to use a cteother solution is to upgrade websphere with newer libraries as per ibm websphere upgrade service instructionsok i think i may have fixed my problem i changed the logic and so i m now using a for-loop i could have still used a while-loop but i think a for-loop is betterwhy is using spatial index and stdistance slower then the more complicated query with sin cos and acosrest assured though that strcmp is better equipped in the general case for string comparisons than memcmp isreloading pages data or program code from disk which is much slower does not usually happen very often as long as the program is actually running and as long as the machine is not desperately low on ramyou need to just change the siftdown function so that the parent is always the smaller than the childrenquicksort has better locality of reference than mergesort which means that the accesses performed in quicksort are usually faster than the corresponding accesses in mergesortthe underlying reason for this and various other avx limitations is that architecturally avx is little more than two sse execution units side by side - you will notice that virtually no avx instructions operate horizontally across the boundary between the two 128 bit halves of a vector which is particularly annoying in the case of vpalignri hacked together an alternative approach that achieved a much higher fps 60 or more under both google-chrome and firefoxdepending on the rest of your code you might be better off with getter and setterdivision is always much more expensive than multiplicationit iterates through the most recent folder returned by the dir command each returned on one line and after it encounters the 4th it stops if there are more than 4 folderthe cpu is indeed slower on sparc 1.2ghz and as answered by one of the sun s engineers t2 is usualy 3 times slower for single-threaded application than modern intel processorsno cross-database queries if you need something like that mapping mysql databases to postgresql schemas is probably easiersnprintf but in c++ std ostringstream is far betterbut in my location jboss is more popular than glassfish so i have a ideamemcache data lives in memory and isn t persistent so is for more transient datathis ibm technote has more details on the signals part what is a signal and why does this matter for websphere application serverit is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case and should not suffer from oom errorvirtualbox is slower than vmwarehence post is more secure than geton an unencrypted connection post is no more secure than getare there any cases where awt is more useful advised to use than swing or vice-versarickshaw is a graph library focused on time series whereas d3.js is more of a framework so it gives you much more functionalityan efficiently configured mysql is better than a badly configured postgresql and vice-versagenerally a pop-up is a better option for a login dialog and a pop-up would allow you to easily navigate to the main pageafter looking into the issue with the inspection tools of both browsers it seems that firefox is making the #main_nav_bar ul 10px wider than google-chromei tried a few ides on ubuntu and it just didn t seem right - gedit is lightweight and i actually enjoy using it more than textmate on os xcarbon emacs is closer to the unix emacs experience whereas the aquamacs people have put considerable effort into os x integrationc++ s stl is getting better and better yet it s not nearly as huge as boost and is not intended toi used atoi to convert the string to int but for a more robust solution it s better to use strtol but for your example atoi is more than enoughusing getter and setter gives you more control over the validity of your objects giving you the option of testing values that are set to ensure that they are reasonable etceverything is better than a checkbox or a button with autopostback set to true nowadays in year 2011 2012 soonthe scenario you described is perfectly fit into an aggregation or multi-module project from my own experience compare with ant maven provides a more efficient reasonable and native way for managing multi-module project with inter-module dependencieswhen i try to access it with a for-loop where its index is less than the arrays length i get the following error message typeerror function object is unsubscriptablefrom my personal use i experienced about 5 - 10 times less disk usage due to tokudb s compression and it s much much faster than myisam or innodbi am less familiar with postgresql than mysql butin addition to that the crossing off may be less work than a division don t know about python it is for c arraysin ie java-script load slower than firefox safari and google-chrome1 if i copy more than one folder to the watched directory one of them will get handled none of the others will get processedthere is also postgresql its a bit more robust than mysql and is free just the samein ejb3 there is no such thing as stateless is better than stateful session beanschild components have weaker connection with its parent than subcomponents it was expected that parent has no idea how many children it can have which is appropriate for most controlsi have the jersey resource classes bundled within a larger war as jar file which is now residing underneath web-inf lib folder on websphere application serverwe have now turned our multiplication into an addition which is much easier to dohow you handle things server-side is far more critical than client-side validation which can and will be ignored by malicious usersdue to the work flow change our qa members would like to have finer control over the push pull operation on the release server they d like to allow only specified user s with user credential s to access to specified repo smri has a gil so why is it faster than jruby in handling requestsi had worked on jboss for a year and on weblogic for more than a year now my experience with the web logic is good compared to jboss weblogic is more stable and robust it can handle more than 3000 concurrent requests without throwing a single exception where jboss failed to do so and admin console for the weblogic is excellent but i think weblogic is more complex then jbosssince json can store arrays i can create quite complex config with it and it parses faster than ini filesif you are on linux eg ubuntu you may try gedit for ease of use with some plug-ins but to handle very large files you re better off with vimif your in to python there is nltk as already mentioned by it s author but there is also scikit-learn which provides much more than just clusteringbut if the action is aimed to handle crud request post or put it s more convenient way to use formsnow you can get all those same features with flask if you re prepared to do some integration work but the argument can just as easily be made that django is better for beginners precisely because it does come with all those things built-inthe time profiling instrumentation is more efficient at gathering datausing the ajax method really shouldn t take much more than using post gettcp ip is supposed to be more reliable than udp ip see this comparisonhdfs high availabilty is only available when you have more than one namenode configuredgoogle-chrome also is susceptible to this same issue although it does a significantly better job than safari at getting the realtime api re-connectedin enhanced er modelling subclassing inheriting from more than 1 superclass is called multiple inheritedin fact given that google rejected pointer event on the ground of speed which ie solved by gpu acceleration it can be said that google-chrome and webkit in general - safari is even slower is lagging behind on this front and the only way to help is contributing code to chromium webkitthe switchover to nginx really had little to do with the rewrite rule and more to do with getting away from apache 2.2 default upstream version for centos however with nginx rewrite rules are more straight forward than apache s imoif your watch doesn t have usb support moto 360 and other induction only charging you need to enable bluetooth debugging slower than through usb thoughbut keep in mind that in many cases being stateful or not stateless is no problem and not all stateless applications are by definition better than stateful onesthe fact that the subclassing is more selective only actually writes about what it writes is new functionality especially in light of the fact that the superclass promises nothingand check against a number versioning in your code if the database versioning number is less than your code versioning number call a method for to do the upgradeplease note that you can use erlang or elixir which is much easierif multiplication is slower than addition instead of doinglot s of free stuff available look for anything implementing amqp for example and not limited to apache s attempt - activemq zeromq as listed above rabbitmq which is more complete than zero and even red hat are in the game with red hat messagingpypy is faster than cpython s sum intrinsic because it can figure out that all the elements of the array are numeric and slice out a bunch of per-element overheadthis is called a strength reduction optimization because division is stronger slower more expensive than subtractionincidentally the scrolling on the windows version of safari is fine albeit a little slower than ie opera and firefoxfinally even if somehow you could manage myisam to perform better than innodb that doesn t mean innodb is inadecuate at allif a function is static thus not exported anyway and only called once within your code and you never use a pointer to the function chances are good that gcc will decide to inline it automatically as it will have no negative impact the binary won t get bigger by inlining it only oncebut thn i get presented with a setup maven plugin connectors dialog and the pom.xml file shows more errorsspeed is usually faster than gdi and slower than directx and depends greatly on how you do things seen something to work 60 times faster after rewriting in a sensible waythe children still do not need to know about the parent and the parent gets a more direct event as opposed to a signal connectionif you need to add more than one folder for searching see the msdn for documenation on adddlldirectory for the steps required to allow for multiple search directoryand ram access is much more fast than disk accessso glfw is just a library for creating windows in a better way than lwjgl did beforeubuntu is the more user-friendly of the two i think ubuntu is actually one of the most newbie-friendly linux distros so if you are new to linux ubuntu is the way to gothe way i like to see more than one for-loop in list comprehension is like the nested loopsi ve found some comments and references that seem to indicate that setting the height greater than the width will cause the browser to change the orientation automatically but in my testing that only works in opera used to work in opera but not anymorepost has a higher overhead marginally if we re honest but it all adds up but it doesn t become part of the url so can t be seen by say a casual observer over the user s shoulder - whereas get cannotice that a children choice solution can have more than one parent and that choice can be either an array or one element.is there any cpan module that would make this easier preferably with automatic getter setter generationunicorn is supposed to be faster than webrickswt community is smaller and it doesn t provide that many tools as swing doesmy question is is fast implementation of pow x 0.5f faster than fast sqrt xprocessing rss feed is more comfortablein terms of performance rtp udp streaming is far better but there is no guarantee that it will get transported through the internet via routers nat boxes proxies etcif you have dynamic element sizes you can t write out child pointers in preorder so postorder traversal is more appropriateif your versioning is older than that it won t work and you ll need to upgradesafari is more funny than google-chrome i can easily make google-chrome cache my page but safari does notthat s because removeclass is executed faster than fadein method you can remove the class when animation is completehere s the solution for post variables as well which is probably trickier for more users than the get solution1 okay so it is technically possible to allocate it as one big blob and then wire up the 20-element array to point into the desired offsets into the blob.Ã¢ Ã¢ this convolutes free ing though and usually isn t necessaryÃ¢ for most use-cases the performance gains would be negligible and you d still need to malloc a separate array of pointers that address into the 2d blob .Ã¢ Ã¢ you typically only see 2d-blob allocation when data is massively 2d Ã¢ such as image data Ã¢ and access syntax is eschewed in favor of syntax because it s no less efficient than what the compiler would do and doesn t require more than one malloc free pair per blob of datait requests memory from the os kernel but the request is not satisfied until the memory is written to with memset . this allows for greater efficiency in the system s memory management but it can result in misleading malloc behavioursince i agree using getter setter is better wayas you know apc is much more faster than memcached if we re fetching keys from a single serveryou might want look at robocopy as it has many more options than xcopyudp packets smaller than the mtu will not be fragmented but the mtu depends on more factors such as ip options and vlan headers so it may not be greater than 1500that fits better with both pandas and patsy s way of representing thingsquicksort consistently has less recursive calls than mergesortput each token +- of final command string in a list maybe a binary tree works and sort that list to tell the calculator that division and multiplication has the highest priority in the mean time addition and subtraction has lower priorityso i think before following the convention of getter and setter it is more important to follow the convention of variable namingthere are tonnes of posts blogs on this so just google mongodb working set but as you know access from ram rather paging to disk is quickeroddly enough new array size is almost 2x faster than in google-chrome and about the same in firefox and ie measured by creating and filling an arraythis server side product was openfire but you could use ejabberd for even better performance - openfire is easier to set up and maintain thoughusing a separate icomparaer comparator approach is a more generic form of using a sortkey field with the additional ordering mixed into the comparator because such a field could be used by such a icomparer implementationgetting your project migrated to vb.net is certainly easier when you keep the old vb6 controlssee what happens when tcp udp server is publishing faster than client is consuming4.c i am working on aix so i only have sh and ksh no bash therefore i cannot use the array tools provided by the latter that s why i thought of awk that and the fact that i think awk is probably stronger though i might be probablysafari still uses the older version while google-chrome uses a more current onethe result is that using d3.js can feel a little lower-level - you have more control but you have to be pretty familiar with svg syntax to do some of the things protovis does much more easilymaybe google-chrome is working faster than firefox try adding a wait with expected conditionsbazaar is more discoverable if you are given the tool wo any documentation any semi-competent user will be able to use bazaar that s not so true with gitif the md5 from your select query results in a hash that is larger than the last record in your table you might get no records from the queryi have a problem with my code i already make a code with mouseover but it was very slow to display per row my picture edit so i read that mouseenter is faster i hope because i have normaly 2000 rowthe direction of evaluation does not affect the results of expressions that include more than one multiplication addition + or binary-bitwise | operator at the same level.i am specifically trying to connect it via usb serial as the device needs to be mounted unattended and bluetooth connection seems less reliable plus extra cost for bluetooth capabilities on the device so potentially more cost effective over usb serialmultiplication is not more difficult than repeated additionalso i find that web inspector in safari google-chrome is betteras for apache vs nginx in regards to your django app it seems that mod_python is indeed faster than nginx lighty + fastcgi but that s no surprise because cgi regardless of any speed ups is still slowwhy height in google-chrome is bigger than firefox of inputin my experience google-chrome has better javascript performance than firefoxbut for the task you describe you d probably be better off with docx4j with which i m involved or apache-poi - especially if you are trying to do this server-side or in an environment where the client pc environment is unknownif we express combinations of states in an nfa as states themselves we ve got a dfa with a lot more states than the nfa but which does the same thingi think your code has no problem except that angular has deprecated legacy promise methods success and error of http after version 1.4.4 you should use standard then method instead if your ionic depends on higher angular versiontunnel udp packets is somewhat more difficulthere is what it would look like with testng it s a little more contrived with junit since you can t pass parameters directly to test functionsserializable deserialization becomes a bigger bottleneck when you scale out to a session server or use sql server to manage session statei know js and i ve maked extension for google-chrome before but i think making for firefox is alittle harderdatediff becomes more difficult to use as you have more dateparts in your difference in your case looks like minutes and secondsthe requests library can handle post put delete and all other http methods and is significantly less scary than urllib httplib and their variantswhen i launch it with firefox or internet explorer the box gets immediately to a huge distance from the margin much bigger than the width of the screen and now i noticed that if i run it with stackoverflow s snippet function the box does not movegive it a try works perfect for me what it is doing query get the all the post with a left jon with comments table so when a post has comment them n it also has the comment_date if no comments posted on the post then in result set it will be null so i have merged the comment_date with post_date so which post has the greater date for comment_date or post_date it will first and so onin any case raf will enable the drawing to be synced to the monitor so in any case it will be a better choice than setinterval settimeout in cases such as thesedepending on how your application is structured this means you may want to have your own base class implementing iresource which creates your custom not found resource for all of its subclassing or better make a wrapper since composition is better than inherited2-3 times faster than mergesort or heapsortit combines efficiency of a trie trie can be seen as a special case of dawg but is much more space efficient- you can also consider using webm which is a free alternative to h.264 and has better support on some platforms than fragmented mp4i am starting to understand that even though emacs is more powerful than vim vim is at least 10 times easier to use less keystrokes and requires way less modificationsthe ipb which has less queries runs slower than mybb with more queriesi want to type tex equations in onenote send them to mathtype which converts it to mathml and has a more feature-rich editor and send them back afterwardsclang llvm has much better separation between the parser and the other parts of the compiler chainnote strncmp is safer than strcmpquadtree is better for big open spaces and octree is better for in-door spaces with many levelsbut goto is rarely used in modern coding it is not likely to perform any better than a do-while loop after compiler optimizations are applied and it has limitations on how it can be usedalso this way mvp pattern becomes more testable as you can mock the view with fake object and test your presenter in unit testskeyup is more preferable than keydown because keydown may occur multiple times if user keeps it pressedthe get is usually faster because it has no encapsulation sends data via url usually with a 255 character limit as post exists encapsulation by being sent by the body of the http requestusing checkbox to check uncheck is better than radio buttonis sqlcmd always that much faster than ssmsthe autojit compiler realizes you re multiplying by all 0s and removes the matrix multiplication completely and simply returns a matrix of all 0s in the 1s it skips the actual multiplication part and just does the summation part of a matrix multiplication which is slightly slower than just returning all 0s finally the final one actually forces the compiler to have to do a matrix multiplication since it can t assume the answerit s better than having getter and setter to do the jobbut for 32-bit and 64-bit microprocessors data alignment and bulk data access is key int accesses are frequently much faster than chars accesses and long long 64 bit may be faster still for some systemsbut break is no better or worse than gotowhat is the true rationale behind all the private and protected stuff when we can just make our life as a programmer easier by using public for everythingmulticore refers to a computer or processors that has more than one logical cpu core and that can execute multiple instructions at the same time.and the whole purpose of maglev is to have a ruby implementation which can deal with heaps that are orders of magnitude larger than ram by storing them in a distributed cluster on disksha is better hash than md5if you don t have someone around to help with jqgrid you are better off with datatablesbetter use keyup event name as in my example because keydown requires one more click for the last symbol to be updatedbut consider this it s literally impossible to do any better than interlocked operations for cross-process communication with atomic updates and no locks are heldanyways mysql is bad and on longterm especially if you are enough good for java i suggest you to use some better db with postgresql you were really satisfied i thinki understand that the background-color one doesn t require an http request and that the background-image takes more processingi have too problem with text in the firefox is bigger maybe bolder as in google-chrome .this generally uses a hash algorithm that is much faster than md5you would be able to circumvent this by first running mvn clean install on magnicompcommon s pom.xml then on model pom.xml but this is much easier done by invoking maven directly on the root pom.xmli understand that children cannot have a higher opacity than their parent but is there a possible workaround for thiswhile neither the declarative nor imperative approach is really better than the other both have their meritsif you need spatial data capabilities postgis with postgresql is better than mysqlis postgresql better than mysql for such purposeie s vml is slower than other browser s svgfirst entity-relationship modeling is more than just an erdand i do as much work as possible on our linux centos 5 system simply because the tools on it are still newer than anything i can find readily packaged for aix solaris is somewhat betteri see that the microcontroller used in commercial devices are much cheaper than the avr or pica treemap costs a lot more than a linkedhashmap and adds nothing to your project if you only need to keep original insertion orderthis is still slower than for-loop mostly due to intermediate arrays creation but much faster than stream versionwhile widget logic can help you do much more than hide or show a widget to logged in logged out usersafter testing it seems that myisam is faster than innodb when using when there is no where clausenot only is it more expensive in terms of developer costs designing a cpu is vastly more difficult than writing user-space assembly code but it would increase the transistor count of the processorsthat i gave to every link in the set of links home about us products contact and it seems that firefox is making that 1px margin much bigger than safari or google-chrome and distorting itthe difference between pylons and pyramid are the merge of repoze.bfg and turbogears which brings more api resourcesbeing php parseing it is nearly eg the file needs to be opened closed etc as fast as having the code at the top of each script and much faster than ini and xml config solutionsthe real dataframe has more columns in the multi-indexin the example the getter is still public like the entire property while the setter has a more restricted access here privatethat said the date class is much better in php5.3 -- it even has dateadd subtract functions which would also solve your problem much better than strtotime .and any python orm will make it easier to switch out your database if you find something better than mysql like postgresqlthere are many options for client-side mvc or mvvm code organization such as knockout.js and ember.js but personnally i prefer backbone.js which has less magic but offers more controlif you are looking for the latter then flask is a micro framework that is considerably smaller than djangoi m using homebrew as it s newer than macports and i don t know enough to choose between themas you said google-chrome is faster than firefox so the webdriver is trying to interact with the dom before when elements are not yet visible existheapsort can sort in-place and doesn t have the worst case quadratic behavior but on average is slower than quicksort in most casesmultiplying is still somewhat more expensive than add on modern computers and compilers go to some effort to replace them with one or two shifts+add instructionsi m just looking for something a little more polished than vim or emacs but not quite as heavyweight as netbeans or eclipsesince i provided a getline example above your read loop can be much better written with fgets as followshere i started above testing with the aim that c for-loop performance will be better than c# loops but it goes exactly opposite with my understanding and gone with this question and agreed...but when i increase the upper range of for-loop the c performance goes well as compared to c#.the only problem that as far as i know using drawimage is slower than using putimagedata and it was required in old browser versions like firefox 2 or suchthis is much faster than the division by repeated subtraction method since it converges to the result quadratically instead of linearlyi used it because it is small 6 kb compiled with just the extraction making it far smaller than dotnetzip which is more than 150 kb and is more permissive than sharpziplibspeex is designed for speech and should perform better than wma mp3 or other audio codecs that are designed to handle music if you are just encoding speech which i assume since you are grabbing from the mici am working on a code which needs to be time efficient and thus using cufft for this purpose but when i try to compute fft of a very large data in parallel it is slower than cpu fftw and the reason i find after finding the time for every line of code using high precision timing code is that cudamalloc taking around 0.983 sec while the time for rest of the lines of code is around 0.00xx sec which is expected ..direct3d appears in principal to be easier than direct2d but has poor text font handling in the latest versionbut i wonder why is division actually slower than multiplicationif you won t be changing the string in loops it is better faster to store the value in and then include it in the for-loopso i have a post system and i want the box to get larger as more post come inactive directory is far more than ldap - at the very least you d need kerberos but it also tightly integrates with dns both srv and a records which d require significant trickiness to fake over an ssl connectioni ve read that direct2d is much faster than gdi so i figured i would give it a shot for dealing with constantly updated variablesi think using for-loop is much more easier than using foreach loops to do thison ubuntu 12 04 the kernel must be upgrade and docker installation is more difficultthere is an easier method than using noindex nofollowinherited is more useful when a new subclassing wants to change the way a method works if you just need to change the data the class uses to work probably an approach like this would do the trickthere are many other small differences railo is generally stricter about syntax and semantics than adobe coldfusion and often those decisions are driven by performance concerns in that compatibility with adobe coldfusion would make railo slowerthe exact algorithm you choose will depend on a combination of how fast you need it to run and what kinds of shapes you want to support convex are the easiest concave is harder shapes with holes are harder tooif the file is huge and computation takes longer than the timeout the worker thread is terminate an error message is shown and no intraline difference is displayed for the file pairthe results varied from a browser to another firefox 4.0b12 is faster using but google-chrome webkit and opera is faster when usinga public getter or setter gives you more flexibility - when we try and read the variable might not be readyfor the merge layer i prefer using other merge layers that are more intuitive such as add multiplying and concatenate for instancefinally we all know that multiplication and division have higher precedence than addition and subtraction so we can remove the extraneous parentheses so this turns intothis uses pdo and prepared statements which patches the sql injection vulnerability in the most elegant way possible not mysql_real_escape_string and also uses bcrypt for hashing passwords which is infinitely better than one md5 with no salti don t consider it smoother as cin cout dialogue is not smooth imhoedit #2 but this was faster than a for-loop for a test i ran on an arrays of a million pointspostgresql supports recursive queries in the form of recursive common table expressions which make querying heirarchical data easier than in mysql and also give better performancewhat could be the reason that makes iis slower than cassiniq1.i know that post is better than put for name-value pair parameters as the get exposes it in url and post doesn tthat s why even picky compilers do not issue a warning if you shift a chars wider than 7 bits try it - you ll get the warning only if you shift wider than an int allowstemplating rows like this is possible in a gridview but the listview control is much better suited to this type of datawhat i want to do is if you try to select more than 6 checkbox it will automatically disable all the button however if you tap the even one of the checked checkbox it will make all the checkbox checkablealthough maybe you should instead find some 32 64bit recent book for your os as the 32b protected mode on x86 is much easier to learn only the graphics output is not as straightforward as it was back in dos era but if you will mix your asm files with c++ loader which would for example initialize some window surface as argb memory array you can pass that pointer down to the asm routines and toy around with pixels in the same simple way how the old 320x200 mode 13h in dos workedin the remote case those operations are not simplified assuming that there is a jit that maps the multiplication and add opcodes in a 1 1 relationship to their cpu instruction counterparts in most modern architectures all integer arithmetic operations usually take the same number of cycles so it will be faster multiplying once than add four times just checked it addition is still slightly faster than multiplication 1 clock vs 3 clocks so it still pays using a multiplication hereit seems your apache is more busy than your nginxi just tested geolocation on firefox 3.6 and iphone safari os 3.1.3 the result is interesting firefox is more accurate than safarithis works in latest google-chrome and firefox and seems cleaner than bind to mefirst question is it normal that innodb is much slower 7x slower than myisam for such usageif you find that innodb is much slower for inserts updates bear in mind that it offers a much better level of durability - if you tune it for approximately the same durability as myisam then you ll see good performance hopefullyif you are looking for the size of the file the fseek ftell solution seems less syscall expensivelogic to handle enter + mouse click is placed on keydown and mousedown it could be moved to keyup and mouseup if makes more sensenote that in this case the isnull would do the same as coalesce but looks better for this application in case you add some new languagethen use the guide you found to upgrade it to v3 as v2 - v3 versioning upgrade is rather smallerby the way if you like minimalistic approach there is also scite editor which is my personal preference for doing small bits of code it s even more lightweight than notepad++the only way it would be broken up differently would be if addition had a higher precedence than subtraction like multiplication doesone of the things that makes lxml better than beautifulsoup is support for proper css-like class selection or even supports full css selectors if you want to use themnote the bit that says so fewer than cnt packets may be processed - it s up the the pcap implementation what it doesalso if you open to moving away from mysql i ve found that postgresql has much better resolution of deadlocksi have read in a site that another benefit of having lighttpd in front of apache is lower number of child processesinnodb is actually faster than myisam in quite a few cases so it depends on what your application s mix of selects updates concurrent queries indexes buffer configuration etcstandard post request is not more secure than get onesafari renders open sans bolder than in google-chrome so you would need to apply a lighter font weight for safari open sans google web fonts rendering in google-chromeif you are storing varchar type data you should really be using one of the latter two types clob if you are storing various varchar data and xmltype which is a more specific type of clob anyway if you are storing strictly xml datathe fact that using getline with iostreams is faster than fgetc at least in release mode runs counter to the reasoning that copying all that data must be slower than not copying it so i m not sure what all optimization is able to avoid and i didn t really look to find any explanation but it d be interesting to understand what s being optimized awayi am wondering if i can submit the paramaters to via ajax show a loader image after submission it but once the file is complete return the file for downloadthis works just fine but i ve read native javascript sort performing slower than implemented mergesort and quicksort that there are faster options especially if your requirements meet certain conditionsbower is more similar to npm than to componentlike matzi suggested udp gives you lower latency and lower packet overhead as the header is smaller than tcp but on the downside the delivery of the packet to the destination is never guaranteed iefor example an addition is typically much faster than a divisioni personally believe that it is not worth the effort because basic is a nearly dead language and there are lots of languages better than basic ocaml haskell common lisp clojure scala scheme go d ...xcb presents a more direct view of the protocol than xlib does so you often have to look at either the protocol specs or xlib source code to find out what the underlying protocol request is to find an equivalentgo is much more c++ like and low level oriented than c# and c# has only a few functional features while scala allows you to write typical functional code more verbose than ocaml or haskell but similarsince post is better suited to transfer large amounts of data or difficult formatted data it is the established standard for submitting forms but it is in no way safer unsafer or more less secure than get requestssince the next is not far the number of backtracking steps is much fewer than with greedy matchingif you think that writing two apps for both versioning is a better idea then should i write app on wp8 first and at the end remove special wp8 features to downgrade it for wp7.5 or maybe i should write wp7.5 app and then add some wp8 features to upgrade it to wp8what s currently baffling me is in my results tcp finishes almost 2x faster than udpbut maven and ant are so different that there is no real point at comparing them and maven is still much more than ant + dependency managementshow less will be hide and load more button will be show .thanksyou need two button one for up and one for down or you could use one button and a checkbox for up or down but i think two button is simplerwhile the rest of the browsers report the correct width of the document firefox reports a smaller one example at screen resolution of 1920x1080 ie google-chrome and safari reports 1920 while firefox reports 1903because it seems you re going to deploy a cluster i think titan is the better choice unless you re willing to pay for the enterprise edition of neo4j to support clusteringthis is the reason why udp is much faster than tcpi have to develop a better queue that works more efficiently than the fifo queuethough mysql is more popular than postgresql but instagram is using postgresql maybe due to these reasonsi believe what s happening is that odata uses merge verb that is more efficient than put put requires sending all fields while merge sends only changed data but in your model field b is marked as required so you get a validation exception on the client sidebut in certain scenarios myisam works better than innodbpostgresql is a bit more restrictive than mysqlif the latter is what you want you could use rtf which is somewhat easier than the doc formatall the .net methods i tried were slower than vba and vb6 but the best ones were able to use the xll interface which gave better results than the automation interfacepersonally i think moles is much better suited for mocking the unmockable and i prefer a combination of moq for my own interfaces and classes and moq for framework and externalities like file i o gui db connections etcget and head being much more frequent than postedit i m not a java expert but i think that in java members of new array are initialized to 0 or null so calloc is more correct than malloc in my codeokay safari ios is more strict than google-chrome android when it comes to this all fine but it still needs to enable me to allow the connection throughyou d basically need a set of procedures to act as controllers - parsing vars more likely as get post cookie performing any data lookup building + filling the model and then another set of procedures that at as views - taking what s in the model and rendering it for the userfirefox extensions have much more power than google-chrome and have wider access to browser s internal apii found another approach using the cairo context passed to the handler of draw events but it resulted in capturing a region of the parent window that was larger than the drawingareaside note union all is faster than union distinct but based on your requirements you need union distinct which can be written as simply unionicollection adds counting and ilist then gives richer functionality including find add and remove elements by index or via lambda expressionsi have different behavior on firefox and google-chrome for the bellow code and i think firefox is more correctabout tcp udp tcp is typically slower but more reliable so by default go for tcp but there might be reasons for choosing udp like streaming multicast broadcast .also see this other so answer about the misconception that udp is always faster than tcpfirefox is easier and better than google-chrome in finding the element from the webpageshould be as fast as 3des aes turned out to be much faster than 3des in software typically 5 to 10 times fasterie is usually slower than firefox google-chrome is fetching lot of external resourcesso what is with svn that your company dislikes so much and cvs does betterfirefox may be sniffing the document s encoding with more flexibility than google-chrome issetinterval vs settimeout i used settimeout instead of setinterval which gives more control over timingecdsa is much faster than rsa for private key operations so it should definitely be preferred over rsa when high efficiency is required unless rsa is still fast enough something that may very well be the casethis is only a guess and is not based on actual performance testing probably wicket will be doing better than vaadinnginx is actually quite a lot easier than apache in my opinioni was wondering if someone could explain to me why field access seems to be slower than getter setter method access and also why the last 8 iterations execute incredibly fasti m trying to avoid tcpclient because udp is faster but would this work in tcp since it s streamedalso strtod is a better alternative to atoiif i try to add more than 1 ssl binding i get the error at least one other site is using the same https binding and the binding is configured with a different certificate ...i find the ant one much clearer than the maven onehowever from time to time i want to set more than just setter and getternvidia and ati architectures differ enough so that for certain tasks such as bitcoin mining ati is vastly better than nvidiaimage is an abstract-class so i think the real question is which subclass is more efficient for your programhey guys can anyone tell me why my code in this jsperf seems to indicate that a for-loop is actually faster than a while loopswords like arbitrary processing and neither not safe make post sounds less secure than put when there is a choicei read somewhere that adding a different salt to each hash makes it more secureone one ubuntu distro fuser -n tcp 3000 will report a process if i own the process yet on another linux distro i think centos it won t report the process even if i own iti heard that i should upgrade beatbox to something more than the versioning 21 to be able to access the forecastingitem object so i tried apt-get update upgrade beatbox but i still get the errorno and there won t be any time soon because google-chrome s add-on api is more restrictive than firefoxand lastly the properties makes refactoring easier for example when the value later is no longer stored in a variable but is calculated inside the properties accessor or comes from some other source variableright now queryover is much more robust in the nhibernate community mainly because it is based on criteria queries which have been around for quite some timethe latest stable firefox 3.6 is fast but for example google-chrome is even fasterfirefox allocates lots of memory during that preloading up to 20-30 times more than google-chrome or safari do and even twice as much as iei would expect a while loops to be slower than a for-loop since it needs to test a condition before each iterationthis low level network capturing is not something i am normally akin to i m normally higher up with fiddler or charles but considering this isn t via http i need to go lower down the stackwe use google-chrome though which i believe uses more ram than firefoxinnodb is newer while myisam is olderalso remember multiplication is much more expensive than additionwindows dmd produces omf while coff is more popular nowit uses settimeout however settimeout is a better solution than setinterval because it will only queue a new one if the previous one is completebitshifts just go easier with hexadecimal than decimal and is often more convenient to read than octali recently got this error with tomcat 7.0.21 on windows 7 when a war contained jars which had duplicate class definitions a class was defined in more than 1 jar within the war s web-inf lib directoryhowever it is not easier than yacc bisonfirefox encodes more characters than google-chromealmost always innodb is a better choice than myisammy codebase is front-end only so after doing a little reading i thought bower would make more sense than npmyou can feel like post is more secure than get all you want but it s a false premiseusing npm package is a little bit harder than using bower packageuse post instead of get it s more securemy firefox adds more chopping to video playing itself google-chrome plays the video much bettermergesort is more natural to implement for linked lists but you can do quicksort very nicelyone addition for embedded cpu architecture they have to be usually cheaper than mainstream processors so that they do not raise the product s life considerablyan example of why coalesce is better than isnullif there is no parent child relationship consider named pipes made with mkfifo 3 or af_unix sockets see unix 7 and scoket 2 .... which are bidirectional af_unix sockets are much faster than tcp ip or udp ip on the same machineobviously very similar to the virus answer above the difference being that while viruses usually replicate spread do a preprogrammed inconvenient thing a botnet is more of a take control of your machine for a future usually nefarious but dynamic purpose. i think the hosts your agent can more easily change with a botnet tooinnodb handles inserts with composite primary keys quicker than myisamicefaces provides more good looking components than richfacesbut i was working on server-side and probably for client-side it s much easierafter fixing css background-image style formatting to get better compatibility with firefox and ie i found that google-chrome intermittingly loses the background images when you scroll up and down on the pagememcached around 4-5 times slower than apc but run as a single process that can be touched everywhere in my environmentfor those answers which use a method isprime int boolean there is a faster algorithm than the one previously implemented which is something likethat happens because pixels size in google-chrome is bigger than in firefoxput to the api a message describing the outcome of the game post is acceptable put is better for idempotencyyou can indeed execute scripts on almost any page using content scripts that can manipulate the dom allowing you to add an onsubmit event listener to a form more reliable than onclick on a button as it is fired however the form is submitted - hitting enterthe dbi versioning is less likely to be the source of the trouble but it would still be good to upgrade to the most current versioningany byte other than 0xff will introduce a start bit into a serial channel and a missing byte in the tcp udp implementations is even less likelyhowever in the comparative table i linked get is listed as less secure than postthere are some instances of implementations that i have seen for some methods that throw nullpointerexception if argument is null but that is wrong implementation in those cases illegalargumentexception makes much more senseopenpgp is simpler than x509 but more limited especially if you wish to have a strong legal meaning behind the certificatesa for-loop is more natural than a while loops but you requested no forthis sample rate might be lower as only google-chrome and firefox are supportedie is less performant than safari google-chrome and firefox when it comes to js - but have you really developed a page that is unusable in ie with js turned onnothing is 100 safe but innodb properly used is a lot safer than myisam against data loss and corruptionyou re right postgresql has much better support for sql and other advanced features so there s a very good case for why postgresql is superior to mysqlat the moment both postgresql and greenplum are open source products so you are free to chose any of them but of cause postgresql community is bigger atmnow i m trying to do the same thing with imagemagick to be more correct with magick++but for someone who doesn t even know what an integer is numbers without fractions values is probably cleareri ve used ferret in the past with few problems although i ve heard sphinx is betterbut i have a problem dragging to a droppable that is smaller than the draggablethe foreach loops is slower than the for-loop yet most people don t rewrite all of their code to use the forsorting all the objects before filtering is sure to take longer than filtering and then sorting a smaller data setthat way the hash salt is more random and your data a bit more securethe md5 hash is no smaller than the uuid so it doesn t help with storagenow the response i got from my boss is that i need to prove that innodb will run faster than myisamstrcpy could be better replaced by strncpy which does some bound checkingthe reason the pull model works better than the push model in this case is as followusing a filesystemobject is more powerful than dir because dir only returns a string while filesystemobject lets you work with files and folder as actual objects which are much more powerfulthe ram is much faster than the hard diskso if all you need is to serve images instead of doing additional processing in java the ram disk approach is indeed faster also uses less memoryas i said this may increase the speed especially in an environment where modulo is more expensive than simple subtraction but you would want to actually benchmark it to be certainbut loops doesn t work like an old c-style for-loop where is checked on each iteration which is part of why this loops is fasterand i ll just add to previous comment if 128bit number has prime factor larger than 64bit then it certainly has a factor less than 64bitnginx apache fits better with nodejsi have found one benchmark in which yii is faster than codeigniter and another benchmark in which codeigniter is faster than yiitry using innodb instead of myisam innodb has more optimization tricks for select statements especially if you only select indexed fieldsthe pinoyyd post is neater and get straight to the point how do i authorise a background web app without user interventionin c memory most other things are managed by the programmer so strdup is no worse than forgetting to free malloc ed memory failing to null terminate a string using incorrect format string in scanf and invoking undefined behaviour accessing dangling pointer etcsee this blog when you have 10000 request koa performs better than express4 tcp is a slower than udpmemcpy will always be faster than strncpy for any real world situation even in the corner case i spoke before look page_copy_fwd_maybethe idea of saying break out of the nth nested loop is worse than a goto from a structural perspectivewhy does memcpy perform slower than memmove on my systemthe official tutorial on bitwise and bit-shift operators has more information about other related operators and xor left shift right shifttrampolines never runs more than one thunk at a time so if you breakdata-size xml very verbose but usually not an issue when using compression and thinking that the write access case through post or put is much more rare as read-access in many cases it is 3 of all trafficdivision is per se slower than multiplication however i don t know the detailsmultiplication is far easier and faster for a cpu to do than divisionredmine handles multiple projects and sub projects far nicer than traci searched a bit and found that dill can perform better than pickle with classes but i am having problems to implement itarmv7 is usually better but for arm fixed-point arithmetic is usually a lot faster than floating-point implementationsany attempt to reuse a single parentedtree as a child of more than one parent or as multiple children of the same parent will cause a valueerror exception to be raisednot necessarily better than the repeater suggestion but another option is to use a gridview control and a datatable data structureaddition and subtraction is worse as these have to be done in sequence of two operations and the second operation requires the first to have completed - this is not the case if the compiler is just producing two add operations on independent datatry-catch is actually slower if there really is an exception-handling thrownubuntu has nicer frontend and could be more suitable for windows emigrants while debian is more for backend guysas far as security goes post is much better than get as the data is sent behind-the-scenes rather than embedded in the url making it the typical protocol for login infohere for what it s worth is a pipes-csv variant which just compresses each parsed row into an unboxed vector of int s by hand this easier than finding double which is what this csv is really storing using readint from the bytestring package.regarding cloudant it s more or less just couchdb so to connect you can use these libraries from the couchdb wikifor something like a search where you are retrieving information it might be okay but for anything that stores information the post redirect get pattern is a better approachfor those who are more comfortable with maven you could add this dependency to your pom.xml filei personally think the while loops looks less clean than the nested for-loopperformance of jackson is better than gsoni m currently coding a upgrade system which will do best to avoid more than one upgrade path for a specific higher versioning but it may exist due to versioning branchingusing mef for the add-in architecture over prism can be cleaner because the reasons for each project are vastly different and mef has a cleaner model i think it can also act as a basic ioc containerin the case of cryptographic hash functions like md5 it is even worsewhile the delphi pascal syntax is more text oriented begin end or and so the underscores look a bit strange as you don t expect them thereadditionally if you have strdup then it is much more convenient than strlen + malloc + strcpy with identical result including the same obligation to free the allocated storage when you no longer need itin this particular case it would just copy the 3 bytes as expected but why use strncpy when memcpy is a simpler solutionthe standard doesn t specify anything deeper than malloc and free which leaves c libraries free to implement them to work in their target environmentsthe mp4 implementation is more widely used and wouldn t require a webm fallback in most browsersowl and rdfs are more expressive than rdf which means here that you can capture more complex relations for instance you can also represent the link between sets of things rdfs subclassof or use transitive properties hasancestorerlang has a steeper learning curve compared to elixirif loops body can throw a checked exception a for-loop is clearly betterhow to get more than 20 post from instagram using their apiyou may find this task easier with pexpect which is a third-party module for automating subprocess keyboard interactionnormally quicksort is faster than mergesort which is faster than heapsortmutation is typically easier to do this with than crossoversafari behaves better than firefox but an error message Ã¢ Åone error in opening the pageÃ¢ Ã¢ shows up in the status bar if you remove the iframe during the load eventthis doesn t happen in google-chrome and is less frequent in firefox than in iebecause division is often much slower than multiplication if performance is critical you might keep a table with powers of ten and their reciprocalsperformance difference memcpy is usually more efficient than strcpy which must scan the data it copiesi can see that my skeleton mxml module is slightly larger than my actionscript module 66kb vsif your shell is bash or ksh or zsh it s much safer and easier to build up a command with an array rather than a stringmyisam tables have smaller footprints than innodb ones mythwhen such individuals are subject to crossover their children are likely to be worse than either parentafter a few test hashmap linkedhashmap and treemap are way slower than arraylist and i wanted to use them just for the ability to create submapsother than the four options provided by the cookbook - return new user username password salt roles - i need about 20 more fields with getter and setteri have a default installation of mysql and postgresql on my os x box and mysql is 2x faster comparing queries that are warmed up by repeatedly executing the queryif the database is sophisticated enough adding an explicit order by clause will hint that sorting is more optimal for the grouping operation as well as the sorting can then be re-used in the query execution pipelineyou can also read up on how to make rvm work with passenger 3 it might be transferrable to 4 with gemsets though in my opinion using bundler deployment is much better optionso it is considerably less then what facebook states in their documentation at least looking by the date however by count it seems you get more than 50 postit worked in this case in my first part with chars i tried to look at my first part which works fine and i noticed that chars is easier to convert to int basically i don t need to convert it but with string it doesn t work this way i tried to google it but i can t find proper solutionapc is faster on a single server - but memcached is distributedreal life often involves more than merely spaces delimiter wordseven though git-svn is easier to start with here are some further reasons why using the kde svn2git instead of git-svn is superior besides its flexibilityone more edit if you want to use getline instead which you asked about in the comments - and it s even safer than fgets since it will increase the buffer size as needed you would change to change the code a little bitis bower a better fit than npm for asp .net 5 projects with separation of source and build files and if not what s the recommended way of doing it purely with npma for-loop should be used don t you think what loops makes is more clearly stated in the for-loopwhile this is fine in some cases where flexibility is needed reading a line at a time with getline of fgets is the better choicei tried here but google-chrome doesn t show any styling except font color while firefox shows some moresuperclass defines more general features of the objects of its subclassingi can do this in bokeh but i have other issues regarding interactivity which plotly manages betterif you have a team which feels more comfortable with setter getter why noti have links of term on sidebar when i attach more than one post to term it get repeaton all of the other browsers i ve tried safari opera ie google-chrome it looks much less nice because all of those browsers scroll half a screen at a timeremember that multiplication even with strings binds tighter than addition so we must use bracketsmultiplication is much harder than additionof course this is no fewer keystrokes than sudo python although at least you wouldn t need to enter a passwdhashing with sha md5 or any other algorithm solves the problem of key protection because you don t need to keep any secret value other than salt but salt is significantly less sensitive than encryption keyas mentioned above as you remove items the arrays gets smaller so a for-loop is probably not the best solutioni ve came to kohana from codeigniter which was a little bit bigger documentation and easier to understood but as far as i found out many programmers say that kohana are alot better than codeigniterin my opinion using jquery show hide is a better solution at this point in timeyou can get soap services to work on iphone but it s a lot more work than just get or post ing against an urlat the same time the compilation phase for a dfa is typically more complex than for an nfa and dfas don t have all the capabilities of nfasa jlist would probably be better than a jtableunfortunately this doesn t work as children can t have more than one parentif any of the children also has -webkit-filter npx the filter gets applied twice once for child and once for parentfrom what you re describing perhaps a gridview or datalist is a better optionpost is no more secure than get over the http protocolhonestly though postgresql scales much better than mysqlvhdl is more popular in europe and verilog is dominating in the usanother reason to consider this route is if parsing xml files is more complex than filtering off node values grouping elements assigning new ids filtering by attributesthat said using a standard sort with either comparable rows or a comparator is much better than mixing up the sort logic and the comparison logicnext you ll find that the threading model of nginx is much more efficient than apache s for what you re doingi cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysqlit is said that get method is faster than post but i don t know why is itthe reason for doing so is to reduce hardware cost as division is more expensive than multiplicationisn t there an easier way than the for-loop to build this arraysthis question is not to discuss if using copy constructor is better than serializable deserialization or notmemcached is more along the lines of a distributed object cache vs something like apc or xcache which stores php bytecode in memory so you avoid having to parse it each timeyes udp is much much lighter than tcpso while the writes my be sequential on disk for datasets larger than ram these random reads will quickly become the bottle necki want to use accelerometer but i learnt that gyroscope is better option to calculate the accelerometerfor eps is the same situation the post script is more readable but you should apply all necessery transformations on object before get its sizeand my guess as to why an element is being dropped is your compareto method never returns a 1 in any case so elements are always considered to be less than or equals to other elements which is probably screwing with the treesetthe subclassing overridden method cannot have weaker access than superclass methodyou may also want to have a look at dill which covers slightly more cases than pickleif you need a globally accessible variable or properties that s more suited to a base class that your classes inherited fromdivision and modulo are indeed costly hardware operations whatever you do this is more related to hardware architecture than to languages or compilers perhaps ten times slower than additionwhich one goes better with netbeans phpunit or simpletesti am trying to make a dialog pop-up that displays more information about an entry in a listviewin the cases where auto can be used it is more concise than decltype as you don t need to provide the expression from which the type will be inferredit takes a page off of the free_page_list updates mem_map zeroes the page and returns the physical address of the page. here s another post that explains it well and also explains why using calloc is better than malloc + memsetworst case for quicksort is actually worse than heapsort and mergesort but quicksort is faster on averagea comparator class is better since use of comparable would mean usingsaving information to a variable and therefore to ram is always faster than direct to diskso you can t reject the null hypothesis that tolower is as faster as toupper and thus your experiment has got errorshere s another article that describes the listview control and why it s probably a better fit than the gridvieweven this blog from 2007 shows benchmark results that innodb is on par with or faster than myisam under most workloadsi had mentioned that in our rails application all select queries dropped below 100ms after switching to postgresql whereas some of the complex joins generated by activerecord would occasionally take as much as 15s or more with mysql 5.1 because of nested loops with inner table scans even when indices were availablei know it is much easier by using ggplot2 but i need to get it done by latticei use all the events for the drag operation so maybe the initial move is less laggy perceptually in this casefirst of all if it was not for the relative complexity of the expressions here scipy would have been definitely the better option over sympythe lack of salt is harder to expoit here than with password hash since the hash is not directly knownits weird when i use source sans pro it looks bolder on google-chrome but when i switch to safari it looks thinneralso if you want a hover effect you re better off with mouseenter and mouseleave which jquery provides for browsers that don t already support itmodules such as dill are doing a better job than picklethat way each thread can pick up a link when it s ready which makes more sense than partitioning in advanceplease especially test on safari because it has some more problems than firefox and google-chromethen we found glibc also have same issue but increase rate is less than tcmalloci find the best way is to create a cache session folder in your systems directory is more safer i put important things like logs and cache in system rather than application folderstrncpy is more recommended that strcpy because protect your code against buffer overflowyou insert in there but never select from there as far as i know today myisam is better than innodb in this casein the hopes that this will further my goal of squashing out the stupid for loops are inherently slow canard for r here is a re-working of your first version still using a for-loop that is more than 40x times fasteri probably feel fseek might be bit faster than fread as fseek changes the pointer position to the new address space that you have mentioned and there is no date read is happeningdoing something similar with sorting and filtering however is more tricky because i do both of those at the sql levelif your working set is larger than your ram the operating system will be constantly swapping pages out to disk to make room to swap in pages that an application wants to accessp.s. my recommendation would be to remove jsonobject conversion and instead return an object of actual class as internally spring uses jackson which is more powerful json framework then org.jsonthe pattern above is very likely recognised by your compiler and replaced by highly optimised code which will be as fast if not faster as memset but not callocthis can enable the user to download an upgrade patch that is much smaller than the installation package for the entire productserializable and deserialization process runs sloweri believe that the reports are using something more along the lines of vbscript edit oregonghost says vba which actually makes more sense than vbscript than vb.net and very limited at thatin addition using crypt to hash password is betterat some point if you re doing randomish queries and your working set is sufficiently larger than ram then you ll be limited by the small number of random iops a disk can doin a congested network yes udp will send its packets faster than tcp this is because tcp takes then congestion into account using a mechanism called congestion controlthis is happening because i am trying to separate out the search terms based on spaces since spaces comes more natural to users then comma separation or pipes or any other delimiterfor example nginx is much faster than apachei have found though that since i started using the asset_sync gem which uses fog instead of aws-s3 gem i don t have any more trouble with paperclip and s3one way that you can consider for hide information not totally but more stronger than get of user is create a json with your infos and send a post request to your pageon myisam tables in some cases the subselects tend to be faster than grouping by queries due to the fact that grouping by in myisam is quite expensive due to sorting materialization overheadbut then your setter is less restricted than your getter which is odd.i have been testing the practicality of openmp gnu parallel sort algorithms in the c++ standard library and have found the parallel quicksort algorithm to be significantly slower than the mergesort algorithmthis is slower than getter setteri believe post is better than getif you compute the length of the string for unrelated reasons or have the length of the string from other resources it s unclear to me whether memcpy is better or worse than strncpythese are also kept up-to-date much better than the ubuntu debian repositoriesthe community is smaller than grails but the project is supported by springsource who is quite active in the communityhowever gambit scheme has smoother access to c c++ code libraries which far outnumber common lisp s librariesthe scipy numpy matplotlib clan is much better at dealing with huge amounts of volume data than matlab or at least gnu octave in my experienceso normaly you could use heapsort but most times quicksort is fasterreading audio files from ram is much faster than reading audio files from hard diskby something fancier i m referring to more delimiter than spaces grammar punctuation etcthird in my experience going from safari to firefox is usually less problematic than the other way aroundtemplates will be inline in the standard meaning of inline which is more related to the one definition rule than to actual code inliningin the long run you ll have less troubles with supporting tablet multiple screens sizes and you can easily re-use them in different contextsthe question is about is there really any platform where memcpy is faster than memmovei believe it is significantly simpler than opencv which on a raspberry pi for example takes around 1gb of space and over an hour to build whereas cimg is a single header-only file that you include in your code with no libraries needing to be installed which can do what you askindeed you ll handle php object with getter setter which is better in my point of viewsorting is more important to me than filtering so if i have to have both sorting and filtering target the same representation of the data i ll just give up on filtering workingps radix tree is usually faster and more compact then trie but suffers from the same side effects of trie comparing to hash tables though less significant of courseas painful as it s going to be for both of us to perform the upgrade it s probably better to commit the time now and get the code up to the latest versioning than to try to find an older versioning that reduces the effortin a single thread world is different you can use a sorted set a binary tree or your custom data structure that would perform better than concurrent skip-listswhile ant is cool maven is coolerit provides similar css selector syntax as jquery does and it s much faster than beautifulsoup because it relies on lxml to do the parsing workfrom my experience of both i would suggest that velocity is a little bit simpler but freemarker is more powerfulin addition for doing powers of two bitshifting is usually a little clearer than doing exponent though choose whatever works for youxts extends this further but zoo is a better starting pointwhen one of the strings is a prefix of another the performance of compareto is worse as it still needs to determine the lexicographical ordering while equals won t worry any more and return false immediatelywhen you extends you incorporate the code of the superclass into yours sometimes there is no code to incorporate so implements is better suitedthe initial read has to access the disk which is a lot slower than accessing ramit is also proper browser behavior firefox is just stricter about it than google-chrome isplease notice that counting with where is not slower with innodb than it would be with myisamit depends on your requirements but setting up a usb connection is sometimes easier than managing a bluetooth connectioninformation - use memcpy as it s faster than strcpy and we knowone can implement a version of quicksort for a single-linked list but normally this is only interesting as a puzzle since mergesort is much easier to implement and works equally well or better for sorting linked listsif you are not notifying or doing anything else then the automatic getter setter method is the quicker to develop that is not claiming it is the fastest or slowest to execute thoughnginx or other server is not much more efficient than apacheif you are more comfortable with mysql because you should install postgresql locally if you are going to use postgresql for production then you should consider using one of the mysql add-ons heroku offerswith mri i d use forking with jruby there s more of a case to be made for threadingbut if convenience is more important than efficiency yes you probably should consider a tree model not dom necessarily xom is better for example or data binding jaxb or xstreamside note check-out the json.net serializable which gives more options and better control over the deserialization processquite apart from the fact that the language vb.net is far more feature rich than vb6 the fact that you have developed in vb.net means that you have made extensive use of the .net class libraries including system.security.cryptography that you give as an examplei know nginx has lower memory footprint and little faster than apache in serving static filesno objects come magically into existence in swift any more than in objective-cand it said memmove might be very slightly slower than memcpyok if we say that the parent is always bigger than the children because it is above them we writepost is a little safer than get because the parameters are not stored in browser history or in web server logs. also data is not displayed in the urlwhat s the deal i thought actionscript would be nicer than mxmlthat is because that style of loops is a better fit for what you are doing than the for-loop you used earlierinnodb is more complex while myisam is simplerthe reason for this intuitively is that the last multiplication does dramatically more work than any of the previous multiplication so much so in fact that summing up the work of all the preceding multiplies gives something asymptotically dominated by the last multiplyingplus the overhead of doing it is extremely costly- hive queries against hbase are on my cluster at least an order of magnitude slower than against plain hdfs filesudp is really faster than tcp and the simple reason is because it s non-existent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculatd by using the tcp window size and round-trip time rtt .i used firefox as it can be configured to download to a default directory but i don t think the google-chrome situation is any betteri ll just add that if the 128bit number is prime or has a prime factor larger than 64bit then there will be no solution to your problemin my experience hashing is always faster than sorting for joining and for groupingi don t see any form properties in the code you posted so either the posted code has been modified or the properties is higher in the inherited tree simpleformcontrollerin google-chrome the button is wider than in firefoxi try to fit a gam using the gam package i know mgcv is more flexible but i need to use gam hereif you do it over ssl https it is probably more securefor the vm layer i like the containment pattern more than inherited and at this layer i also implement inotifypropertychanged which is also a properties of the vm and not the data modelin either case mongoose is going to add a tiny amount of overhead so it s likely to be technically slower than mongojs but not by any meaningful amount like it takes 5.1 seconds to insert 20k records vs 5.0 secondsin addition to the other answers usually simple multiplication is way more efficient than using powthe perf hit will be ridiculous i know apple say swift execute faster than objective-c but this is low level so it will be harmlessit supports fetch pull and push and is more stable for me than hg-git similar features from hg to gitsince you don t want to repeat yourself it s very tempting to put all your validation on one side or the other but there are tradeoffs either way and it is true that server-side validation is going to be slower than client-sidei don t need more than atomic read operation and atomic write operations i have no use for fetch-and-add compare-and-swap etc.i would like it to be more real time than post get so would like to use socket.io or failing that web sockets or failing that real socketshow can i connect a method and not a command with a binding from the viewmodel to an attached event to ask in a more general way with caliburn microi start off with something like mysql and then later on i might decide that postgresql makes a better fit - and if i have done everything the propel way switching to the new engine is trivial - rebuild and gohow can i find all div and span tags with order preserved.with beautifulsoup it is very simple but i switched recently to lxml since it is much faster than beautifulsoupif your requirement is to store a key with value as json then mongodb is a better fit in this scenario as by default mongodb stores data in bson which is json + additional data typesnote that it currently does not support true parallelism you won t have two threads running ocaml code in parallel but it doesn t matter as ocaml is much faster than many other languages for example on a quadcore the language shootout shows that ocaml outperforms even haskell with multicore capabilitiesdivision is slower than multiplication due to some reasonsalso a post request would be better than a get if you re sending jsoninterestingly enough sincos seems to be even slightly faster than sin without cos and the gcc compiler will use fsincos when you compute both sin and cos - so it does what i d like hotspot to do or does hotspot tooyou can avoid duplicates and still run much faster than union distinct which is actually same as union by running query like thisthe number of ie addons seems to be far lower than firefox and google-chrome extensions - why s thati find the simple solution ant calls maven more obviousredmine was written to be a better trac than tracgridview has much more bells and whistles than datalisthowever i feel like angular ionic provides a better way of doing so that i missedif you re looking for small implementations you might get better results with bottle or flaskbut i don t want to use a for-loop as my json arrays has more than 3 entries and if i request a lot of data in short time it takes long time till the for-loop goes through every entryi finally figured out that keypress has a better compatibility than keydown or keyup on linux platformjust because multiplication has a higher precedence than addition doesn t mean we need to perform all multiplication in the expression before doing any additionwhich steps of aes encryption makes it less vulnerable than desedit2 seems as if i m wrong re post being more secure than getin an oltp database like mysql or postgresql it s better to use a range query over an index where you keep track of the last value seen on the previous pageyour object literal cannot have more than one getter or setter with the same namethe code is written like this in the belief that a shifts and adds are significantly faster than multiplication and b the compiler doesn t know the best way to multiplying by tentcp is a bit slower than udp but more failsafeif you can t afford lost packets then tcp is probably a better option than udp since it provides that guarantee out of the boxhowever note that post is not much safer than getthe fact that bcrypt produces hash slower than md5 because of security reasons is also clear for methat will make it easier to do operations with this value equality greater than less than addition subtraction etc...i wonder why everybody missed that multiplication is much faster than divisionall of rsfalcon7 s suggestions can be combined into a super rule do as much as possible in unshared resources l1 l2 caches - implying economizing on code and data requirements - and if you need to go to shared resources do as much as possible in l3 before going to ram before using synchronization the cpu cycles required to synchronize is variable but is slower - or much slower - than accessing ram before going to diskconsider using force.com canvas now ga which is an added-value iframe with more security and easier integration with salesforce apis than raw iframes - seein my regex replace modifier with public private protected replace returntype with the return type and replace methodname with the method name.disclaimer i am more familiar with haskell than ocaml so i may not be doing things in the most idiomatic waymouseover events can occur multiple times so mouseenter is a better option for thiswhich product mallet or weka is better for text classification taskit s slower than simple for-loop from 1 to arrays length and ipairs is deprecated in lua 5.2 anywaysince ant is more of a scripting tool and doesn t impose structure or lifecycle like maven and gradle you simply manually invoke ant when you want to use itin this situation storing password hash and the salt is more secure than storing the credentials encrypted or not because an attacker would have no way of getting the password back even if he manages to get his hands on both the hash and the saltso yes - toupper is more reliable than tolowerif there is a long execution time the execution time is greater than settimeout or setinterval to set the timein addition x86 is furhter complicated because there are generally separate documentation manuals for 32 bit and 64bit processors i m not familiar enough with arm to comment hereprofiling is known to slow pypy a lot more than cpythonplease note however that this architecture implements tcp which is much slower than udp and will not work for any type of fast-paced data intensive games but should accomplish your goals given your description abovethose answers was that calloc can allocate larger blocks than malloc can and etcthis solution is cleaner than implementing comparable by your dto because you can create and use many comparator acording to your needsthere s not really a graceful way to break out of for l although it is much faster than a goto loopnote most recently i have been using bazaar and hg with fully powerful regexps so may be looking for stuff more powerful than git providesi generally use interfaces are too enforce a common behavior that a group of classes share whereas subclassing is more appropriately used in cases where you can achieve serious code re-use through inherited functions propertiesin term of speed square rooting is easy a few arithmetical operations for some newton-like method but it is not clear what asin does probably quite costly cos is likely to be one order of magnitude slower than sqrt and thus one square root is likely to be quickier than those two transcendental function callswhich java framework awt or swing makes more sense for something this simplenginx will definitely work faster than apacheif you measure properly you ll see there s essentially no difference enumerate is microscopically faster than xrange in this example but well within noisesolr - the collapsingqparser is really a post filtering that provides more performant field collapsing than solr s standard approach when the number of distinct grouping in the result set is highmy assumption in the question above is that disk is as fast as ram or faster than rami would like to combine hover onmouseover with onclickgenerally you can have as good performance for reading as in myisam in innodb tables - you just can use count without where clause and you always should have a suitable index for where clauses as in innodb table scan will be slower than in myisamhowever consider that pypy might do the linear search 100 times faster than cpython then a few times might be dozensi need to create a menu based on that list but cannot simply list all post and get it because it is a busy blog and has more than 2000 postie8 is the same and firefox is much better but i ve migrated away to google-chrome now so would like to stick with the one browser if possiblepostgresql license bsd is undoubtedly more simple than mysql sa for-loop is nothing more than a glorified while loopshaskell has fewer industrial users than ocaml and although it does have multicore support it is still being developed in a very unproductive directionyou can avoid duplicates using union all and still run much faster than union distinct which is actually same as union by running a query like thisi would like this function to work in firefox ie google-chrome etc but at the moment it only works in google-chrome and older than firefox version 49again this is perhaps more clear than using raw sql and only requires one query but this one query could be very large it will return all items and their categories and doing the grouping filtering yourself is probably less efficient than letting the database do it for youit returns a byte arrays of all the pixels which can be iterated much faster than a for-loop with a call to getpixel inside nested inside another for-loopedit i tried ie google-chrome firefox to test and i found firefox reflects changes faster than otherswe can also do more than show hidewicket probably has more resources than vaadinthis is one of the trickier differences between tcp and udpa lot of articles about bazaar will tell you it is a lot slower than git or mercurialapc gives you some more functionality than memcachedvariety of supporting widgets is probably the single area in which archetypes is still stronger than dexterityto be trying to implement them using different protocols tcp and udp is even odder h323 voip is the only applciation i know of which does thisso the avx version does indeed appear to faster than the sse version both for the original implementations and the optimised implementationsjvm hosted languages are generally going to be faster than traditional mri ruby and both java and scala are generally faster than jruby when it comes to raw cpu capabilitiesi also use objective-c more than swift but here s what my guess is as to what the objective-c code would come tothough making use of javac api in a nb modules hard to do something better than a getter setteruntil people have more experience with google-chrome i would think firefox is a better choicethis method is more general than show hide as it can be extended to any style rulei think you are confusing deprecated which means the api method calls are marked to not be deleted in the future and should not be used which being replaced by newer features as in gridview and listviewnonetheless i tried to compare the sum of all test speeds and in some cases nunit is faster and in other cases mstest is fasterthe console for safari and google-chrome imo is betterasp with jscript is 100 times better cleaner simpler nicer than vbscript and makes my job a joy rather than a vbscript head achealso i ve used a for-loop and not jquery each loops on the sections elements because a for-loop is much faster due to the lack of function callback an each function hasit may even use a different server software say nginx or lighttpd that has less overhead than the traditional apache setuponÃ¢ running the application in single step mode also into the standard library functions strcmp and strtol it is even clearer that the processor has to do many more instructions to run an integer comparison in batch file than a string comparisonto copy a string in c use carefully strcpy 3 often strncpy is betteryes that may since your allocating with new but deallocating with delelte yes malloc free is safer here but in c++ you should not use them since they won t handle de constructorsfrom an interface design standpoint you want user-agents to make post and put and delete more difficult than get or at least distinctly different so that users can rely on that difference to hint when their actions might cause a change in the resource state because they are responsible for those changesnginx is very fast much lighter than apachealso note that they are much slower than proper getter and settermost likely sqlite3 needs to be upgrade to the most recent versioning which has a newer node-pre-gyp dependency which in turn should have its own updated dependencies to work properly with modern versioning of nodethe octal encoding mechanism is less error-prone than hex so i ll demonstrate using octalgenerally i ve read many time you should do ajax calls as get requests not post because post produces more overhead and trafficthere are multiple reasons why the swift code is slower than the objective-c coderegardless the irc protocol is more simplistic in nature can handle orders of magnitude more client connections than xmpp for the same memory utilization uses less bandwidth on the wire doesn t require authentication although you can add this feature etcpresumably you know that it is precisely that no node has more than one parent or more than two childrencompilers are getting better with inlining the use of function pointers where the function is actually known but contemporary compilers certainly don t always inline-functions calls through function pointers even if all the context would be therebut in c++ std ostringstream is better and typesafe as joachim explained in his answerfrom what i ve noticed lately using case with aggregates min or max performs better than pivot although not as prettywarning you are using requests versioning which is older than requests-oauthlib expects please upgrade to 2.0.0 or laterit is more intuitive for than vim or emacs for the beginnerson the other hand swift is easier to learn especially if you have objective-c background so it can be adopted during the time slowly and paralelly with using objective-cstephen string search or a compiled dfa you can construct them from an nfa which is easier to makeusing the same data google-chrome does in less than 5 seconds what took ie and firefox 10 to 15 seconds to accomplishif we use hex because it s a simplification of binary that makes things easier on the programmer is easier to read than binary and carries more data etc. why do we not jump to the next logical step base64depends i came from php4 and didn t really touch the level of oop needed for the php5 kohana framework i ve used classes and functions but the hmvc is a process on it s own to learn when it comes to kohana vs yii i d have to say kohana is easier to pickuppost would spring to mind but i think get is a more appropriate method because 99 of the time you only supply a bunch of parameters to these types of actionsbasically while sending udp packets larger than mtu ip fragmentation can occur if it s supported on your platform but not all platforms support iti read in some blog that orientdb performs at least as good if not better than neo4j while also offering more complex types like mongodb wouldin this case i converted the cvs to svn and found the file size on the hard drive it was on my own laptop at the time but it was much smaller in svn than in cvs but there could have been some compression applied i dont know but everything on the web said svn would actually be bigger than cvscloudpickle might be a good idea for your problem as well it has better support in pickling objects than pickle not per see better than dill and you can pickle code easily as wellit is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-caseyou linked to a question about a war vs a jar while spring boot s jar is indeed a jar it contains more than what you usually put inside a jarfor time measurements use google s cpu profiler it gives way better results than gprofgenerally speaking udp has less overhead than tcp allowing you to receive more data but this is not a strict rule and is almost negligible in this contextin the case of core data running with a local sqlite store your predicates and sort descriptors get turned into a sql query so there s no need to instantiate and work with objects Ã¢ the sorting and filtering happens much more efficiently on the backend and constructing objects is necessary only for the resultsmergesort is slightly slower than quicksort but it does not have quicksort s susceptibility to pathological casesisnull will be faster i think because it has lesser function code implementation for itself making it faster than coalesceaccording to my experience yii is easy to use but it has some pros and cons too every framework has but i used laravel on some projects and i think laravel is much more better than yiinginx is typically faster than apache but with a low request server it hardly mattersperforce offers more advanced branching and merging capabilities than svni m working in matlab in which nested for-loop is used to collect data and store in cell arrays however i want to collect data and the inner loops is collect further in the same cell arrays according to its positionthere are several q a for why is innodb much slower than myisam but i could not find any topic for the oppositeto send large blocks of data via udp you need to chop them up into pieces smaller than the mtu for the network segment across which you re transmitting themnote also that in general it is best to follow the pattern of reloading pages with get after post which makes you less susceptible to form resubmitions in which case using sessions for storage is the better solutionthe questions should i use for-loop or is it better to do it recursively next insert will be called after previous is done should i check if saved.length datalength and then return the arrays or is there some better way how to do itother options to check are relaxng which is more flexible and powerful than xml schema or schematron which allows for exactly this sort of validation that needs to go deeper than structure and simple type-checksif you insist on having the data in 2 arrays it is easier to iterate the arrays using a for-loop with an index instead of a foreach loopsunion all is faster than union distinctif your array s retaincount is greater than 1 at the start of dealloc some other object is retaining it at least temporarilyisnull is better then coalesce because of how datatypes are handledmy lwip can send udp packets to pc but my pc would fail to reassemble when the udp packets are larger than mtuyou can build apps a lot quicker with yii due to the code-gen and active record but it will be a bit harder to learn than codeigniterif we try to uninstaller or repair it it would show the install welcome screen and if we go further it would end up with our install condition failures because required prerequisites software is no more therei know this question is a bit older but in es2015 there is a new data structure called map that is much more similar to a dictionary that you would use in c#quicksort is approximately 40 faster than mergesort on random data because of fewer data movementsi use both gentoo and ubuntu and i see that emerge the package manager of gentoo has a higher readability than apt-get aptitude just because it uses way much more color output than the latteri currently have myisam and i would like to stay with it because it had far better performance than innodb in my case but i heard that innodb has acid transactionsjust copy the content of your code in doget to dopost it should work or else set form method get but in case of password validation post is better and write your code for validation in dopostthis is because your ubuntu system has newer system libraries than your centos onein reality the inline keyword has less to do with inlining code and more to do with allowing legal violation of the one definition ruleif the subclassing is more specific then it might fill in all by 2 of the arguments to its superclass __init__ methodmemmove on the laptop runs slower than memcpy but oddly enough runs at the same speed as the memmove on the serverrewriting the while loops as a for-loop is nicer and makes it less likely to get an infinite loopsi have successfully set up vvv on virtualbox in the past but i ve been told vmware is much fasterwhich of the two consumes more memory is not defined and depends on the input sequence to be sorted as well as on algorithm tuning parameters see the comments to one of the answers to why quicksort is more popular than radix-sortin some applications tcp is faster better throughput than udpalso remember that dns requests can use tcp if the request or response would need more than 1 udp packetyou want to make sure the code will work when users upgrade more than 1 versioning and that the update statement only runs the one upgrade it is neededyou ll probably need to get data anyway so the unique salt is probably faster too because you won t need to calculate the hash over usernamefor example if you want to implement an equivalent of std map it would be a pain to do it with a red-black tree but a skip-lists is much more manageableboth comparable and comparator work for you but i suggest comparator because it doesn t require you modify person class you only need the write an implementation class based on the sorting attribute therefore comparator is much more flexiablelxml will let you use xpath here which i think will be less painful than beautifulsoup s interfacethe situation is critical if on some platform libtiff provides a narrower functionality and does not link to libjpeg which will not be available on that platform at all so the above command for linking will fail due to unsatisfied library dependencyi know firefox google-chrome provide svg support and i have the feeling that google-chrome is faster at rendering but maybe there are other standalone svg renderers that i m missingfor static file serving i found nginx performance lot faster than apachenginx is more picky about case of file names than apacheas an added answer there is also the aggregate-functions which is more general than sumapache made a claim that apache 2.4 will offer performance as good or better than nginxas mentioned by ifloop this would be running a cpython c extension module on pypy which often works not always but is slower than on cpythontranscendental functions are always much more slower than addition or multiplication and a well-known bottleneckcharacters post is more robust and secure than getit s a shame postgresql isn t more popular than mysql since it supports exactly this feature out-of-the-box you d only have to share one sequence object between tables.also note that for form submission it is typically better to use the onsubmit event as opposed to the onclick event since forms can technically be submitted by hitting the enter key as well as clicking the submit buttonas accuracy goes i ve noticed that for directions here in north carolina mapquest is slightly more accuratehowever when i run my program on windows 8 dev preview it always pop-up dialog that asks user to enable .net 3.51i ve been using images to store data since editing binary data through paint.net is much friendlier than most hex editorsso my question is how do i determine what the last modified file is from more than one directory actually need it for four different foldereven if all the traffic resides on the same network the client traffic will have been throttled by your wan capacity which is always less than your lan capacityfor batch puts it s better if you construct a list of puts and then call because it uses a single rpc call to commit the batch but depending on the size of the list write buffer may fflush it all or notfirst vb.net can be used to perform this xslt transformation which is really simple as you said just applying the xslt stylesheet at server-side if it is considered better than at client-side or even just sending the processing instruction for that to the browserbe aware that there is more than just powerpc and i386 although these are the safest architectures to choose for a universal binarydoes this mean that the old adagio about jruby being faster than mri ruby is gonei know that probably issuing dotnetfx45_full_setup.exe q will have no bad effect if installing on a system that already has versioning 4.5 but i still would like to not install the upgrade if the upgrade already exists faster and less problemswith innodb there is less time lost from table locking while myisam is faster in table readingsa database using a separate server to manage multiple clients such as mysql or postgresql is a better choice if performance is an issuei think mouseenter mouseleave is better than hoverstrncmp is a little bit safer than strcmp because you specify how many comparisons will be made at mostswift s compiler is also doing a lot more than objective-c s compiler considering swift is more strongly typed and does not required specifying imports among other thingsinnodb when tuned well performs better than myisamif too much memory is consumed it might swap to disk which is slower than rammayavi has more options for moving the camera than matplotlib but it doesn t seem to have a way to rotate around the y axis so i m guessing i ll need to perform some complex calculations on the azimuth and elevation to achieve the same result - but i m at a loss as to where to start i m new to working in 3d space and my brain doesn t think that way yetthere is a certain irony here given that within xslt push stylesheets are generally more idiomatic than pull stylesheetsrunning the same test on linux with gcc similarly pegs int and long as similar and both faster than chars although the difference is less pronouncedping is just low level icmp protocol defined in internet layer whereas tcp is more complex protocol defined in transport layeryou need to error check strtol and ensure there are as many passed before using them -- strtol is better than atoi as helps detect errorsbut since ntlm is less secure than kerberos why isn t it the other way aroundyou will need about six times less disk space to store and memory to process your dataset compared to innodb or about 2-3 times less than archived myisami resolved the problem the point is that a pkcs#12 file as a pfx contains more then 1 certificate so it must be loaded in this waythen you use it as seed in random which is less good that one is a non-cryptographic prng and its output may exhibit some structure which will not register in a statistical measurement tool but might be exploited by an intelligent attackerit turns out that if comparisons are cheap mergesort tends to run a little faster because quicksort spends more time fiddling with pointersweb2py has more focus on simple is better than complex but django has more focus on explicit is better than implicitcssviewer a firefox google-chrome extension is way faster for checking font sizes and other typographical properties like font weights and line heights also color on elements one after another than devtools inspectmysql is more preferred db choise for symfony projects symfony mysql symfony postgresql so choosing postgresql is a rare decision and maybe there are some pitfalls those we have to consideri know that when it does the whole configuration settings are representing a much smaller screens than the tablet s screens but how can i tell if this is a regular phone device with a small screens or a tablet running compatibility zoom modeyou d be better off with memcpy which is probably close to what your compiler gives you for free if you just write the class the normal naive way with no std array and no pointer gymnasticsspeed isn t important here but in other applications it is good to know that regexes are very fast 100 times faster than lxml and 1000 faster than beautifulsoupuse firefox rather than google-chrome - google-chrome with dev mode is much slower than firefoxmay be postgresql takes less time than mysqlan incredibly rough eye balling of the numbers they posted showed bazaar to be 2-4x slower than either git or mercurial in the use cases testedi think ie uses bigger font than firefox or google-chrome by defaultas far as when awt may be more useful than swing -actually your code doesn t work on firefox because he is less forgiving than google-chrome about errorsimho loops looks better with a for-loop iterating in the right directiongetline is far more flexible handling the allocation of space for you with fgets it is up to youfirstly while a for-loop is not wrong here a for each loops is more appropriateif noop a put may make more sense than a post which would imply creating a second connectionthe good thing about this macro is that it should work with c89 and c99 compilers 1ll can be replaced with 1l and long long can be replaced with just long and ll with l of course if your c89 compiler does not have the extended long long type from c99 and it also correctly supports types smaller than int chars and shortnobody has ever accused git of being easy-to-use no tortoisegit for example although i hear it s coming so you might be better off with svn beanstalkso for such an application is it will innodb be a better choice over myisamprobably using a jlist or a jtable is a better choice than display records using text fieldsass supports more formatting options but srt is a simpler format and can be modified with the force_style option in the subtitle filteri have a objective-c application working fine and smooth to be more comfortable with swift i decided to write the unit tests for this app in swifta time ago i change glassfish to wildfly it works better than glassfish but i m having some problems with this exceptionmergesort uses about 30 less comparisons than quicksortswing is the weaker of the gui technologies relating to accessibility in java compared to swt at any ratebasically the methods will range from a base of ienumerable all the way up to ilist which has a larger selection availabletcl is no better nor worse than perl ruby python or any other scripting language in this regard -- they all do basic file operations with equal aplombno hate against gson but in my experience jackson has been more featureful and the lead dev is very good about addressing bugs feature requestsi did some research and found that udp may be more suitable in this case because udp hole punching works much better than tcp hole punchingcoalesce is the more standard alternative of isnullif you care about your user s passwords at all use something more complicated than md5 and ideally you should have a salt string of some formyou can use treemap instead of linkedhashmap because you dont want to retain the order of insertion and for sorting treemap is better choicei really like postgresql s indexes which are far better than mysql sperformance is browser and device dependent for example firefox handles objects better than arrays while google-chrome prefers arraysi haven t tried coded or retrospectiva but i ve used both redmine and trac and in my opinion redmine is better becauseso that the strncpy is more secure than strcpyis strcmp slower than strncmp as one can give pre-calculated string length to it but strcmp does not receive such informationthis is a lot more pom.xml code but i like it better than the maven-shade-plugin because it does just what i want and nothing morequick takeaway of the benchmark jackson performs 5 to 6 times better than org.json and more than twice better than gsonno guarantee but it s rather likely. in your case it s even more likely as linux freebsd and os x are all posix-compatiblethis python3 cgi https server used to work a few weeks or months ago but now no longer works under linux ubuntuif you have access to memcached or apc on your webhost some shared plans disable this functionality look them up as they are considered fairly high-performance forms of caching as it utilizes the system memory directly memcached is more suited for distributed systemslist comprehensions are preferred over for loops but they essentially do the same thing if a for-loop is more understandable you can break the expression above to a for-loop it looks like thiswebclient has a much simpler interface than httpwebrequest and takes care of reading and writing from the streams for youbeautifulsoup is a python package that parses broken html while lxml does so faster but with high quality html xmlif your service already has an rss feed things are even easier with the rss reader integrated in the buzzbox apiyou probably don t want to go back to anything earlier than delphi 3 but some pascal programming books can be helpfulor if you re really focused on only doing opengl i may suggest using glfw which is the better glut but you ll have to draw the menus yourself using openglyou need to control many logging configurations i think the logging agent on ubuntu debian is better choiceim new to swift but i like it more than objective-c as it looks a bit like java does to me from syntax wise compared to objective-cnevertheless i need a dynamic list for my loops with nested loops which is processed more than 500 times and multiple if-statement therefore the arraylistyou ll want to have multiple radio button each with it s own value to set some property to although this is weird for a yes no you are better off with a checkbox but if you had multiple values this is how radio button workif i m not mistaken when capistrano makes the current folder it is actually a shortcut for lack of a better term to the most recent release perhaps symlinked directory is betteris it possible that the division is six times slower than multiplication andthe swift compiler is doing a lot more and is quite a bit newer than the objective-c compiler so it unlikely it will be as stable fast for quite some timethis code is more for an example and in this example below it is checking to see if the versioning of notepad.exe needs to be upgrade that means the versioning stored in the property table value notepad_verson is greater than the versioning of notepad.exe on the systemthe comment of hanky that linked to myisam versus innodb tells you more about the differencesas one good programmer can be more productive than two average programmers i vaguely remember an old ibm study concluding someone in the top percentile was 27x more productive than median it s useful to see the same programmers doing it both waysregarding comparison between gridview and listview my experience is that listview is more lightweight as compared to gridviewsince the filesystems is more than likely fat or fat32 protecting it permission based way would be more convolutedthe x86_64 64bit platform is much more than twice the width of the x86 32-bitalthough firefox is a better browser for developers than google-chrome cause it gives you more tools to work withon the other hand the secure tunnel created in a vpn is far more secure than remote desktoppostgresql is a little more strict than mysql about type conversion and does not let you implicitly cast convert between numbers and stringscalling suppressfinalize on an object implementing a finalizer does nothing more than set a bit in the objects header which the runtime checks when calling finalizer which will suppress your finalizer from runningthat doesn t cover some of the more fundamental problems with maven such as its namespaces breaking java namespaces and xml namespaces it s build unit the pom.xml having no relation to anything in the actual deployment environment think about it when you separate via poms what are you actually accomplishing in the finished producti have tried to put my imageview in a linearlayout and put a weight on it but if my imageview is smaller i have a blank between the imageview and the textviewget is better for some cases but it seems to me you should use post insteadswing is better and few people remember how to use awt componentspost explaining why spi is faster than i2cand im not shure about this statement javascript likes settimeout more than setinterval which gives a little performance boostthe style was common in vb6 with optional parameters but imho and according to microsoft in vb.net overloading is usually more elegant than optional parameterst s purpose is to test the thesis developed by steele and sussman in their series of papers about scheme that scheme may be used as the basis for a practical programming language of exceptional expressive power and that implementations of scheme could perform better than other lisp systems and competitively with implementations of programming languages such as c and bliss which are usually considered to be inherently more efficient than lisp on conventional machine architecturesthe normal for-loop is useful when you don t want to visit every element in the arrays or if you have more than one loops variablealso google-chrome has a great tool that allows you to edit css on the fly which i find more useful and quicker than using firefox s extensionsi understand redmine is more of a trac clone but retrospectiva seem to support agile methodologies via a nice pluginthe above works deleting .bak files older than 7 days in those folder my question is how can i reverse that and delete .bak files in every other directory that s older than 3 days without deleting the ones kept from the first queryunicorn does not use less memory than passengerthere is the mono project that aims to allow .net code to run on mac and linux but between the two delphi being pascal is somewhat more portableso your for-loop will complete before any of the timeouts run and before any of the ajax success callbacks run and all of the timeouts are scheduled to run 2000 milliseconds after loops finishes more or less at the same timeit s can be done in both server-side and client-side but in server-side there s more benefits like database searching before parsing page html and testing routinesi am using postgresql btw which can do more than mysql incase that changes thingsas in title why is multiplication much faster than subtraction in this examplefor all the reasons linked in the comment and elsewhere svn tends to be a much better enviroment than cvs or vss unless you have some weird requirements - so if you can successfully import your history and save the company money i wouldn t see why the bosses wouldn t go for itmicrochip is more successful in industry and has better tools than avreven if there are no inherited enumerable properties it is still more work to do than noti feel like the getter setter example is more clear and hides the implementation details of what name and description aresince cakephp seems to be much lighter than zend-framework i would suggest that you take a look at cakephpcompared to a non worker version in google-chrome my benchmark is somewhat slower in firefox it is much slowernginx Ã¢ without any optimizations done Ã¢ is much faster than apachei read that flask for beginner is better than django because educational reasons at the same time django have django oscaris nginx + php-fpm is suppose to do server operations much faster than apache + mod-php due to efficient usage of memory and other resourcesit seems that settimeout has bigger priority than setinterval which could be delayedit seems mysql is more forgiving with this than postgresql but in every case you use a reserved word you should escape itcut and paste in vim takes more steps than in emacs iircand even though everybody says ruby is slow buildr was 2-6x faster than mavenkeep in mind that using setinterval is less efficient for this case then using settimeout which doesn t require comparing times at all as it schedules the alarm to occur at a particular time as setinterval will use more processor cycles to both schedule a check and then to compare the timesthat would mean i d need to do a post rather than a get though get makes more sense when i m just getting some static data rightvim is more powerful and textmate is worth the price tagproperties specially automatic properties in .net 3.5 are more concise than setter getter and less lines of code less code to maintain less bugsat the time this was faster because addition was a lot faster than multiplication but that s no longer the casepython respects this definition whereas in most other programming language the modulo is really more like a reaminder after division operatorthen the multiplication happens before the addition because multiplication is higher precedencewhat are your strategies best practices when it comes to dealing with a reasonably sized sql server database anything larger than northwind or adventureworks - do you use multiple filegroupsthis approach will radically reduce heap space usage - disk space is cheaper then ram toouse myisam usually much faster than innodb if your data base isnt transaction orientedoccasionally the stdout needs more than a write method fflush is another common one which stringio will handlei suspect your curly braces aren t in the correct place as per scheff s comment the scope of the page variable is contained within the for-loop and you are attempting to do more operations after loops is oversometimes a linux distribution contains far more than an operating system but is informally referred to by a single name such as ubuntu and so the line between what the operating system is the linux kernel and standard libraries perhaps and the applications that merely ship with that operating system the gnome and kde environments on linux is pretty grayon your screenshot div width in opera is bigger than in firefox and google-chromesince bit wise operations can be done very fast and division operations are relatively slow this type of modulo is much faster than doing a divisionanother reason to choose nvidia is because that s what the hpc system builders have been building systems with since nvidia made a huge push for gpgpu computing where as it s less backed by amd atiin addition jemalloc tries to optimise for cache locality since the act of fetching data from ram is much slower than using data already in the cpu caches no different in concept to the difference between fast fetching from ram versus slow fetching from diskfor example using renatoargh s test google-chrome is faster with option 2 firefox with option 1if you absolutely must connect to a database hosted on the cellular network end i would suggest you try setting up a vpn openvpn is a good product available on many platforms or using a reverse tunnel it s simpler but you will need to setup the reverse tunnel everytime you want to access remote databasei know udp is faster than tcp for various reasonfor example if you had a class in which it would make sense to do addition before multiplication how could you make the addition operator have higher precedence than the multiplication oneedit based on the tests done by multiple people and by theory isnull seems to be a better option over coalescethis also affects how it is stored which leads to myisam being slower than innodb on insert due to myisam requiring a full index re-write on every insertionit is entirely possible that in most implementations the cost of a memmove function call will not be significantly greater than memcpy in any scenario in which the behavior of both is definedalso very particular that this should be done on centos or amazon linux which makes things worse for me as i have been on ubuntu for longso turning a non-vr game into a vr game that doesn t make you sick will unfortunately take more than mouse keyboard emulationi admit javascript isn t my strong point and have a much easier time with objective-c and swiftinto swing application i like to avoid using it with swt but is its more easier its okdatamapper idea is definitely better than activerecordcan the geocode gem support more than one geocoding stepopted to use arduino from command line because it suited my needs so far i know avrdude and avr-gcc is a more complete or better way to compile upload from command line correct me if i m wrongif a listview or gridview is a better approach i am open to that as wellin fact i think it is fair to say that bellman-ford is more similar to dijkstra because of its use of iterative relaxationi haven t worked with awt much but swing is much better from the gui developer s point of viewironpython has had more time to focus on performance improvements but ironruby has made significant performance improvements as of latei ve found that bootcamp was slightly faster than vmware non bootcamp image but i still use vmware the majority of the time because i like using the host os for things like mail chat browsingsince the author of the specialized memory allocator has more knowledge on the size of the objects allocated from the pool and how those allocator occur the allocator can use the memory more efficiently than a general purpose allocator such as the one provided by the stlin that sense reliable udp cannot be faster than tcpif you used aes then you might see a better speedup over the des 3des observationshowever svn protocol is much faster so i suggest using collabnet svn for performance reasonsor whatever you branched from so the resulting history will appear i started from later version and the merge back will probably be fast-forward it s easier to work with especially since you are rewriting the actual history to logical changesets anywaytalk about sql server 2005 adventureworks is better than northwindbazaar is a distributed version tool just like git but is imo simpler to setup and useps you can also migrate to postgresql it s smarter than mysql when choosing right indexesmy understanding was it was written in vanilla python cpython but if you are more comfortable with ironpython it shouldn t be hard to translateyou used a older versioning of vagrant before 1.5 versioning and made an upgrade to vagrant greater than 1.5 versioningin the previous example break is better than gotothe height of the blue bar in safari and google-chrome matches but in firefox it is smallerit turns out i had a hard coded maximum index in my for-loop which was bigger than the arrays i was trying to assign toredmine handles multiple projects and sub-projects right out of the box and overall seems nicer than tracfor comparison of strcpy and strncpy which is the safer alternative see their manual pagehowever you cannot do anything more than get the content -- you cannot add headers cannot use postfor example sometimes a for-loop is faster than the built-in arrays methods in some browsersfirefox can get away with more than google-chrome before abortingyou could use rsa but a symmetric algorithm like aes is faster if you can find a way to exchange keys in a secure waythe solution has a modular design and better performance than ffmpeg or libav at the current timelxml enables you to search for elements using xpath which i think is easier than using beautifulsoup s apithe wording in your question seems to suggest you don t care as much that the output is mips but rather you want the output to be less complex than x86all of racket s languages can interoperate so your language of choice is up to you though the rnrs languages tend to go unused in the racket community #lang racket is much more useful for writing programs than any of the scheme implementations but they can be useful if you want to write programs that run on different scheme implementationsfor example you know foreach loops is heavy and if we use for-loop is betterbut i guess google-chrome i have version 10 should be much faster than firefox 3.6other than that accepting a get request might be - depending on the server side rest framework - slightly more light weight than post requestsedit taking into account what was said in the comments though it looks more secure and is recommended by w3 see touheed khan s answer post isn t more secure than get and as riggsfolly saidthis is a use case where a for-loop is cleaner to use than a while loopsas gnibbler pointed out cpython is slower in the simple implementation but pypy is jit compiled for much faster code when you need itwhen you know both objects are arrays method is a faster way to check equality than for-loopudp is generally faster than tcp as it does not have to do the overhead checking of consistency that tcp must deal withi like the auto-complete feature of pycharm but from my experience it is slower than spyderwhen touching the destination buffer of memcpy memset b2 0 buffersize... then the first run of memcpy is also fasterif the hot data won t fit in ram on either machine then disk i o performance becomes more important than ram mostly random read i o and the fsync flush ratei need to make sure that each of these top mail directory sa44-3 is not larger then 8gb so the script should calculate the size of each top level folder and if its over 8gb create a new one called egi wonder if there are any optimizations something more efficient than memcmp memcpy maybe just using a for-loop or breaking it down to fast assembly instructions that can be done to this subroutinei suspect that this may be the case because ie and google-chrome need to know about the content of the div earlier than firefoxangular is built around the belief that declarative code is better than imperative when it comes to building uis and wiring software components together.if you want to get more out of infowindow and put html content in them i would recommend trying infoboxsometimes get is a better option in those read-only scenarios because it makes your url scheme richer and avoids these sort of post warningsif you use twig which i like better than smarty - although i still prefer self-restraint+plain php most ide s that support django templating should work with it since the syntax is nearly the samei have been reading about cakephp but it seems a bit more complicated than codeignitermake sure you re using a source control system that supports branching and merging i ve had experience with perforce and svn and while perforce is better svn is freeeach individual iteration of the code in the foreach loops takes less than a second per worker and looking at the outfile it s clear that processing stops within a minute of turning the monitors off no matter how many times it s been through either the foreach loops or the parent for-loophowever post is a bit more safe than get because get could be stored in the historyall-in all the reason is that nsmutablestring is able to do more things than nsstring and can do anything nsstring can hence the direction of inheritancein addition another coworker said cvs was a lot more popular than svnyes mod is more expensive than multiplication as it is implemented through divisioni would suggest you start with scheme and more specifically with racket formerly plt schemememcached is faster than apc as zend_cache backend but you still need apc extension installed even in development mode to get a great speedup of your codeyes adding more code than getter and setter is fine in your domain objectsudp is more of a fire and forget whereas tcp maintains a connection statein theory quicksort is worse than heapsortyou may also try to signal the same page about a valid log-in by sending some information to the same page using the post or get methods post is more secure but i don t recommend it for this purpose at allthen for class i ve used the addclass and removeclass is better then change it attributespros of objects faster disk read is slower than ram lesser dependencies of the system s stateas last resort resolution i don t suggest this for security issues using ssl is always safer switch your registry to use http instead of httpscocos2d-x already works with marmalade so if you want to take your cocos2d game to ios android symbian webos bada rim qnx and more check out marmalademyisam is much faster for reads but since it locks the whole table for writes this is where overall throughput drops compared with innodbfor simple accessor like these properties syntax is better than methodsif everything is correct why keras perform so much better than lasagnei assume you re using linux or f# would be a much better choice than either ocaml or haskelli am pretty sure it is not possible to compute polynomial division more efficient than multiplication and as you can see in the following table this algorithm is only 3 times slower than a single multiplicationit looks normal in google-chrome every column doesn t resize after updating whereas in firefox it gets smaller and smallermemory is thousands of times faster than disk so if something gets read often having it in ram is drastically fasterusing nginx rather than apache to server the images nginx generally works better to server static content such as thisgoogle-chrome renders longer input fields than firefox and ieit could be a sni problem if you use any kind of load balancer https proxy or more than 1 ssl certificate on the same ipif blackberry device software versioning is higher than os 6 then continue the app otherwise prompt user dialog showing upgrade os first and exit the applicationfast clicking on ie has slower response than firefox google-chrome and safarithe intuition is that division is a more costly affair than multiplicationthis does not happen in google-chrome or firefox and happens much less often locally where the response of the server is much quickerif you need to do anything more complex than put file or get file take a look at edtftpj freethis is better than using a second view a bit larger as a calayer is lighter than a uiview and you don t have do modify the frame of myview which is good for instance if myview is a uiimageviewi rather prefer grep since it s much faster than comm and also does not require the input to be sortedthen when testing the password for correctness you hash it the same way and then compare the results -- sha1 is a common hash for this md5 is better than nothingstd string using appropriate std string reserve has no reason to act slower than std ostringstream in this situationyou can t get more than 20 post if you are a sandbox userif you have to do a lot of this honestly testng is more flexible but you can absolutely get it done in junitlocking unlocking in the getter setter is much safer you cannot forget to do it and more convenient the lock does not have to be directly accessable everywhere you use the property than an external lock on every property accesson a tablet i don t have this issue because the screens size is bigger and i make videoview always on screenscode upgrade require system downtime and if you have a large cluster that cannot run more than one versioning of code at once you ll need to take the entire cluster down at onceat least in firefox and safari it looks much betterthey re much bigger than the uiview of which they are subviews2 executemany is better than execute as it makes for you the prepare statementif you have the ajax use get rather than post this is simpler then you can test the response by just viewing the page with the appropriate query stringstemming gives better performance than fuzzy search because it is done when indexing and the actual search can be performed as exact matchthe waf benchmark has less of a pronounced difference in performance and i d guess that the answer would be more complicated some factors pypy does better some factors cpython does better and overall cpython comes out slightly aheadnosql solutions are better than mysql postgresql and other rdbms techs for this taskas such creating a radio button rather than checkbox is a better solutioni guess one of them is that the push model is less coupled then the pull modeli suggest postgresql it s more capable has more features and better support for complex queries and datatypes than mysql and has a lot of tuning optionsa requirement that the constructor in the superclass runs before any code in the constructor of the subclassing keeps things simplerthere is a firebug version available for google-chrome firebug lite but the firefox version is much better and i d highly recommend you at least try it outso you can access the arrays at any index between the range of 0 and array.length - 1 alas if you wanted to use a for in loops to iterate over an arrays you certainly can however a regular for-loop is more appropriatefor me they serve pretty same purpose to hide complexity except accordion is imho better for continuous-reading it s easier to quickly go to next section while tabs seems to be more random-accessa last suggestion is to convert your db from myisam to innodb but i think this requires some investigation because it not always the case that innodb is fasteri m not too eager for using swt though since i m more familiar with swingsure that s probably compiled or jit d away but you should avoid division in performance critical code it s far slower than multiplying128bit transactions tend to be faster than 64bit which tend to be faster than 32 bitalso it does appear that firefox consistently handles this better than ie or google-chromeafter several tests i found out that my heapsort is way quicker than quicksort i think it should be the other way around my selection sort is also faster than insertion sortrecompiling ubuntu kernels is harder -- it will require working with debian build toolsgoing to go ahead and say that gson is a lot more user friendly albeit less powerful than jacksonthe distinction between int64 and int32 in mongodb is more about bson storage sizeas you can see defining a singleton class in swift is much easier than in objective-calso we see hadoop s sqoop is much faster than spark for this part but it writes to hdfs which will needs a lot of work to be converted to dataset for spark usesit s the only conceptual modeling tool available for relational data the others - erwin and its ilk - being at best logical modeling tools with nothing much better than entity-relationship diagram and ddl synchrnoization which are also provided by object role modeling toolsb magma runs always slower than lapack sequential around 10 times sloweras you can see just doing the multiplication is many many times slower than add or subtractcan someone please help to how use that script using the pypy as i heard it is much faster than cpythonand regarding your first question it is definitely possible to encrypt decrypt messages directly using rsa there are only technical and performance reasons aes is much faster than rsa why rsa is used only to encrypt a session key and aes is used to encrypt decrypt the messages themselvesalso i think the webclient class is more idiomatic these days than hand rolling httpwebrequestgetline is probably better than getchar in most casesxquery works better than xslt for this because it s more amenable to static analysis as it lacks the polymorphism of xslt s template rulesglassfish however performs better than jboss and has a very slick gui-based admin console whereas jboss can only be administrated with a command linehere my problem is date input field in aligning correctly in firefox but in google-chrome it is displaying bigger than all other text boxesthe usual wait time of the post is not too long not too larger than get so i don t think that should be an issue and post always gets back with a 200of course there are many things that make life easier with getter and setter pattern like hibernate that creates proxies on entitieshowever when it comes to error reporting on failed cron jobs that takes some more advanced know-how in the nix space which maybe you aren t interested in tackling at this timein general i have found google-chrome to be more finnicky than firefoxi ve used both db systems before and while postgresql is great for it s licensing terms and standards compliance mysql is definitely easier to get up and running quicklyclient-side validation is more responsive to the user but always back it up with proper server-side checksgsl can do fft s but fftw is better at doing thatfolder objects undoubtedly give the fullest access to file information but the older dir function is easier to use and allows specification of a filename template so i have used thatyou can use alpine linux docker image it is very light and is better than both ubuntu and centos image to be used as the dockerthen for reading i find textscan to be more powerful than fread fscanf the differences between them all are summarized heregoogle-chrome can read lots of locale-specific date time formats but firefox is pickierunless it s a usb keyboard mouse and 8042 emulation is disabled where you would need a usb stack but you can use the boot protocol for the keyboard mouse which is simplerfdo provides those features too interestingly thanks to integration with gdal ogr in some places like fdo provider for gdal but it feels more like a framework whereas gdal ogr feels more like a librarygranted fat is an easier problem but they claim to support many filesystems and it would be my first choicealso you can determine if someone is submitting a form or getting the form by checking if _server request_method post which is cleaner than using a get url parameter though i guess there s nothing wrong with the other approach...problably the problem is that mousemove event may fire earlier than mouseenter in some caseswhile boost is more modern c++ it also harder to use for non trivial tasks - and without a modern c++ experience and deep stl knowledge it is difficult to use correctlyall this will be much easier with yeoman 1.0 which will be more customizable and will let you use whatever gruntjs tasks you wantsorting in java is a little bit more work than in sql on the other hand filtering is more versatile when implemented in javabut the for-loop is not reading writing the last part of the parent file which is less than the arrays sizeon price and support alone then nexus pro makes sense until you get to 67 users at which point artifactory becomes the cheaper optionbtw - i went back and did the upgrade again with bigger jumps between versioning actually ran the site after each upgrade and it went perfectlysha1 is better than md5 because it is a longer hash so can accept more values without collisions although collisions are still possiblestringr provides more human-readable wrappers around the base r functions though as of dec 2014 the development version has a branch built on top of stringi mentioned belowgoogle-chrome shows weird error but firefox shows more specific issuehow does free know how much memory to be free d which was earlier allocated by malloc or callocif they are going to use any non-maven way to retrieve them ui rest scripts ant gradle then you can go with any path and name you like and you ll get full support from artifactory uploading searching etc. with nexus which is much more maven-centric you ll better stick to maven notationwatch out you can t query a superclass if you have more than 1 subclassing then something like in jqlif the worker processes do other things than just calulations read from or write to disk they will have to wait a lot since a disk is a lot slower than ramif i create the same cclabelttf once then i can t add it to more than one ccmenuitem because it will give runtime error about label already addedemacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacsrealloc is worse than malloc in that you will need to have the old and new pointers valid during the reallocany one of the reverse proxy systems can likely do this nginx is popular too and generally has easier configuration than apache but i ve never used it with httpsi m trying to get deeper with post and pre incrementors but am a bit stuck with the following expressioni want to removeclass when scrolltop is more then 200pxtake a look at mouseenter and mouseleave events they are better than mousemove and mouseenter combinationsto say directx is faster than gdi is also something of a simplification - wpf and gdi-based rendering technologies just have different performance characteristicssometimes i got asked on some interviews what benefits does innodb have against myisam and when myisam is better than innodbyou can simulate an anchor using css cursor pointer and events like mouseenter and mouseleave which is more work but does not break the expected behavior of an anchor taghere is a simple performance test showing that in google-chrome filling is faster than clearing i am not sure what goes on with google-chrome and canvas nowadays but in firefox clearing is many times faster than filling both significantly faster than google-chromefrom the wildfly console i understand that the undertow subsystem is receiving more or less 20 requests per second and using the application in chrome i see the requests pending for more than 30 secondsfor example it looks like unicorn is a better choice on heroku than pumamore generally sml tends to be rather more elegant while ocaml has some more advanced features quirks and usersi will say that nginx tends to handle heavier loads better than apache though so take a look at thatto answer the real question why is myisam slower than innodb i can t give an authoritative answersettimeout is used in lieu of setinterval which is more cumbersome when it comes to killing the cycleyou could argue that the struts style is simpler and you can do it in wicket too it just isn t optimal but keeping the state only in the server has many advantagesi am aware that postgresql interpretation of the sql standard is stricter than mysql and that consequently this type of query won t work...and have read a number of posts on stackoverflow and elsewhere on the subject - but none of them seem to be the definitive answer on this subjectin this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versionsi know postgresql could be considered more mature than mysql with regards to locking thanks to mvcc - can i use row-locking or some other feature in postgresql instead of the token fieldnote however that for high traffic websites we do modify the joomla core and we also switch the tables from innodb to myisam regardless what others might think here myisam is much faster than innodbimho wordpress is better do work and customize than joomlamyisam is better than innodb when you don t need those advanced features and storage speed is more important than other concernsgecko is often considered to consume less memory than webkit but this depends a lot on how the browser is implementedalthough an enhanced for-loop on a string arrays is much faster than it is on an more on that below the .tostring .split overhead would appear to still dominate and make that version slower than the arraylist versionimportant note placing these calls in viewwillappear and viewwilldisappear instead of viewdidload makes this easier to handle as it will work reliably even for multiple pushes and pops of the same view controller and you won t have to clean up after it in the previous view controllerwith django it is easy to use postgresql instead of mysql so i tried it with the same query and same data in db postgresql is much faster that mysql x10 more faster while using inner join analyse shows it uses indexes unlike mysqlelapsed time is generally higher than cpu time with the exception of a multi processors environmentin my understanding repeater is most suitable since it faster than gridviewyou could always use https that will work both on http and https websites but loading a https resource is slower than loading a http resource because of the encryption and ssl handshakesthe package is bigger than udp s package but smaller than tcp s packageand a thing about codeigniter i asked some time ago people about it and most says that kohana based on codeigniter is betterso md5 + strong password + average salt is better than usual password + phpassthis makes firefox 50x faster than google-chrome and 70x faster than safari is there any known reason for thatowl is a more advanced language than rdfnote that udp is more difficult to work with than tcp because packets are not always guaranteed to be deliverednobody uses awt anymore because swing is much betteri know i2c is more complex slow than spi uart etc. but it s a constraini totally understand the error and assume that the mysql implementation is less sql conform than the postgresql implementationyou use pickle might fail dill is more stablewhile i personally think maven is a better tool than ant in the long run our experience will make maven3 a better tool than maven2if you are running that versioning or higher or after you upgrade follow these stepsusing macports or homebrew this is rather simpleri know that addition operation is more trivial than multiplication operationwe could check that void mymethod int i is more specific than void mymethod double a if any invocation handled by the first method can be passed on to the other one without a compile-time type errorram is a lot faster than diskby using a salt value typically you want this to be a random number the hash won t match the dictionary the chance of them pre-calculating all passwords with all possible salt values is exponentially more difficultnote that for more complex builds a java build solution like ant or maven is probably more effectiveless is a css extension that enables reuse and encapsulation of values color values for instance improves inherited allows a better nesting of related properties and operations alsobazaar is imho easier to learn than gitsection 4.13 of better builds with maven describes using cargo to deploy a war specified using maven coordinates but that s serious overkill given that we re using jettyif the message you re encrypting is large enough not only will it take more time to process but the rsa encrypted message might be larger than an rsa encrypted aes key plus an aes encrypted messagethe extends keyword is more general in this sense since it s used to mean that the generic type could either extends another class or implements an interfacethe serializable seems quicker but deserialization much slower and the app is doing more deserializing than serializingthe features stemming from those discussions permit less extreme fork than processes which is symmetrically like the provision of more extensive independence between pthreadsthis will force to upgrade if the upgrade versioning is newercommon lisp is an image base language although usually to a lesser extent than smalltalkif the only purpose is improved testability then exposing methods as protected or public is an easier optionget is more often used on unsecure type of datatransactions like for example a searchform and post is used when you want to make more secure things like a login formlan is more or less stable wan can be with network issues likealthough if you aren t interested in using adobe cs you can use ubuntu distro which is easier than other linux distro and quiet popular so you won t have any problem finding solutiongoogle-chrome recent builds only and firefox are behaving very strict in this regard no matter how much content you have it will be no bigger than your viewport while opera presto behaves more like a table 100 is treated as a minimum not a maximumfirst don t use wav as it takes up too much memory mp3 is betterto be a randomaccessiterator it must support these operations plus a few more such as addition and subtractionpypy is currently more than 5x faster than cpython on averagei prefere lxml it s a harder to understand but much faster than beautifulsoupshortly put running some benchmarks on a page doing some database operations and serving static dynamic content has shown that plain cherrypy was twice as fast than nginx and memcached and about half faster than lighttpdmy personal experience is that webrick is faster in my development environment than unicorn and thin os x in a pretty big rails app lots of gems routes etcit s hard to explain but just imagine that i move this layout to 300px x then on the phone it works because the screens isn t that large but on tablet it will probably not work because the screens is largeri read a lot about gradle and it seems to be a better solution than maven or anti suppose that once we start adding elements from h2 as children to elements of h2 then we will have to start checking whether that child is less than the parent and if not we swap themother cpus take three or four cycles to do a multiplication which is a bit slower than additioni have used both prototype scriptaculous as well as jquery in many projects and based on what i am seeing it appears jquery has the more plug-in available so am leaning towards using jqueryiostream is said to be slower than cstdio but i suggest you use a profiling tool here to find the best set of options hereafter all innodb shouldn t be slower than myisam when using count + where but that s exactly what is happening herefor this to work the getter setter approach is a better fitif a flac file is newer than the corresponding mp3 file or the corresponding mp3 file doesn t exist then i want to run a bunch of commands to convert the flac file to an mp3 file and copy the tags acrossnginx is faster than apache handles slow clients better and is generally easier to usein my personal experience it is impossible to modify the browser behavior in google-chrome if the addon api does not allow for it - in firefox this is much easier to change as much of the interface logic is written in javascript and there are api s for just about anythinggiven that i know little about apache modules i would try to remove apache from the equation try writing a simple c program that does little more than a dlopen and possibly the subsequent dlsym then exitsimplements gives larger errors because i tried with extendsimho creating templates for joomla is the easier than most other cms i know typo wordpress modx as you simply have to replace parts of the static version with joomla tags menu content etc. it still needs some time to get used to the system but its not that hardscheme is perhaps more approachable than haskell howeverboth get post user can put any thing in it and you must filter any input that user make it in your form example the value in textfiled sent to server by post method and that don t make it safer than get method the difference between them that the textfiled value doesn t visible in urlusing the same code for serializable and deserialization is even more of a pain i cannot off hand figure out howis get method is better than post method if you use a formassuming you are trying to create a 32 bit int out of 4 chars there is probably more checking you can do but at a minimum i would turn this into two methods convertchararraytouint and another one that does each shift shiftcharleft chars numbits and hide all the casting ugliness in thereyou iterating i in for-loop so after first loops i is higher then rowsgraphicsmagick is a fork of imagemagick that is faster and has fewer bugs this is what flickr uses internally so it should be good enough for youbtw if this hyperlink is not in a databound control like listview or gridview it is far better to set the property from the code behindi am currently using union all and a distinct in the outer query as this proved much faster than using union s for the uniqueness of dataor is there something about multiplication that is more convenient than division in programmingwhile you don t get the whole post you do still have to query the database for the id of post with mood grumpy so unless you have lots of post it s probably easier to just go with the answer dorel gaveput is designed for file uploads moreso than post which requires doing a multipart upload but then it comes down to what your server can do as to which is more convenient for you to implementif that won t help use a small script to add a class to a parent if its children is more than 4although this thread is more than a year old it still merits from the fact that no one mentioned about the not so recent innovations of nginx lighty and other web servers which scale much better than apache at higher concurrency and consume lesser resourcesif you have long-running requests i think the performance will be pretty bad because apache use one thread per connection nginx performs much betterfirefox - good a bit slower than google-chromei m currently using carthage as a dependency manager and i know cocoapods is more popular and maybe swift package manager will be something in the near future - so i d like to be able to publish the extensions so people using any of these package managers can easily add them to their projectscoalesce is more cross-compatible than isnull or nvl it works on mssql oracle mysql derby et al.union all is better than union because it avoids a sort you know you ll get a distinct set because you re joining on two different tablesdirectx is in general much faster than gdi due to the fact that it has full acceleration on most video cardsmy initial idea was to use radio button for the options because of its exclusion functionality but maybe using checkbox provides a better solutionbecause if the first word in arrays is shorter than second one you need second for-loopi don t recommend sending such parameters via url get it is better and safer if you use post form methodif you get a difference between swift and objective-c it s more because swift is probably better on optimisationbut i think using fseek and ftell is better and easiera suffix tree is more or less an advanced trie here you can also search for any substrings in o c as for the triesince you re using android and retrofit i suggest using okhttp wich is better supported by retrofit and android thread safe the way to this is the followingthey both are able to handle much more current users than apache lighttpd or nginx.quicksort and mergesort is longer and seems more complicated but it is o n log nif you just want the fun of linux command line programs without access to all of ubuntu cygwin is smaller and might be fastersetinterval is more useful than settimeout here as it recurs automatically and you don t need to keep setting itwell actually you would be better off with checkbox control and you can make it look just like regular buttonthe other distributed tools are a lot faster svn is slow as hell even cvs can be faster sometimes have much more useful features than svn are developing rapidly while seeing any new feature in svn takes yearsshould i change my project to trie or is there any other good reasons where avl tree woud be more efficient than trie in case of phonebookonkeydown although it wouldn t work for pasted data where onchange is probably betternote if more than one show hide on page assign different ids to divsi have a quad core processors and the threadpoolexecutor is set to 4 core threads but when i submit my callables hundred or so to the threadpoolexecutor java never uses more than 25 cputhe problem is that windows ntfs is slower than typical linux filesystems for these lookupsalso typedef struct is more c than c++using just the keyfn return a comparable value that matches your requirements is much easier than implementing comparatorsuffice to say ie and google-chrome start having problems at larger heights than does firefoxusing specific method such as addclass removeclass and slidedown slideup makes it easier to debug your code and see what s going oni wouldn t call post more or less secure than getios google-chrome is more ios safari than google-chrome itselfnote that centos software versions are older than debian s but versions of opensuse software are newer than debian s versionsas powelljf3 said post is more secure then get though it can still be gotten towhat i did not expect is that outputstream is much less bytes than inputstream although i have yet to make any modification on docbut in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard libraryi have been trying to do this in firefox webextensions but if it s easier with google-chrome i will try it that way instead.i used get because is faster than post if you need it just to get a list of element for suggestionsthe private exponent is always smaller than the modulo so you should be able to encrypt it using the raw rsa operation if you make sure to remove the prepended zerothis really surprised me because i expected mri to be slower than jrubyhello to all i am developing an application that needs to send a image via the udp socket.i know that tcp is a better protocol but playing with kryonet in java i have learnt that udp is better for this type of application.i have this small class that i have madeit is widely used to have a separated tag with the postfix -alpine in it to indicate that alpine linux is used which is a much smaller base-image than the debian imagethis is due to the simple fact that firefox has been in the extension business longer than google-chrome or iedivision algorithms are slower than multiplication algorithms in most casesgoogle-chrome or safari on a mac could be much faster than firefox on a pc especially with newer apispost makes it more indirect to intercept and read the payload than get but not saferin my experience passing css js through controllers slower than pure apache nginx requestif you don t need anything like that you may use swing or swt it s more of a matter of tasteis there any way in haskell to get the constant that is the largest and smallest possible positive rational-numbers greater than zero that can be represented by doublessince it s an arrays it s better to use a for-loop with a counter variable i which starts from 1please note that if you don t fix umask and create more than one directory with os.makedirs method you will have to identify created folder and apply os.chmod on themgarbage-collection may be slower than malloc and free for programs that allocate at once all the memory they need and work with thatit is a massive over simplification in some cases and plain wrong in others to say we know that myisam is faster than innodbwhat you need to use is an xhr or ajax request to get the next 10 post it is much better to do it this way rather than hiding them and activating them as needed because even if you hide it the browser still had to download the contentit may be that the kernel heuristics for servering tcp connections is more aggressive than for udp sockets since tcp connections require more state and more continuous processing than do udp socketshowever if you have a current production mysql versioning that is earlier than v5.7.7 then the removal of this restriction on views should only be one of the criteria being assessed while making a decision as to upgrade or notfink has more packages than macportssince this structure is not exactly related to game logic and technically it can then be reused by implementing an interface for the callback so that you can use this keyboard elsewhere where you want to have your player to type letters using mouse it s better be separated from main logicthe best reason i know of for not destroying dependents is that more than one parent model has_one or has_many childrenfor the purposes of reading the user s input i would recommend using std cin which uses a similar syntax to std cout and is really more convenientansible unlike chef and puppet uses agent less runthis allows you to use the assignment operator instead of memcpy and requires 1 less call to malloc - the one you makeuse httpwebrequest instead of webclient it s slightly less convenient but not by very much and set the keepalive property to falsemy menu links seem in google-chrome correctly but in firefox my menu links are 1 px smaller than google-chromeagain we see the pattern of it getting faster during the first two runs after which it settles somewhere in between slightly faster than yarv and the other jruby and slightly slower than rubiniusin general is myisam faster than innodba solution in xslt would work too but if you are not already using xslt then using xquery makes more sense here i guessin my experience google-chrome will be a lot faster than firefox to debug huge js filesthere is a more detailed comparrison between intern and protractor in this blog post hereand if you just want something faster or more scalable than svn then just buy a commercial product - i ve used both perforce and rational clearcase and they scale up to huge projects without any problemsin my testing so far google s pagespeed addon is far and above much better than yslowbut integer arithmetic arguably is inherently simpler than floating-pointthe first difference is that division is much more expensive than additionalso see why aes is more secure than deswhen i was googling info on nginx it appears to be faster than apache and works well in serving static pagesso if it takes 1 second to generate each hash it becomes a bigger time sink than it would have been had you used a fast hash such as md5 of a version of shain my cases postgresql was better than mysql mysql do not completely support unicodei ve read that timsort is better than quicksort both in the best and the worst case although it uses a bit more memoryit doesn t even matter much what algorithm is used - one could even use md5 or md4 and the passwords would be just as safe there is a slight difference because computing a sha-1 hash is slowerfloating-point arithmetics is by far more complicated than integer arithmeticsthat is enable to your program to use more at least than one thread more than one processors if necessary that is by definition capped at 1 single virtual core of full use thus 100 of cpu that you see on top on linux or equivalent in other systemcalculating primes takes more iteration than checking for a palindromeyou might want to try emacs - it has an inbuilt tutorial and some people like me find it easier over vim no flames plsin terms of interacting with javascript youtube is miles ahead of vimeo and performs much more reliablyi have come up with a few ideas such as traversing the html document tree to its leaves adding up the length of the text and only seeing what other text the parent has if the parent gives us more content than the children doyou are right that using tcp is probably better to use for something like this or even an existing protocol like tftpthis works perfectly fine but our company has more than 1000 grouping that would be imported if i don t set a filtering for groupingon your platform a int is bigger than a chars so you are walking off the end of the array and undefined read really bad things are allowed to happen when you do thati don t think they have a natural precedence unlike say multiplication and division being of greater precedence than subtraction and addition because they can be built from subtraction and additionit s conceptually more sound as subclassing a thread suggests specializing its behaviour while runnable s are more like task containers - favor composition over inheritedit s simple and nginx is even more ridiculously fast and lightweight than lighttpdit also gets broken even more in ios google-chrome which is an older version of safarithat it would perform quicker with get put callslooking at the cmath header from gcc s libstdc++-4.8 one can see an explicit pow double int is no longer present this case is handled by the following template which promotes the int to a doubleone of the main advantages people discuss when choosing nginx over apache is higher performance in serving large numbers of static file so when using laravel are those static files loaded as dynamic php files3 use thin instead of webrick - thin seems easier to configure for ssli am currently looking at yii and while its more complex than codeigniter the documentation is much more informative and therefore understandable than cakephp sx86 have more complex instructions than mipsyou can view it live on cssdesk this method works in a lot more than google-chrome but breaks in firefox 3.0 and just doesn t work in a number of ie versionsanyway for the past year i ve been using fink and apt-get on leopard because i m more familiar with debian ubuntuthe script was tested using myisam and it indexes products relatively fast much much faster than innodba set or bag is easier to map in hibernate and requires fewer database columnswhere instead of expected many-to-one is much more complex and partially expressed many-to-manybeyond the license issues clang llvm builds much faster than gcc and in apple s benchmarks and my own experience creates better-performing executables than gccmyisam used to be faster years ago but if you use any reasonably current version of innodb then innodb is faster for most workloadsmultiplication and division operators have higher precedence than addition and subtraction in c++ same as in scientific notationif using the versioning of groovy you want and frequent upgrade is more important then consider gmavenplusthe reason is encapsulation is far more than getter and setteryou can also do it manually with put and get which is more c-ishwhich is basically the same thing as the factories then depend on sub-factories but at least they are lighter than presenter views services and they don t need to load the sub-factories until they are neededin this case i found while loops is better than for-loop because if i want to achieve the same in for-loop i have to assign the value of counter to another variablethis is easier done by filtering for a single date but because you said that companies might cease to exist at a given year i grouping data by month firstpart of the point of svn was to make the use of branches and merging much easier than in cvsi agree with the other answer that it shouldn t be in viewdidload - you ve got no guarantee the view has been added to your window at that point viewdidappear is a better placeit s a lot easier than ant fully compatible with eclipse use maven eclipse eclipse to create eclipse projects and easy to configurein practice it ll take longer than quicksort which is why quicksort variants are favored over mergesort in the real worldalso for tcp udp portability is much betterwith datamapper this is somewhat more work than with activerecord which provides it s own db tasksi understand that get requests are meant to read data while post requests are meant to alter data if a post request is sent more than once dicey things can happenhowever i m not sure you want pass parameters via get if you have a form and url isn t callable from outside of your application post is far betterif the constructors and destructors are empty like for built-ins new and delete shouldn t be slower than malloc and free areor does this mean firefox is less secured on that point than google-chromeif you are interested in why quicksort is faster where is a link quicksort superiority over heapsorttcp is slower than udp and you ll have to mitigate that in realtime multiplayerhowever if the subclassing returns a narrower subtype of the superclass method return this is called a covariant return type and is allowed in java since jdk 1.5you can also use scgi it is a lot simpler than fastcgiif you have a secure ftp sftp server or secure http ssl https server then curl can accept ssh keys although using an ssl key is more commonly accepted on the internet. it can use those keys to authenticate and establish a secure connection to the directories which have been made public to your user through the serverthe restful services are rather thin and completely stateless whereas the admin console is stateful and has more interactive functionality and therefore more memory and processing requiredthis relates to another question i asked a while back at size of qt containers is qmap much larger than qlistit s going to be a performance memory trade-off anyway because writing one int is generally faster than three chars separatelyyou can also use compression on the tables to keep them smaller but innodb is vastly better than myisam at data integritynot able to get more than 100 post in single rest api call for the linkedin company updatesbut according to this answer a for-loop is executed faster than the equivalent while loopsit seems that ie and firefox are less strict than safariin most regards postgresql is slower than mysql especially when it comes to fine tuning in the endwhich should at least perform better than explode str_replace and substr solutionseven simpler and probably even faster because multiplication is faster than division is dav s answer which is the most natural algorithm.and apart from common misleading information where post is safer than get it is notapache s design is thread per client while nginx uses the reactor pattern meaning - nginx can handle much more traffic than apache as a web server about 50 times the number of requestsworse than opera and firefox on the desktop as wellso here fgets is reading more than one integer at a time from file so atoi is not getting the integers in file toofor lists containing 1000 elements the dictionary zip version is the fastest the generator and the list comprehension versions are virtually identical and they are 1.5 times slower and the functional map reversed is considerably slowerthen you might switch to except all similar to union all which might be more efficient than union because it avoids the distinct operationit s model it s much more twisted than svn cvs githere it is conceivable that subtraction is slower than additionso for even small inputs quicksort does less work than heapsort and is physically faster for every ni now understand that a windows specific tool such as xcopy xxcopy or robocopy probably is better for backing up but for now i prefer the simplicity of cp and not having to dive into windows command linedjango is very batteries included meaning that it comes with much more out-of-the-box than say flask and to me a large part of that the user auth systemjruby is faster than 1.9 mri matz ruby interpreter the standard in certain areaspost is absolutely not more secure than get as to man in middle attacksso bandwidth was probably viewed as cheaper than server ram and disk storageif you re more interested in latency and small amounts of data then something udp based could be better than tcp but you d need to build extra logic for ordering the messages and retrying the lost oneswith careful optimization however you can make addition 61 times faster than divisionfirst just a heads up you may want to try firebug+firepath on firefox which is a more handy tool than google-chrome s developer tooli ve used it without any guilty feelings and can see no reason why it is worse than using malloc memcpyi have used sitemesh and it is good for wrapping a set of pages in standard headers and footers but tapestry is better for creating components which are used on many pages possibly many times per pageon one hand slick2d is fast and simple but it seems lwjgl is more adaptable in the sense that it has both 2d and 3d capabilitieshowever using a salt offers more protection against rainbow tables precalculated hash tables so they re still worth usingget is basically just like post it just has a limit on the amount of data you can send which is usually a lot smaller than post and a semantic difference which makes get not a good candidate from that point of view even if technically they both can do itlwjgl is much more aimed towards gaming with opengl where as jogl is more worried about complete and perfect bindings to opengl opencli also would prefer to avoid service workers in the implementation so that this works in more than just google-chrome and firefoxbecause mongo 3.0 required greater than versioning 1.4 which i was running i had to upgrade the driver at the same timeit means a declared properties is more than a pair of accessor methods getter setterhowever lets say i want g to do something more complex than multiplying by 2 like ask the user for a number and add that like soto receive a file in your api i would use a put request simpler than post multipart and fetch the data from the stream php inputgoogle app engine does not allow us to schedule more than 20 cron jobsyour problem is that your procedure has more parameters then you pass to it on mybatis call so at any point after the missing parameter you should have your ora-06502 pl sql numeric or value error error since the following paramters doesn t have the same type on the order you are passing itso the compiler can t make the optimization because it can t tell if you wanted the exact behavior where multiplying is better or the implemented behavior where the scale of sum affects the result of the additionin this case using malloc and free is likely easier though to help with compatibility you may want to define them as new and deletelxml is faster than elementtree but i ve never found an application where the speed boost paid for the hassles of distributioni m guessing maybe ie s js engine is a little slower than firefox google-chrome which allows the user to do things they shouldn t but i have no idea how to confirm this or how to deal with ithave you considered creating an object structure for these files and serializing them java object serializable and deserialization is much faster than parsing an xml this is again considering that these 500 or so xml files don t get modified between readsthis might look a little nicer than md5 hash but you would have to ensure url strings are not used several timesan m3u file is nothing more than a text file listing mp3 and or other format digital audio files to be interpreted by player software as a series of audio files to be played in successionaes will indeed yield a considerably faster result than despost isn t more secure than getany ideas how to use the command dir to more than 1 folder in one commandas an example of the second option i ll use imshow here because it makes more sense than contourf for random data but contourf would have identical usage other than the interpolation option.since you ve switched to lighttpd the webserver itself is going to use fewer resources than apache would but apache is rarely the bottleneck unless you ve run out of ram or seriously misconfigured iteven though aurora has better capabilities i prefer marathon due to auroras complexity overhead and lack of ui for control apiyou can use either to create a new memory block which is separate from the original but naturally strdup is simpler since it doesn t require a separate malloc strlen callusing post prevents this particular attack but is this actually any more secure than using getusing a while loops we can control the flow of i better than a for-loopdrupal 7 mysql 5.0.15 or higher with pdo postgresql 8.3 or highernginx is faster than apache and the configuration is easierthe get request is marginally less secure than the post requestuse post instead of get it s betterfor 5 000 000 ints still stored in memory quicksort becomes suddenly worse then heapsort and mergesortfirst amdahl s law is older than hyperthreading so the law itself assumes you have physical processorsis file based caching faster than the mysql mariadb postgresqledit in response to the comment armadillo does not require lapack but works better with it and better still with tuned blasinnodb has a higher resource consumption rates then myisam so keep that in mindto be able to express what you were trying to do the operator would have to be able to do more than just boolean because right now your has a bool and int around itinternet explorer s limit is lower than firefox s or google-chrome s and varies between versionsdifferent browsers do this in different ways f.ex ie has less slots than google-chrome firefoxusing any kind of non-trivial maven pom.xml makes is more visible thoughthen make changes to that choice either as an optimisation float takes up less space than double so if you are storing a very large number of them that might be a reasonable choice to better match some outside-imposed criteria or because it won t suffice when you need to use long rather than intspeed does matter here myisam is still slightly faster than innodb especially for readssince the files are all bigger than ram this translates to actual disk usagea dsa signature generation could be somewhat faster than a rsa signature generation maybe up to twice fasteryour average debian or ubuntu user is more likely to be familiar with apt-get than with cpandon t think of it as udp is faster and tcp is slower because that s just wrongbut if you d like to extends this api to be used by the external services then you ll be in a much better position with implements oauth 2.0 using doorkeeper because you can easily configure for example a authorization code grant for themif you don t need the cryptographic properties then a non-cryptographic hash or a hash that is less cryptographically secure md5 being broken doesn t prevent it being a good hash nor still strong enough for some uses is likely to be more performanti guess firefox and safari handle huge numbers of elements better than google-chromehex is just less verbose and can express anything a binary number canfirst you can use double-quotes or q it just takes more work than single-quotes or qif you are able to enforce browser usage i find that google-chrome on android preserves line breaks when copying and pasting much better than firefoxwhich brings me to the point - if transaction ids are per savings account they would be sequential in other words you will be better off with the qlist or even better a qvector because it will be a little more efficient since you will only be appending transactionsit is working only for simple .php files but wordpress is more complex and after long period of loading it show elgg nothing found site loadedbased on this not created by me the while loops is 22 slower than a for-loop in generalto see a full example of a maven pom.xml that includes more libraries from play look at the sample pom.xml included in the play-pure-maven-plugin s repositoryyou will notice that the tcp header has more fields than the udp header and many of those fields will be populated by information from the handshakemy personal opinion is that it is vastly more useful than strncpy and strcpyit is common knowledge that division takes many more clock cycles to compute than multiplicationclient-side validation is faster than server-side because the validation takes place on client side on browser and the networking time from client to server is savedsince you re using lxml why not use it in a more direct manner lxml is believed to be faster than beautifulsoupi am using udp because it is much faster than tcp but sometimes i need the know for sure if the packet reached to the other side in my program i can not use tcp at all so i am sending ack packetsif you site is located on single box you will get much better results with apc which unlike memcached is not distributed by natureas i understand websockets are on top of tcp and have higher latency than sctp that underlies webrtc when for example sending binary data between server and browser that also could be 2 peers in webrtcnow my question is if there s any circumstances that if we use declarative too much it will confuse the developer who read the code and switching back to imperative is a better solutioni have been trying get data out of new reddit post but theres limitation where you cant get data from more than 100 postis this why post method is more preferred than get or does it really matter in any case if it internally uses post or getnote please do tell me if lxml is more easy or this elementtreeas a practical matter a cons is simpler than a list so you can get the value with a straight cdr rather than the conceptually more complex cadr the car of the cdron some arm platform im working on memmove was 3 times faster than memcpy for short unalligned loadpostgresql has better support but the support by mysql depends on the used storage enginethus i think vaadin is more suitable for intranet and takes less time to develop your app while smartgwt is better for more complex gui or unstable connections where additional roundtrips matterfor example tcp has much more flags window-length syn ack etc - and also starts and ends a connection in a very stable way - the three way handshake - while all udp has is source ip dest ip length source port dest port and checksumapc is more an opcode caching system than a key value memory database like memcached altough it can be greatly used for both purposesinstead of the above for-loop you can also use the following loops which is even more efficient as this removes the need to find the square-root of the numbernewsletters in email campaign tools like outlook gmail hotmail has less css supportit s 4 times faster than using malloc free and copying your data when scaling upanthony williams fixed-point maths library provides a complete analogue of the standard maths library for a fixed data type that is typically around 5 times faster than software floating-point on the same targetthis is a more general problem with maven 2 it doesn t allow any pom.xml code reuse expect properties and custom pluginsfirefox is slower than google-chrome which boats one of the highest javascript engines a modified version of webkitthat being said i understand that it might be for your assignment but converting boolean into multiple unsigned int is more like useless c optimization to meati seems to tell more than nvidiaa clob is a safer way to handle the soap request than an xmltype because the data returned may be longer than 32767 bytesas an aside i would suggest a while loops would be a bit clearer than a for-loop without a next clausei would not mind changing to for example bazaar or git if needed i am a bit afraid of git to be honest everything i read about git seems 10x more technical than anything i read about mercurial or bazaar and installing it on windows seems to imply installing all sorts of secondary software it seems but that is another mattermemory allocation in java is 5x to 10x faster than malloc calloc etci suspect that the reason people write scheme style macro systems in common lisp is more for the pattern matching than for the hygienenot sure why you just accepted a terribly biased answer like best solution stick with coldfusion or railo from coldfusion is just betteri ve figure out that even though myisam has locking contention it s still faster than innodb in most scenarios because of the rapid lock acquisition scheme it usesyou have to realize that this is a common probelm with joomla and wordpress as i explained to you in my other answer to your another question here is joomla 2.5 much faster than joomla 1.5 querywisethere is no need to do anything to make bundler work with rvm but there is one thing about bundler that makes it harder to usei also had good result with umbraco cms it s a bit more lean than dotnetnuke but not as user friendly and definitely not as popularwhether writing the for-loop like that is a good idea or why is it not just using the erase-remove idiom are different issues as a matter of fact the previous loops is arguably better than erase-remove for a list the concrete situation is that the semantics have changed and because the type is syntactically compatible with the previous one the compiler will not notice that the code is wrong it will not point you to that function and chances are that you will not review rewrite ityour spf record requires more than 10 dns lookups to processenumerate is also more appropriate than xrangeyou could probably also configure snmp to run over tcp instead of udp which makes tunneling easieron the php docs link above they say a put request is much simpler than a post request when uploading file along with this advantage what other advantages disadvanatges do the put has got compared to the postyes vhdl was once much more feature-rich than verilog but later revisions of the language verilog 2001 verilog 2005 systemverilog etc.. have cherry-picked most of the interesting features and there is far more robust toolchain support for verilog and its variant these days in addition to it being the dominant language in use in the us in my experience vhdl is only used here when dealing with extreme legacy blocks and in academic contexts partially due to the tools support mentioned previouslyaccording to stephen canon modern implementations favor taylor expansion over rational function approximation where division is much slower than multiplicationmonodevelop is more of a replacement of an ide for mac and linux in windows the recommended thing is to use visual studio or sharpdevelopi don t really think that jtable will help you here anyhow better than jlist - it has the same rendering strategythe engine is myisam i ve heard people recommend switching to innodb but many others said myisam is faster with large amounts of data in terms of counting and innodb better for safe transactionsaccording to many benchmarks uwsgi seems to provides better performance than gunicorn and if the performance doesn t change significantly you ll be able to focus your investigation on nginx or ec2 configurationsunion all performs better than union union works like distinct first order by then remove duplicatesi think it s a better idea to show a div as dialog in the middle of your website because the chance that this is pop-up blocked is smaller and it s imo less annoyingin my task manager i see how the memory of google-chrome or firefox is getting bigger and bigger up to 512 mblike the fadein and fadeout is faster than the actual changing the picturelike the rest of rest wadl is lightweight easier to understand and easier to write than wsdlanything sent larger than the mtu with df set will result in an icmp error message being generatedyou ll probably find that lxml runs faster than beautifulsoup but in my uses beautifulsoup was very easy to learn and use and handled typical crappy html as found in the wild well enough that i don t have need for anything elsea while loops is imo more complicated to read than a for-looptcp is much slower than udp but when the two machines are not on the same lan udp is not reliableif your batch file only needs to run on windows vista or later you can use robocopy instead which is an even more powerful tool than xcopy and is now built into the operating systemfwiw i was able to solve my problem with greensock using tweenmax to animate individual paths inside and this worked in firefox gecko and webkit browsers safari google-chrome it does a better job of calculating the origin not exactly sure how but it worked for mewhen you re not worrying about shadowing this is more flexible if the named of the object changesthird since the question is tagged multithreading if the old process is running more than one pthreads then the new process inherits all the mutexes conditions etc of the old process in the state they were in when fork was calledthis can be done in much better fashion by avoiding for-loop provided if you choose to change your arrays structure with predefined index some thing like varubuntu linux is more strict when it comes to opening files that are already open the lineone can say udp has a lower overhead than tcp because its packets have a smaller header and therefore take less bandwidth to send the payload the datastrncpy is not safer method to use as strcpyi think the argumentexception is more appropriate because the invalidoperationexception documentation says that the object itself on what the method is called has to be in an invalid state rightin my experience this is a much simpler sell than trac bugzilla and all the resti would see if i got better results with isnull instead of coalesceplus once spdy becomes more common ssl slow down won t really account for anything muchnow the problem is the css animations which we have are not getting rendered smoothly in the webkit browser provided by javafx but same code in firefox or google-chrome is quite smoothermysql run 4x faster than postgresqlthe incrementor in the for-loop is more of a while 1 endless loopsin ie6 7 8 and in google-chrome text has proper size but in firefox it s biggerusing getter and setter is more expensive because first the vm will lookup the method from a virtual method table and then make the callwhich i think makes sense because extends from a class should take higher priority than implements from an interfacei would suggest scheduling your jobs using something more sophisticated than croni also find ant with ivy to be better documented than maven although that s not too difficulthowever i found that vmware is much more stable full screen resolution much much better to handle the iphone connection via usb and i didn t have yet any crash when on virtualbox it s quite oftenthe effect is more obvious in firefox google-chrome is betterwebclient is easier but httpwebrequest is more powerful and allows for more controledit since you say you can t add a none option and want to use a checkbox even though i strongly disagree on checkbox where a radio button is more appropriate - a common ui error .however i think that ecj is even better than javac my opinion .plenty of others don t use a delimiter at all and require you to start a new segment polygons if you re more than x distance away from the last point. furthermore these things often wind up being multi-gb ascii files so reading the entire thing into memory can be impracticaldsa signatures are signficantly shorter than rsa oneshere in so i found a lot of questions asking something similar and the answers normally said you can use cglib or asm or javassist is better than cglib or bcel is old and is dying or asm is the best because it gives x and yso for instance heapsort is faster than quicksort in the worst case but slower in the average caseso make sure you code has a working set of less than 16 128bit vectors or 32 64bit vectory at any timeby the way i would suggest creating rar self-extracting archives instead of zip self-extracting archives as with rar compression the exe file with the right switches for best compression using additionally also solid archive options could be much smaller than with zip compressionan hmac is a better way of adding your salt and pbkdf2 is based on hmac - see below for more detail on pbkdf2 - there s a good discussion at when is it safe to use a broken hash functionwhilst somewhat similar to skype facetime and facebook video chat google hangout focuses more on face-to-face-to-face group interaction as opposed to one-on-one video chats and utilizes sophisticated technology to seamlessly switch the focus to the person currently chattingso in simple terms this should give you a feel for why division and hence modulo is slower computers still have to do long division in the same stepwise fashion tha you did in grade schoolif you re diligent about making graphics for at least the main three densities ldpi mdpi and hdpi then you should not see over-large icons except where the screens is physically smaller than your layout expects itafter that is done you can go into security details where get is slightly less secure than post - see the comments for details.i have fireworks 8 as well as photoshop cs3 on my windows pc but i m more familiar with fireworksthen postgresql is much better than mysqlanyway if you re willing to do advanced 3d stuff mayavi is way better than matplotlibi think this is better done with a metaclass in order to handle both runtime and subclassing method decorationin safari and google-chrome it is better but still has visible judderingwhile wordpress is great the simplicity of it gets the better of it joomla is far more flexible and has a huge support network and extensions libraryvery fast static assets nginx is faster than apache at serving static assets css js images ... and uses very little memory to do sofor internal work i ve found out that fossil uses little bandwidth much less than cvs or svn and is able to synchronize huge projects in a blitz even via an adsl or a 3g connectionif necessary i am willing to use the twitter api directly to do the search instead of using rss but for my purposes using a feed is more idealdivision is a lot more expensive than multiplicationfinally if you want to optimize your program to number of lines - trading off engineering practices - you ll have a shorter program with mouseenter and mouseleave eventsif kernel versioning is less than 2.6 then we recommend to upgrade itwhy is firefox so much slower than google-chrome on my laptopmy reasoning for this is that i may want to add aesthetics to the plot and ggplot2 allows this more than ploti know innodb is heavier than myisam but just how much moreanother alternative that people might mention is clion which is from jetbrains but its closed-source not well supported and whilst it might look nicer than qt-creator it has more or less the same features but is much more resource-heavy and laggy so i d pass on thatif you take the binary search approach then there is scope for doing this smartly - spotting when successive tests in the same binary search return the same letter and so assuming that as a minimum range size then aborting any possible range that s shorter than that - but chances are you d do better to code this up using the separate searchescouchbase looks more like a memcache server with a persistence layer powered by couchdb and maybe it does not fit your needsthis is one way in which innodb is sometimes better than myisamthe geocoding api works better than geocode normally but has usage limits and the implementation is biggerboth frameworks are fairly easy to implement flask is much easier than django imo although django has a built in authentication layer that you can use albeit more difficult to implement in a client server scenario like you needthese two lines are in the .htaccess at root level of the site - the configuration in the main httpd.conf is considerably more complex but just that sets particular options for the ssl within the admin area and doesn t affect non-admin areas so i know this works whether it will for you i cannot sayi think the idea of having a single event aggregator for parent module and its children is cleanermp3 or aac compression format is suited for music content and amr is better suited for speech contenthowever they may be cheaper to operate depending on how much data you are expecting to store with each session key holding large quantities of data in ram is typically more expensive than storing on diskyou can of course improve it for instance using a proper callback rather than an inline event and do more with it show hide the play button but this is it in its simplest formstrlen is fast alloca is fast copying the string up to the first n is fast puts is faster than printf but is is most likely far slower than all three operations mentioned before togethereven if the hypothesis of the while loops being faster than the for-loop were true and it s not the loops you d had to change optimize wouldn t be the outer ones but the inner ones because those are executed more timesi have a clue to the answer may be currentculture is for a broader class of language en and uiculture is for more specific variant of the language like en-us but am not sure if this is truea get is a bit quicker and than a post in an ajax scenarioi personally think combining prism with mef makes this type of situation easier though since mef allows for easier dynamic extensibility for rolescpython probably has better ide support at present than ironpython - so this may be a factor in the choosing of one over the otherthe addition is much cheaper than other operations like modulo and division and array accessin outlook.com hotmail it looks closer to the results shown with gmailin theory the while loops is quicker because the for-loop looks up the length attribute of foo every time though loops but in real-world use it s going to make an immeasurably small differencethere is almost always some driver issue between them but in general nvidia is better for opengl has bugs in directx implementation and ati amd versions only is better for directx has bugs in opengl implementationalso the onfocus event would be more appropriate than onclick because it handles other scenarios such as pressing the tab key to change the active inputpost is also more secure than get because you aren t sticking information into a urltestng offers you more options and possibilites how to run your tests and in which order especially something junit can tfor instance in some benchmarks lighttpd is even faster at serving static resources than apacheironically enough its object model show more details than it hide - good for learning but bad for abstractionfirefox just provides far more access to its own internals and system to the extensions so its technically possible to do more with them than with opera widgets or google-chrome extensionsi will not argue why and if nexus is better than artifactory as it would not be fair and would only cause flame warsyou may also use handbrake which is a simpler encoder than ffmpeginstead of explode use preg_split and then use s+ s spaces + 1 or more times as delimiteryour fixheap2 fails to consider the case where both children are valid but have keys smaller than the parent si just want to know if i use post method for login api then is it safer than get methodif for any node total resource allocation makes more than all ram cores disk available you are at risk most often at risk of spark task or yarn child being unable to startconsidering sorting is more complicated than summation median filtering will cost longer timethe math.floor ceil method being marginally faster than parseint and modat my company we have found memory mapped files to be much faster than loopback tcp ip for communication on the same box so i m assuming it would be faster than udp tooudp is much faster then tcp but tcp has flow control and guaranteed deliveryjruby support - unicorn s a better choice than thin but it doesn t support jrubyi haven t read anywhere that apple llvm clang compiler produces bigger executable so my guess is that i might not be using the optimization settings in xcode properlyif however you do need something quicker than division and modulo then bitwise operations come to helpudp port scanning is possible but it is harder than tcp scanningi find using tcp to be very reliable and it can also be very fast if the traffic is stream like meaning mostly unidirectional additionally building a message framer on top of tcp is much easier than building tcp on top of udpwhile it is true that a simple shift or add is often faster than a multiplication but not always Ã¢ multiplication are faster than you might think the only way you could use it here inside the loop is if you first checked to see that you were supposed to be multiplying by 2 and the cost of doing that check more specifically the cost of making the decision as a result of that check is far more costly than a simple integer multiplicationi found simpletest was even easier than phpunit to set upin looking into different frameworks the routing mechanisms they have and the different alternatives employed to make them go faster such as with codeigniter wordpress yii and symphony with alternative caching options how would you do a like-for-like is it possiblein my view cakephp seems much more lighter then codeigniter but i never used either one so i can t judgemost particular platforms restrict the list of calls that can be interrupted to a smaller set than pthreads allows so you d have to look at the linux docs to be sure exactly what is and isn t eintr-safe but the epoll family of methods along with read recv write send and friends are almost certain to be unsafetry django-ckeditor redactor it s more simple but redactor itself isn t free and i think fckeditor is more flexible in the configurationthough earlier uiview and uiscrollview have the same area after keyboard shown the blue uiview becomes smaller but its subviews button text fields is outside its areai guess google-chrome is a bit more forgiving than firefoxthe trouble is choosing a good value for x since for this particular page google-chrome is so very much faster than firefox which is faster than iei have installed these two tools with the official package of ubuntu and also with the package of debian that seems more updatedobviously in this case the call could return more than one item if there was more than one folder named test in your directory treeas craig revealed within the announcement of swift it is said to be faster than objective-c by fardirectx has a wider scope than opengl in that directx is composed of directsound directplay and direct3d etcthe flwr syntax of xquery is quite intuitive if you have an sql back-ground imo xslt is the more powerful language when dealing with one input one output situations especially if the output will not be xmlon somewhat limited processors like those in high-end cell phones floating-point may be somewhat slower than integer but it s generally within an order of magnitude or better so long as there is hardware floating-point available-- does udp always perform better than tcpsctp is not better than tcp in any way but it does something differentneedless to say each product has more than one prop which is kept in the producthas tablein fact when a tablet has a larger than standard screens size the tablet with detachable keyboards available these days mobile versions of the site can look over-optimised for space which is the reason why browsers allow tablet users to opt to display sites in desktop modewhile erlang is more expressive ocaml pattern matching is simpler which means a simpler language definition compiler etc. and you still can do what you need at the cost of writing more codemy guess is google-chrome is caching more agressively and thats why you are seeing worse load time on firefoxthe problem with this code is that it doesn t quite work on firefox and works even worse on operanow i assume you are worried your techno might not read a compressed mp3 which should be smaller than a wav from my memoriesis the best solution to add a new column called engmaterial and add the english translation there or is it possible to solve this in a better way with localization in .netthen ie seems to be reasonable but cant be faster than firefox or safarifor integers multiplication is harder than addition may be slower than addition etc but may still be very fast as long as there is sufficient cpu-power dedicated to ita basic for-loop is slower than a for - loops with simplified test conditionif you re fine with moving to another text editor then i would strongly recommend geany which does the same thing as gedit but is more fully-featured and can allow for execution of code in the same applicationtherefore innodb can handle higher levels of concurrency better than myisamthere are workloads where postgresql is better and there are workloads where mysql is betteri use firefox with firebug and yslow and think it s more reliable than pagespeeda solid state drive may even be faster than a ram disk which surprised meregex is a nfa and is as such in most cases slower than a dfa or hand-written parserboth use debian packages and ubuntu is based on debian but is more user friendlymy usual rule-of-thumb is that xquery is better than xslt for simple tasks whereas xslt is better for complex tasksit will produce the desired layout with a gridview but indeed the asp listview is a better choicetransparency is also an issue however google-chrome seems to handle all three better than firefoxpost is not more secure than get as itÃ¢ s also send unencryptedbut a large period prng takes up more memory for maintaining the internal state and also takes more time for generating a random number due to complex transitions and post processingi did a search on the web but i was unable to find any evidence that suggests that pypy s memory usage is much more than cpythonthe overheads are typically smaller than malloc free in c or new dispose in c++i heard correct me if i am wrong that innodb is better for tables that will be updated a lot because of row locking opposed to myisam s table lockingnow on windows if the ntfs filesystems has less than 5gb disk space it displaysseveral things i found in the cocos2d forums lead me to believe it s an issue with the zlib implementation on ios but i ve tried using both stb_image and lodepng to avoid zlib and those libraries actually performed even worse than libpngthis is a very simple case which will do that asuming your children always have a higher id than their parenthashing is one way you can prove this to yourself by taking an md5 or shasum of a large file since the file s size is larger than the hash output by pigeonhole principle hash can t be restored.malloc is much easier to implement if there is no freewell setinterval and settimeout essentially try to do the same thing but for your case setinterval method will be more accurate than settimeoutbtw microsoft azure storage explorer in my case showed only some subset of folder which is much worse than displaying duplicated directory so i switched to azure explorer mentioned above and it s worth recommendingso your app code is actually run via uwsgi and cherokee is more like a proxy servereta to answer your question in more general terms let s say we had the number of subjects and levels set up in advance increasing the number of factors is more complicated unless i m mistaken because then it would no longer be a two-dimensional matrixif you know the lengths of the strings memmove is a sensible choice - and nominally faster than strncpy because it does not have to check for nulls as it goesso in my view using swing is simply easier unless you have more experience in swtthe indirection has some costs and is kinda ugly so if you want to keep this functionality you might be better off by implementing accessor methods and only log in a subclass of coreit is worth nothing that in a link where udp and tcp are sharing the bandwidth tcp is better behaved than udp in that it will try to limit itself to avoid congestionif you take a look at the associated guides you ll see core animation and layers does require hit testing though that s relatively easy but it s far cleaner than the uiview doing all the drawing and more efficient than many subviewsin general it s more noticeable with mouse than keyboardfor using a fileformat i thought mp3 uses much less memory than wav because all the formats are based on wav but just compressedget is more appropiate for idempotent queries while post is more appropiate for action queries but you can shoot yourself in the foot just as easily with any of them if you don t understand the security architecture for the application you re maintaininghow can nginx performs better than apachemongodb stores everything in memory anyway and works in a similar vein being a key-value based system however i believe mongodb is more flexible as it allows for storing bson objects within themselvesfirefox thumbnail 4 times smaller than on google-chromeif there are more than one innodb tables that need a composite auto_incrementing primary key add an extra primary key to the myisam tableplugins such as fancybox and colorbox jquery offers much more flexibilityto that extent i had to make a few changes to my server-side presentation layer but as a result i think my client-side code is cleaner and more focused on processing actual user eventsthe general problem is that the subclassing is more specific than the superclassdata density in code128 is better than code39 - since it gets mentioned that often in other repliesowl is richer than languages such as rdf schema rdfsso that your rtp over udp becomes more resistant towards packets lossesif you have a customer who is willing to work with you a bit it might shed some light on the situation to get a crash dump with adplus or maybe simpler with sysinternals procdump when the error message is showingi have an app that uses the public part of the twitter api the on who not requires to login but with the update the login is required so i need to implement oauth i ve seen there are libraries like twitter4j who makes this easier but my app has a lot of code and i don t wanna rewrite it not now so i ve think to use scribe or oauth-signpost but i dont realy know how tomaybe this would have all been better with boost but i m still learning stl and didn t go that waythis seems too deep in the original code so i won t touch it but if there s any possibility of flattening the stored array it will be a speed boost even if you can t transpose it multiplying add dereference is faster than dereference add dereferencein my tests i found that one of the loops i tested titled for-loop is astronomically slower than the other loopswebmap toolkit leaflet became popular and easy to use while openlayers is more powerfuli think the conversion to builtin int types for the binary-and operation is likely to make it much faster than working chars by chars because python s int is written in c rather than pythoni would like to use a lighter framework than ruby-on-rails sinatra ramaze camping but am concerned that by doing so i will not be able to use a lot of shared libraries that have been tailored to ruby-on-rails in the form of pluginsit looked weired to me that you are trying to return a subclassing s instance from a superclass s method since superclass usually means a more general concepti have read that quicksort is much faster than mergesort in practise and the reason for this is the hidden constantnginx with its own mod_wsgi seems to perform even better than apache but hey you didn t ask about thatnote that there several advantages to leaving the lua code duplication generated by moonscript in your lua files at least for oft-used operations class definition is probably not one of them but moonscript does way more than thatmaven is a better alternative as build system compared to antif you want to do this - and are in-fact okay with having more larger hash data to store compare - you would be much better advise to simply run a different hash function other than md5 that is either more secure and or uses a larger number of bitsthere ll be no functional difference between the constructor being public or being protected but making it protected gives a clearer indication of the intended usein world nosql mongo world perhaps the schema is a little more flexible than mysql postgresql and thus changing the schema is more common practiceon stable versions of google-chrome the permissions show allow and it still won t connect even with firefox works older versions of google-chrome workand one more suggestion instead of using qtreewidget i think qtreeview is a better choice if you can explain the issue a bit more maybe i can provide some sample codebcrypt is considered the most secure way to implement password hashing with salt because it is slow - much slower than an md5on i386 the dyld stub is much faster than the powerpc equivalent so we didnÃ¢ t bother doing extra work to bypass itdeserialization is harder than serializableit works fine even for italics but i m aware that the user s browser is being asked to make a best-guess here and have noticed that google-chrome will make individual chars appear slightly fatter than firefox when i do things this waya for-loop is more appropriate than a while loops in your codememcached is more for caching database queries and improving performance in that regard while apc is more for improving performance of php codenote that memmove has more overhead than memcpy because it has to determine which direction of copying is safeis for-loop is faster than while loopsquicksort time complexity is typically o n log n but it s worst case is o n 2 which is avoided with the switch to heapsort since heapsort is always o n log n but slower than quicksort so it s only used to avoid o n 2am i better off storing my screens in variables and reusing them when i switching screens or is it better to dispose of each screens when i m done with it and then create a new instance of the screens type i intend to switching toi suspect the computational demands of flac decoding are probably considerably less than ogg and if dsp gets you excited taking the time to figure all this stuff out is 100 worth it even if the flash route possibly leads to disappointmentthis method can handle more delimiter than spaces by the regex being usedon many machines particularly those without hardware support for division division is a slower operation than multiplication so this approach can yield a considerable speedupthis response thus assumes that a request using the post verb would not use the uri to transfer sensitive information or it would be no better than getthis really helps keeps parent branch more stable than childrenpersonally i develop on the windows but deploy on debian where couldn t find the scrapyd package at all at the time i was working on it and noticed that performance of scrapy is considerably worse than on linux box so you might reconsider your targetif that isn t sufficient a lot of standard python code can be run on the pypy implementation which generally faster than the cpython implementationit s very heavyweight and not fully featured for forms so prism or freshmvvm works better as these are designed for forms from the ground up but if you do use mvvmcross for forms its easy to go native if you needi m not familar with the facebook api but the fbconnect success looks more like an objective-c selector instead of a urli found d3.js to be rich library but highcharts is more interactive i guessthis is because ubuntu 15.10 uses a newer version of libc and libstdc++ which is not available on debian 8seek_hole support in the ext4 filesystem was added to linux in the 3.8 kernel ubuntu 12.04 uses an older kernel than that - your kernel version is 3.2.0-45also for animations google-chrome chromium behaves much better that is why i use it for development but do my general browsing in firefoxfor the 10 tests on the same list the results should be quite the same at least all showing that quicksort is faster than mergesort or vice vesaowl has more structure than rdfas you have already seen when you eliminate memset datasrc 0 n the first memcpy is even slower because the pages for the source must be allocated as wellget and post are relatively common put is less common so may not be covered in your server implementationhowever it may be that maven-jaxb2-plugin uses a newer version of xjc than you re using with enumusing proprietary extensions from firefox is almost as myopic -- you ll have a hard time convincing all visitors to switch to firefox for your site from ie safari or whatever else they prefer and although the range of devices on which you can install firefox is broader than those on which you can install ie you re still cutting off devices such as iphones and android a segment of the market that s growing much faster than traditional pcsthe for-loop just initializes the arrays which that each slot in the arrays is .211 higher than the one before itfurthermore it is handier than google n-gram as for a given phrase it does not simply output its absolute frequency but it can output its joint probability conditional probability and even the most likely words that followi m aware of the differences in general the facts like tcp is more accurate while udp is more fastnote also that using nsmutablestring is more efficient than creating a new nsstring each time a letter is addedi suppose this is one of the reasons for the misconception that udp is slower than tcpthe tostring should be slower than parse since division is generally slower than multiplicationi did something like this in java me and performance was way better than doing post getgoogle-chrome doesn t implement the sizing correctly and firefox does although in your case the default behaviour of google-chrome is closer to what you wantplease note this approach is much less efficient than grouping and filtering in a dataset query if it is based on a databasei ve found that postgresql is in my expirience is slower as mysqlperforming this asynchronous testing is actually possible in qunit but is handled better in another javascript testing framework jasmine jsthere is a limitation on creating virtual hosts for name based virtual host while using ssl 443 port so if you want to have more than one https port enabled you will need ip based virtual hostingalso maven projects come with a different directory structure and seems to be doing much more than what ant does in the spring source tutorialabout comparing double - since they are double not int it is better to compare the difference below half-tick or something like that but need to be careful with thatmyisam is more susceptible to data corruption than innodb and usually innodb performs better because it caches both data and indexesalthough post is more secure as compared to get when ssl is presentpersonally i prefer jackson as according to test benchmarks it s faster than gsonmultiplication is faster than division so the second method is fasterok after a whole day of trying to get this to work i ve abandoned uploadify and am now using plupload which seems much betteri don t want this to be a mysql postgresql is better than postgresql mysql debatehow sctp is better then tcpnawk alas aix don t have sort and unix sort is far more superior then any hand-made sort in awkubuntu is getting closer but there are still numerous things with linux that will keep the grandmothers of the world from using iti m more familiar with objective-c than swift and haven t had a chance to test this yet but this should be closetee then writes more data t and tries to read from the pipe then goes to sleep until cat writes more databecause in my server logs it s showing a lot of post with million of ping while the other pages have been get is a smaller amount of numberbut still scanf printf is usually faster than cin couti think updating dependencies with maven is pretty easier than dealing with ant but of course you could select the other way if you feel more conifrtablei feel a little less than swift asking this one but i have become exhausted going in circles on the swift objective-c function callsyou will also likely find the performance characteristics of your ocaml code more intuitive than haskell because of haskell s lazy evaluationauto is one chars longer than int so the lexer definitely has to do more worki had a hiccup in firefox but found a fix after figuring out firefox is a bit more picky than google-chrome when defining svg attributesfor instance strncpy is mostly useless it gives you nothing more than strcpyin many discussions and even in mysql documents it has been mentioned that in case of updates innodb performs much better than myisami know that ie s javascript engine is slower than google-chrome and firefox but i m throwing this out there to see if the so community can pick apart my code and suggest better ways of doing this as i am not the greatest front end programmerget is faster than postis the modulo really weaker than the additionif you want open source postgresql is much smarter than mysql as wellat first i tried reading the original pdf with a fileinputstream and finding the signature hex strings to split it into smaller files with a fileoutputstream as i have done with jpgsif a key is longer than the hmac supports it ll usually be hash to the proper sizeone thing to note is that std istream getline is more secure than std getline so should be preferred in some situationsthe problem is that memcpy is only slighly slower than memset when i expect it to be about two times slower since it operations on twice the memoryonly when packets can be discarded unordered can udp be faster than tcpwhile png is definitely better that gif occasionally there is a use case for needing to stay in gif formati have read some comparisons of junit and testng and it looks like testng has more configuration optionsand then i saw that they put functions under transform that did much more than just get dataif i were able to upgrade the server s versioning of mysql to 5.5 would innodb be a safer bet than postgresqlhowever after attempting multiple times i m actually getting worse results with ogg files than i am with mp3 s - but the problem is the opposite ie when the loop is supposed to go back to the start of the ogg file it actually seems to start again but from about 2 or 3 seconds into it ie no gap it just doesn t loop correctlysomehow the layout algorithms in prefuse seem to display a better layout than in jung rendering is also better i think though most of the layout algorithms in prefuse are based on jung implementationor maybe that is one of the reasons why visual studio gives slower codes than gcc g++ compilerudp is unreliable and tcp is more than adequate in sending 1000 s per secondyour table sounds fairly large so i doubt it s being held entirely in memory but it sounds like innodb handles indexes better than myisam anyway plus since you re being so specific it may be caching the result of the queryon the foundation you have either udp which is unreliable but incurs almost no overhead but very well suited for broadcasts and tcp which is more reliable therefore has more overhead but is easier to usei ve looked at the question at why is quicksort better than mergesortif you re focussing on pure client code then i find webstorm to be an excellent javascript html ide - even better than aptanamy conclusion now a days wadl is more common that rest and integration frameworks like camel cxf already supports wadl generate and consume because it is similar to wsdl therefore most easy to understand in this migration process soap to resti had previously sent those commands via bluetooth but the connection fails too often to be useful and is slower than usbsome people were saying that postgresql is better for security purposes whereas mysql is becoming more feature rich.i couldn t understand why paxos is better for split-brain scenarios or other network failures than traditional bully algorithm because i can easily find out when quorum of nodes leave from the cluster without using raftuse nio it is much easier than using inputstream outputstreammy question is that will postgresql suffice for having such a large number of entries while performing both read and writes or should i switch to mysql because i heard mysql is more advantageous to read heavy tasksmy intuition is that transient properties would incurr less overhead than persistent properties because they do not need to be persistent and read from the database so converting them to persistent properties will likely only make things slightly worsei am curious to know if detecting the visitor browser with client-side script is more reliable than server-side scriptusing the properties and the accessor allows for more flexibility for example key-value-observing is only possible using the accessorsetting the xhtml namespace as the default namespace might be useful though sadly in xquery this also makes it the default namespace for the output - xslt does this betterif you are on linux and have chosen blas and lapack from a repo it is very likely that they are much slower than openblasif product3 is installed and installed versioning is lower then upgradewhile a lot of development has been done with stateless connections to solve most problems sometimes it s just simpler with stateful connectionsso if something works on safari it s more likely to work straightaway on google-chrome more than it is on firefox - but that s just a family resemblance at the end of the day you ll still have to test each as every webkit browser product and version still uses a different version of webkitas harypyon suggests storing the children is a more efficient way of viewing this problem than storing the parent and then computing the childrenthe multiplication are the bottleneck of the calculation even though they may be one instruction a multiplication takes longer than an additioncode is almost working but children divs are a bit wider than parent and i am getting a wrong value of offsetwidthallocating more memory with malloc does not prevent the memory error if the free call inside the dosomething method is incommentedi m very sorry for the long question but i thought instead of dividing the question into several post it is more convenient if they are put into one placeas long as the dataframe is small your assumption that the put process is faster than the get seems true we can fetch all 5 items within one loop of while not q.emptythe desktop tablet version is working fine its when the screens gets smaller and the smartphone version loads the image doesn t work as it shouldthe for-loop will take too long if my arrays has more than 100 itemsin a heap when there is any change in the heap insert delete update then the heap is restructured in a way such that the common priniciple is maintained in above case the parent remains always smaller than its childrenbinding threads to cores prevents the operating system from moving around threads between different processors cores which speeds up the executing especially on numa systems machines with more than one cpu sockets and separate memory controller in each socket where data locality is very importantyou should use a for-loop which is more convenient to loops in an arraysas for production side of things upgrading your database in transaction msi-style installation is much better than attempting to upgrade at each app startup since you can potentially end up with desynchronized database-application versioningmultiplication and division is even more complicated but it s possible to do using a similar systemyou may also want to look at aquamacs which currently has a beta for the latest emacs and offers somewhat better os x integration than the default buildpostgresql is faster than mysql s innodbi could do a post but get is much fasterinnodb is slower than myisam but in which casesinnodb is relatively newer than myisam and is transaction safebranching around whether it is with goto or break just makes it harderso if you re on such a processor and if you have no dependencies in your code you don t need the result of one sin computation in order to start the next one then you probably won t get much faster than using sin and cos directly as they will be fully pipelined achieving an effective rate of 1 per cyclethis is due to the fact that profiling need to instrumentation the code to keep track of invocations - this can interfere with the jit s ability to inline those methods and the instrumentation overhead becomes significantly larger than the time spent actually executing the methods bodyyou can take a look on gradle which for me could provide more freedom than maven but is easier to use than anti thought there were quite a few more with list foldable traversable but it looks like most were made more generic some time ago as i only see the old less generic type signatures in old stack overflow message board questionsif there is a run for a particular serialnum earlier than the minimum date of the range it won t be excludedif you are working on physical machine that has cable and wireless connectivity then you will have more than one ethernet adaptor choisenot all of the reasons given are necessarily valid but one important one is that unless you re google server-side cpu cycles are a lot more valuable than client-side cycles so it s easier to have the client compile optimize what is quite often dynamically generated html javascript rather than the serverthe ienumerable side of linq which works on in-memory objects that are already in the heap will almost certainly perform better than the iqueryable side which exists to be translated into a native query language like sqlthe difference between crc32 and md5 is that md5 generates a larger hash that s harder to predictas i understand it web2py supports gae better out of the box than djangoaccording to benchmark both sefan and the while loops answers take the same ammount of time fruity the while loops answers take a bit shorter with the for-loop answers in second but the multiple loops do answers take far longerso why is google-chrome less efficient than firefox and iesince the upgrade the content authors are complaining that the experience editor performance is much slower than previous versioningthis could mean that put is now slower than get and we have to waitthere seem to be some issues in the windows phone framework and in the windows store framework in fact related to elements that are children of other elements and how when the parent element has been destroyed the framework thinks the child element still belongs to it elements can t have more than one parentusing a database system such as sqlite or mysql that follows the acid principles is much more easy as the database system guarantees consistency atomicity of the transactions isolation and durabilityfirefox is more technically correct in this case as it outputs the state of the object at each point in the loop whereas google-chrome is apparently waiting until the end of the loop to output each console.log but i m not aware of a standards specification that covers the console host objectsome newer with backbone only and older with marionette since marionette uses backbone both uses underscore.jslarge objects google gson performs faster than jackson and simple jsonhowever i m not really much of an emacs user and the preferences menu in aquamacs is less than clear on where and how one might make such a changeand now i have learned that innodb uses more memory at-least while reading than myisam engine so i am trying to change the default engine of mysql to use myisamthe biggest difference that can be produced between the two of them will always be to quicksort s detriment and it involves lists that are already largely sorted or contain a large number of ties when quicksort does better than mergesort the difference will not be nearly so greatsocket tcp udp uploading is slower than native windows copy when there are more than 1 clientsit works as i want but it looks a bit messy and i ve read that sometimes breaking from an outer for-loop within a .each loops is more neatly achieved with javascriptmysql does a lot of implicit type conversions postgresql is rather more strict and requires you to say exactly what you meanmyisam is faster in data warehousing situations such as full table scan reporting etc.. but innodb can actually be faster in many cases with normal oltp queriesi don t want to use myisam because innodb is more advancedyou might benefit from combining each proj into a single war but i do think this is really one of those the grass is always greener problemsin google-chrome typeof is slower than the other two but in firefox it is the fastestbetter use apc on apache server it will be much faster than memcached because you don t need to make a tcp ip call to connect to memcachedif you want to do more than just get the uniq output you could put your own java class or command line program rather than use usr bin uniqyou can also use any editors likes sublimetext aptana which gives better flexibility to write code for beginnersso a protected is more restrictive than public and private is more restrictive than protectedseaborn is a higher level library above matplotlibit seems like udp will more efficient than tcpthe operations are always algebraically simple never involving anything more than addition multiplication subtraction division and taking powersif you didn t implement comparable and didn t supply a comparator it is much better to error out than to just silently sort your list in semi-random orderfor instance zeromq can leverage udp multicast to run faster than any tcp protocol but the application programmer doesn t need to learn a new apimockito s a much older library than jmockit so you could expect that it would have many more featuresthe benefit of both apache is more powerful and extensible useless if you don t need that power but anyway... and lighttpd is faster at static contentwhile not really a console skulpt.org runs python code client-side with no plugins or anything which makes it a lot faster than a server-side promptquicksort is worse complexity than mergesort in the worst case.if you switch between portrait and landscape when viewing this on an ipad3 you ll need to refresh the browser window between switches you can see that portrait mode is choppier than landscapethis all works well and good in firefox but when i try it in google-chrome which supports more html5 features it tries to load the url undefined in whatever directory i m inpyenv operates on a wider scale than virtualenv - it holds a register of python installations and can be used to install new ones and allows you to configure which version of python to run when you use the python commandthe reason for not having strcpy i m guessing is that strcpy can be replaced more efficiently with memcpy for constant strings and if the string is not constant strcpy is a bit more complicated than memcpy anyway so not as beneficial to make inline optimisations forin most cases quicksort will run faster than mergesort even though the worst-case execution time is longerserver-side checks are better than client-side1 in-place merge sort is used when you want to sort a list in o nlogn time while using less space than standard mergesortif it s only an accessor getter giving back some data than a properties fits betterfor more complex reports you ll need to have more control over grouping and sorting controlling the order of boththere is an addon that can even remove the menu bar Ã¢ you ll need to learn keyboard shortcuts this is a good idea anyway moving a hand to from the mouse is much slowerbut this is not a good regex because matches zero or more times with greedy for every search it will go to the end then it will backtracking to match thea trie is better than a binary search tree for searching elementsudp is a connectionless protocol which has zero error-checking it is that is the trade-off with tcp it is faster than tcpstrncmp is more secure than strcmpone important reason is because hex is alot shorter and easier to read than binary is for humanswe know that myisam is faster than innodb when we don t have many concurrent updates insertsrecursive is usually used for traversal and binary search tree but this tree is more similar to trie of only 2 character in alphabetyou can change your database to myisam -- i m guessing you re only reading from the tables in the database otherwise if you have read write transactions innodb is the better choicethe game will be a graphical roguelike 2d rpg requiring more than libtcod ncurses but no 3d graphics thats why i m using pyglet for nowwe found redmine to be a better than trac simply because it is easier to usesome people say get can be less safe than post -- but to the seasoned user this doesn t make any significant difference because they can intercept and modify headers of the requesti think safari renders the moves better than google-chromeupgrade_250 the wordpress 2.5.0 upgrade will be run if the database versioning is less than 7499. each of these functions run their own data migration and population procedures some of which are called during the initial database setup scriptby these numbers and only these numbers vhdl seems to be more widely-used than verilogi prefer the bash c for-loop it doesn t require conditionals to escape loops and looks neateri don t think you should make the assumption that udp is faster than tcpi don t think there can be more than one get or post per request but per open connection certainlyif it s faster than sin cos then you can use the identityor taking a leaf out of friedi s book taking advantage of sorting the array first but using reduce instead of filtering which is slightly simpler because it means we do not need a iife to close around a previous itemit can be used for speed being significantly faster than division multiplication when dealing with operands that are powers of two but clarity of code is usually preferred over raw speedbecause there s so many differences between browser s javascript engines as you notice with firefox and google-chrome it s harder to do code optimizations for all of themusing compatibility as the central point in the versioning number makes it easier for users especially if te product is a library to judge whether or not they can expect a smoothe and safe upgrade or notthere is a big discussing between object-oriented and procedural approaches and more generally between declarative and imperative ones and each approach has its upsides and downsidesinnodb does support transactions and referential integrity but the trade-off is that it is a bit slower than myisambut in many cases addition is faster than multiplicationif you don t understand the subtleties between push vs pull architecture then i recommend that you start with xmlreader because pull is simpler to understand and easier to visualizegenerally speaking dfa is faster but nfa is more compact1 split those tests to unit and acceptance and use a tool like codeception to help you do acceptance which is way more elegant than phpunit for this kind of testwhat you re looking for is linear regression and scikit-learn is much better than nltk for this seein safari it is several pixels higher up than in firefox and google-chrome and significantly lower in operai ended up using scriptaculous for most of my animations simply because it provides smoother animations and more configurable than what jquery ui providesudp is extremely faster than tcp which is suitable to stream a user s voice inputi m looking for suggestions for a workable stack a good ui framework that will work well with ember.js or an alternatives Ã¢ perhaps i would be better off with angular and ionic etcthey are slower less efficient than addition subtraction but they are much faster than looping and doing repeated additionswhy is innodb so much slower than myisam in my caseaccording to some benchmark tests lxml is nearly 100 times faster than beautifulsoupin a for-loop of more than 100 loopsminitest has much more than most people know for example minitest spec has bdd matchers akin to rspec minitest mock is a mocking system and minitest benchmarking is for performance profilingif size is known normally a non-naive implementation of memcpy is faster than strcpy since it takes profit of the cpu s data bus sizex86 doesn t support higher precision than 80 bits but if you really need more than 64bit for a fp algorithm most likely you should check your numerics instead of solving the problem with brute forceas a pragmatist i m inclined to use get because implementing it is way simpler than postthe sensible thing is to use ant or maven maven is easier better in most casesbase r seems to work fine in linux windows 10 uses 20gb of disc space whereas ubuntu only needs a few gb the ram needed with ubuntu is slightly lowerthe main problem i know is the while loops the logic behind it is not correct because last didah is always bigger than n for-loop counterit uses less overhead than smb cifs and therefore acchieves greater performance - also - there are many versions of smb in many versions of windows that might not be compatible with each otherthere is a perception that udp is faster than tcp but i think it depends on the situation - take a look at this discussion for some further discussion on speed reliability etc between udp and tcp go down through all the high scored answersas you ve already said ant is more a replacement for gnu make while maven is primary a buildout dependency-management applicationin wireshark i note that the number of cipher algorithms being presented by ie is a lot less than firefox and google-chromeit might have been faster for listing whole directory but when filtering out files and only accepting folder it takes far more timeit s horses for courses personally i m much happier with textmate or vim and a nice cup of coffee but it s what feels more comfortable to youthere is a difference between the different storage engines though myisam is faster for a lot of select innodb is faster for a lot of insert update because it uses row locking instead of table locking and the way it handles indexesif you want to store text data only using textarea or textbox is easiervery small object google gson performs faster than jackson and simple jsoneven though they re hash salt it s still better that attackers do not see themthings like cmd c dir don t know why - and yes i do cmd c dir in cases i am in some kind of shared network folder with thousands of files and ls is significantly slower than dirhowever i read that swift was the successor of objective-c and i would feel more comfortable with swift syntaxagain though the time profiling instrumentation is far better suited to the job and it definitely worksi would say vaadin would be easier over wicket as the default ui elements look really goodthe idea is that if they are using ie then they must install google-chrome frame and if they are using less than firefox 4 or opera 11.5 then they must upgrade their browser not not sure if the way i am doing that is correcthistorically floating-point could be much slower than integer arithmetictoday png is much more popular than tiff so if you re writing files outside of your own data store png would be a more common choice and you d need to work through nsimagerep to get therei did some reading on kombu and it seems to be able to do what i m thinking of although at a much lower level than celeryi m looking to see if anyone has a workable solution so i can basically switching between this big banner and a smaller format for mobile browsers where the screens size is smaller and doesn t break my responsive siteone of the reasons we want to move is because swift is more secure than objective-cwhen i posted this on facebook someone said that since firefox is open source project developers optimized math.min but google-chrome didn t since google-chrome is just a modification of chromium but beside that above statement is not quite right that makes no sense because that doesn t explain the reason why google-chrome s and firefox s math.min a b performs in similar speed and google-chrome s math.min a b and firefox s performs in same speed because if firefox is faster than google-chrome then google-chrome s math.min a b should be much slower than firefox sit would be better to use malloc over calloc unless we want the zero-initialization because malloc is faster than calloci think fasta might be better at finding alignments between dissimilar sequences than blast but blast is better at aligning similar sequencesalso forgot to mention junit testing framework and a great eclipse plugin eclemma for code coverage much better than cobertura ecobertura and easier to use and of course you can try maven as the other post mentionned or try ant as build toolyou might have even noticed the fgetc version is simpler than the fread versionjudging from the benchmarks posted on the pypy speed center it appears as if pypy is faster than cpython for all but two of the tests presentedbecause i heard that for-loop is much faster than foreach loopsbtw i believe that in some weird cases you might get 0 as the number of bytes returned by write a non-blocking pipe or socket - but that is generally the eagain error - or some weird socket there are more than tcp or udp socketsim trying very hard to like virtualbox but so far i find it so much worse than vmware in so many waysi want test unix-like operating systems on historicial computers like commodore amiga atari st and i386 cpu and run posix compatible apps like pkgsrc x window system and blackbox wm for 40mhz higher versions minix 1.5 is best os for those systems better than netbsd but it is not posix-compatiblei looked it up and the logical-or operator has a higher precedence than the conditional operator and the conditional operator has right-to-left associativityalso i d use fgets rather than scanf as it is inherently safer for the same reason that printf is safer than printfinnodb is a better choice as myisam is really old engine and would fade away in near futurei would like to apply a hash code solution on my webpage which is more compact than md5 and sha-1 because i want to use them as keys in a json hash tablei tend to prefer leaving the cors handling to the http server nginx apache it gives more flexibility to the people deploying your appinstead knowing that we want to grouping by these columns we can make the application code to do so simpler by sorting by these fieldsto our suprise innodb took hours more than myisamjust wanted to weigh in my two cents what serialworm and thephpdeveloper said share the fact that memory ram is much faster than any disk io bound operation you come up withwondering if there is an easier way with a for-loop - looping through an arrays or similarfont looks sharp in google-chrome safari ie8 not as good as other 2 but less fuzzy than firefoxgenerator expressions are generally preferred to map and using the dictionary constructor is more canonical than dict.fromkeysi suggest that you start with scheme and then move on to common lisp as scheme is simplerif there is network congestion rate limiting or traffic profiling or if the udp message size is larger than the mtuspeaking about usability personally i would prefer gnutls api but at the time openssl looks more preferable to usea for-loop is more natural for this than a while loopsinnodb tables are even slower than myisam tables for inserts and the delayed key write option is not availablefor what it s worth the while loops is a safer and more idiomatic way to loops over a file s lines in a shell script than the for-loop with backticks even though you see that a lotapc access is a bit faster something like 5 times faster than memcached if i remember correctly as it s only local -- no network involvedso i repeat and clarify my question from the heading how would i split the byear column into three or more columns with or spaces as delimiterregarding weblogic and jboss i d prefer jboss weblogic is more complexthe first load involves reading alot from the hard disk which is slow even ssd is slower than ram subsequent loads should be faster though 3 seconds on the ssd seem to be oddsome people may argue with me on this one but i find pypy to be faster than cpythonif you are targeting android you can use firefox for android by developing a webapp that has native mathml support and because of it will be much faster than mathjax or other javascript solutioni realized that emacs would load slower than vim but this seems ridiculous for a fresh installi also know implements runable is better than extends threadbecause fink is reputedly more stable than macports and has many more packagesthe first thing i ve noticed that in ie version 8 to be specific a callback attached to window.scroll or .resize seemed to fire so many times more than in google-chrome or firefox while resizing the window or scrollingthe only scenario in which post is slightly less susceptible is that many websites that arenÃ¢ t under the attackerÃ¢ s control say a third-party forum allow embedding arbitrary images allowing the attacker to inject an arbitrary get request but prevent all ways of injecting an arbitary post request whether automatic or manualalso calculating md5 hash is significantly faster than sha-256 and should be favored for performance reasons for any application that doesn t rely on the hash for security purposescdi is so much more mature than seam 2 bijection jsf 2 is so much easier than jsf 1.2 that any kind of application development will simply be much more fun with seam 3i am not sure it can satisfy you but hebrew test is 4 times slower than persianbecause it appears that your filtering are not mutually exclusive that is a data point can be in more than one filtering grouping i think that your best bet is likely to make a vector of your filtering then loops through that vector though i would use lapply instead of a for-loopi ve found some things online that state that the height must always be greater than the width and have seen in the java source checks for this with accompanying messages that this is the case but cannot find a reason whyis there a way to load it in node.js or is there another proxy that can be used to monitor changes in array for server-side code that will work far greater than client-side code as it will be receiving yuge requestsit will continue to be available but since opus is better than speex in all aspects users are encouraged to switchhowever some things ant handles better than maven and if there s not a maven plugin for it it may be difficult to handle in mavenwhile dotnetnuke is a much bigger market it seems to be crowded with a lot of competition versus umbraco which is smaller but it looks like it lacks modules in certain categorieswhen using yslow or pagespeed which is a better tool try and use control+f5 to refresh your page so the site is forced reloaded without any offline fileshowever if you don t have specific reasons to use anycpu then you could still use x86 because in some cases the performances are better than 64bit codenunit is more popular because it was there first therefore more articles about it on the web and better tooling and because most programmers don t care about or need the advanced features that mbunit offersalso about firefox i know still less than google-chrome and i m not sure about how it innerly manage resources among threads and if it is even possible to achieve what i want but if possible i d need to do the same work with firefox threadssince im using fixtures would this maybe be a db cleaner issue im not using it right now as im only using pre-created fixtures currently i ve never used db cleaner with minitest as im only familiar with using it with rspec and factory girlif you don t want to remember or google up all those methods every time you need to iterate an arrays just stick to the good old for-loop which is way faster anywaynow i m not sure if i d say postgresql is generally better than mysql -- there are certainly things that mysql does much better and so it certainly has its uses -- but these are a few things i absolutely love about itas many people have noted the average case performance for quicksort is faster than mergesortalternatively zen-cart looks simpler than magento but without some of the flexibilitypostgresql is far more powerful and scalable and doesn t have mysql s silly limitations and gotchasyum makes it easier to maintain groups of machines without having to manually update each one using rpmcoalesce is the standard ansi way isnull gives slightly better performance although the difference is probably insignificant in most casesi do not want to know when or if to use shift operators in my code i am interested in why multiplication is faster than shifting bits to the left whereas division is notdo you have any idea why google-chrome loads javascript function much slower than firefoxthe aes key is encrypting much more data but is much faster than rsa encryptionwhile webclient may appear to be easier to use than httpwebrequest it is less flexible and will automatically perform it s callback on the ui thread and if you re downloading files in the background you almost certainly don t want thisi m assuming using https without a ssl certificate is atleast more secure than doing the exact same connection over plain http since atleast it s encrypted and an evildoer would have to make a much larger effort to intercept en decrypt the informationthough all data is usually unsafe basically user data sessions are safer than the post or get or cookie or simply request and some server variables since you set it yourselfand now we know that for-loop is faster than while-loopused to be firefox but google-chrome is nicer out of the boxit s said to be better than udp or tcp for communicating by processes in the same os windows xp heregoogle-chrome is more flexible in this sense than firefox which is why it works theresergio suggested nginx + unicorn or nginx + puma but nginx + passenger which replaces unicorn puma is much easier to setup performs great uses less memory works better and has more featuresto use this in a loops you can write a simple for-loop which always checks if the index stil is smaller than the arrays lengthi know gitolite better than gitosisstoring that info on the server-side is probably more common with the client-side only given his the session cookiemyisam uses less memory than innodb and the actual data files are often quite a bit larger for innodbfirefox is more picky about characters that are set in uris than google-chromewhy is ie setting the readystate to complete so much earlier than google-chrome and firefoxhowever i wonder if this is the best way of doing this if you want to observe specific behaviour you might be better off isolating a specific input file and debugging against a local pseudo-cluster and if you want system metrics you could do worse than give ganglia a lookm as it is pretty mauch already built into hadooptheoretically udp should be be 30-50 faster than tcp because it s missing the extra trip for the ack and has a smaller header overhead however in reality there are many cases where tcp would outperform udp just because of congestion controlthe function then allocates space to a new pointer with malloc and does a memcpy operation or loop-and-copy although memcpy is probably betterwith typical libraries on common modern hardware sqrt is faster than atan2nginx can be configured to only respond to requests matching a predefined pattern far easier than with apachein java you can call option s isempty isdefined and get without any special hassle the really useful option methods such as getorelse are another matter. checking the result of the isdefined method in an if-clause should be faster than checking exception-handling in a try-catch blockthe reason it happens is to enable you to work with int which is faster than working with chars valuesinnodb seems slightly faster than myisam but this is really marginalif your getter takes more than one argument it s not called a setter anymoregson is simpler jackson is fasteremacs or vim is not significantly better than vim or emacsis type get faster than type post cause i am curious how both worki ve used both for the same project boost is better integrated with the stl and especially c++ exceptionspostgresql with the optional hstore module might be better than mysql at this.if you want to do a split slice operation on a pie charts first you need to create a pie charts with slices.here from what i understand you tried to give the option split charts first which actually is to make differrent pie charts in the same row or column which needs more than one pie-chartvba being a whole lot less than vb6instead of net http i can use httparty curb rest client or typhoeus which makes everything easier but i can t find any similar solutions to replace enhance net ftpthe data type text requires more space in ram and on disk is slower to process and more error proneanother reason but rather a minor one is that get is easier to exploit that post as there are more ways to trigger get request than to trigger post requestudp is connection less but at the same level as tcpsecondly if you want the superclass variables to be accessible by your subclassing it s better to use protected than publicthe setinterval and settimeout ways you have shown are identical except that setinterval is more cleari would recommend lxml for html parsing it s simple and considerably faster than beautifulsoup can be as much as two orders of magnitudein general avoid awt for swing which has much greater power and flexibility although it too is showing its age just less so than awtshould i use settimeout or setinterval which is betterby splitting mousedown and mouseup there is less runtime parsing no checking events less code per run of each etci think you would like lemp e stands for the nginx and for a lot small projects it would be better than apacheif you use a where clause though it changes the execution pattern to use indexes so in general innodb will be slower than myisam on full unrestricted counts where as the performance matches up on restricted countsunder a gnu linux distribution like ubuntu everything is much more easier and you can just plug in your device without installing anything you just have to set the right permissions for the device oncefirst if you generically want to apply the same function to each element of an arrays and there isn t already a built in vectorized way to do it you could use arrayfun although often a simple for-loop is faster and more readablewhen i reload my html pages its button select and checkbox are goes added more and more.because all the html data fetch from a data base and after added new things in the page i store all the html of the page in data base and when i display this page agiain becuase of jquery mobile its button select and checkbox are increased check here visit jsfiddle.net sharma9853 gbe6p 7ajax calls using get are more performant than post according to yahooi know that xlsxwriter is way faster than xlwings and have functionality to add border but it is just a writer it can t update already existing spreadsheetand also i don t want use for-loop because it would cause trouble if the arrays size becomes biggerwhile other algorithms like merge sort and heapsort have a better worst case complexity o nlogn usually quicksort is faster - this is why it s the most common used sorting algorithmi heard myisam is faster but others say innodb can be fast also but it takes abit more to optimize itfor an oltp type system innodb is usually more sensible than myisam did you check the contention before trying a different engineif your sorting needs are more complex than asort or ksort as previously suggested then write a function to plug into uasortthough openrasta looks more mature than wcf web api i m still a bit confusedant is simpler and older and the default just called a java project maven is newer more powerful and flexiblewith all of these declared transitioning between portrait and landscape is much smoother with much less laguse router-outlet in the parent component and make more than one children route in the routing filemagento is way ahead and has larger extensions than opencartalternatively you can use an ssd with file storage in varnish to reduce disk io bottlenecks when using an object cache larger than available ramusing coalesce is better option than isnull or case..when for this problem since the input values for the coalesce expression can be evaluated multiple timesi would really like not to run both apache and nginx i did switch everything to apache yet found it loaded my proxies slower than nginxfirefox produces more space compared to google-chromea major upgrade uninstalls the previous versioning and installs the newer versioning which is most similar to what you ve described though in most cases small updates and minor upgrade are more fittingi think stateful client stateless server makes you more aware of the amount of data that is transported back and forth between tiresits the multiplying that historically was slower than the addselect queries in myisam runs 2x faster then in innodb but the updates and insert queries are much slower in myisamin terms of speed calloc is likely to be faster than malloc + memset if memory needs to be zeroed outto be honest i prefer to use tcp but if udp works better then i have to use udpeither way my observation is that reordered stdout stderr output is more prevalent with an eclipse console than when you are using a native consolevb.net is a better language than vb6 use its com capabilities to save you from writing endless sketchy vb6 codein java if you want a graphic user interface you can use swt or swing and swing is better than swtif you ask if a uncompressed wav which contains pcm data is better than mp3 then yes but the question sometimes is how much this better really matters to the human ear and how much postprocessing you have to perform on that dataif i resize the window and a widget with a highcharts is bigger than the window i want to resize it to make it smaller and gridster should recalculate the positions of the othersthis is done on an extremely large image and i feel vips might do a better job than opencv on thisi need to connect more than one keyboard mouse with a single computeri am using custom delegate methods but when i run this the get request is performed earlier than the post so i cannot get the key before the get is donebased on my own experience i would look into a gem like minimagick which provides a nice interface to imagemagick which is a more common library for the tasks you re trying to doi ll get better with formatting and being more specific with the postfadeout is simpler because it will hide it for you automatically when it is done so you can save that code and it automatically waits for the animation to be done before hiding the element something your current code was not doingthe position of the list in firefox is always higher than that of google-chrome no matter how i padding or margin the listall works fine over the past few deploys i had to add some columns to my table and due to upgrade statements that are executed if the old database versioning is lesser then a certain database versioningtcp has to do a lot of error checking to ensure that your packets don t get dropped and so tcp is much slower than udpwhile users can manipulate post it s far easier to manipulate getif you care a lot about efficiency or really need tens of thousands of connections then implementing your specific protocol in udp will always be better than tcpis the performance of pull better than push in this scenariosince servers omit the working copy you should generally expect server-side bare repositories to be smaller than client-side non-bare repositoriesmy question is why is malloc + memset so much slower than callocthis means the amount of data you could pass by using post verb is much more than by using a query string and a get methodthis should handle all cases of setting the properties makes them easier to implement in your inherited classes and cleans things upmuch faster than serializable deserialization thoughi am wondering why brisk detector detects much less keypoint than the orb detectoron the subject of performance on sql server isnull often performs better than coalesce but the latter is ansi compliant if that is important to youthey merged with dojo which in my opinion is a better choice than dwrkerberos could be considered as a better option than ntlmmagento is much better if you can find a good magento developer to customize it for you but opencart is easier to useupdate just tried it on firefox 30 and it did not experience the same slowdown in a worker thread but it was slower than google-chrome when run in the main threadwith google-chrome safari it s less sonow that you accept more than simple get post json or xml your model will have to distinguish between each request type and know how to parse themin theory encoding client-side is no more dangerous than encoding server-sidepuma will tend to optimize itself by spawning more threads and its performance should range from no worse than unicorn in the pure cpu case to being vastly better than unicorn in the case of an app that sleeps a lotbut swift is less dynamically typed than objective-c and has less support for reflectionparallel processing is by far a more strict mode of execution of the code-units tasks threads... than just a concurrent run of code-execution simultaneously just by coincidence using more than one cpu or processors core and other shared resources to execute a program or multiple but mutually absolutely independent computational unitsi guess the reason you observe this behaviour with just a guess it could be wrong is because the parent process is terminated earlier than its children so your terminal s prompt is printed before some of the children s outputnote that capturing stdout and stderr combined is actually easieri had better luck with the x86 one than the 64bit version in win 7creating elements on mouseover mouseout is much more work on the browser then having those elements created already in the markup with display nonealso when your setting up the server i would say start with nginx it s uses less resources than apacheif you really want something with php then i guess bugzilla but imho trac is betteri was expecting that udp would be faster but tcp is on average two times faster than udpwith spreadsheet formulas i don t think that you can do much better than that min max constructeither use less ram by either reducing the scope of your project or finding a way to encode your data more densely or use a avr microcontroller that has more ram in the first place such as the atmega1284pcompared to callgrind kcachegrind the profiler runs much faster having max 5 slowdown typically and it s much deeper as to why the code runs slow as it understands vectorization and running in real time means i o profiling is accurateprogrammers like to use this property to speed up programs because it s easy to chop off some number of bits but performing a modulo is much harder it s about as hard as doing a divisionvs.net makes tons of i o calls and ram disk are much faster than real disktherefore the parfor loops simply must be slower than the for-loop because it has to transmit data to the workers for them to operate onat least use xcopy robocopy is even fasterdepending on your specific situation these two handlers tend to be better choices than using mouseover and mouseout due to the way they handle event bubbling for descendants of the bound objectsand if you have to convert to the same case to make comparisons toupper is better than tolowerrecently someone suggested to me that division is always more expensive than multiplicationi give up using popupwindow and use dialog instead after some tests i found dialog is far better than popupwindow there are quite a few problems with popupwindowbut if codeigniter has a bit too much bloat for you maybe you can try kohana which is a bit less bloated than codeigniter started as a forki have a similar problem to this question only i am not learning generics so want a practical solution and my method is returning more than an int or a doubleif you are developing your hbase application in java i recommend using the raw hbase api - that is more powerful than thrift rest avro etcrecently i ve stumbled upon a parralel.for loops that performs way better than a regular for-loop for my purposesgitolite is maintained has a dozen features more than gitosis and the author actually responds to emailsa dictionary map makes more sense here not an array of arraystcp socket is even more likely than udp socket but both workpypy has a higher recursion limit than cpython normallysplinter simpler than seleniumthe bson becomes even more annoying to work with when exporting data from mongo to another db platform this is the case when dealing with big data that is collected and you want to merge it with some properties from the back office mongodb this means a lot of pain you need to transform the binary objectid to a string in order to join with the id in different platforms that do not use bson representationin my opinion post requests are not more secure than get requests and the data can be easily interceptedwxhaskell is probably a little easier to build if you are not on linux gtk2hs is likely easier if you are linux hosted but both are pretty complex to build to be honest as there are a significant number of dependencies in both casestry to increase timeout value tcp is slower than udpi know that perl performs better for some regex but will the tcl performance really be this bad in comparisoni am not going into how to do rewrites on nginx because it is much more complicated than apachewith the transitive dependencies declared even if they are used explicitly the maven pom.xml becomes more verbosealternatively you could accept a-za-z0-9 0 4000 note the space which should get you more than one words but probably not anything after the first punctuationfirstly post can seem more secure than geta dawg has better memory performance if the strings have many common suffixes but they are more expensive and difficult to build and update so start with a trieit shows that rsa encrypt is faster then aes encryptwith subclassing is trickier because any private members of a class are not inherited by the subclassing but protected and public areaddition is cheaper than multiplication3des is more expensive than aes for examplenot sure about this but multiplication should take more time than addition so it s slowing it down exwhat i find strange is that the getter for distance depends on status and the setter acts more like a setter for statusif your company s concern is to avoid big unknown libraries which is prefectly understandable i d advise you to stick with lwjgl which is smaller that jogluse robocopy it s much more powerful than xcopycertainly faster than iterating chars by chars if not you can try r.matches s index to find matches occuring after index with index being a random int less than s.lengthi speak of great experience in this area as i have developed my own cms over a cumulation of years and selling the cms becomes even much tougher as joomla wordpress and drupal have a price point that you cannot complete withmy app is a python wsgi with cherrypy and works perfectly in appfog but i don t wan t cherrypy to serve static content i think that apache or nginx is a better option for thatsince we are dealing with images and changing them on change of select i would prefer changing the src of image rather than using show hide method.it is more simpleri know this can be achieved with junit but in my experience it is easier with testngxcb is simpler to use has a better response to a multithread environment but lacks documentation while xlib is a more dated complex tool better documented and fully implementedpbkdf2 is more secure than a simple hash or even a salt hashfiltering on the grouping data is more processing-intensive because the grouping must be completed firstthe memcpy to memmove which peforms fasteryou didn t elaborate on that point but if you were simply looking for a more secure algorithm than md5 take a look at hash coupled with an algorithm like sha512for some reason fadein works better than show or simply removing a hidden class via removeclass if you take that approachthe capturing group 1 in the first pattern is greedy it first matches everything and takes as less as it backtrackingin firefox it takes some more time compared to google-chrome safarinow do i have to make a query so that tuples v1 v2 are selected where the max review of v2 is strictly less than the min review of v1i have tried weka too but mallet is smarter than weka on this aspectmyisam has some problems with many recordings and other bugs and innodb is now betteras a rule of thumb multiplication is faster than division on all cpusis this due to firefox being more strict than google-chromeyou can use udp as well but if you are dealing with firewalls it is probably going to be simpler with tcpi m sticking with firefox debugging of my angular 2 app outside of vs code as its user experience is better than google-chrome especially when working with typescript files so i ll stick with that for now unless i can figure this outpig in general has a very limited number of evaluation functions and when you start doing things a bit more complicated than min max count you need to get comfortable with writing udfsin my testing google-chrome is nicer it pops-up the unresponsive alert whereas firefox apparently doesn t careso what makes geddy significantly better than connecti remember somewhere i have read that calloc is slower than malloc because calloc performs initialization to zero after performing memory allocationif your objects are sparse then a quadtree or related data structure r-tree etc. is probably betterwhich will lead to performance issue all programs will be work slower because read info from disk is slower than from ramsome protocols are more complex because what s needed are some but not all of the features of tcp but more than what udp providesmysql is more widely supported and a little easier to use but postgresql has some very cool features and functionality that s worth taking a gander atalso note that it is easy to implement your own stack on top of udp that performs worse than tcpbased on what you have provided i cannot tell if google-chrome actually does load faster than firefoxduring my tests of innodb v myisam i found that when i did resolve any contention issues the innodb model was 40 slower than myisami suspect codeigniter doesn t have quite as flexible a structure it s smaller and lighter than cakephp but a quick look at the cakephp manual to see how behaviors components helpers and the vendors folder may be helpfulthe draft c++11 standard tells us that unless stated otherwise the order of evaluations of operands are unsequenced and if the same scalar object is modified more that once by unseqeucend side effects than we have undefined behaviorremember malloc is quite expensive action and free costs even much more than mallocsee but if you are using a linux distro there may be shortcut instructions that make it simpler under ubuntu for example there are shortcuts inwith one arrays one can do which is easier than a for-loopwhy do people say cakephp is somewhat harder than codeigniter for people new to mvcas disk is 1000s of times slower than ram as the memory usage increases your machine grinds more and more closer to a halti find using system monitor that consistently 100 of one cpu is used when i run the program directly in terminal whereas when i run it in bash in a loop a maximum of 60 of cpu usage is recorded and seems to be linked to the longer completion time although the average cpu usage is higher over the 4 processorskeep in mind however that following the robustness principle of be conservative in what you send liberal in what you accept the interpretation of int in the boolean context is somewhat more relaxedit s not clear to me what you want but i ll mention that the date class also has a compareto method which can be used to determine with one call if two date objects are equals or if they aren t equals which occurs sooneradditionally ajax is nothing more than get or post requests that a script carries out for you asynchronously allowing you to use the server responses in a document without reloading the entire pagegoogle-chrome is more permissive with delimiters when it comes to dates thus formatting the date with dashes works with google-chrome but not with firefoxif you have more than one ethernet wireless cards name might change a bit.2.the division by 2 can be done by bit - shift operation is it really slower than additiona table is generated using nested while loops and i do understand that a for-loop is more suited for this and got it working using onepostgresql is good too but mysql is undoubtedly more popular and you re going to find more hosts that provide you a mysql database for instance if that mattershere is a screenshot of how it is displayed on internet explorer better than firefox but not centered like in google-chromean unsigned 64-bit integer type requires compiler support which your compiler lacks so you cannot create it sorrythe second quote suggests that without jit using a trivial getter setter is slower than direct field access egif you are sending stuff there are a lot more considerations than just shipping costs you may need to fill in specific tax forms for some countries and depending on what your site is selling you may need special processing for some countries try sending coffee to thailand -- you need to obtain permission from thier ministry of agricultureadfs has more powerful claims transformation capabilities than acsnot only is nginx supposedly faster than apache at delivering static content but this also offloads your rails application for every image stylesheet javascript or whatever other static contenta document in mongodb is more or less like a json structure bson to be specifici ve been attempting to upgrade to php 7.1 using phpbrew and elected to install it with nginx as i read everywhere that it was simpler than apache not that simple in my humble opinioncakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake shere is a bash script that can use after you installed bash from msys or you can sort it with a linux box - ubuntu is no bigger than 800mb and can run as livecd without interfering your current windows system and the livecd can double as a system saver when neededis it because google-chrome has much better javascript support than firefoxwhen get is better than postgave up and switched to sharpziplib as it doesn t blow up on simple extract but sure would be nice to know what was wrong with dotnetzip it has a nicer apiwhich doesn t do what you want because multiplication has higher precedence than additioni have tried creating an if statement inside a for-loop to say if loops is more than 0 and the div is open then run the code so if the div isn t showing then do nothing - but this doesn t workfurthermore i do not have control over the engine Ã¢ myisam or innodb innodb performs better due to row based locking instead of table as in case of myisamudp communication is connection less as compared to tcp which need a connectionit seems the from a readability and usability standpoint the hex representation is a better way of defining binary numbersit s highly recommended way to implement screens switching with navigation drawer and you ll experience much less pain and see that screens switching is way fasterindeed floyd-warshall s algorithm is better than dijkstra s in this case the complexity for dijkstra is o m n 2 and in this problem m is much much higher than n so the o n 3 time complexity of floyd-warshall is betteri decided on nvidia for a couple of reasons while ati might be faster on paper nvidia has a more mature platform and more documentation so it will be possible to get closer to the peak performance on this platformworse with mysql if you drop multiple indexes on the same table it will re-copy the table once for each index you re removing instead of being smart and re-copying the data once without all the indexes you re dropping. is something like this happening with postgresqlavoiding them by modifying vb6 is lot easier than fixing the issues in vb.netit s slower than apc but it s faster than memcached redis etci would be very interested in seing the solution in objective-c also but swift is more important for me hereanything that you do with http is more or less equivalent with spdy and neither is really anything but an implementation detail of your soa workin general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work withthe documentation sucks but it s very lightweight there s a good community even on so it s more simple than symfony and more powerful than codeigniter the first version of kohana was based on codeigniterconcerning the problem your printpiglatin could use the existing function strcpy or better strncpy which is safer in regards to buffer overflowsi want to write a server tcp or udp which performs more than one task while listening to more than one portit s because that quicksort is generally faster that people use it instead of mergesortwith this in mind customizing the css of a wicket app is significantly easier than vaadin for the simple reason that you control the markupi have two primeface calenders which are used to select from and to dates.i have set the max and min dates for the two calenders which are updated using the ajax dateselect event so that the max date of from is never after the min date of to and the min date of to is never greater than the max date of from .my code is something similar to thisin ssms it takes more than 1 minute to complete while in sqlcmd it takes no longer than one secondlinux however is less forgiving and has a filesystem that is case sensitive at least my dev ubuntu version does but i guess it is the default for linuxntfs is much more complex and time consuming due to the more complex nature of this filesystemsnow back to the question my guess based on reading tests published here would be that the proper multi-thread apache architecture should scale better than nginx on multi-core cpusit s far more efficient and cleaner than charindex substrinnodb provides more complex keys structure than myisam foreign keys and regenerating keys is really slow in innodbfirst it creates 10 5gb files 50gb is way more than machine ram so not much help by os file-cache then starts a zookeeper client which is supposed to keep its connection with the zookeeper server up by sending pings heartbeats regularly then makes 10 threads doing random-access into the 10 files creating a lot of disk io but really no real usage of the cpui guess google-chrome is smarter about me being careless than firefox is+ consider that the implementation of tcp stack is much more complicated than udp more instructions are executed thereif you are trying to support all users on all browsers then you will certainly need to do testing on those browsers although actively developing on those browsers may not be necessary whereas if you only need to support webkit-based browsers google-chrome safari or webkit-based browsers and firefox that is less testing that you need to dolistview gridview is more work but is fasterasymmetric encryption ex rsa is no more secure than symmetric encryption ex aesthe code is riddled with classes which contain nothing more than public shared attributes variables and methods functions the result of which restrict the application from opening more than one project at a timecorrect me if im wrong but i think the apk for mobile can be used to install the app in tablet.your problem would be in the ui coz mobile has smaller screens than tabletÃ¢ when using drawimage coordinates will be rounded for you you might want to do the rounding yourself since it is floor that is used and that ceil that gives smoother resultsso the 115 seconds will be reduced to 3-4 secs plus the encryption decryption time used for aes which is much faster than rsaon safari everything is slower than on firefox still the object property access is more than two times fasteriis express would only be used by people who don t have access to iis or want something that is lighter than iis but more like iis than cassinifirst fiber won t compile with apple clang because of the use of thread_local which apple does not support according to what i found online they think they can implement it better than standard llvm and don t want to introduce it only to break abi latersince eventually i d have a button that runs some script on the smeow values and send it to a different request i had a look at the tabletools plugin but it doesn t really play well with server-side tabletools is more focused on the client-side sourcei think to safely use put on a public website requires even more effort than using post and is less commonly done due to potential security issuesin my tests snappy performs better than lzo by the waywan is less stable than lanbut as i checked-out some example apps from spring source repo and it seems that maven is more preferred and powerful than antnow i can understand that a ghash takes a bit longer than hmac because of the galios field and such but beeing 2 times slower compared to the slowest hash algorithm i know is insaneanyway transmit a salt and hash password is always better than transmit the plain passwordalso have a look at nginx for example it is fast and uses less memory than apache to handle client connectionsscheme is also a good language for that purpose and it is simpler smaller than lispstd copy to be more efficient than memcpy or memmove because itjax-rs is much younger than jax-ws jax-ws had a final draft in 2006 jax-rs came out in 2008-9for complicated reasons having to do with the internal electronics of the cpu for most modern processors it is faster to perform a direct branch where the destination address is encoded in the instruction than an indirect branch where the address is computed at runtimeapache is like a 4 by 4 contains everything you need nginx is more like a ferrari not much there but it does what you need it towhile i think the move to swift is prudent but i think it overstates the case to argue that swift is significantly more secure that objective-cyes storing the password even reversibly encrypted is worse than a salt hash of some sort due to password reuseexecutable size of swift application is much bigger than size of objective-c applicationwhy it is said quicksort has better constant factor than heapsort and therefore quicksort is better than heapsort in averagein other words is mysql better or worse than postgresql to handle unicode etcat first glance it must be significantly faster because strcpy must be significantly faster than printffirstly though we tend to use signed more than unsigned values which would lean us toward short but also ushort is not a cls-compliant type and there s hardly any point introducing an incompatibility with other .net languages in obtaining compatibility with comand it will prevent overlapping cron jobs if the cron interval is shorter than the job durationhttp is slightly more performant than https as the ssl handshake doesn t need to happen however anybody hackers can see everything that your users can seeadditionally i would advise that the your view explicitly checks that the request is a post and if not make the assumption that it is a get rather than the other way around as you have it this is safer as get and post are not the only request types and you definitely need to know that you are dealing with a post request if you want to deal with variables submitted in the post requestthe c++-way is more readable in my opinion and new and delete are safer than malloc and freethis post goes into more details how to get charles proxy work with android 7 nougata better word than screens is activity you switching between activities in androidin firefox and other browsers the background is much whiter and brighter than in google-chromenote you can also use get but post is safer because the user can t change it in the urlkeep in mind that a maven project is more than just the pom.xml file it also conforms to the maven standard directory layout and more but that should get you startedthere are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsajust for the record the tipc addressing scheme is several years older than distributed erlangthis kind of processing is most easily done with xslt which is more expressive than xquerylet s say you wanted a table border-radius of 50 on google-chrome and safari but firefox is adding more padding by default so you d like to tone it down for that browser alone to 45imho activity is your controller or perhaps presenter a la mvp is the better architectural analogy layout xml and their constituent views are the view layer and your database is your modelthe workspace limit is on non-free hosted workspaces any workspace that s private or larger than 1gb disk space and 512mb ram ssh workspaces are unlimitedgiven these last two complications i am leaning towards a browser plugin as the solution probably firefox since low-level http stuff seems to be better supported than in google-chrome but i am wondering if anyone has an idea for a more cross-browser-y solution and or if there is something out there that might provide a good api for this kind of thingdeclarative sql is usually simpler and faster than imperative pl sql so it s usually best to do most of the work in sql and just glue it together with pl sqlif your database has a large innodb buffer pool and a small key buffer then innodb performance is going to be better than myisam performance especially for large tablesudp will almost always provide better performance than tcp at the cost of reliabilityrendering without buffering on google-chrome is faster than firefox so i m actually not sure why google-chrome is having such a problem with drawimagemoreover i m using m2e the maven plugin for eclipse so it seems that the compatibility of any maven plugins that might work by themselves is even less likely with m2ei am using qt 4.8.3 and unless this is definitely bug in the versioning i would prefer not upgrading as from my experience upgrade bears more trouble than benefitsit s popular it s actively developed it has many libraries offering the features of a modern programming environment and scheme is somewhat simpler not to say better just simpler than common lispmyisam is often faster than innodb but isn t safe to use in a production environment for critical dataon my mac firefox has no issues whatsoever but google-chrome is worse than i think you ve noticedÃ¢ the text exceeds the bounds of the container after the resizeinnodb is more strict in data integrity while myisam is loosefrom the link which is mentioned in question my question is that microsoft says the c# type keywords and their aliases are interchangeable but why we need aliases from my point of view boolean is more meaningful then bool and int32 is more meaningful then int then why aliasesyou can also try using innodb since it s said is better than myisam handling bulk inserts with data already on itmasonry was the first one and works very well and isotope is the newer version that expanded on the original thinking along with additional features like sortingif you are looking to measure execution performance over time scales where it matters if your thread has been preempted then you would probably be better served with a profiler vtune for instanceyou are using a method to bind click event in your case is live and this has been removed in the latest jquery libraries from 1.9+ onwards so make sure your versioning is less than 1.9 or better to upgrade the library and use the recommended method for it .on to delegate the event event delegation syntax is little different with .onthe robocopy command provides a more intelligent exclusion feature switches xd and xf than xcopy does which you could use for your taskyou could make your css mobile-first meaning that all properties are optimized for mobile then as the screens gets wider you apply tablet and desktop optimized css for elementseither postgresql more proven than mysql for such huge datagoogle-chrome provides more detailed information about the ajax errors even when firefox doesn t say anythingthe better question to ask might be which one of passenger unicorn is a better fit for containerised rails appsfossil is another one that s easy to use i would say easier than git to learn but it uses an sqlite file to store your code and i m not sure if it scales to really big projectsinnodb is also being developed more than myisamthanks to a suggestion in the comments i removed the passwd from the server declaration since i think getting sudo to work without a passwd is a cleaner solution anywayany device in the path of communication between the sender and receiver whose mtu is smaller than the packet will drop such packets and reply the sender with icmp destination unreachable datagram too big message containing the device s mtui am talking specifically in a scenario where the getter setter does noting more that get seti m sure it can be accomplished with pure bokeh but i m looking to do a more advanced plot with bokeh which relies on matplotlib so i m looking to use show mpl.to_bokehi know sproutcore is backed by apple and looks like it is getting more popular by the day and it has a nice green website whereas javascriptmvc looks less professional with less of a following and less momentum behind italso note that keydown is better for this methodology as keyup will fire multiple times though i guess this will too.if you d like to see stack trace that spans over settimeout setinterval calls then more sophisticated would be the way to gofirefox is slower than google-chrome in javascriptget is a better method in this case than postin that case some hash functions are somewhat faster than other md5 being one of the fast functions but md4 is faster and it is simple enough that its code can be included in any application without much hassledevelopers community it might seem that laravel has a larger community of developers but during my career with yii i ve found no bottleneck of having a question without an answerfor example if you start with a table and trunk adds column a and the branch adds column b then you merge trunk to branch - you cannot realistically upgrade to the versioning with both unless the branch versioning number is always greater than the trunk s upgrade script and that doesn t work if you subsequently merge trunk to the branchiis express is a web server albeit better than cassini iis express is not your problemi found that postfix dovecot is much more robust and it seems imap is the best way to work with it from php please correct me if i m wrongthis is because quicksort is generally faster than heapsort unless the call depth becomes to deepbut if the plotline is set much higher than the min or max data series then the plotline doesn t show on the chart at all like this jsfiddleof course you could do the same with octal but hex is even more compact than octal.you can filtering by adding pagination conditions but sorting is more complicated seeing as photos can have multiple categoriesthe safari controller bar is the quicktime bar which is smaller and dark so the movement is less noticeable than google-chrome which has a big blue progress barthis works fine on my local and current hosted environment using mysql but postgresql is clearly more strictwhile iis does give us better performance than cassini we would still like to be able to hit f5 to run our application from within visual studiomoreover ogg vorbis is better then mp3 at all bitratessince parentheses were used around the addition but not the multiplication we can infer that probably in this language addition has lower precedence than multiplicationi know the basics division and multiplication higher than addition and subtraction but i would have to look up something more esotericsinatra and padrino are not automatically faster than ruby-on-railsbut ram is volatile the data in ram is erased when the computer loses power and ram is far more expensive than disk per unit of storageyou can use a while loops to achieve the desired results but a for-loop is much easier to implement in this situationperhaps you will have a more pleasant experience with iis 7.5 express as a replacement for cassiniit used to be that multiplication was slower than addition and programers used several tricks to avoid multiplication but with haswell it seems that it s the other way aroundnote that the png format is much more complex than bmp since it allows compression etci used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp average 65 betterwhile on antiquated hardware myisam was a necessity on modern hardware innodb actually performs betterif the numbers are huge dividing x by b might be betterÃ¢ division is usually slower than multiplication but getting out of the huge-number domain early might help more than avoiding divisioni m searching for the best method to get result with database contain more than 100000 post and more than 100000 catif you want to schedule basic workloads based on containers you might be better off with marathon or in the future maybe aurorayes but if joomla is any example of how hard it is to implement a complex custom website with oop then wordpress is far easier and quicker and time is moneyquicksort generally runs faster than mergesort but under some circumstances it can degrade to quadratic running timeand you can iterate through different bases which is super useful if you re doing hex or binary which preserves more of the numbery essence of themat first i thought it had something to do with one being a for-loop and the other being a while loops but even when i reversed the order the second loops still executes slowersetinterval is much more suited for countdown timers and things you need to run continually since settimeout only runs once and you need to keep on calling itif you want more control over launchd background processes from ruby including properly detaching ttys and a host of other things check out the daemons gemfirst of all wouldn t that relate to it returning an object that is a superclass which contains less data than requested because a superclass is not a subclassing but a subclassing is a superclassfor some years now i ve just stuck to the thought that since directbytebuffer s are a direct memory mapping at os level that it would perform quicker with get put calls than heapbytebuffer sone interesting experiment you can try is to try and malloc more memory after you free d that pointerbut the slider won t work well it doesn t get activated is a better way to put it if i insert the code from slider.js into the chrome console hit enter - booom works perfectly i ve been looking for what the problem might be tried adding the type text javascript in the script tags added the document .ready in my jquery still nothing.you always need to know the magic number here 0xaaaaaaab and the correct operations after the multiplication shifts and or additions in most cases and both is different depending on the number you want to divide by and both take too much cpu time to calculate them on the fly that would be slower than hardware divisioni am trying to stop a textarea with autogrow.js from growing after 300px height and then destroying autogrow textarea so that it has scrollbar although the code i have used to do this is working fine i can stop the textarea from growing after 300px but when that happens the textarea becomes smaller than 300px suddenlyalso i don t think it is so much that asp.net mvc is so much better than cakephp or codeigniter ruby on rails etc. the great thing about asp.net mvc and other asp.net-based technologies such as monorail is that developers who are using asp.net now have the option of following the mvc pattern using tools and languages they are familiar withso for example if you send a 63k udp packet and it goes over ethernet it will get broken up into 47+ smaller fragment packets because ethernet s mtu is 1500 bytes but some of those are used for udp headers etc so the amount of user-data-space available in a udp packet is smaller than thathowever my mobile site has an option that allow user to switching to desktop view if there are not fond of the mobile site but how should i do that since the javascript in my homepage will block any screens that s smaller than 1024for longer-running applications like a web application rubinius or jruby will generally perform better than mrii m fuzzy on a lot of the finer details between jruby and mri ruby but here s what i know based off of what i ve learned using jrubyneed to issue more than just get and put commandsi have also considered using game center groups to make sure you are playing a player from the same app versioning but ultimately decided that getting users to upgrade is a better planfor example you want to use abstract-class in such a case that each of the subclassing is a more specific type of its abstract superclass fruit apple orange banana grape strawberries etc. and you want to use non-abstract superclass in a relationship such as dad and sonhowever if you want to get more than one post rather use functions mentioned above i think the most important thing is to grab them in one db query and not in ineffective way one-by-oneif you have nested data in your model this will soon get tricky to handle though and in that case a post is the better optionnginx + gunicorn is likely to work better than apache + modwsgi at this point in timeinstead you can use udp and implement your own scheme for verification of data that is less stringent than tcpi have a search positioned absolutely beside my navigation but the top is 10px lower than firefox in google-chrome so basically if it is centered in firefox it hangs low on google-chromegiven that it is possible to vastly reduce the likelihood of the worst case of quicksort s time complexity via random selection of the pivot for example i think one could argue that mergesort is worse in all but the pathological case of quicksortbut another added benefit of this approach is that it could make your program run faster since fixed-point integer arithmetic is much faster than floating-point arithmeticquicksort is implemented well it is typically 2-3 times faster than mergesort ori dont recomend apache to do these nginx fits better with nodejs3 updates if required will be more challenging with avro thrifta getter without a setter is more like a public final member variable--but at that point why not just use a public final member variable they do no more harm.if you can predict more than one cron job to be executed you can try or any other library like this where you can config jobs scheduler in phpfinally after figuring out what i needed was a page access token i gave up trying to do this client-side realising server-side makes more sense at least security wisefor the second test you should favor mockito over easymock that is more easy effective flexible and powerful to useif you are uncertain you can always put an if statement and check if the number you get back is highter then int.maxvaluealso nginx s configuration is much more flexible than apache and by having it on the front end it gives you a lot of flexibilityfor public inheritance it means that all the accessible members of base class that is the public and protected members can not be at a level more permissive than publicthat s why it s usually said that mysql is best for webapps while postgresql is more enterpriseyudp protocol is unreliable but much much faster than tcp which is most commonly used for communicationthere s no point in using a for-loop a while loops is more readableusually onkeydown is more preferable then onkeyup for such combohaving getter and setter methods gives you more power as a developer over the classlift s ajax support is far less verbose than wicket swhat i would suggest is to make sure you are using visual studio 2010 sp1 then install iis express which is an upgrade to cassini and is much more like real iis and then switch your project to use iis express and see if you get the same exceptionthe same word in firefox look wider than in google-chromeedit don t use this for html work use the lxml library it s python based and much faster than beautifulsoupquicksort is also more complicated than mergesort especially if you want to write a really solid implementation and so if you re aiming for simplicity and maintainability merge sort becomes a promising alternative with very little performance lossi added my own implementation not because yours didn t work but to show how you could delegate responsibilities to classes which reflect the problem domain making the code a bit more readable though considerably longer with boilerplate getter and setterbecause the uiview is smaller it is going to crop out the larger subviewsi ve tried a bunch of other things as well one of them being hook elements with insertafter but stay in parent - jquery which worked perfectly but if the position was higher than the children inside the parent it didn t know what to do with it and causing a lot of unwanted behaviorwith firefox google-chrome and safari it s less of an issue because those started auto-updating years ago and more than two years ago they stopped blocking methods other than get and postm2e is also a platform that let others provide better integration with additional maven plugins android web development etc.ok i am new to audio with unity but despite reading all the unity posts regarding audio adding 2 short .wav clips i heard wav was smaller than mp3 to my app has added over 200mbfor the most part i think the choice of snap vs yesod vs happstack is less an issue of features and more one of personal tastehere in your example col-md-4 class is been used that means if you will shrink your screens more than medium screens size ipad or tablet it will starts responsivenessi noticed some time ago that a for-loop typically generates several more machine instructions than a while loopsyes joomla takes more time in cooking the resulting html when compared to wordpresshow could i turn this into an array easier than using explode substr explodeboost s io stream might be a better solution than stl s own streamin example sendp method included in for-loop which is slower than making other loops to send packetsmapr has clearly cheaper tco and technologically superior platform cloudera is a bit more polished hortonworks for pure open source don t read this as free or cheap as most companies end up spending more money on hw to get any valueif your ruby versioning is older than 2.2.4 then please upgrade iti know object pascal delphi lazarus more or less but absolutely zero in anything networking-related and these platforms seem absolutely inadequate for the servercan somebody explain how it can be that the same api call returns so much quicker with vb6 than with vb.nethowever because of additional checks that memmove performs when the buffers are small and surely does not overlap memcpy is betterobviously md5 is much more difficult to reverse even in this anything that will hash to the right value sense then a simplistic algorithm like take the last two digitsif we look at the speed of operations multiplication is not drastically slower than additionedit i found out that piston was proposing query throttling but everywhere people say that tastypie is better than pistonunfortunately this not possible using openldap because your filtering is returning more than 1 object multiple grouping each with a unique dnhowever there s one thing we haven t considered yet - what if you never get more than 5 postthe idea is that equal responses will have equal md5 hash and storing hash is a more lightweight processlastly whenever you want to iterate x amount of times a for-loop is always more readable than a while loops that uses a counter variablein my android app i have a background image which is longer than the screens width for all the three types of screens.this implies that i have got 3 drawables each for different screens type mdpi ldpi hdpi and hence i have included a horizontal scroll bar in my appthe third operation is made much faster is the client uses a rsa key pair rsa signature verification is very fast whereas dsa signature verification is expensive actually somewhat more expensive than dsa signature generationthe hash cake generates are more complex than md5compared with quicksort mergesort has less number of comparisons but larger number of moving elementsthis is a scenario where a traditional for-loop is more handy than just iterating over the arraysthe reason google-chrome is slower than firefox is that the devmode plugin runs in a sandbox so calls and data have to cross the sandbox boundariesfor division things are a little more complicated than multiplication seei actually picked junit over testng for android testing i thought it was more lightweight than testng for on-device testingi have tested that by modifying one image in hdpi folder and keep it as it is in the xhdpi folder the result was note 1 is loading from the xhdpi folder am i missing something here it suppose to load images from the hdpi folder because it s screens density is smaller than 320 dpimulticore refers to a computer or processors that has more than one logical cpu core and that can physically execute multiple instructions at the same timei used ppm pgm files as they are simpler to write and more portable than bmpswing has more or less deprecated awt so you should extend jframe instead of framei am using bottle but i am going to want to use https and support for https under flask seems much more straight forwardin my opinion the second way to achieve this is better because using get is not thats ecure in my opinion.it s easier than using postthe ogv version of the video seems to run a little better than the webm which itself seems to run better than the mp4google does this because their feed api can parse more than rssmy problem is i m more familiar with mysql and could probably figure this out but this is postgresql and i am still getting tripped up on syntaxbut the problem is that i need to terminate a process if it lasts more than a timeout 3 secondsmost of the literature that says myisam is better faster whatever then innodb is old literaturealthough this is only for ios the main app portion will be built in react-native as i am more familiar with js swift objective-c are very new to mecheck out sorcery it s more lightweight and less obscure than devisei think that in short the second answer to that question covers it all the heap constraint which is that children are greater than their parent does not completely specify the heap so there is usually more than one possible arrangementright now oxygene is much better as it supports a broader set of language and platform features than delphi .net ever didso that means that in practice an innodb write will take 3 times longer than a myisam writei know you said you don t care about how secure it is but if you chose des you might as well take aes it is the more up-to-date encryption methodpostgresql is already slower than mysql up to a certain point it is actually faster when you have a ridiculously large databasehowever cobertura looks more modern active last update from 2010 instead of 2005 and generates nicer reports so i would prefer it over emmai have the impression that the implementantion has something to do with a for-loop and some kind of adaptive delay that gets bigger as loops count increasesthe communication between the android app and the pc can rely on a simple tcp socket udp is also a valid option but if you begin in network programming tcp is probably easier to handle and more widely usedgood advice but in the end i decided a bindable textblock was more useful and simpler than a richtextboxunder cpython tests run 4 times faster than under pypyarraylist - for-loop is about more than 2 times faster speed than foreach loopsthe problem i have noticed is that sometimes the jquery post result is retrieved earlier than the load of the .js file has been completed so i get an error and of course the jquery plugin doesn t worki feel like if the bitmap class makes data modifications to the stream then it would have to decompress the stream which should make the bitmap class take the same amount of memory working with bmp streams as when it works with png streams despite the fact that the png streams is smallerif i don t use shiny every time i regenerate the plot on some kind of user-interaction the html file created by plotly dygraphs which is more than 1mb needs to be transferred to the clienti think that inventing something better than both ant and maven wouldn t be that difficult but that tool doesn t seem to exist yetin a few more years there might be an architecture where 128bit math is faster than 64bit but i don t think any exists today2 tcp needs more processing at network interface level where as in udp itÃ¢ s notif you are using linux check out netdiscover this uses arp i think arp is lower level than tcp udp and with java you can only create apps from tcp udp and abovehowever i ve searched for a couple days and am not getting a definitive answer and i need a better understand of this so i know no better way to get more info than to post hereget is simpler and faster than post and can be used in most casesi want to know if there is way in matlab so that i can find number of points in each grid so that i can classify it as a dense cell or sparse cell.if the number of points in a grid is more than a threshold it can be said to be dense .i need to find distance between each point in a sparse grid and centroid of each cluster to find which point is the outlier.if min distances between a test object o in a sparse grid and cenroid of each cluster threshold value it is outlier.can you suggest a method to implement this in matlabwhat does rabbitmq do better or worse than activemqthey also tend to be smaller than their xlsx or xlsm counterpartspersonally i m using sublimetext right now which i find easier than vim for searching and navigating the code but everyone has their tasteunlike google-chrome which dies silently the latest firefox is more helpfulor more ideally you might want to change show hide to jquery fadein fadeout which is more appropriate for back to top indicatorsi am creating an commerce website and i am stuck in a database problem i am storing customer orders please tell me which is better myisam or innodb i have to use transaction like feature in customer order table and i personally prefer myisam because it is much faster than innodb and it also supports full-text searching is there any way to use transaction like rollback feature in myisam so that if anything goes wrong table will be rollback to its previous state how to do that without any external library or any other server side access and i have to use mysqlin other words hardly anything slower than multiplying add subtract but not enough to really worry aboutclick is tapestry-like but much more easy than tapestry and wicketearly inlining is the compiler s ability to inline a function early on when it sees the call costs more than the inlinethough from a design perspective it may be easier to simply add the extra 5px to the width designing for the worst case browser to prevent wrapping in google-chrome which is worse than extra space in firefox iei find that the swing library is easier to use than awt although you do still have to use awt for listenersno java prevents a class from directly extends more than one super classwe thought of django but we think that is very big for our purpose and we decided that webpy or web2py is a better optionthe logic could be a sql agent job that is fired every 24 hours that deletes any data that has a datetime less than dateadd d -1 getdateeach page would have 2 actions a get that takes simple ids and a post which takes more complex modelsif you re interested there is another data structure called a dawg directed acyclic word graph that is similar to the trie but uses substantially less memorythis is slow because your hard disk is significantly slower than ram and at 7gb there will be a lot of data being read from your hard disk put into ram then moved back to your page file the file on disk your operating system uses to store data that has been copied out of ramthis feature allows the processor to execute several arithmetic operations simultaneously often four 32-bit integer operations or four 32-bit floating-point operations sometimes more operations with narrower integers sometimes fewer operations with 64-bit floating-pointtcp is way better then udp for thatif you think your users technical users will be happier with directory use that but otherwise i would go with foldermy questions are am i right to want to use json and use a php file on the remote server that will accept it as get or is post better and what issues should i be aware of when submitting this for review through ituneson simple low-cost processors typically bitwise operations are substantially faster than division several times faster than multiplication and sometimes significantly faster than additionhowever with this method image in firefox appears to be blurred at least if resized and in google-chrome it looks lighter sicswing is far better than the obsolete awt libraryfirst of all if your instagram client is in sandbox mode then you can t get more than 20 post more clearly last 20 postif you re writing a mac app the opengl profiling tool profiling opengl code better than instrumentationproblems with corruption seem to be more frequent with mysql than with postgresqlpostgresql is much more similar to oracle than mysql isit might be better than a for-loop in the terms of readability maintainability but keep in mind that linq usually slower than plain loops tlmy sense is that encode and decode are probably good solutions when you want the data to be recoverable but that unrecoverable hash using crypt md5 is a better approach for stored passwordsi would like to use more than one cpu to run ubuntu 14.04 32-bit in virtualbox but when i stop the machine and go in settings - system - processors the processors s slider is grayed out as you can see in the screenshot imageif you want to do more columns as a loops you need to increment this value in the same maner you are incrementing r in your for-loopif you prefer tp delphi dialect free pascal is the better choicepull subscriptions perform much better than push subscriptions in a wan scenariobecause a tablet s screens is much larger than that of a handset there s more room to combine and interchange ui componentsin my experiance with the two postgresql has shown to be faster on most write operations while mysql is slightly faster on the readshaving looked at the existing accesses listed i can see that it doesn t appear to be using the salt md5 hash that s stated in the apache docs the hash password that s stored is different to what i m thinking i should expect the salt is significantly more than 2 characters and for security reasons i m reluctant to embed a particular password hashing algorithm in my codesometimes mri is faster but with the right parameters and warmup jruby was 3 to 3.5 times as fast on my system for this particularmore than that filtering and sorting by one or more of the attributes will send me to the world of hurtmy site displays just like in need in ie and opera but in firefox i can t get via css to have font sizes smaller than firefox default minimum-font-sizeapple seems to claim that the optional type in swift is safer than nil in objective-c but i don t understand why this is sonote extends mouseadapter is easier since you only need to implements the methods you want to handleyou can check this article of mine if you want something more than simply hide show elements this is how to have simulated conditional fields in cf7 with jqueryin this area i think innodb s change buffer does a better job than myisam s do it nowthough it s unrelated to your actual question des is generally slower than aes at least in software so unless you really need to keep the key small aes is almost certainly a better choicethe versions using diff are especially impacted ave_diff with int constants is about 2.5 times faster than the double contants versioncodeigniter has the lower learning curve overall so i would recommend it over cakephpnow in .net for desktop controls you can use inherited which is much more powerful than the old tag properties anywaythe keyboard is almost always faster than the mouseroot punto is a valid geojson point i checked it with the st_isvalid function and also if i use the function st_distance checking if the distance between the point and the polygons is greater than zero the data retrieved is correct but i don t know if this approach is correctflask is more focused on simplicity instead of functionality while django has more functionalityin google-chrome the green div is bigger than in firefox i really don t know what is the problem i think in firefox it displays as it should but in google-chrome and ie9 it displays differentcoalesce does the same thing here as nvl but is more portableturning comment to answer i suggest you add error checking to all your system and standard library calls except printing to stdout stderr that s more clutter than it s worth for almost any app something likesee this reply what happens when tcp udp server is publishing faster than client is consumingthe namespace is supported specifically to make cross-browser extensions with google-chrome in particular porting from google-chrome to firefox easieras a general rule of thumb at least in security you should trust no user so i think it would be the wise choice to validate the data client-side it s also faster and then if the first validation passed validate it server-side to double-check or to have a safety net if the user has javascript turned off something you don t see that oftendivision is slower than multiplication is generally - and definitely using regular expression matching is going to be slower than multiplication is..many say that svn was build to be a better cvs and in almost all aspects svn is better and is widely usedas others have pointed out ocaml s learning curve will be lower than haskell sthere are definitely some advantages using external editors however emacs is ten million times better than vimafter some time of using codeigniter i found that using yii is more convenientbazaar seems much more like svn with branches just being separate directories so maybe notthe main method does little more than to get the program running here to create a jframe to put the main gui code s jpanel in and then display that jframenow i am using a for-loop to iterate over these frames and add 10 frames in prior and after the erroneous frames in order to get a sequence so that in the end the arrays is more populatednote that while a trie works for the specific case of keys which are strings a binary search tree is much more general and only requires that the keys can be orderedreason i once heard that protected is better for hibernate performance but all i can find on the web is hibernate can access public private and protected accessor methods as well as public private and protected fields directlyone often finds the argument that udp is faster then tcpnginx seems to be the webserver getting the majority of the buzz lately it may be able to serve faster than lighttpd maybe notudp should be much faster than tcp because there are no acknowledge and congestion detectioni find request + cheerio to be easier than jsdom for tasks like thisalso if this controller is an hid the hidapi library might be a better fit than libusbso i can use neither gprof which isn t available on android valgrind which requires an older version of the ndk than what i m using nor the android-ndk-profiler which is for dynamic libraries loaded by android activities either java or native not plain executablesif your system linux is older like debian wheezy for example your glibc version will be older than the required onei had the same problem configuring apache until i gave up and change to hiawatha much more easy to configure and according some benchmark is faster than apachepng is a newer format and often better than either jpeg of gif - especially for screenshotslike npm bower is slower than component at installing has an unnecessary publish step does not support multiple versions of dependencies and does not cache installationsessentially there s no need for gcc any more llvm + clang is more than enoughthe second table has children linked to their parent passport id i only take in account one parent -either father mother- per familyusing the powerpivot excel 2010 addin i believe its possible to effectively create this kind of function using dax and mdx has more built-in functions such as medianone of the reasons to do so is that rsa is much slower than for example aesbut actually break has more resemblance to return both instructions jump out of a block of code which is pretty much structured in comparison to gotosupport exists in firefox and my test just confirmed thisÃ¢ but the handle is a little less noticeable than in google-chromechange it to public to make it more accessible or perhaps better protected to make it less accessible than public but more than private read more about that hereas a result of this comparison i see that lasagne is performing so much worse than keras that i m starting to doubt about my codeubuntu heavily relies on python scripting and generally consumes more resources than debianswift will incur this penalty in fewer situations than objective-c will for instance method calls to swift-only protocol methods do not hit objc_msgsend but if the protocol is declared in objective-c or if the swift protocol is decorated with objective-c such that it can be adopted by objective-c objects as well then method calls to methods in that protocol adopted by swift objects appear to be dispatched via objc_msgsendit s not a question of is map reduce better than mergesort or quicksort because map reduce is just a tool for implementing a sorting algorithm like mergesort or quicksort in a parallel wayframeworks like firebase angular-fire lib have handy built in auto-sync functionality alternatively the rest post put request is a more traditional design patternmost likely for the same reason that implements idisposable but ienumerator does not--the earlier version was written before the authors thought of circumstances where one an a implementation might need cleanup but a factory returning such an implementation might not know about such neednote that while you could use purrr for the job it s not particularly better suited than regular dplyrgoogle-chrome handles these better than compared to firefoxnote that i do not want to bind a gridview directly to the view property from a resourcedictionary where the datatemplates x shared attribute is set to false as this leads to problems in the xaml designer view can t be shared by more than one listviewnow if you re intending to use a remote filesystem with ofs which is the primary use-case you have to first install the relevant remote filesystem packages on the os you re using then use for example if we ve got cifs which is the newer name for smb sambaalso even without using the shift key when typing quickly i often find i haven t quite released a key before typing the next letter so i get more than one keydown event in a row before the corresponding keyup events - this has no noticeable bad effect in normal circumstances but is noticeable when there s code responding to both the down and up eventsis quicksort always better than mergesortonce you get more familiar with haskell you will be able to rewrite standard recursion scheme such as the one above in a more compact form exploiting a few higher order library functionsone thing you could look into is using tablesorter - which is much simpler than datatables - with a drag and drop plugin like sortable for jquery ui or thisthe reason to go with logarithm instead of repeated division is performance while log is slower than division it is slower by a small fixed multiplein my experience i ve found that vmware seems to be faster than virtualbox although i don t have any hard data to back it upbecause you can guess the top passwords and see if they have the same hash but the author points out that hmac is a more secure mechanisminstead you use other lifecycle methods that are more appropriate such as onstart which will be called both after oncreate when the activity is first created and when the activity is returning to the foreground from having been in the backgroundin my mind illegalargumentexception seems more specific than using a nullpointerexception since it s telling me that the problem was with an argument i passed to the method and not with a value that may have been generated while performing the methodin short - if all we care about are comparisons heapsort is a better choice than quicksortthirdly use a better hash than md5 for passwordsperl uses nfa which is slower yet more powerful than the dfa engine sed hasi have been toying with opengl for about 2 weeks creating hardcoded vbos and making rotating triangles but the question that has been lingering in my head is how the heck do i create more than one vbo vao in real-time so i can handle multiple objectsif you are using mysql or postgresql this is a better waywhile alloca gives you automatic de-allocation on function exit the stack is usually a smaller resource than the malloc heap and if you exhaust the heap it gives you back nulltoupper is better to use than tolower but i forget whyi encourage you to upgrade jquery mobile to 1.3.x and take a look at jquery mobile 1.3 s pop-up widget which is different from the dialog and works more like what you want than dialog doesbut you are stopping your singlton to have more than one instance during serializable and deserialization which is of more importance in the context of singletonin a thread i came to know that myisam is faster for reads innodb is faster for writesyou can also use javascriptconverter when you need more control over the serializable and deserialization processi am running an application on jboss 7 and weblogic 12 when i make a soap call on weblogic is more restrictive than jbossi think you ll find that web2py is even easier to learn and use than rails and djangoso a g1 will show mdpi bitmaps slightly smaller than a mdpi device with a true 160dpi screens but this is a very small difference so it s not a big dealusually though post request are intended to be used for changing the state of the resource on the server so if the only thing you have to do is retrieving data a get is more appropriatenote that swift s arrays are much more sensible than objective-c sso division is always a bit worse than multiplicationtldr tcp ip is more reliable than udp but not a 100 iron-clad guarantee that nothing will ever go wronglike you heard asymmetric cryptography like rsa is much slower than symmetric cryptography aes but it does have it s advantages simpler key management a single private key to protecti have a label with a single character that i wish to be bigger than the uiview that it s a subviews ofthe trouble is the game runs fullscreen in 800x600 resolution and really doesn t like being minimized which makes it more or less impossible to actually use ida while the game is runninganother thing to try is the excellent entity framework profiling - has saved us many headaches in debugging performance issues like these - gives you a lot more than sql profiling and you can see what queries objects are created per objectcontext and method source line etc -he cried. will save the string on the static storage and you will not be able to do most of the function on them you better work with strdup in your function or malloc and calloc to be able to use all the functionyou can also use coalesce which is the more general form of isnull and is actually part of the sql standardthe plugin dll itself also does not expose anything more than the minimum interface required by max for adding a few top level scripted classesi know innodb tends to be a bit slower than myisam on counting but this is far too longthe bad we use a break that is little more than a tamed goto something like goto the end of the loopa while loops is better thought of as a looping version of an if statement than akin to a for-loopthe device in question will have a arm cpu with 400 to 900 mhz clock a vga or wvga display and about 256 mb ram or more with standard debian linux minimalistic installit seems that google-chrome internet explorer or safari are more strict than firefox on terms of securityi just checked the timings using mysql 5 and they are slightly worse than postgresqlit sounds like you need a treemap which has iteration which is not much slower than linkedhashmap and does what you really wantif you spreadsheet file has to be downloaded from server you can use epplus on server to generate spread sheet it will be much faster than vsto than you can use wcf from add-in in excel app to upload the dataif you are using any js loops then for each loops is slower than normal for-loop you might wanna take a look at thisthis blog post is more detailed but unfortunately does also not mention where to get the product keyit seems google-chrome applies some formatting to render better than firefoxcheck airflow webserver or scheduler logs for more details as stderr or stdout goes therepostorder is trickier because the stack has to store nodes to visit and nodes to process and they aren t always simply related like they are in the inorder casethat said it is a scheme which has fewer batteries included as compared to common lispnot sure about the overhead of calling gethashcode a few million times but comparing two ints is probably going to be a lot quicker than the equals object methoduse post its safer than get if you use restpost has worse performance than geton the side of using macros racket has always been more advanced than other scheme and lisp implementationseither way i intend to use smarty partly because i have lots of experience with it and partly because its much more well documented and has much more functionality than blade and to me the syntax is slightly cleaner than twig although the template engine is not the point of this question reallyactionscript is quicker than mxml but for what you re going to do you re trading speed for convenience - mxml comes with all the different ui classes list scrollbars etc already thereit is also non-standard unsafe and non-portable basically worse than using malloc and free in c++the ssd disks are from 4 to 8 times faster than a sata hdd depending on the modelto achieve the actual goal you maybe able to use plain for-loop which provides more flexibility in controlling loops instead of using whiletcl is more verbose than perl herethis performance difference issue when doing profiling is better than debugging also has troubled me for a few hours i even tried to move code from web api to console application to test and console application has similar performance as good as when profiling web apiso the difference between the two is that if you assign affinity at the thread level you can assign them to more than one processors and spread the load more than with all threads assigned to one processorsis post safer than geti.e strncpy is actually better than the simpler strcpy if you are willing to improve the codethe whole purpose of using aes to secure the communication or any symmetric key encryption is that it s a lot faster than rsa or any public key encryptionif the versioning is older than 0.10 please upgradehfs+ supports much larger files than hfs block addresses are 32-bit length instead of 16-bit and uses unicode utf-16 encoding to name files folders and other filesystems objectshowever they are not the same because the subclassing has more specific functions and data members that accomplish a more specific task that the superclasswhen working in bash it is generally more efficient and better suited to use the tools that bash provides rather than spawning subshell calling 3rd party tools like grep and cutnginx is faster and lighter but many people find it easier to work with apache because of .htaccess support nginx does not have an analog due to performance concernwhen i draw a 3d cube in opengl es for android it seems to look fine as long as i m in portrait mode but when i switch to landscape it looks more like a diamondin fact in some ways ntlm is better than kerberosthat way they are in a separate file that can be parsed a bit easier than a maven pom.xmldepending on where i look people say quicksort is faster than mergesort due to its locality of reference cache hits etcfor example tri-state checkbox aren t particularly intuitive and providing a drop-down or set of three radio button is more approchable for those less technically inclinedfirst get unitythread class from this post which makes it easier to call a function on the main thread from another threadknuth writes that fibonacci search is preferable on some computers because it involves only addition and subtraction not division by 2. but almost all computers use binary arithmetic in which division by 2 is simpler than addition and subtractionfor the sake of completeness i d like to add that using getter setter consistently makes it easier to override a classmore useful with nvidia than ati for exampleyou may also consider using a listview which is easier to customize than the gridviewyou could of course just wrap the function in a decltype to figure out the return but an auto is much cleaner to writeafter reading some related articles i don t think swift is more effective than objective-csince sql server doesn t support named constants chars is far more descriptive than int when used in stored procedure and views as constantsthe use of one settimeout timer is more preferably than several setinterval timershomebrew is generally a bit nicer than macports as it doesn t require lots of sudo actionof course any hash algorithm is going to have some chance of collision but you have better options than md5 that would still satisfy the 1024-byte limitdo you keep the parent if they are better than the childrenif new member fields are declared in the subclassing then yes a subclassing presumably uses more memory since it has all the fields declared in the superclass plus all the fields declared in the subclassingnote you are using a post method but a get method seems more appropriate in your case getvotesdbcontext is newer api which should polish developers experience when using most common tasks - simply the api is better designed but you still have to get objectcontext from dbcontext and use the older api if you want to use some more complex featuresterm hide is more appropriate for run-time dynamic show hideamong other things the apple template code will include creation of a glkbaseeffect which provides some shader functionality that seems to be required in order to be able to draw with opengl-es 2.0in some of the academic literature implied multiplication is interpreted as having higher precedence than divisionfor a one man shop teamcity is far easier to setup and configure than cruisecontrolso as you can see the random binary search tree was rather a lot better than the skip-liststhat site does not claim pypy is 6.3 times faster than cpythonof course uiscrollview can have more than one content view just as any uiview can have more than one subviews and this case it will be more difficult to render its layerin particular a font may be rendered quite differently between the various browsers and operating systems in current use - safari and macos use more anti-alisaing than firefox or ie but ie9 has a new feature called cleartype which also affects font renderingas pointed out you cannot inline which is another speed trick but inlining on the if-then-else tree doesnt necessarily make it faster than without inlining and is generall not as fast as the function pointeryou can read all over the web that awt is old and deprecated and swing is old but newer than awt and should be preferred over awt whenever possiblei prefer using teamcity but jenkins is much more popularthe way you are using the kotlin for-loop is much closer to java s foreach loops for i indexesgoogle-chrome sends back and html collection that is longer really better imo than firefox ie or chromiumfrom what i ve learned so far metaclass and inheritance from superclass in python serve a very similar purpose but superclass inheritance is more powerfulas the comments already mention if you are starting out with version control you would be well advised to choose a newer system than rcs git mercurial fossil subversion ...you ll need to implement serializable to have java handle the serializable or externalizable if you need more control over the deserialization processi have more experience with vhdl and verilogmyisam inserts are going to be faster than innodb so if you re logging data and retrieving it later that will be a winedit just realized a while-loop may well be a lot cleaner than a for-loop for thisprotected is more restrictive than publici ve used it for convenience a for-loop is much more reliable for converting an htmlcollection to an arraysuse swing follow the threading rules which are hardly likely to be more onerous than awt and enjoynow for sse is clearly faster and for the smaller values it s nearlly as fast as avxi am more acquainted with debian than centos and i know the libraries i need areby decoupling simulation from rendering you can render at a higher frequency than your simulation does for samplingall hash functions have that problem but some are more robust than md5you need here while loops better than for-loopwhile it would be highly unfeasible to create a test that would exercise every possible code path in tpl you can certainly setup a test that would benefit from many available cores set the affinity mask to 1 cpu and observe through task manager that the affinity never changes and cpu utilization is never more than 1 n where n is the # of cores presentudp is significantly easier do you really need tcp btwif your client jar is really thinner for example only the interfaces having the war s reference the client jar effectively disallows them to access to ejb implementations which is always a good ideagoogle-chrome is more forgiving or you could call it less compliant firefox less sorequests is one of the cleanest api s i ve ever seen way better than httplib + urllib + urllib2yes they are different but you can hardly say that the vb.net version is less capable than the vb6 versionthe other advice i have is that a for-each loops is faster than a for-loopsome say mysql is much better for bigger projects while others think just go with postgresqlnot really any more than safari having cookies and firefox having cookies are somehow tiedfor-loop is more suitable for any countable loopsit s much much faster than beautifulsoup and it even handles broken html better than beautifulsoup their claim to fame - lxml just isn t as vocal about iti get that pushing the code up is a matter of using git aws.push - but what do i need to do to push the data up the the ebs environment i m happy to use either postgresql or mysql on ebs - but i m guessing postgresql is the better choice given that s what the local app uses - if so how would i need to configure my database.yml for postgresql on ebsudp is more popular in nat punching because provides much better results than tcpit s not perfect but i guess that a protected method that does not check parameters is better than a public method that does not do ityou can serve it from for example nginx varnish which are usually faster than apacheand if somebody is running a 6-month old versioning with a known bug upgrade becomes a more acceptable answer if they are 12 versioning behindedit2 you may have better results with mouseenter and mouseleave too i thinka straightforward solution is to iteratively create each of the arrays using a for-loop or list comprehension or use a higher dimensional arrays where each of these 1d arrays is a row in your 2d arrays which is generally fasterand it turns out maven really does a better job of managing dependencies for ant build.xml files than does ivysha-256 uses 64 characters in the database but with an index on the column that isn t a problem and it is a proven hash and more reliable than md5 and sha-1one reason post is worse for security is that get is logged by default parameters and all data is almost universally logged by your webserveralternatively the stanford parser can do the same stuff and might be a bit quicker being java based or lingpipe but nltk is waaaaaay more user friendlyrun the following to sort the data on disk this is slower than pulling it into ram sorting and then writing to diskinnodb is more resistant to table corruption than myisami want to move to nginx since it s better than apachetemplate engines are rarely the cause of performance problems even if chameleon is slightly faster than jinja2 i doubt the effort of learning a new template language etcso md5 + strong password + average salt is better than usual password + super-extra-cool_hash and quite enoughi am using franklin gothic font for website and font looks good on google-chrome and safari but on internet explorer and mozilla firefox it looks darkermy cygwin installation is now in two directory c cygwin64 and my windows user folder which makes backup more complicated and is tied to my username another user couldn t use iti m trying to figure out how to better deal with json serializable deserialization of nested java objects in spring mvcthe reason why the vpn is slow is well because your vpn is likely 50 to 100 times slower than your lan local area networkrichfaces looks more good option to work than icefaces bcoz it has inbuilt support its easy to learn its long time support guarantee for seam+richfaces combinationi am currently writing a server for a fast paced multiplayer game which should be run in udp i read tcp was inappropriate due to the way it handles packet drops in applications requiring timely delivered data please correct me if tcp is more useful the game is not mass multiplayer and should be hosted primarily by the players themselves probably on local dedicated serverssince perforce is less commonly used compared to cvs svn amongst bamboo users we generally get less feedback about it and hear less about existing issuesnote my use of a foreach loops here which is much neater than your for-loop for this kind of thingdoes this affect postgresql harder than mysqli wrote this function and it seemed okey but it fails if there are more than one folder in the current directory and no filesif your form is meant to create modify data you ll use post instead of get but get is easier to testit s just a hunch but maybe it s only a matter of the size of your draggable being too big and being over more than one droppable itemthe funny thing is that for abc_def property google-chrome is actually much faster than firefox and ie as i expectedit looks like the parent will become a zombie too if children aren t handled and a child runs longer than the parenthowever since i know that the add-in is more or less working as is for all users some of whom use excel 2010 and some of whom use excel 2013 and some of whom may explicitly have vsto installed and some of whom may not i d like to be sure that i m not setting myself up for a bruising later on when some features of the add-in stop working for no apparent reason due to changing the settingdouble md5 hashing is actually less secure than a single hash with some attack vectorsfrom a performance and design perspective using annotations on getter is a better idea than member variables because the getter setter are called using reflection if placed on the field than a methodbut i think importing the text file into excel delimiter by spaces is quicker if this can be donethis was finally slightly faster than std ostringstream but it has few downsidessince it s an exported method clients should get an exception on their abstraction level so illegalargumentexception is better than nullpointerexceptionyou may also want to take a look at why git is better than x a site that attempts to convince you of the superiority of git over mercurial bazaar subversion and perforcei know that in practice this would only happen with a great amount of connection given that processing time of an udp connection is faster than tcp but it could potentially happeni do know though that quicksort has more compares but less swaps than mergesort which i learned from another stackoverflow discussion quicksort vs merge sorti also changed the for-loop that you had there to foreach loops which makes more sense when working with arraysif you want to cover a brownfield project with tests which was not written at all with testability in mind then you have to use one of typemock or moles in my opinion typemock is the better choicealso the native for-loop is faster than any other jquery loops methodif the orb implements local object optimization sometimes collocated objects then it will not open any sockets but it will perform serializable deserialization which is typically faster than marshallingthe post at has more information on how to get that access tokenseam certainly is far better than using plain jsf refer the link posted by damo a couple of answers above1 is comparison via gethashcode check if the hashcode of both objects are the same faster than equalsfor anyone curious about the coalesce vs isnull discussion and why i changed my answer to use isnull kanav rightly pointed out that coalesce is more expensiveedit what particularly interrests me is if desktop safari is closer to ios safari than google-chrome isgood at serving static files it s slower than apache and nginxuse daemons mode and then simply touching the wsgi script file when an atomic set of changes have been completed isn t that hard and certainly safer than a systemd which restarts arbitrarily when it detects any single changescanf is faster than cin printf is faster than cout etcyou can find more information by amazon here link an alexa user with a user in your systemany ideas what might be causing this how i could fix it or how i could get around it to use matshow or imshow on a specified subplot the end use case is to have more than 1 subplot in the figureor is there any other better method than using wakeup interrupt to count seconds since power onmy understanding is webkit is pretty good smaller than geckobecause of the above replace strdup with strlen malloc memcpy memcpy is slightly faster than strcpyif anyone has some information on this problem i d really appreciate it - either things you did to make tcpdf faster or just confirmation that it runs slower than fpdf so i can forget about it and just stick with fpdfhow can you get similar highlightings to zsh s less than bash s less in ubuntui have tested on mp3 files in different directory it takes less than one second with over 6000 files stored in different folderhowever the while loops remains a little slower than the for-loopi think whoever said post is better than get when using passwords meant that the passwords would be part of the url in the get request which would obviously be badi set up a maven multi module project one with packaging war two more with packaging jartortoise now has an option push new branch that may be safer than force pull or pushis memcpy usually faster than strcpy on most real platforms3 mysqlhotcopy inly works on myisam tables and in most applications you are better off with innodbthe google-chrome apis are currently experimental hence these tools are likely to be better developed under firefoxubuntu is far less conservative than debian so you will get closer to the bleeding edgeon kde aptana ran perfectly quicker than on gnome at the best of timesforeach or for-loop is somewhat slower than an equivalent while loops or tail recursion the benchmark i linked to above shows a 15x performance difference with 1000+ iterations though it will likely depend on the version of scala and the version of the jre...due to this i create a temporary directory and use createfromdirectory but i don t want copy the same folder to other location in the disk almost the zipped already folder is betteri m not saying that realloc is worse than implementing realloc using a malloc freep is sometimes chosen to be 31 because not only is it prime but a compiler resolves it to a bitshift and a subtract which is much faster than a multiplyingfor-loop is easier to read than a while loopsi would say that probably yes as long as we have enough of ram which is faster that virtual memory in case we need to access something from the disk which is extremely slow... but also i know that some applications just require having pagingsettimeout is more relevant than setinterval since the first method just waits for a delay and executes a logic whereas the second function is meant for repeating a logic on periodic intervalshere s something that should get you started - this is all based on the assumption that there are only 3 checkboxes on your whole page and that you re interested in all of them - you ll want to make a method like this respond to your checkbox elements onclick events - i ve found that to be more reliable than onchangehere i am retriving data from database and i am doing insert update and delete of data using checkbox.my problem is when i click more than two checkbox than also i am moving to update.php page but what i actually want is that when i click on update button first it will check that only one checkbox is selected from list if not than alert message should display like select only one checkboxanyway http 405 is telling you that your backend does not support the put method and probably it s expecting a post method with the x-http-method-override put http header since post is more standard method in rest than putonce the set of projects has been validated maven now does some more parsing of those pom.xml files to construct the list of build extensions if any and the list of pluginsthis answer covers the more difficult case with mouseenter and mouseleavexml files have none - so sql databases are a lot more efficient with sorting and filteringtraditionally postgresql has had fewer security issues than mysql but they are both doing very well on thatby highlighting the shape of the two elements you can see that in firefox left the button is 2px taller than in google-chrome rightwhy initial render time for component with both onblur and onfocus is much bigger than otherspeople typically find jax-rs easier to start with and the more modern approach although jax-ws has more build-in type-safety features which is also exactly where most of its complexity comes fromon contrary jscript is more c-like do not require explicit enabling of script running accepts relative paths case sensitive and loosely typed both are imho advantages for scripting language compared to vbscriptand as bonus on google-chrome firefox is better in this case user will never be able to type any accents on the current page in any inputs without reloading the windowit is nothing more than a getter setter for an objectthe only browser where the while loops was slower than the for-loop was in operaprobably firefox just ignores it but google-chrome is more strict change code toif the processors is loaded enough then my thread works fine but when the processors is more or less free i rich quickly my cpu limitation 50 and finally the pool terminates and needs to be recycledcaching and buffering are quite important since disk are just so much slower than ram and ram is much slower than the cpuwpf .net represents more functionality than straight swing or swt but the eclipse netbeans spring rcp projects provide a much more comprehensive foundation for complex and modular gui applicationssalu is used for-loop counter so when you nest them more salu pressure is done and becomes a bottleneck when there are more than 9-10 loops nested maybe some intelligent algorithm using same counter for all loops should do the trick so not doing only salu in loops body but adding some valu instructions is a plusi had read through hundreds of docs and forum posts regarding whether innodb or myisam is the better engine to use most sources giving vague evaluations or at best overly complicated benchmarking with vague settings claiming to increase or even decrease.swing has newer and better api s than awtthis will restart the site and when it runs for the first time after that it will see that the dll versioning is higher than the one in the config files and the db and will kick off the upgrade proceduremysql is probably more often offered by shared hosting providers postgresql is probably a little more powerfulstill technically yes it appears that an all swift solution is roughly 2x slower than a swift + cocoa solution which should be roughly the same than objective-c + cocoa when compiled with equivalent options iircenumerate is more pythonic but xrange is fine here tooas far as i know you cannot configure more than one https virtual host for each ip that s it name based virtual hosting is limited to only one ssl virtual hostan entity-relationship diagram is more abstractso i will start with commit 1 find all the parent ie commit 2 and try to check if there is an branch for this commit ie number of children is more than 1gson is faster with smaller documents and jackson is faster with large documentspostgresql is much more complete and solid and will much better support complex queries and their optimization while mysql may shine in terms of retrieval speed for extremely simple queriesmaven usage is lower compared to ant but just how much lower is not really knownanything django does web2py does betterudp packets are easier structured than tcp packets but sacrifice security for their sizemycroft ai seems to have a nice stack of projects that offer functionality and programmer interface very similar to amazon alexa custom skills and you can host and modify it yourself to get more flexibility than alexa voice service but that s also a bit of a downside because you have to scale it yourselfi found a simple condition where using while loops is better than for-loopthe for-loop is slightly slower than the foreach loopscalculates the size of the first 5 folder in your home dir should work on all platforms fails with an arrayindexoutofboundexception if there are less than five folder in your home dirsvn is better than cvs because it was designed to be - it s roughly the same thing with some simplications and new featuresisnull can only have one input however it s been shown to be slightly faster than coalescewith perfect forwarding and decltype auto overloading becomes alot easier but still will take time to implement and would have to be modified if ever another function was addedi ve just timed this and it is about 25 faster than using sin and costhe conclusion of the article is that using for-loop is generally better and faster than the foreach loopsthe theory is that someone extending your class with protected access knows more about what they are doing than someone who is merely using it with public accessjust like an mp3 or something wav is probably fasterso what i want is if the list is less than 99 hide something else if the list is more than 100 then show something this is what i placed under ajax success handlerboost intrusive_ptr performs better than shared_ptr because it doesn t need a second allocator to hold the reference counti created the exact same network with native and backend tensorflow but after many hours of testing using number of different parameters still couldn t figure out why keras outperforms the native tensorflow and produces better slightly but better resultsi use google-chrome as my main browser but sometimes firefox has much more verbose errors warnings that can make debugging a complex issue easieri ve built a rails application using mysql and now would like to move some models to a postgresql database for performance reasons the tables are quite big and postgresql is fasterthus your for-loop is probably better expressed as following while loopsessentially all rsa implementations for about 30 years do not simply do c up d mod n as shown in the first few paragraphs of wikipedia or billions of blogs copied from brief news clippings or exceprts from decades ago but instead use a more complicated private-key that supports the more efficient chinese remainder theorem computation as explained if you read all of the wikipedia article or look at a text by an author who actually knows about modern cryptographyin terms of pure speed it is not always the case that myisam is faster than innodb but in my experience it tends to be faster for pure read working environments by a factor of about 2.0-2.5 timesthe issue is that the execution time of a benchmarking is much higher about 3 times in case i do not invoke the profiling along with it than the case when the benchmarking is executing with the profilingthe class uses scheme a dialect of lisp which is significantly cleaner and easier to use than common lisp yes this is an opinion deal with ityou can also use underscore.js but lodash is faster more complete and you can create custom build with only what you needini is really a much simpler format than xml if you have less than fifty config options and they are not nestedunless you re writing trivial apps or just like re-writing code i wouldn t start any new project in codeigniter because pyrocms is the more sensible starting pointi believe ubuntu is smaller debian wheezy smaller still or even alpine for tiny start pointthere is a nice comparison of threads and processes here when is clone and fork better than pthreadstelnet is more general than ftp and is generally used for command and controlpostgresql is stricter about conversions than mysql is and generally will throw an error rather than try to convert a string to an integer if it doesn t look like onei find lapply loops easier than a for-loop in your case as initializing the list and using the counter can be avoidedfirst step would be to investigate why a processors with hyperthreading simultaneous multithreading could lead to poorer performances than a processors without this technologyi think richfaces has a more mature ajax integration and their ajax components and events are more easy to use for me than trinidad onesget method is used for illustration here you may find that post makes more sense for this operationbad news is that the asmlib version of memmove is slower than the glibc version it is now running at the 300ms mark on par with the glibc version of memcpyprestashop is much easier than zen cart oscommerce and magentothe nested loops version is the slower of the two due to the extra the interpreter overhead of the for-loopbut in mysql it is ok and in postgresql it is wrong and ask for the other fields besides site_id either in a group by clause or in a aggregation function i know that postgresql is stricter on sql than mysql so i must select the site_id in the query object of msg_published but in pure sqlalchemy i can do like thisa lot of answers comments are mentioning that the background-color rgba is faster and more efficient but that background-image is more compatibility friendlyright now google-chrome is faster than firefox sunspider tests so your statement it loads faster in firefox is not really correctaccording to wikipedia the bmp of the ucs has 65536 characters the latest version of unicode contains more than 107000 characters and the ucs has more than one million code points-in the same laptop but using the hpc cluster of my department with 30 workers the parfor loops is much much slower than the for-loop and than the parfor loops using the local cluster with 12 workersi will add that i ve often heard that nginx is faster than apache for serving static files to the point that it s sometimes worth using nginx for static files and reverse proxying to apache for dynamic contentmalloc often gives you more memory that you ask and stores the actual value in a special location that realloc can access at a later timewhat s up with google-chrome that the debugger behaves less conveniently than firefoxthere exists a simd fork of pillow which claims to have much better performance than imagemagick or plain pillow but there are no comparisons to opencvwhen i open my site with mozilla firefox and google-chrome the font in mozilla seems thicker than google-chromeperformance will depends on your application use cases basically orika perform better than dozer or other mapping reflection based frameworks because it use bytecode generation behind the scenesblock crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsaare client-side binding grids better than the server-side onesfor example if you tried that and it only installed newer files with higher versioning then your major upgrade logic is incorrect by definition because that will uninstall the older product before installing the newer onebecause bellman-ford runs in time o mn the overall asymptotic runtime is still o mn + n 2 log n so if m o n 2 note that this is little-o of n this approach is asymptotically faster than using floyd-warshallgenerally speaking i find postgresql lends itself to 24 7 operations better than mysqlasymmetric key encryption ex rsa is no more secure than symmetric key encryption ex aeslemmatization is relatively more complicated as compare to stemming that is why it s harder to find some ready and free solutionudp is quicker than tcp but if you re using quickfix you ll be using tcpbut i ve found that sublimetext 2 has some features i like more than textmate and also tm v2 which is in betadevelopment and deployment of python code is made much easier by setuptools in combination with virtualenv and pipif you re using retrofit and okhttp to perform the network calls i suggest you use moshi as it s also from square and claimed to work faster and better than gsoni d have to say i d personally go for either prestashop or cscart as they do have a lot more features than opencart and at the same time also don t cost anywhere near magento to setup and runi have recently read that nginx is faster than apachethe suffix tree is lighter and faster than the trie and is used to index dna or optimize some large web search enginesthis avoids malloc free but is less extensible and more prone to buffer overflow issues so i rarely ever use itautomating sudo is slighly more complex if you need to pass the passwd but still can be donei am more familiar with postgresql than mysqlthe naming of parent and child classes sometimes is counter intuitive as we often think as children as being smaller than the parent but in programming the child is the same as the parent but with extra funtionalitymac os x llvm gcc based crypt fuction is borked junk hardwired to only use des a proven breakable hash worse than md5iÃ¢ ve read a so questionÃ¢ s comment where inserting order# 68 as pictured wouldnÃ¢ t cause any trouble but if i wanted to query orders by certain tags a many-to-many is more appropriate convenient efficient since otherwise in a one-to-many every single order will have to be checked to know how its tags is this trueyou can even shorten the for-loop by directly pushing the objects into the arrays which is a better way -and my php versioning is lower than 5.3.0 i upgrade that fixed my problemalternatively you can use lxml module which is lot faster than beautifulsoupwhat i have understood is that declarative let you do whatever you want as long as the result passes and imperative is more verbosewe all know that the access to ram memory is faster than access to hard diskif however in your app you can ensure that the tab is active while listening then settimeout or setinterval is better as it can fire as often as 100 times per secondapache airflow is a good option if you need something more full featured than cron jobsudp is faster than tcp and the simple reason is because its nonexistent acknowledge packet ack that permits a continuous packet stream instead of tcp that acknowledges a set of packets calculated by using the tcp window size and round-trip time rttit seems that in firefox ie the line-through style is a bit lower than google-chrome i am not sure if this is because of the implementation of different browsers or somethingi used the addclass and removeclass is a more elegant way of doing thisget would obviously allow for a user to change the value a lot easier than post so suitable checks for existance and ownership of the record would be importantif this is not the case a standard comparison-based sort algorithm or even an integer sorting algorithm like radix sort is asymptotically betterinstalling from source is somewhat more time-consuming than using macports and fink but enables you to have a working environment that is optimized for your systemi don t know anything about except that it s more powerful than gedit but doesn t have the same feel as vim emacsinstead of using a while loops it is easier to use a for-loopwe have found that using servlets and those 3 different kinds of handlers instead one single type of modules the generic term for other servers like apache or nginx makes user-developments easier safer and fasteri m doing a comparison of erlang haskell elixir and es6 and i m less farmiliar with erlang and elixir but i want to represent all of these languages fairly so is this good erlang codethat s much easier with a libcurl wrapper like curb like the tin man suggested than dropping to the shell and using libcurl thereant is much more powerful than maven in many respects but maven excels in dependency management and ease of deploymentfor browsers that don t support either event you can fall back to onkeydown with a 0ms timer for the check which is a little better than onkeyupyou could do this in matplotlib probably using patch objects to build up a cube and colour the patches as needed however for 3d plotting mayavi is generally easier betteradb is more reliable since you get the feedback immediately unlike monkeyrunner which does not provide reliable exceptions in case of any failure in triggering the eventi ve used tcpdf in the past and found it a lot better than fpdffor my understanding the superclass is always smaller less complex then the subclassingmemcpy is not really any slower than strcpynewer versions of mysql 5.5+ have extended innodb to support all the features that were previously only available on myisam such as fulltext and geospatial indexing and innodb performance is usually considerably better than myisam when configured properlyhowever i ve noticed that running the vb6 tools is becoming more and more painful over time so i m looking at the possibility of migrating this code to vb.net 2008using sha256 with a salt will be much more secure than md5so only letting what are used for other classes and objects nothing more than that public for those where other classes would use too protected for those limit only for extending classesthe keyword inline is more about telling the compiler that the symbol will be present in more than one object file without violating the one definition rule than about actual inlining which the compiler can decide to do or not to doalthough i myself have prior experience in implementing filesystems much simpler ones than ntfs xfs or ext2 i would not tackle this jobthere are many options for you like visser suggested you could convert the date time into a long int which allows faster computation or you can keep them as strings or even convert them into chars like what you have done with chars array2i have makefile .mke on windows and i need to count directory in a folder which start with install and then make if clause to throw an exception if there are more than one directory like thissmalltalk methods tend to be more fine-grained than lisp functions so that may be a good place to beginyou can use a for-loop in this case extending one of the arrays elements is better than creating another arraysyou could also use isnull but coalesce is more standardwriting first the fields and later the getter and setter seems a more common usageput does not mean update any more than post means insertit s known that sqlite is slower than mysql postgresql excepting very small tiny dbsfirst bit banging i2c is way more complicated than bit banging spialso onchange won t work you ll need to use onkeyup although onblur is probably more sanemysql has some advantages like easy replication but postgresql is generally nicer to work withcode looks correct and even at its worst jackson should be no slower than gsonand additionally the algorithm that google-chrome uses is better than the one in firefox at least for handling the resizing of textfgets of course does not process escape sequences any more than strcpy wouldthese locations will convert when they go to windows 7 perhaps or because the application they use internally is upgrade and needs the newer browser versioningone more thing some guys would misunderstand that post is safer than get as user can not see the sent datapc google-chrome and safari are fine ie shows the links like in the picture firefox shows more revealed urlspost is usually intended for creating content put is more modificationsthat way of adding dependencies is better managed by maven with m2ein most cases union all is slightly faster than union distinctyou could instead check say with if feof stream to see if you are at eof but i think just checking the return value of fgetc is nicerbut a friend told me to begin with flask as it s simpler and will help me when i start learning django as django is more complicated than flaskif your table represents id_1 is a parent of id_2 then both a parent can have many children and children can have more than one parent this is known as a many-to-many relationshipnote that the behavior of memcpy is undefined when the memory blocks overlap so memmove is more appropriate herethe issue that i encountered was that google-chrome was giving me height about 300px more than the firefox ieinstead of using a gridview i d use a repeater which has less overhead and lets you write more compact html for a smaller payload to the client bind the master idatareader to that repeateri think glassfish is a better j2ee app server to start with than jbossin fact because you are eliminating the redundancy of epsilon transitions many simple dfa s actually get smaller than the nfa they represent but there is simply no way to guarantee thatregarding skinning i feel trinidad default skinning to be more basic than richfaces one but i think both have ways to make them as beautiful as your css skills allow youaddition would work here too but multiplication is generally more useful particularly with nested objectsthe chapter starts with short course to xml general talk but with the atom syndication feed example then it continues with the standard xml.etree.elementtree and continues with third party lxml that implements more with the same interface full xpath 1.0 based on libxml2after android l developer preview published google supply a new view called recyclerview which can replace listview and gridview it makes it easier to make a horizontal list so i update my answer hereyou can probs achieve this better by using strftime and setlocalei want to implement a functionality on gmap api that if the zoom is more than 17 show all the markers otherwise just hide themsqlite is very fast in many trivial cases it performs faster than mysql postgresql or firebird and supports a good subset of sql-92 syntax but there is extra overhead to populate the data-set sqlite db and building any indices etcthe standard html.parser option handles broken html less well than other options while the html5lib option is closest to how a modern browser would handle broken html albeit at a slower rate than lxml would handle html parsingmost pages for this exception i found with google talk about overloaded methods setter which is not the case with my dtos - they re simple objects with nothing more than properties setter and getterlooks like for the slice use-case on google-chrome using a literal is about 4 slower on my machine on firefox it s more lke 9 with no difference at all on ie10pascal and also delphi is more centered on readability than the c syntax languages which are more centered on character power as much information per character as possiblein other words guard is more a generic framework for every process which needs to do something triggered by a file change autotest is restricted to running testsie8 has also some issues but to a lesser extent than google-chrome and operai also read somewhere that uicollectionview has much better performance in displaying variable-sized content would it be worthwhile possible to try configuring a uicollectionview to display the messages and somehow make it look like a uitableviewin addition to avoiding peculiar upgrade issues when moving to a new edition and a new versioning unless you don t really mean express is sql server 2008 you also have the added bonus that you still have your original databases intact which you won t have if the upgrade fails in worse ways than simply being blockedmongodb is way faster than mysql and postgresql but there s a tiny chance like 1 in a million that it won t save correctlyi found the xsl-fo designer from ecrion to be good for both programmers familiar with xslt and xsl-fo and old ladies that need to make changes to the templates we are deploying a desktop solution based on xsl-fo that replaces an older proprietary solution and the ladies can make small changes to the document templatesi would recommend cocos2d-x as it is in my opinion equally or even better than corona and it is freein other words the operating system is using some of your hard disk space to satisfy your 13 mb allocation request at great expense of speed since the hard disk is much much slower than rami am new at a firm and i was given a project that was on amazon linux ami now we need to transfer project on another server and because i am more familiar with ubuntu than with amazon linux ami i was wondering if there much difference and will project work perfectlycall to instagram on success of which you call fotogram to initialize your slider but the problem is that since you re loading many images fotorama initialization gets run more than once on each success .after first initialization any further attempt would only mess up the slider.note that if you put it outside 2 foreach that wouldn t work either because at this point even the first request would be in pending stateas soon as you go beyond single processors it s much more effective to add another cpu or two to system than to struggle with gpu calculationsif a remains the same and b is changing say if your code is in a loop and it s clear that a does not change between two iterations for instance because it s a const variable then the original version can execute faster because multiplication is cheaper than division assuming the compiler moves the computation of 1 .somewhat good news you could move to tcpdf which is much better at handling utf8 and is more modern in general than fpdfit can get a bit more complex with multiplication division but the main downside is performancebut it sounds like you want to do nat traversal over tcp which is a harder problem than udpjackson type safety is way better than gsonprimefaces has more components but lack combobox available in richfacesi would suggest something more modern than bugzilla such as trac or lighthouse although bugzilla may fit your billalso note that quicksort is generally more optimal than mergesort see this as well which explains why it s taken advantage of when sorting primitivesstrange bitshifting code implementing multiplication or division is far less expressive of what you were conceptually trying to achieve so other developers will be confused by that and a confused programmer s more likely to introduce bugs or remove something essential in an effort to restore seeming sanitypostgresql or mysql is better for production environmentedit2 okay i just see that if the angle is bigger than 180Ã¢ it s concave so i have to change the shape for be simple than a triangulationin fact oracle is so sure that innodb is better that they removed myisam from 8.0if you are changing a few keys in a large dictionary it is more efficient to use dictionary set dictionary unset as described earlier dictionary map is optimized for the case where a lot of changes are being madeas i now joined the team so i am trying to change it to rspec-based integration testing using capybara but i have to convince the top management that rspec and capybara is better option for rails based applicationand have lower precedence than addition and subtraction so it messes up your expressionsi think what s written within your for-loop while loops is of greater importance of what s affecting your running timefurther the relative speed of profiled code may well differ hugely between them - pypy code is low-level and so introducing profiling is likely to slow it down relatively speaking more than cpythonunless there is specific reason to do it fopen fseek ftell is a better idea portable staying within the c standard libraryi m curious about why bitwise operations were slightly faster than addition subtraction operations on older microprocessorsthe book states the following if you want parameters to be optional use property getter setter which is a better way of defining optional parameters than adding different constructors to the class for each dependency.so my question is how to move this database into ram where i can access it via sqlite3_open or if my idea is bullshit and leaving the database on disk is faster than moving it into ram via mappingps i m not set on swt if anybody thinks a different library technology such as swing awt is betternow i want to convince it by using apt-pinning and not hold to keep the local package if the versioning is the same and try to upgrade only if the remote versioning is newermyisam also tends to store data in less space than innodbin other words instead of mis-using stderr like this - look into ways to gain more control over stdoutfound that the issue stemmed from using the firefox webdriver which apparently has much higher security than its google-chrome counterparti don t know whether this port of cql3 to ruby support activerecord it acts more like a simple datamapper but it worths having a lookthey do this using a jquery plugin called isotope which is a more complete version of masonry you pay fori ve used vim for 10+ years but never really into vim scripting always subjectively beliving that this was one area where vim was weaker than emacsshifting bits left and right is apparently faster than multiplication and division operations on most maybe even all cpus if you happen to be using a power of 2also if you notice i ve changed the keyup event to keydown which is better in my opinion cause when the user holds their finger down on a button the code wouldn t be fired if it is on the keyup eventin comparison to a previous implementation that was purely in python evaluating the c-code is so much faster than the splines interpolation that the evaluation of splines is the bottleneck in the ode functionmongodb supports no more than 100 levels of nesting for bson documentswhat is the established way to pass some data Ã¢ more than int boolean string because those can be handled as marker attributes Ã¢ from the class that creates an imarker to an imarkerresolution so that the quick fix can be smart about what it displays doesthe mouseenter event is usually a better choice than mouseoveranother project you might want to look at is cassette which pretty much does everything squishit does and moreif you upgrade to pandas 0.12 you can use the new filtering method on grouping which makes this more succinct and straightforwardto get your code to run more than once put it in a while loopkoa doesn t provide this kind of thing out of the box - it s designed to be a little more low level than expressfinding a package that can work with both new delete and malloc free obviously gives you more flexibilityin its basic form the three lines are way thinner than within safari or google-chromethe downsides are that it is unreliable messages can be dropped or corrupted therefore you may want to add some safety and that some isp may restrict udp more than tcp test yourself to be sure but usually there is no problemsplease someone tell me that there is an better way than creating setter and getter for every bit field in my projectquicksort is generally regarded as mutable and may therefore be less useful in a functional setting but mergesort is generally better suited for a functional settingpost get method doesn t have the same lenght limit you can use post to send more data than with getvba add-in are a bit troublesome to deploy but vsto is even more soi was always taught that division is slower than multiplication but i have no real proof of thisÃ¢ has anyone got an opinion on this before i start benchmarking and running testmongodb supports no more than 100 levels of nesting for bson document.it is worth learning both because emacs is better than vim at editing certain languages and doing certain tasks and vice versayou could also use sumifs with countif it s a more basic formula not as powerful as filter but just as funcitonalthe compiler is free to choose a method that is more efficient than memmoveswift won t allow you to do absolutely everything that objective-c does but it will allow you to do almost everything and the code will be probably more robust considering that swift is more modern language with stronger typing than objective-ca cstring is more like a visual basic string or a bstrarabic default font in google-chrome is larger than it is in firefoxshort answer dijkstra s is your best bet if you want just a few shortest paths and the floyd-warshall algorithm is better if you want to find the shortest paths between every pair of nodesas you can see in the image google-chrome is running a lot longer than operabut honestly cron is fairly lightweight and unless it needs to be real-time or whatever that means to you writing php into a daemon is more work than it s workbtw a case-sensitive search done with removing i is much faster than a case-insensitive searchit was specifically developed with containerised systems in mind to make it easier and can be a better choice than uwsgi and gunicornusing des assuming it s a little faster than aes and requires a smaller key andif your server versioning is older it is highly recommended to upgrade postgres anyway to use jsonb efficientlythe screens is much smaller so you can not present your app the same way as you can on a tabletrestructuring of the database to just add an salt field is better option or the only one really if your going to do it properly but you could use your currant hash field to store the salt as other person postedi don t know how it works but it s much more complex than addition subtraction or even multiplicationsvn is better than cvssplinter makes it easier to use selenium plusdepending on context floating-point code may be as fast as or faster than integer code or it may be four times slowergson is not particularly fast but the jackson library can almost compete with most binary serializers jackson is 2-4x faster than gson in most situations and 10-20x faster on utf-8 because it has special code for utf-8i suggest you starting with memset instead though since memcpy is much more complicated than you might thinkbut modifying the arrays is more work than a simple for-loop againati might be a better between nvidia and ati since it was reportedly faster in 2009 but i m not sure if those stats are still correctdatabase performance of the innodb is not necessary faster than the myisam engineudp is faster and requires less bandwidth than tcpon a better machine 8 x intel r xeon r cpu e5-4610 v2 2.30ghz 256 gb ram much to my surprise i obtained an average 3 milions increments despite the fact that processors is much bettermri is faster than jrubyboost libraries are generally less mature and less standard than stlcoalesce will go through the listed values and choose the first one that isn t null it s more portable code than isnull or ivnl etc1 reading other questions about the rest method for this proposes i think that i should use get better than postgmagick is newer version of imagick with more set of features it is less resource intensive and fast but the problem is there is very few discussion about this wonderful tool on web i recently came across this onfrom the performance side float multiplication is faster than division but i don t think that in the gui code it can create significant differencealso i advise you to take a look at javascript s setinterval since it is more appropriate than settimeout for what you want to doi m currently considering which is a better choice for my php application - mysql which i m more familiar with or postgresql which has less php support no object-oriented wrapper but seems tried and testedis embedded jar better than embedded war filei donÃ¢ t like using git itself though itÃ¢ s far better than svn or cvs but github is such an awesome site that iÃ¢ ve considered switching just to use itwhile this works if you are using fasm or nasm it is much easier to use a far jmp if you are still in 32-bit modeswift is clearer on versions releases and i keep asking myself if i am missing something related to objective-c since i can t find this informationif so this should work and it should also be a lot quicker than using modulo and divisionin the code below i use block multiplication to speed up your code for a 1024x1204 matrix by more than a factors of ten 7.1 s with old code and 0.6s with new using only a single thread without using sse avxon today s machines that s a non-issue but if you ever find yourself dealing with older gear it s my experience that vim is far more likely to work on a wonky terminal than emacs isparadoxally it does not mean that apache is faster than nginx it just means that on 1 2 3 .also you might want to use mouseenter and mouseleave which are sanitized by jquery and are a little more reliable than mouseover and mouseoutalso don t forget to upgrade the gradle plugin to 1.5.0 or newer as older versioning are not supportedi thought i could somehow i am totally fresh iterate trough the folder which exists in one folder will all this other folder and check if the dir contains more than one file if not rmdir foldernamethe more randomness and more characters your salt has the better for the hash but anything that s several characters long and random workshowever a ram disk is easier to work withi see ones i merge master to feature branch i can not squash he commits any more using interactive rebaseusing an extra variable to avoid the costly division and the resulting time was 18.9s so significantly better than the modulo with a statically known constantif there are many modifications of the data it s said that innodb works faster because it uses row locking instead of table locking like myisamfurther to this i m still opting for scoreloop and i can confirm this behaves the same regarding one score per user but it offers a lot more functionality and does seem to respond much quicker than openfeint did for mevalid choices for hashing include sha1 or md5 although sha1 is preferable because it produces a larger hash and is considered cryptographically stronger than md5its what s used for keyboard input in wpf way more than the keydown and keyup eventsadditional options are to show this via a timeout so it s only shown when the post takes more than a short time and to use some form of fadein not sure if possible with a dialog then you don t get the annoying flash on the times it s very quickxslt is significantly more appropriate to use than xquery for such kind of tasksthe origin server would get the images from s3 process them using graphicsmagick since it s much faster than imagemagick then serve themsvn works much better when disconnected from the network - with perforce you have to tell the server when you ve done a checkouti ve heard that noexcept keyword is more like it should never throw an exception rather than it doesn tnowadays however the rationale behind the sealed modifiers is far more about design choices controlling how client code interacts with your librarysince developing in ironruby ironpython is faster you can use it to write pocs and later implement the real application in c# or whatever you re usingis there any way of better dealing with large rss feedcon you can encounter issues related to library versions and dependencies macports has more software than homebrewnowadays with xquery there is no reason to use xslt anymore xquery is much nicerthis conclusion would follow from a logic if an unrolled loops is faster than a for-loop executing a lot of unrolled loops should be faster than executing a lot of for loopsgson is very easy to use while jackson has better performancethis salt is nothing more than a random arbitrary string that you concatenate to the passwords and it will make your hash password uniquedisk io - even ssd - is many orders of magnitude slower than the ram that the hashing is going thoughin this case mouseenter mouseleave has better behaviour and prevents bubbling compared to mouseover mouseoutmaven is better for managing dependencies but ant is ok with them too if you use ant+ivy and build artefactsmemcpy is rarely slower than strcpy or strncpy and often significantly fasterif i do it with a simple for-loop i will get an error because loops is done faster then the sensors are changedit is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case and also makes proper git tags from the svn tagsi m developing with canvas too and have found that webkit based browsers in general handle canvas operations quicker than gecko in most casesas disk is 1000s of times slower than ram this problem can grind the machine down to a practical haltget is always faster than posthttp put isn t inherently any more secure than http post if you re allowing the uploaded files to be exceuted on your serverin the code we calculate 1.0 sum .. because a division usually is more expensive than a multiplication and thus can gain some efficiency with thatnow this works fine in google-chrome and safari and i have had to use assitional css settings for firefox but ie and opera both display my ribbon div about 25px higher than in google-chrome or safariwhile you could use -cp to javac to add the required dependencies to this compilation you d be far better served by learning ant or mavena little more pull than push style that s because there is no duplicate item.i m sure you could do something with auto-layout but when you have a view that has subviews that need to be positioned within it subclassing uiview is a better way to go in my opinionglassfish seems to be slower than resinwhy in firefox text smaller left than in google-chrome and opera rightat any rate disk speeds are orders of magnitude lower than the ram speed and i wouldn t be too much concerned about the mode here unless of course it turns out that caching is different in the two modesyou should be generating a random string longer than an md5 hash not shortermost likely it ll still be tightly linked with implementations generally a bad thing or if not bad it s not especially good but i think a structure like this is better than a superclass figuring out what all of its subclassing areif they are connected over the internet you could try to use the examples for tcp but tcp has more overhead than udpthe events seem to not follow strict sequential rules second keydown comes earlier than first keyup so the timer gets initialized multiple timesusing default no protected private public is even worse as it allows classes in the same package or subclasses to access the loggeranother camera that i am thinking to use is the asus movement sensor but i dont know if this is better than kinect more options i know that both uses openni or if both are the samefor these ultra simple queries postgresql can be slower than mysql - postgresql has richer planner that works better on more complex queries but on trivial queries is slowerin maven you can define a.k.a testing.staging live etc which allow you to configure settings for different environments.all you need to specify maven about the environment for which you want the things to move and maven is capable enough to take care of this.though this can be done with ant also but i believe that maven provides more flexibilitythe fact that udp s header size is less than tcp s is because is a simpler protocol that needs less header space that s all there is to iti would advice to switch to server-side processing of table data instead of using client-side it is more preferable if your application works with a lot of rows more than several hundredsin most cases usage of addclass removeclass brings much more flexibilitybut i believe sending data using curl with post method is better than get methodif i need to display one 1 friends post i can do this simply but when there are couple of friends with more than 1 post i can t get the name and picurl of the user and it displays null in json responsei ve taken the example of two linefeed here but the same is true for any character string i could subvert the problem by maybe taking a longer string as the delimiter but that would have two undersirable effectsi am getting better with google-chrome and firefox debugging tools but i still have not found a way to easily examine the local entity cache managed by breezeit would appear from your question that the period of the tcp message is shorter than the arp refresh timeimho - if breaking up my components to parent children means less testability - then something is wrong with this frameworkservers like lighthttp and nginx can handle large amounts of traffic in much less memory than apache if you can sacrifice apache s power and flexibility or if you just don t need those things which often you don tin ie8 and google-chrome it runs even faster than firefox in general and this slow down never happenshaskell has more momentum these days but there are plenty of good parsing libraries for ocaml as well including the peg parser generator aurochs menhir and the glr parser generator dypgenbecause this is a salt hash it s even more difficultowing to the fact that the screens density on the tablet is smaller android therefore uses the images in the mdpi folder for the tablet and the slightly bigger ones in the hdpi folder for the phoneis the code more readable with getter and setter that emphasize the fact we are reading writing a property or with properties that at first sight can be confused with parameterless methodswe recently have migrated redmine from a server which was running under centos 5.5 with the same ror environment the same load the performance was a way better than on debian 7i have been searching on the net and i made a couple of examples of both of them but i m even more confused because in some sample web pages mvp uses more than 2 interfaces to communicate the presenter with the view layer some ones even have completely blank interfaces only declarated but in other ones it only takes two interfaces to transport data from presenter to viewon post and put it is always better to return the modified resource including its id2 as mentioned by mike brent get is wide open to easy and simple abuses but while his recommendation of post is better it s still open to abuse unless appropriate measures are taken see 3 belowis there a situation when decltype auto would be a better choice than auto possibly with or cv qualifiers when using range-based for loopstaking java s operator-precedence notably that + has higher precedence than and associativity rules into account the expression is equivalent toin contrast to jenkins teamcity produces much more detailed reports and provides the ability to track the history of a test- how often does it get broken etc. suspend tests .you can actually switch to strtod always a much better idea than atof and ask it to give you the character position that caused it to stop parsingcheck out the quartz scheduler it does what cron does and more is easily integrated in a web app and allows you to call jobs written in java without any complicated plumbingin their respective worst cases heapsort is faster than quicksorti think using a gridview is better for your case than a listviewhere i don t like that the body of the post request contains more different fields then the body returned from the get request - but maybe this is not a problemthe os heap uses the cpu s virtual memory hardware and is free from fragmentation issues and can even effectively use the disk s swap space allowing you to allocate more memory than available ramxcopy will not be better than robocopy at thisis there any easy php testing framework and may be simpler than simpletest and not command line based like phpunitthe key question was related to what kind of situations would udp be the better choice over tcpyou could get them to do a udp multicast within a lan environment to identify the programs using protocol messages then have a stored cache of each other s identity and then use tcp to connect and do main exchanging of messages which is more reliable than udpudp is faster than tcp because packets are sent without guarantee of delivery nor orderor indeed if your system has strdup or you re willing to write an implementation then strdup is much cleaner than malloc + strcpyit was the first framework in python i ever used but it was really simple to use really no more than flask or bottleand modern broswers like firefox or google-chrome requires more bytes to start browser displayzim s advice is excellent and searching on int will always be faster than charsmyisam for reads may well be faster than innodbfreemarker provides much better native whitespace handling recent velocity releases provide more interesting content controls #define #evaluate # literal block #you can use get or post both but in my opinion post is better way herealthough this problem sort of yells delegate it s much easier with subclassing since you intend to inherited almost all the same functionalitybrowser google-chrome firefox firefox requires more resizing to get the same effectalso please suggest me an open source json binder better than gson could be jackson json genson or if any other which could help me to develop fully fledged application in which application continuously hit to restful services and receives the response from the sameusing malloc free directly is saferbiggest of all is that adding new features to your vb6 application is more expensive than it would be if the application was in a better language like c# or vb.netjunit is more direct and simpel to use if you start to learn java testng has more features but maybe is more complexi m using keep-alive so i think the ssl handshake is more or less totally out but i hope to move to spdy soon so i don t really know how that helps after the initial handshakemore modern processors handle hyperthreading better than older processorsthey are functionally identical however it can be argued that the for-loop is less error prone because all of loops functionality is right there togetherin my opinion calling getter and setter is slower than direct access to a fieldas stated by other answers neither push nor pull is better but rather you should pick the one that best fits your design needswhat baffles me is that my mergesort seems to be slower than heapsort in both of the languagesin git you can do the same with playing around in the index staging area but bazaar has a better ui for itif you want to be more secure you can send the sms s more often however there is a way to understand sim-card change this is for t-mobile and europe use i guess from within the app so that the user cant fool you by enetering sms for a different msisdn and then change to his her real msisdn sim cardbottom line i would personally hesitate to draw any simple conclusions of swift is faster than objective-c or vice versathe downside is that you are losing the big part of the flyway s appeal in its simplicity and technically could be better off by using liquibase s dsli would suggest furthering your knowledge of python it s an amazing language so it s gonna be fun and then go back to django or maybe start with a smaller framework like flask which does less magicnote first there is no combobox item in awt there is jcombobox in swing which is better to use than choice of awtyou don t need regular expressions at all you could use explode substr is probably better but i want to show another alternativein my experience normal execution on iphone is much faster than profiling with instrumentationit is not better than md5 plus saltit seems possible to have adfs as the ip-sts send an assertion to more than 1 acs url based upon the acs url or acs index in the authnrequest as long as they are listed in the relaying party trust endpoints listthis means calloc can potentially be faster than calling malloc followed by memset since it can skip the memset if it knows it will already by zeroedheaders copied from google-chrome only since safari is harder to copy paste fromi think that instead of a for-loop is better a while because when you find your item can break loopsare there some solutions available to extends asp.net identity better than implements a custom solution as suggested in the linkson a side note i d recommend using tcpdf instead - it s a fork of fpdf that has better supports for utf8 among some other improvementsit can be hard to get the layuots exact the way you want in swt it s usually easier in swingin my experience firefox is sometimes more lenient than google-chrome but i would definitely test in bothbut conversely malloc free typically makes better use of memory than a modern copying gc .using settimeout is considered better than setinterval because of the screwy ways that js s event loop worksi ve tried using more than 1 for-loop and to zip the files using an arrays but to no availuse hashmap that it has o 1 speed also iterate the arrays of integers in enhanced for-loop because it is slightly faster than ordinary for-loopone more thing as in maven we can update or if we save the pom.xml file maven downloads all those dependency automaticallythink about project management bug reports and it all adds up to something more than just cruisecontrol svn and nanthas no keyboard or mouse there is much less entropy generatedgitosis which is no longer in active development and you should be using gitolite but this answer applies to both of them stores each user s public keys in in your case gitosis .ssh authorized_keysit is written in tcl which is a language somewhat simpler than perl but broadly in the same family and not difficult to learnbuy as much memory as you can afford ram is alway faster than io from diski ve read time and time again that tdd test first is more difficult with mstest than it is with other testing frameworks such as nunit mbunit etc.do you have any situation where stateful is more appropriate than statelessnfs with the right setup version and tuning is just a tad slower than smb cifsit s possible though that software could mess things up by making subtraction slower than addition - but that s unlikelyi tried this code with my the big arrays it is around 10 to 20 times faster than a for-loop solution and around 200 times fast than the old codeit s usually better to use quicksort instead of heapsort even though heapsort is better in theory consumes o 1 extra memory and o n log n time in worst casebut we can assume that generics in objective-c were introduced for transitioning to swift and in that regard using swift directly is even betterfirefox and ie9 require a proper domain to run from presumably because they are more strict than google-chrome in the way they associate the localstorate object to a domain in google-chrome it doesn t need to be a domain as suchhow is spi better than i2c at these temperaturesobjectdatasource also allows for more efficient paging than a simple sqldatasource i m assuming that s what you re usingthat means firefox is more than 7x faster than google-chrome hereif there s any heavy application logic as opposed to all of the work being networking files database ironpython is much faster than cpython at a few things and much slower at a few others so you probably need to profile and perf-test before you go too far down either pathget method is not safer than post data never trust datas coming from the client sidethe simultaneous use of more than one cpu or processors core to programmatically execute a program or multiple computational threadsof course you can only debugging the code to see the generated sql but it s easier with a profiling tool and you ll see how long time the query takesyou have mentioned that we can t use actions more than get post put delete which is not truei think architecture with sockets was chosen for better portability between different lisp btw slime also supports clojure and mit scheme and os-es slime works on windows toobut on the comparatively rare occasions where it happens it ll be a lot easier with the getter setter in placeis it possible to use the same vbo with more than one vao like thisput a group of controls for which you would later call findsize ... under the same parent a panel for example or a groupbox whichever makes more sense to youtestng has more capabilities and can be helpful with integration tests junit is more focused on unit testsiterating pair-wise you d normally do something like but iterating over an arrays is faster than using a c-style for-loopin my experience btrace overhead is far less noticeable than any profiler depending on activity of course - if you want to trace execution of all methods this will be expensive no matter whatan arrays usually offers more information for alias analysis and after some optimizations the same code will be generated anyway search for-loop strength reduction if curiousmost likely your post value has one or more characters in it that are breaking the html of the page and ie firefox are being a bit more forgiving than google-chrome issvn is much better then cvs and git or mercurial are even better againin terms of your speed query i d propose that your pseudomedian filtering is faster because it doesn t involve sortingwhile the differences may seem insignificant at first the correct usage of radio button and checkbox creates a better user experience because the site behaves in a way they expectmyisam is faster when the query is simple but it s much slower in a high concurrent environment as its table level lock comparing to innodb s row level lockwhat s weirder after mouseleave and mouseenter again the second time it scales up by only a total of 0.81maybe one of you guys already sees a problem in the code snippets or have any other suggestion or hint for me why my udp transmission is slower than tcpi don t want to use the get request since it says in the guidelines of a restful api that it should use post for this purpose plus i might want to send more data than get can handlewe can either extends thread which will implicitly implements runnable but then we can t extends any other class so implements runnable is better approchon linux it would be easier for you to link to shared library and use symlinks to correct version - imo it s much easier than using dlopen + dlsymon a system with more than one processors or processors cores you can normally assuming you do have a smp-enabled system cpu affinity doesn t prevent it expect those two processes to use both processors but you do not strictly have a guaranteethe first calloc subsequently malloc has a longer execution time thenside note if you are attempting to create a new customer you may want to use post instead as it may be considered more restful as put s are generally for updating an existing resource but this is up to yourebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote serveredit i guess release is much faster than debugging but why is this profiling so time consumingpersonally i prefer objective-c because you can use c very easily as anything that is legal in c is also legal in objective-c added to which swift is a more procedural in style where objective-c is quite clearly object orientatedthe browser does not matter though safari gets way more consistently working results than google-chromeonce you md5 hash it you have to map that to the token that is less than that hashb use indexes - postgresql has bigger repertoar of indexes then mysql so use it - there are gist gin indexesat this point there is nothing i can do since the switching is no longer there... the external screens is just a blank screens for the sake of the exerciseappearing disappearing on mouseover mouseout is a more common practicei sure would like to use uwsgi as it is an ambitious project but at the end of the day i am a developer and not a sys admin and gunicorn is much easier to just get working in the common use casesa larger cache reduces the number of reads but up to a certain limit also increases the amount of unsaved data that rethinkdb can accumulate in ram to make disk writes more efficienton almost any platform memcpy is going to be faster than strcpy when copying the same number of byteseven though vmware has been faster for me i still use virtualbox because it s good enough and is free and im cheapusing signalr is not a good idea because signalr using push mechanism to notify but it seems in your case some pull method is more suitable and also signalr doesn t support really permanent queue to keep messages in queue while consumers being readyhere is how gcc does it it sign extends if the integer type is larger than the pointer type this ll happen regardless of the integer being signed or unsigned just because that s how gcc decided to implements itwhich protocol tcp udp is more common to use in a p2p designpostgresql has more established support for this but mysql has played catch up in the last year or so and has a working method of this in the latest versionsgoogle-chrome has a bigger time difference yet firefox is the one with the gap in the animationshould i just look for more than one cpu core and how do i detect that or maybe the processors speed or total system memoryi ve seen questions like this come up before and the general consensus is that jackson is much faster than gsonmemcached is in-memory too and a bit slower than apcyou could also use a for each loops to handle this though that type of loops is slower than a standard for-loop depending on applicationthe range-based for-loop syntax is cleaner and more universal but you can t execute the code in loops for a specified range different than from begin to endhowever there are many others ts xts which is generally faster than zoo .as a general rule division is slow and multiplication is faster and bit shifting is faster yetif your output is going to be similar to your input with small changes then the xslt solution is often a lot simpler than the xquery solutionthe famous line is nginx is not apache in other words nginx has better ways to handle urls than rewritingreally a while loops would probably have been clearer than a for-loop on reflectionthe immutable dictionary implementation is faster but no less pure in usage than the map implementationsqlite is a more simpler database than postgresql or mysql and if you are testing very small applications you can easily use it instead of postgresqli don t know why this works i can only assume that httplib is slightly better behaved than urllibthat s one reason why omitting distinct and replacing union by union all is much fasteri didn t work with these applications yet but afaik typo3 and ezpublish both php are considered much more professional than joomlamysql is easier than postgresql but it doesn t really matter either wayin practice however quicksort is usually faster then heapsortt is not very important as long as alpha is small otherwise you will run into some rather weird nyquist issues aliasing etc. and if you are working on a processor where multiplication is cheaper than division or fixed-point issues are important precalculate omeganot show from start is better than show and then hideif you intend manual config it s probably better to choose something else for example iniif the amount of ram is less you ll have a lot of swapping to disk which is a lot more time consumingtrust me i did this before for another job where the system architect decided that maven was better than ant and all of our projects must be converted from ant to mavenbut i read in this post that group by on union are not possible yet it mean that cypher is less powerful than gremlinkerberos is complex to set up and even though it generally is considered faster than ntlm this is only true when you reach a certain limit of simultanious users on your sitefor this the best option is gitolite better than gitosisinverse is for bidirectional associations and most often it s on the same side with cascade but that s because the many-to-one side is much more efficient to control the association than the one-to-many oneedit as willeke has pointed out accessing a properties directly is technically faster than doing so via an accessor via selfpublic static field access would cost you less resources than setter getter methodswith inherited this is less likely to happen due the contractual nature of subclassing abstract classeshow could i make the imageview have more priority than textviewbut if you simply want to feed some content that will be displayed through its parent render method then using the children is more appropriatei need to find out that how much division operation is faster than addition operation in a gputhe first option is easy with one directory but becomes much more tedious with multiple folder not to mention that windows will likely create an object in the target directory before it has finished copying and i am compressing files potentially over 10 gb so that solution won t workif i is rather little just iterate and keep i minimum datas insert every new data in a binary tree of the i most little datas if it is less than the max of these dataswhat happen when icmp is disabled in an router and when packet size greater than mtu how the router fragments that packetsince using ram is faster than using disk zram allows linux to make more use of ram when swapping paging is required especially on older computers with less ram installednote that in case your words are separated with more than whitespace punctuation for example use w+setinterval would be the better way than settimeouti know that rails jruby handles concurrency better than mri but i don t know how to do itweb.py has a templating language of it s own it looks easier than django sas already mentioned by others better to use swing over awt since swing is more advancedmy view is that if in some cases objective-c is faster than swift it doesn t mean that all over performance of swift is slowercompared to sleep 3 and usleep 3 nanosleep has the advantage of not affecting any signals it is standardized by pthreads it provides higher timing resolution and it allows to continue a sleep that has been interrupted by a signal more easilyinjecting code in a swift application is harder than it was for an objective-c application but it s still possiblewith regard to implementation it also takes advantage of a bit of a non-obvious property of r precedence rules actually this is true of other languages as well such as c c++ and java namely that unary negative is higher than modulo which is higher than binary subtraction thus the calculation for is equivalent tofor starters beautifulsoup is no longer actively maintained and the author even recommends alternatives such as lxmli prefer web2py because there are more conveniences built into the environment than offered by django but web2py is much newer than django and hindsight always makes it easier make new implementations betteralso with this method you could use different container for different dimensions like if you need one dimension to be sorted use qmap which is sorted by key for that and qhash which is more efficient for the dimension which doesn t need sortingi have encounter a problem with google-chrome that is similar to an older issue with firefox at this url scrolling blocks javascript execution in firefoxget is more vulnerable than post as it can be transmitted and storedit recommends using ctr cmd + 1 to use the keyboard this is much better than having to use the mouse but i m still looking for a just do the right thing most of the time automatic solutionyou can enable the root account and set a passwd but jumping to it with sudo is the better methodfirefox is clearly less secured it deliberately allows something that google-chrome locks downfor security md5 is not the best method hash is much betterusing post data is more secure than get because with get the details would be in the query string portion of the urli got a draggable object done with jquery ui and when i drag it it s way slower than i move my mousenote that this usually happens under the release profiling which is more strict by default about errors than say debuggingthis is ancedotal but the postgresql servers i ve managed have always been much less troublesome than mysql which likes to randomly crash once in a while occasionally corrupting a table on the way downthe next text is an overlay between firefox und google-chrome - firefox is broaderi don t see why sbcl should be so fast - scheme is a far simpler language than common lispis that casting from long to int plus sparsearray optimizations are going to be cheaper than autoboxing long to long for my hashmap operationsputting the salt at the beginning is better than putting it at the end as more randomness at the beginning of hash is better than randomness at the endwhat about using more than one encoder to encode my code because if we take a look at ioncube you will see some people can decoder itnginx is still faster and i might choose it but apache isn t asleepdynamic memory management on an small embedded system is tricky to begin with but realloc is no more complicated than a free and malloc of course that s not what it doesboth works but division is generally slower than multiplicationas an aside my c c++ is rusty but is not memcpy more efficient than memmove if you know you don t have overlapping memoryi have created a window application in c#.now i want to set the cpu affinity for this application.i may have 2 processors 4 processors 8 processors or may be more than 8 processorsfirst you could try to convert the second do while loops to a for-loop which is more appropriate for the situation but i did not use for simplicity s sakei completely failed to check that assertion and just jumped into the analysis of how the enhanced for-loop is faster on arrays than listscoalesce is more efficient than nvl as it only evaluates the second argument if the first is null whereas nvl evaluates both arguments every timethe problem is that if i have more than one checkbox checked and i want to uncheck one the button disablesfound a dirty solution the preferences list .globalpreferences.plist located in library preferences folder of the user home directory contains preferred languages of the user default home directory is users user and if the user is root the path is var root but this path can be configured here method form nsstring can be used to get home directorygoogle-chrome also uses an earlier version of webkit than the current safari so pages should be checked in both browsersin practice i ve never had resource management issues with wxhaskell although i agree that it s possible and is an area handled better by gtk2hs which uses reference counting in the underlying librarya while loops makes more sense in this situation or a for-loop without initializationthe javascript addeventlistener domcontentloaded is more watching tags and their good closures to start his job instead of the real full data loadcheckbox onchange should be more meaningful than onclickyou probably already remember that multiplication is higher precedence than additionthat said i found icefaces to be a useful product and much better than richfaces especially in terms of the quality of the documentationif you can do everything with udp it is lighter than tcphere is a recent benchmark of jython 2.5.2 running on jvm 7 where jython is slower than pypy but faster than cpythonpresumably the mac malloc aligns to bigger boundaries and so it s spotting the pointer you re passing to free can t be correct since it has the wrong alignmenti hear postgresql is more robust and doesn t crash like mysql does in these situationsmy experience is that designers can use whichever they prefer usually and most agree that verilog is easier to use and the code is shorter fact than equivalent vhdldes is the least secure 3des is better but i d go for the aesthere are relatively simple solutions if the parent always have an index greater than the children but that is not the case herenvl versus coalesce oracle is much pickier about reserved wordssnappy is also significantly faster than lzo for decompressionalthough 4m isn t that many rows with contention and depending on your structure and database engine it may take a while i think myisam alters take longer than innodb because myisam requires whole table locks and handles concurrency less welli also tried to do spacing from imageview to textview but then if the textview is smaller than the imageview the spacing will be wrong againthat being said your comprehension option is almost certainly going to be faster than the for-loop option because implicit loops are generally faster than explicit onesin general it seems as though the concensus is to primarily use innodb but there are still some areas in which myisam is much faster than innodbon the other hand show hide is more reliablei m working on an app to load an amount of images from sd card using asynctask + for-loop i ve test the app on my galaxy nexus the app working perfectly but it will crash if i use more than 33 loopsxna is more popular and has more tutorials then libgdxa 64bit capable x86 cpu is no worse at running 32-bit codeinstead use stronger passwords with salt hash which are harder to break using brute force and are not susceptible to rainbow table attacks if the choice is between pin and passwordyou can have a look at this speed performance benchmark from fftw which suggests that gsl is about 3-4 times slower than fftw 3while this is much less convenient than stateful wicket i still find much better than say stateless jsf or strutsnot using the same named is a more common practice to avoid confusion and shadowingjackson is faster but the api is 37x more complex than the gson apidoes an eclipse installation perform slower after the upgradehaving said i am really not sure why you are getting unexpected behavior i ran your code both in eclipse and intellij ide and i always got for-loop approach as faster than while loopssomeone just told me that innodb is much better than myisamand i tend to think that after a moderate amount of customisation of either one vim will still start up faster than emacsalso it seems this is only the problem when there are a lot of duplicates the heap doesn t seem completely capable of staying in order the parent is smaller than the childrenthe advantage that you have is that unlike upgrading an operating system upgrading from ie7 to google-chrome 8 or firefox 3.6 is a more reachable goal for the average user of your app especially if you provide a link and upgrade instructionsgive swt a go the api is a lot simpler than swingi know the last paragraph might not be a correct question so maybe more generally as the vsto add-in is working with the office application process what can i do here so that a call to setforegroundwindow will workthat s one reason why going from hex to binary is much easier than from decimal to binaryalso consider doing a web search for responsive bookmarklet tools for results that can help a-bit more than google-chrome s inspector or firefox s firebugyou might be able to avoid asking this sort of question in the future if you start using a google-chrome s inspect element context menu command or b firebug for firefox which is more or less the same thingmost modern filesystems are also considerably more complex than fat which would add further difficulty to the implementationwhen hibernate s entitymanager is tracking 100 000 entities it is 100x slower than when it is tracking only a few see results belowi think this is better done with a post redirect get so the url can be bookmarkedget would obviously allow for a user to change the value a lot easier than postalso you will find that using strcpy strncpy is much faster than a simple loop to copy each chari m about to try apache but most write ups suggest that this is worse than nginx at this jobis this even possible for starters because this is about adding protocols to setter and a getter is much more easy likebut i just get more confused with how strncpy or printf are not goodwith regard to using send versus sendto i have found that sendto is used more commonly with udp and send with tcp socketsany better way than to explode and implode the stringi am new to laravel it s good for coding but it is not much faster than codeigniterfreemarker is more powerful than velocitythat means that without caching a hit against disk will be 200 times slower than accessing ramthis is a weak point that iirc postgresql can handle better but with mysql you have to work around that by reverting the changes yourself in case of rollbacksirrlicht is no way better than ogre 3d or am not trying to prove thatif new is greater than old malloc additional pointers on the end of the array instead of trying to realloc themi stumbled upon the above where someone answered a question regarding implementing a tree that has 2 nodes and i just wanted to get someone s thoughts on how best to implement a family tree with parent nodes which have more than two children nodesand since you asked for a work-around if you have access to visual studio you could whip up a little com-visible class library that exposes a .net-flavored regex much more similar to java s than vbscript s api that you could reference and use in your vba codeit is needed for a lookup of repetitions in disk files much larger than available ramin my opinion glassfish is more user friendly than jboss so i decided use glassfish for my projectweb.py is more low-level comparing with djangoi find swt to be an uglier api than swing in general though but not really a deal breakerperhaps someone more familiar with bash zsh osx can make more sense of thismyisam is faster but does not support the use of transactions like innodb doesisnull performs better than the generic coalesce and better than having another andthat s pretty broad though depending on what you re doing you may be better off with removeclass and addclassbut if the collection isnÃ¢ t sorted a simple linear search is more efficient than sorting just for a single use of binary search not to speak of the fact that binary search works with list s only while filtering findany works with any stream supporting every kind of source collectionget is more performant as it is idempotent and does not contain a message body where as post doesand people do install on their ubuntu system some external libraries so you need to search a lot more than what ubuntu contains and i won t be surprised if ubuntu or debian are large enough to already have conflicting librariesfortunately vb.net finally ended all that and is completely pixel based you can still alter you viewport scaling but .net seems to handle that much better than vb6nginx uses an event based non blocking single thread and the memory usage is relatively much lower than apachei assumend that the transmission using udp have to be much faster than using tcp but in fact my tests proved that the udp transmission is about 7 to 8 times slower than using tcpi don t know react so can you make any parent element with reactid not accept more than certain childrenupgrading a language or service can often have disastrous or unexpected consequences thus sandboxing alternate versioning seems the better approach plus it makes projects immune from os upgradei m not sure if this is the answer but states that if you expect a rapid increase in the request rate for a bucket to more than 300 put list delete requests per second or more than 800 get requests per second we recommend that you open a support case to prepare for the workload and avoid any temporary limits on your request rateyou might want to investigate more than creating ram diskthe inclusion of jscript code into a batch file is simpler than vbscript and the translation of a small code segment from vbs to jscript is not problematicin general you need a lot more than atomic getter setter for most kinds of thread synchronizationthis shows that the timings are sensitive to buffering and that aes is faster than desinstead using css you have a lot more control with background-image background-size and background-positionsure there is a learning curve with maven but reading a pom.xml is far easier than reading a build.xmli want to encrypt decrypt a long file with rsa i know aes is better but this is just for a comparison in openssl libcryptoif you were planning on doing this for more than one properties i d recommend making car inherited from dependencyobject or implementing it from inotifypropertychanged instead of creating events for eachif you really need to enter the sub-directory however you can create recursive calls and in the call you can check if the directory has further deeper folder by using directoryinfo.getdirectoriescassini is not actually iis it is more of an emulationattributes are used in a more meaningful manner than mstest or nunitthe reason i wanted to investigate this was because both c and ocaml were significantly faster than haskell for this programi ve read that nginx is faster for static pages but there are questions about its performance with php compared to apache s performance with phpwhat you ll need to do than is to complete the javadoc comments for the classes and methods that are more sophisticated than getter setter or default constructorsi would recommend against taking this decision lightly it s a good deal more complex than tcp udp amqp etci agree some mechanisms in elixir are slightly more verbose than erlang function definitions being my personal pet peeve and vice-versathe idea is to get the library and application loaded from ram into ram which is much faster than loading from diskp.s this will only work if the draggable is smaller than droppable which is true in this casealso you can use phantomjs is webkit browser without user interface so it is really faster than firefox or google-chromeandroid plot and other free chart solutions mentioned here doesn t support annotations the only one is afreechart which is a port of jfreechart for android i am currently using it and it is awesome and has much more features than achartengineinstalling a real database server is fairly easy so i d recommend sql server express as others have or even mysql or postgresql whatever is easier to set upas sven marnach wrote in the comments your problem is most likely i o bound since disk access is orders of magnitude slower than ram accessthe docs for ionic 2 are clear user-friendly and much less intimidating than angular 2 docswhy does division take so much longer than multiplicationafter some additional thought here s how i solved the problem but i d like to know if there s a better way than toggling show hide w different status messages at certain points in my codesince i m against get and pro post which is safer method here s an example with postand don t use divide where multiplying will do multiplication is typically faster though not alwaysbut if your shared file system is a raid 5 or 6 array exported to the nodes via nfs over gige ethernet that will be slower than ram to ram transfer via gige using rpc or mpi because you have to write and read the disk over gige anywayas a side note the children can t have a higher z-index than their parent so everything inside .codbg is -1 behind the page then you need to fix the tab images the problem is not that they re behind the background it s that they re transparent and look darker on top of a darker backgroundor is there any specific scenario where udp is better than tcpliferay is responsible for storing passwords with encryption or better as salt hash in the databaseas you noticed yoou cannot create an rss campaign feeded by more than oone feedi saw a coalesce statement version but isnull is more efficientimho mouseenter and mouseleave are much more reliable than mouseover and mouseout which tend to flickerbecause unlike cat more is an interactive program that requires more than stdin stdout and stderr -- it requires a terminal which your system call cannot providea compiled-language will generally run faster than an interpreted-language so i think ruby and php start behind the eight ball but it really comes down to how you use the language and how you structure the codewith gcc and clang your sse code is better whereas icc is a loosera mouse-down followed by a mouse-move is a drag if the move is greater than some threshold to allow for human motion while clickinghere is a solution in scheme because i know that better than common lisp and have an interpreter for checking my worki think select elements are even harder than radio button and checkbox i don t think there is a reliable html css only for thisvarious people told me to go with nunit since it s better than mstest apparently i have no idea and it also has very good support in resharper which i m usingthe only issue with applying that technique for the single source shortest path problem is that reweighting with bellman-ford takes o mn time which is slower than dijkstra s o m log nwell if _ uses native .foreach then that s easily order of magnitude slower than for-loop but still your problem is 4 nested loops right now so you might not even need the additional 10x after fixing thati think using getter setter is simpler but here s an example of what i did to make it workwhat i want to do is to search for all parent who has more then n children in other words i would want to get all user records that had an activity more then n times within given period of time eventtimestampinstall firebug firefox version is better then a google-chrome onethe second form is recommended for newer code as atof is deprecated in favor of strtod .this is trickier to work around and you should file a google-chrome bug describing the situation and where it s slower than firefox but you could potentially reduce the amount of buffer uploads by looking into instancing or using uniform arrays instead of updating vertexes for positions texturesreturning boolean or an int is more of a c mindset than a java in java you would just handle the exception onepassive loadbalancing if a physical cpu is running more than one task the scheduler will attempt to run any new tasks on a second physical processorsall that said postgresql is much more acid compliant than mysql it handles fks just as you re needing and i would generally recommend it based on what you ve expressed in your postthe dialog pop-up is bigger than the browser window when openedfirst you probably need to do more than just salt and hash your passwordwe chose to not do cascade since it is easy enough to traverse your own model and do deletes and when the other use case pops up where you just want to delete the parent entity but not children it is easier to code and not have to undo the cascade logicbut i heard that xlsb loads way faster than xlsm so i would not like to change the fileformatthis is because in ie and firefox the footer link text is larger than in google-chrome and safari therefore the margins that i ve set up for the icons do not worklike laravel i see has lot of classes while codeigniter has much less classes and looks simpler to read follow extendgoogle-chrome is a bit more strict than firefox herepostgresql gets much better performance and this is coming from a former mysql partisanon the server off jsfiddle the submit button sits inline with the checkbox and tick text and the checkbox sits higher than the tick text rather than inlineit s not too hard for the fat filesystems as it s quite simple and well documented but it s more difficult for ntfs as the filesystems is much more complicated and not-so-well documentedand as you hopefully knows multiplication have higher precedence than addition so the expression is equivalent to probably not what was intended by the macro writerthis would make things considerably easier as the android library has native support for json serialization and making http get requests to restful urls is much simpler than http post requests it s not a huge deal but just less stuff you have to worry abouti think i understand the purpose of using sha1 as it s supposed to require more cycles than md5 to hash unhash and the salt is supposed to prevent the use of rainbow tablesi have done some research about them and it seems to be that spi is faster than i2c but the last one ensures more control and error detection over the first oneis that better than just get the .js already compiled and put it on vendor folderit is a variant of heapsort which is particularly suitable for the sorting of very large amounts of data if a relatively high cost per compare operation is needed and on average better than quicksortwicket s goal is to support static typing to the fullest extent whereas tapestry is more about saving lines of codepostgresql is more sql compliant than mysqlthe pattern in scanner is supposed to be a regular expression that describes all the characters you don t want included in a token repeated one or more times this last part is because the words may be delimiter by more than one spaces punctuation etc.better than hide and showi have solved it in the past very successfully using robocopy it s much more robust than xcopyare you expecting some devilishly complex scheme that hold locks for smaller granularity than put or getwe plan to use gson extensively in the application as it seems safer and better than jacksonperforce is soooo much faster than svn because all the check-outs are stored on the server so it doesn t have to check every file on an updatepost is more secure than get because you aren t showing information anywherepng gif works much betterif you really want to go more secure than ntlm your may want to configure kerberossometimes a property getter setter does more work then just hold a valuea trie is better suited to this kind of thing because it lets you store your symbols as a tree and quickly parse it to match values or reject themgreenplum and other similar solutions should work a bit better than postgresql depending on your data sets and use casesnginx is better at handling requests since it does not spawn a new process for every request unlike apacheinstead i m using post which isn t exactly bullet proof but still a better choice than get in this caseusing fgets strtol offers better error handling than sscanfistanbul has more complete coverage stats not just lines - branches etc and can export to lcov for tools like code climatenot too easy extending redcarpet this way maybe kramdown is easiera quad core intel cpu s with hyperthreading enabled has 4 physical cores yet 8 logical processors hyperthreading creates 4 more logical processorsi have written a memory allocator that is supposedly faster than using malloc freealso what happens when common msi c s versioning is higher in product b and b upgrade c on installi recently switched from unity to unreal and the first thing i wanted to do is create a skybox but the only thing it seems to support is a skydome which has far more polygons than a cube and the generated .dds cubemap files are far too huge to be used in webgl projectsfor example if the string is going to store a decimal-formatted 32-bit int you know that you do not need more than 11 chars to do soin storing hash passwords is a common practice to add a nonce or a salt and is marginally true that this salt is better kept secretthe upgrade sequence is much simpler i have a hard link in the app that points to the latest versioning of the apk the donwload starts and automatically laucnhes the installfreemarker is more advanced but a little complex as compared to apache velocityin case it s helpful since you seem perhaps more familiar with objective-c than swift here s what your swift method would look like if we translated it back into objective-cthis was surprising for me as i expected udp to perform better than tcpsince you want to map some fields to others using a dictionary is a better choice than using a listthough flot may be simpler d3.js is definitely more powerfulit should also be noted that mouseenter and mouseleave work somewhat differently and usually much better than mouseover and mouseoutthe xdm model used by xslt xpath xquery is much stricter it allows a free-standing zero-length text node but as soon as you try and add such a node to a tree it disappearsi have heard division takes more time then multiplication but beyond that i could not determine whether writing this in one line or multiple assignment lines was more efficienti had a similar problem using ggmap geocode for a batch of locations where roughly 20 of locations gave the over query limit error even though geocodequerycheck would show more than enough geocoding queries remaining and the errors were sporadically spread throughout the locations not just the last 20instead i want those scripts to look in a custom directory let s say dependencies folder in the main project first so that i can directly put those externals in that folder which is much easier than putting them into the vc folder or manually setting the pathsi ve written my own protocol since i need it to be lightweight and i m sending files that may be bigger than the ram available on the device Ã¢ Ã¢ therefore the files are being streamed straight from the network to disknamedtuple instances are just as memory efficient as regular tuples as they do not have per-instance dictionary making them faster than dictionaryif you want to break this convention then perhaps changing it to a do-while loop is more appropriatefor-loop is widly used and has more advantages over while loops but ther are some cases when while loops is perferableand of course use post method instead of get because get is more limitedhowever due to it lack of android portability i have to replace all of my glfw code with sdl since sdl is more portableit seems openmpi has better support for assigning ranks than mpich but setting up slurm and mpich wasn t trivial due to the cluster setup so i m hesitant to start over with openmpii would recommend placing the common files in the same directory as the solution file or no more than 1 folder deepa similar argument can be made for inlining functions inline is generally faster but will remain in the same big-o complexity class although there is an additional size tradeoff inlining makes your compiled program larger if the code was being used in many placesi am just starting to learn about the streams and parallel in java and i was wondering why a normal for-loop takes less time than intstream paralleled at adding items to an arrayswhen everything seems easier with getter and setteri use google-chrome for development as i find it runs faster than firefox and ie so it is a bore to guess where the icons arebut you should consider that disk io is way slower than ramthis is a hold over from older compilers and interpreters on old chip architecture that would do addition slightly slower than subtractionhomebrew has less of a stranglehold on your machine doesn t require as much reading as macportsmemcached has more overhead since you have to use a tcp connection to access it versus just a function call for apc xcache shared objectsgoogle-chrome has no issues in this code.the default zoom level of firefox is higher than it was in the earlier versionto me it s fairly intuitive that comparing double is slower when taken into consideration that double are more complex and take up double the memory of int but why is it so much slowerif you want longer hash lets call more secure you should use something like sha512 whirlpool etci think it s related to the specific router implementation because on one hand if a udp packet disappears then both sides probably know it might happen and can afford to lose a packet or two but on the other hand if a tcp packet disappears then by it s fail-safe mechanism it will send another and the problem is solved and tcp packet is much heavieredit going into why vim or emacs is far more powerful in many respects than your typical ide could get quite lengthy and there are already several questions on so which cover thatin a benchmark test the 128bit intrinsic function performs faster than the 64bit intrinsicgoogle-chrome is reporting the missing key with a higher severity than firefox is so i want to eliminate that as a possible causetcp is reliable but slower than udp while udp is not safe and i have to implement my own fault-handling codesbut i found if i do not set their cpu affinity that is they run on same core 0 the time performance get better than setting cpu affinity 8.76s vs 14.66sso i suggest you build a p2 repository can be done in ant but seems simpler in maven tycho and split the projects to several repositoriesfirefox text is 1px lower than in google-chrome and ienote that just as you wrote this version is significantly slower than the inline one under cpython which of course does no jit inliningi have found that pull is more scalable than pushbut doing that kind of things with apache is rather painfull and is easier with nginxthe first problem is obviously the lack of a salt value which means if 2 users have the same password they will have the same hash which makes it easier to compromise multiple accounts2 you probably want a namedtuple - i m pretty sure they re lighter than dictionary and you can access properties using dot notation for which i have an aesthetic preference anywayyou can get even fancier with fadeout and fadein tooif you need something that works out of the box choose flume once you decide whether push or pull makes more sensenot only do png files have natural support for transparency they are also smaller than bmp filesif you d like broader support over the serializable deserialization you can always use jackson to do soin other words a future cffi release should give an alternative way to do embedding simpler than both cpython s and pypy s custom solutions respectively using the cpython c api and followingfor multiplication the technique described at is a reasonably easy thing to implement and is better than serial additioni have read a superscalar cpu architecture implements a form of parallelism called instruction level parallelism within a single processors superscalar cant use more than one processorsof course calculating a md5 or sha hash is much slower than calculating a crc32now it is just a matter of defining whether get or post makes more sense for you and implementing the corresponding methods doget or dopost or both at your servletsgoogle-chrome is worse than safarionce you re past the basics with c++ learning how to use parts of stl and then how it works will be better than tackling boosta while loops is more readable than a for-loophas nicer behavior than either strcpy or strncpyeither the strcpy or the printf function is more appropriatein vim it s much more difficult to run a subprocess than it is in emacs so in vim you need to have a separate running idris repli built a simple app for reading rss feed using rails and postgresql but am running into performance issues when i try to query my feed_entries table for posts from more than one feedin swift as objective-c there is far less emphasis on subclassing than other languagesa co-worker says there s fewer issues with an ati card at home than with nvidia but i ve been updating my video drivers pretty much monthly for the past few months and it s still not resolved so we can t just release our product and just tell our customers that some day the driver manufacturers may get around to fixing thisin google-chrome it seems more or less ok but in firefox when i first tried it it should give me not logged in my consoleaccording to the above posts and my own experience lxml is definitely faster than beautifulsoupbut if your key space is vastly larger than the number of targets you ll have a sizable number of hash-collision where you ll have to check if the target stored there is really the key you re lookingeven if a foreach loops were faster than a for-loop there are still operations being carried out that wouldn t be in your manual examplea for-loop is more suitable to iterate through the arraysi used to think heaps have this property but it just seems that the only requirement is for the children to be less than the parentbut mine is large and spans across a maze of folder directory and grows even larger as the development team adds to itapache mod_php is much more stable and cleaner while nginx will often deliver http bad gateway error coded in 502x86 allows easier debugging - edit and continue is not supported when running in 64bit mode5 a war file can be runnable executable though this is more common with jar filesps llvm clang is easier to port.when i select one or more nodes by grouping and try to filtering by one or more scenario_id property of the edge i would like to see all the dependent nodes of a certain depth ..n that depend on my selection and edge filteringlooks like it is about a half a second firefox google-chrome is less than that when selecting on two elements over 100 000 iterationsproblem is that although both datagridview filling and updating a progressbar goes from same loop in steps by 100 filling of datagridview ends much faster than progressbar show a progress and hide it on about 50what i m going to do after either creating or finding a library like this is to then change the way it produces the output to make it more biased to produce certain examples more than others so in the previous example i can make it more biased to produce more expressions with addition in them rather than multiplicationso you do have to be careful not to lose track of what code is client-side and what is server-side which is slightly more difficult when both types of code use the same language but is still not very hardin case of primitives memory comes into play.if you are going to store double into int as in your example double takes more memory as compare to integer.so there is chance of data lose.so compiler throw error.if you cast yourself then you know what you are doing so compiler let that doit s generally accepted that lxml is faster than beautifulsoup reffrom the article it sounds like fossil isn t a database any more than git is a databasebionic the android version of libc is more slightly more limited not by muchlike i describe in the first paragraph use of accessor methods getter and setter is a more idiomatic approach and easier to understand for someone else using your codei can think of two relatively straightforward things you can do without ditching php though i have to mention that php doesn t have much to recommend it and you would likely be better off with python django python flask or ruby railsin other words m2e is more friendly to the maven wayby looking at various blogs i understand glassfish versioning 4.1 has older jackson library 2.4 which does not have this method and need to upgrade jakcson versioning 2.8writing to a local database or handling a data structure larger than ram will impact the disk making network calls will impact the network hardware cpu bound calculations will impact theresection 4.13 of better builds with maven describes using cargo to deploy a war specified using maven coordinatesthe inline keyword makes it easier for the compiler to apply this optimization by allowing the function definition to be visible in multiple translation units but using the keyword doesn t mean the compiler has to inline the function and not using the keyword doesn t forbid the compiler from inlining the functionthe proper way to copy strings is using strcpy or strcpy_s on windows the difference is memcpy is faster and used in other situations such as pointers buffer managementmaven can t be compared with ant as in maven vs ant maven is more than a build script than ant isanyone knows how to bypass this problem and get more than 100 postputting the whole thing in a for-loop makes it neater and ensures that the iterating isread is called each loopsyou may want to consider using jquery timers instead which abstracts away many of the ugly details of settimeout setinterval and makes them easier to use in your code for things like what you are describingsince these are typically orders of magnitude slower than the processors from the cpu s perspective this takes foreverat least they are much easier to intall even pyqt is hard to code for me and wxpython is less attractive when it comes to looksin fact icmp especially the ttl excceeding message has even less limitations than udp on nats for the error message can be sent from every corner of the internet and routers with nat cannot be aware that these messages are not the true onesbut in low traffic sites mysql postgresql is betterwhen maven is going deeper it falls back to normal pom.xmloverride both methods but make gethashcode more tolerant than equals that means make unequal objects have the same hash code and not the oppositeit can handle parent with more than two children and with a more complex input data set we could leverage the graph approach to do even more cool stuffso i guess fseek should be much faster than freadthe ssd is still slower than ram by orders of magnitude but it s quite reasonable to have a 50gb hash table on disk but not in ram unless you pay big money for big ironif your working data set is larger than available ram your server may spend a lot of time shuffling files from disk to memoryi know that memory blocks and reallocation are implementation so specific but when there are contiguous free blocks of memory realloc works better than a new buffer allocation and memory copyi m not familiar with the particular problem you describe and i don t know whether there is some specific fix for it but one workaround is using background-image background-position which is easier to fine-tuneusing firefox even it s slower than google-chrome it s still more respectful of privacycpu affinity it s better for the cpu to have a load average of 1.0 and processes to have affinity to a single coreif that processors has more than one cpu can the interrupts run on different cpu cores at the same timewe have the following stackoverflow answer for reference which describes the case where chars can be larger than int which backs up the assertion in the discussion abovehowever multiplying is faster than adding even though less clock cycles are used to add verses multiplying according to what my particular cpu s datasheet says about the instructions being usedwhen animating on a browser always use resquestanimationframe it gives far better results than setinterval and settimeout by only moving new pixel data to the display in sync with the refresh timein case if you have flexibility to choose another testing framework you can try with testng which has bigger feature set than junit-security concerns if this is a web application which i think it is as you mentioned lightweight you re better off with a ssl certificate which encrypts all traffic to from your server by using httpsif you will be classifying multi-paragraph text all in one language a functional words list which your bag of words with pruning of hapaxes will quickly approximate might well serve you perfectly and could work better than n-gramit could be done via division which is much slower than addition or it could be translated into a bitwise and operation as well and end up being just as fast as the versionhere having a superclass makes more sense or at least having a realnumber subclassing of numberkey strengthening techniques such as bcrypt or pbkdf2 are generally considered better than plain hash since cracking them requires more resourcesi think it isn t good idea put your list directly to actioncontext you can use session for that or better list with getter setter in you action classin the equals method only if you re certain the ensuing equals implementation is much more expensive than gethashcode which is not vast majority of casesdes is usually substantially slower than aes on modern hardware and has keys that are far too short for modern usefirefox is even slower that google-chromei switched from apache to nginx to save memory especially to serve static file i seem to be using about 75 less memory with nginxso when trying to make things more reliable as atoi and easier to use as strtol solutions like kirilenko s would be usedi recommend not to use jpg as mask because of its lossy format i recommend bmp or png bmp is betterbcrypt is weaker than scrypt although still three orders of magnitude stronger than pbkdf2 because it only requires 4 kb of memoryi found that postgresql 9.3 has better capabilities for json than the mysql versions i am usingthe reason i ask is that it seems like nvidia has way better tools and ati seems to have cancelled rendermonkeyas it s widely known that an asynchronous post request is better since the user won t get a perception that the app has crashed while it s loading the long processmaven 2 has a steeper learning curve but provides a much richer set of functionality for building your projects and eclipse integration through m2e or iamyou cannot have a subclassing with less methods than a superclassi would have used getter and setter but from the books that i ve read and the forums that i frequent i know that the general consensus is that having getter and setter is even worse than public fieldsit seems a little bit more straight forward than kerberos but provides good ntlm sso capabilitiesi am wondering what happens when i release a upgrade that has a higher target sdk versioning then the previous versioning of my appthe difference is that union all is faster than union due to the fact that union eliminates duplicates from the resultset by using select distinctit s conceivable that calloc could return address of memory location that is already pre-initialized with zeros thus it may be faster than malloc + memset comboin order to avoid matching empty strings by including spaces as delimiter it makes more sense to me to allow them and use a call to trim to get rid of themuse a swing gui not an awt gui since swing is much more powerful and flexible than awti didn t dig on why scikit-learn gives such unprecise result but it seems scipy gives better precisionthe issue is that once the alpha of the uiview is less than 1.0 i can see all the subviews sides and the one that gets me the most is the outline of an uiimageview can be seen that would otherwise not as it is the same colour as the uiviewthe second hashing function is hash which supports many more algorithms and variants than crypt but does not support some algorithms that crypt doesin effect post is no more secure than getdisk io will be slower than rami wanted to ask if there is a better solution than using stringbuilder to cut some part of a string which is parsed from a method through bufferedwriter to a fileon that base a get is more appropriate then a postyou ll need to convert binary to another base here i use decimal when writing this code because c doesn t have binary constants which would be ten times more useful than octal constantsproblem being i have more than one subclassing to my superclass and many instances of each subclassingperforce does have support for many other oses but our non-windows devs feel more comfortable with svn tooif the multiplication is truly faster than the addition then i expect somebody well-versed in byte code could explain why the load_fast for num is faster than the five operations for line 12in most cases it has reviled indexes that needed to be add and in most cases the indexes improved the queries the most but after thet have been added the isnull and dynamic still perform better than the coalescethe downside is that you cannot use it for browsers older than ie11 firefox 31 esr safari 7.1 ios 7 konqueror all versions and opera all versionsrepeater has fewer templates then gridviewand would the answer be different in a case where screens switching is more frequent like between an overworld screens and a battle screens in a game like final fantasy or pokemoni always thought a multiplication is computationally cheaper than a divisionplease you a job queue that is more efficient than cron jobsa dawg is ideal but a trie is simpler and a decent starting pointcouchbase btw also uses binary replication mechanism which will be more efficient than couchdb as long as the couchdb protocol is not utilized for bidirectional data exchange and conflict resolutionbefore i am using codeigniter but i found out that laravel is much better than codeigniter and it has a lot of featureswe provide a number of support resources which may get faster response than post on third party sites including the virtuoso users mailing list public support forums and confidential support casesi am trying to understand what would happen if the max node is somehow smaller than some of the min nodes.both have the effect of the order by not being executed at all -- and so not executed after the grouping by in the first case the effect is to remove sorting from the grouping by and in the second the effect is to do nothing more than the grouping by already doesmore over it is better to track buttons on event itself see this question for more details as mouseup mousedown event might be triggered outside of the page effectively getting you cached state out of syncgoogle-chrome is stricter than firefox when it comes to loading data from your local filesystemuse strtol it does better error reporting than atoiyour intial hypothesis of toupper being faster than tolower has a logical fallacyi ve tried using pypy because i ve heard its faster than the cpython interpreter but still no goodso i tried to make it simpler with a for-loop but have been unable to work out how to add labels to each plot inside loopsjackson xml module faster than xstreamthe awt approach seems closer to bare metal but since jdk 6 brought a lot of improvements in swing rendering pipeline i would go the swing java2d approachhow to make textures appears above each other as the shapes in color switching game when i touch screens there s one more shape is appear such as circles sticks and other shapes so how can i do that in libgdxbut then the user of my cms has to include multiple folder into multiple directory which makes everything more complicated.i think in terms of performance using a single for-loop is faster am i right 3 linqs will be eventually converted to 3 loopsinterfacing with usb is more difficult than it sounds it would be harder to build something which would interface with that and measure millivolts than with bluetooth because the pic processor you use for analog to digital sampling and usb client would in fact have to either act as usb host or usb otg on a phone which is far more complicated than being a usb peripheralopenssl is more similar to peter gutmann s cryptlib and gnu s gnutlsyou could also test every time in the for-loop and include a break statement but because you don t know when it will stop i think a while loops is better in this caseupdate under linux gentoo amd64 it s the same - opera reneders slightly larger fonts than firefox but nothing that looks oddi feel like emacs is so much better than textmatein my general programming experience compiled c c++ programs generally run faster than most other compiled-language like java or even compiled python and almost always run faster than interpreted-language like uncompiled python or javascriptthen run all upgrade scripts but scripts should be written in such way that they do not execute if current versioning is higher than versioning expected by the scriptps i think that writing script is easier than hacking valgrind plugin callgrind with adding several counters for every instruction typesince postgresql is a lot more sane than mysql there are not that many tricks to report onand it sounds strange but jruby scales very well and it s faster than mri with java 7i suspect this will submit the right form data but may not be acceptable if your button is calling js and is doing more than submission form dataowl provides more mechanisms for asserting shapes of rdf graphs as does new work on rdf shapesnote that onclick is better supported with checkbox and radio button than is onchangeapple s safari applies almost no cross domain restrictions to files opened locally but firefox is much more strict about what it permits with google-chrome somewhere in the middlei try it and i get all the categories and not just the ones with more than 1 post in themmysql i am told can be optimized to do faster reads than postgresql but both are pretty ridiculously fast in terms of # transactions sec they support and it doesn t sound like that s your problemcan anyone explain why the while loops is taking more time than the for-loop even though the looping of i and j is almost samewhat i would like to do is use css media queries to have the title be above the tabs when the screens gets smaller or on a tablet or iphonein other words i think post with x-http-method-override get header is better solutionthere is more than one rss in hugo one for the root and then one for each section and taxonomy tags etc but it is not possible to create multiple rss feed for say the home pagea topic can be a sub-topic of more than one parent topic and itself have one or more specialized topics as childrenwhen your working set exceeds the amount of ram then it will carry on working but with noticeably degraded performance as things will then be constantly having to go to disk which is far less performantif that will solved later than wordpress menu is better than joomlai suppose it sort of makes sense to do things this way except for the fact that metal appears to play better with objective-c even though it looks like swifta typical lamp application like wordpress or phpbb runs more than 10 queries per pageview without problemsthe only reason i can think of is the objective-c designers micro-optimising storage because the chars will use less memory than the intyou can also see that for smaller collections quicksort is faster but then mergesort takes the lead but all of this is case specific so take your time to study all 4 algorithmsthis also might be fixed solved in the git add mechanism in more up to date versioning i vaguely remember them adding their own .gitignore files to empty directories so i d really recommend trying to upgrade to the highest git versioning you can for that and other benefites your distro may provide by default an older versioning as ubuntu and debian dofurther as a for-loop it is easier to read as everything initialization loops condition expression to be executed after each iteration are all on one linegoogle-chrome has more of the market than safari not and invitation for flame wars just a personal opinion without any weight -i mostly work with esri software though i ve had a little bit of work with mapguide mostly for clients whose engineering departments are using cad more than arcmapi saw that pypy is generally faster than cpythonthe ssl handshake overhead associated with https is more than 50 of the bandwidth currentlyif you re using typedef you no longer need to write struct all over the place by useing typedef code is more cleaner since it provides a smidgen more abstractionmalloc is far more common in c code than calloci ve tried to load the page on google-chrome not blazingly fast but acceptable less than 1 second then tried on firefox takes more time between 2 and 3 secondsa concurrent run of a code-execution happens simultaneously just by coincidence using more than one cpu or processors core and other shared resources to execute a program or multiple but mutually independent computational units tasks threads et alupdate i made some changes to my code but was already suspecting what others here have already pointed out sure the enhanced for-loop is slower but outside of very trivial tight loops the cost should be a miniscule fraction of the cost of the logic of loopsin scheme or prolog it s often less than a page of codein swing has more features than the awt componentsat least if the php versioning is newer and not including the deprecated functions like the extension in the error message i recommend to upgrade to a newer typo3 versioning and find a way to replace the extension ph_nextgenmenu with a newer one or edit it manually to use the typo3 sql api or the newer php functions directlyit doesn t show at all if hide is called less than 0.5s after show and it show for at least 0.5s this prevents very fast flickering stuff that you might see with naive implementationsthe remote server is set up to allow very few maximum concurrent clients generally nginx handles many concurrent clients better than apache since it doesn t need to fork a new process for every request so if it becomes an issue you might want to look into switching web serversi am not an expert in deployment but in my experience nginx is much faster and more friendly to django compared to apachemozila firefox and opera works smootheris there any way to handle the numbers and or the sin cos arccos functions more accurate to make the outcome get betteri m testing some simple benchmarking calculations on win7 and linux ubuntu 16 to compare the timings and being wonder win appears to be much faster than linuxmy second question is how come this very simple loop is slower than sqrt atan2 and the many hundred lines of computations that come beforealternate build tools ant lots of configuration gradle conventions again less verbose than mavenuse picasso glide or fresco to load images inside those cards picasso and glide are easier to use compared to fresco but fresco is better with memoryin addition there are third-party libraries for xml manipulation which you may find more convenient such as dom4j suggested by duffymo or jdomone of the nice side effects of this structural change does happen to be performance but not because of anything inherent to java by focusing on classes and getter setter it makes it easier to really pay attention to expensive operations and cachinginstead initiate all the settimeout s you need for the entire animation at the same time with increasing delays in a loop and let them run their course or better yet use setinterval which is the better way of doing animations and how for instance jquery s animations workyou can give clients a type-safe interface in the form of fold but they have to be willing to write all their code in a higher-order style and since fold is a catamorphism it becomes harder to look at more than one layer at a timeit breaks srp principles and makes code more complicatedi seem to be getting the impression that wordpress is more popular than joomla nowadaysfaster than on x86 32bits but slower than x64 64biti think this method of manipulating the dom from the client-side is easier than using regex from a server-side languagenote that javassist is significantly slower then for example cglib because it reads in class files directly instead of using reflective access in order to avoid class loadingwhat s odd is that usually this doesn t happen - so far i ve only encountered this error when the original image has height greater than width and it has been filtered by another app called camera+...the exact same photo before filtering causes no problems and a filtered landscape photo also seems to be finein some cases irq constitutes more than 8 of cpu for a processi found out that with any opacity not text color alpha less than 1.0 google-chrome gave me good results but safari was still bad.swing or javafx would be better than awtthe best solution is to write a custom version of strncpy that is less weird or if you know the length of the input just use strcpythere are obviously situations where in c++ scanf is preferable to cin i was wondering if there are any situations where printf is more practical than coutif you re looking for something less heavy than django perhaps try flask or bottleelementtree is included in the standard library but lxml is fasterinsertion sort for example has an average time-complexity of o n 2 worse than quicksort or mergesort but as an online algorithm it can efficiently sort a list of values as they are received as user input where most other algorithms can only efficiently operate on a complete list of valuesfor floating point operations addition and subtraction are harder than multiplication and division so they may be slower or not again it depends on how much transistor real estate there is dedicated to the fpuif your in the market for a templating engine twig a new templating engine used by symfony is much better than smarty imhofor efficiency secondary name node periodically does a checkpoint to update the fsimage so that the namenode recovery is fastereither will do the trick but bottle or in my preference flask will be faster as it is much more lightweight than djangoprepare execution is faster than direct execution for statements execute more than three or four times because the statement is compiled only once while statements execute directly are compiled each time they are execute2 i used link1 and link2 to filtering out duplicate users existing in more than one groupingit looks like it shows for firefox more-so than google-chrome but it might helppostgresql is also a lot better imo than mysql and is the recommended database to use with django according to a lot of the people close to djangolxml is also much much faster than beautifulsoupnote i m currently learning udp and how effective a voip system would be in comparison with a tcp system i ve already done tcp so please no one comment tcp is better etcin some circumstances isnull is faster than case or coalescei m more familiar with ocaml than haskell so type constructor may not be the right termthat is one area i really think mongodb fits for but mysql postgresql is more recommended in generalwhen i use vertex array model looks perfect but when i switch to vbo model looks worse because of vertex normalsi have used both apache-poi and docx4j extensively and having said that docx4j is more robust as it offers more support out of the box for not only the document itself but for tables and imagesfirefox is probably easier than google-chrome these daysalso if you re setting these on mouseover and mouseout it is arguably clearer to simply use the hover event insteada lot of people use iphones ipads and safari is literally the only option even google-chrome is more like safari in disguise... so it s quite a portion of users who are suffering from this issuei ve reworked it slightly so that the deserialization code looks more like its serializable counterpartthe trope about myisam being faster than innodb is a holdover from code that was current in the mid-2000 syears ago before i got more familiar with the awt swing model and the edt i used to write code that violates many many java standards code that ll make any reasonable programmer recoil in horrorapt-get upgrade actually installs the newer versioningto expand on the udo s answer there is the program rpm which manipulates specifically the packages it is asked to manipulate and there is yum which is a more intelligent management system that can find dependencies and download .rpm files even if they re not in the systemconsidering the lack of windows 8 love that xna is getting support being dropped apps won t be sellable on the app store -- i d go with slimdx -- it s better than xna anyway -- the only down side is that you can t make xbox apps with itfirstly i am not sure how to properly use multi-thread with junit last time i tried i had no success anyway i have had better results with testngin this case superclass is bigger than subclassing that s why the second statement is correcthere s one idea which uses one multiplication and one shift so it ll be faster than a division on most systemslike this i may have more than two get post insert or update methods i have to acces this methods from my console application how can i map the methods i want cana any one help me here how will i define the routes for thisso if you want to use django or something like that it s probably not smart to use ironpython because it isn t really cross-platform doesn t work with some frameworks and it performs worse than cpythonfirst of all never send int s and other types larger than chars like that - you will ignore endianness and the recipient might be unable to interpret the data properlyby simple i mean setting up some compiler flags -wall doesn t show any errors or using such tools as valgrind used it with memcheck that didn t help muchwriting swift 2.0 in my professional work my personal opinion is that it s indeed ready for enterprise applications -- maybe even more than objective-c ever werealso ram bandwidth is much higher than disk or ssd or network bandwidth and the ram latency is much lower tooit makes minimal change to the text in particular it never splits a word doesn t change wc -w and for text with no more than single spaces in a row and no cr it doesn t change wc -c because it replaces spaces with linefeed rather than inserting linefeedor how is it better than post redirect get if the functions can in fact be used in solving my particular problemi find grouplayout to be fine to code by hand certainly no harder than gridbaglayout though i can certainly see why it would be a favorite for tools to usethis would generally be the wrong inheritence structure if your saying what i think you are the reason being that children should not be less restrictive than parentmaven is more or less an update concept of anti m able to query my database below to get the result that i want but i don t want to have to iterate through all of the author objects just the ones that have more than one postin safari it renders significantly brighter than in firefox or google-chromethis is sometimes easier than yacc bison and usually more intuitiveyou forgot to open the so no more css after this line is considered in firefox and ie google-chrome is more cool on the errorhere is what i am thinking tcp is supposed to be reliable transmission but slow whereas udp is does not provide a guarantee of packet transmission like tcp but is faster than tcpit will be presumably more efficient than malloc + memset for large allocationsas a coder sql is my weakest link since i am far more comfortable with imperative languages than declarative ones - but i want to change thatwhen attempting to access the admin side of wordpress if the db versioning is lower than your wordpress versioning expects it will redirect you to a database upgrade pagethen you can use the itemcheckedchanged event which will get triggered when an item is checked and here you can see how many items are currently checked and if more than one show the element with the text and hide the tokensin the non open-source world choices are wider such as qnx neutrino and vxworksalso your csv looks more like a tsv tab separated instead of comma separatedin regard to vao and vbo performance i disagree that vbo is faster i suggest to see this linkif i have a for-loop for example and and i want to use something like math.round to round the number but i only need to round the number one time i.e the number doesn t change throughout loops is it better to store it into a variable and then use the variable to in the condition or does it not matterwhat is that key feature in tcp that makes it have much much higher throughput than udpi generally don t write unit tests for bean classes with little more than getter and setterthis blog post explains more on how to get an access token on androidnative javascript sort performing slower than implemented mergesort and quicksortmemcpy can be more efficient than strcpy since rep movs is highly optimized on intel cpus espie7 is strict enough and used to give me javascript errors on them maybe google-chrome does it too firefox is more relaxed dof course you could do fancier interpolation with a splines being the next stepmysql is not less complicated that postgresql -- they re the same thingyou are seeing a noticeable jump in interface response because subviews do in fact consume quite a bit of memory uiview are very expensive compared to their underlying calayers and as such calling -removesubview not only unloads stress from the gpu but also frees up more memory as the subviews is usually released afterwardsthe next example does more or less the same except from an oop perspectivethe system still in use today from what i hear is responsible for ingesting more than 3000 rss feed probably a lot more than that now into a cmsmoreover because read is built into bash and this usage requires no subshell it s significantly more efficient than approaches involving subprocesses such as head or awkinnodb doesnt read number of rows from stored cached value like myisam does if column is not null cause innodb is more optimized for writing than reading opposing to myisamor if you ve got tcl 8.6 dictionary map is perhaps betterin firefox it runs extremely slow 3-4 seconds in google-chrome it runs much fasterthis is why a regular for-loop is better to use for this scenario rather than a foreach loopsi need to do the same condition but for less than google-chrome version 46 and for less than firefox version 44adding setter and getter is betterin this context free store is different and incompatible with heap because the new delete free store library is simpler and quicker than the malloc free realloc calloc heap library and thus provides huge memory usage gains to the c++ embedded programmer in a context where you have only 512 bytes of ramin practice each payloaded buffer will represent 1 udp packet unless your network mtu is smaller then what you have configured on the payload see mtu propertypackage-private is stricter than protected and public scopes but more permissive than private scopewhen typing in the text box the autocomplete pop-up but is bigger than the remaining space in the modal dialogthe xcb library is alternative to xlib which is much better all around and supports a non-blocking interface but it doesn t play well with openglby default psycopg2 uses its own versioning of libssl and it seemed to keep a dependency on an old versioning of the library which no longer existed after my upgradebe aware that the bourne shell in freebsd is more capable than on linuxif we are creating an object of a subclassing and invoking the method of superclass and if subclassing extends more than one class which superclass method should be calledthe fact that mac users tend to be less unix-savvy than linux or freebsd users probably doesn t help but even without that this is a perfect way to end up with thousands of people who have a pip and a python that doesn t match and no idea whyif you use insert and update high performance uses innodb over myisam is betteri ve been using uwsgi in production on heroku for over a year and it seems to handle everything a lot better than gunicornbecause representation of a given problem with a nfa is far easier than the equivalent dfaall good jasmine angularjs tests running now and much faster than with google-chrome or firefox as the test browserapc have less feature than memcached and is easly to use and optimize but this depends on your needsif you really want to use selenium inside an android app you might have better luck with appiumalso note that while maven is no slower than ant for multi-module projects of this sort importing your maven project into an ide will generally result in far faster builds than maven can perform itselfa lot of the solutions i ve seen are client-side - i think a server-side solution makes more sense for my needs since i can give feedback to the user if the javascript is invalid and only save it on the server once it s cleanswitch from using strcpy to strncpy or strncat which i think is better than strncpythis is much easier with war or uberjar which include all dependencies within because otherwise you need to add all dependencies on the classpath as well which will take additional efforti can understand windows 10 performing faster than linux on vm but why is the baremetal ubuntu so slowto release it even though what it actually does is little more than malloc and free but by having you call these functions they provide a well-defined and clear api which assumes responsibility for knowing such thingsyou can either prepend a dot to your image address which means go to parent directory meaning get out of css and then look for images or you can move your images folder to your css folder whichever is more comfortable for youin fact the heapsort algorithm works this way first arrange a random order into heap order and then obtain a sorted order somewhat less efficient than quicksort on averagemore detail set the amount of time the animation will take for fadeout and use a delay for the fadein animation that is longer than the fadeout animation timefirefox which is more standards-compliant than google-chrome doesn t allow thisgetting much more information is needed in the packet header for connection less like udp but why the header size of udp is less than tcpyou only need to specify a private access modifier for your set accessor when the properties is more accessiblegradle support is much newer and somewhat less mature than ant or maven but it workstcp mounts are more reliable and you know you have a network problem much faster than with udpupdate turns out that zsh implementation based on builtin compctl is much simpler than the bash implementation based on builtin completeif your goal is education and not ease of implementation you would probably be better served by extends the uicomponent class and using the treeitemrenderer code as a reference to create a class that implements the same interfacesi was taught from him that using get requests was better than post but after reading up i would like to switch to post my only problems is i am a little unsure how to modify my code to switch over from getif your hide show logic becomes more complicated you can move it into a method on your controllerboth give you the ability to implement things in a variety of ways which can be confusing but ember.js provides more of the code that you would have to write yourself in backbone.js as standard which for me personally is more important for rapid prototyping than the wealth of backbone.js examples availablemaven definitely has better integration with flex than antin high-level programming languages the choice between a boolean and an int is really more of code readability supportability than one of efficiencythe framework has also improved majorly not to mention it supports pdo mysqli more secure than mysql and postgresqljboss is a big and quite complex application and glassfish is smaller and i find it easier to understandwhy is memcpy so much slower than memmove or hand rolled copy on the serverbut then normal for-loop is far better for arrays than using for-in which is actually for objectthis query lists all parent sharing the same children where there are more than one parentso i guess it s the md5 in the dump output cause the conflicts and the hash value is longer than md5 outputsregarding frequency of polling when no connection is maintained google-chrome appears to be 3 seconds where as firefox s is much largerwhile ruby and rails don t change as often as they did a few years ago the dev ecosystem still evolves faster than linux distributions like ubuntu can keep up withhash ids are usually shorter than typical hash created by cryptographic hashing algorithms such as md5 or sha-256 and unlike these hash ids are usually reversible meaning we can decode the original valueint is better because with chars n you ll be comparing one chars at a time and unless you collate latin1_general_bin then you ll also be doing a transformation when comparing charsthe wrapper uses these in such a way that even the md5 implementation is significantly more secure than a simple hashcreating the views with code only i think one is better off with subclassing if it comes to more than one level of inherited or many ancestor classes for just one base viewthe youtube approach seems much more efficient as far as amount of code and simplicity of understanding which makes me wonder why vimeo would use promises in this simple fast casea note on the runtimeexception re if you catch a nullpointerexception nullpointerexception and throw a re you are actually losing information since nullpointerexception is a more specific error rather than reif end up using the memory anyway calloc is still faster than malloc and memset but the difference is not quite so ridiculousthis is pretty simple for types sizeof int but unsigned chars short is more complicated and requires compiler specific packingmultiplication is nearly always a lot slower than additionin ios regardless of whether the app is being written in objective-c or swift afnetworking makes life easier when writing requestsprobably more popular than xquery is xpath which is the basis of xslt transformin instant articles configuration i only see one input box for submitting rss feed url can we have more than one feed for facebook instant articlesregarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoupi had been taught that quicksort is almost always quicker than mergesort and i understand that there is some debate on this topic but i at least expected it to be closer than thisalso note that using keyup or input makes far more sense than keydown otherwise the previous value will only be evaluated on the next event occurrencetextmate is a better emacs for macs though that won t help you with solarisi can t help with the coding side of your question but if you re passing in a non-url input then the post method would be more appropriate than getedit but as bali182 said just casting the chars to an int is more readablethis is way more efficient than sorting and filtering in phpusing varchar is less efficient than using tinyint like aju john suggested in his comment but unless i m dealing with a really performance-critical or a huge table - i find it easier to deal withfor students in computer science major learning programming on linux freebsd is much better than doing these on windowsi would give you more info except a ip aliasing on centos 7 is more involved than i like much easier on solaris and b i m not familiar at all with configuring nginx very easy on apachei like the monodevelop ide even better than sharpdevelop but i m not sold on installing and using mono s compiler just yet nor do i know if it can even handle the latest vb.net c# language featuresalso your examples about why int would be better than boolean are kinda flaweddid maven has achieved more then ant or ant is still alivebecause of how google-chrome s plugin system works development mode in google-chrome is much slower than in firefox or safari see here for more detailsyou don t usually get such errors because there is a defaulting mechanism for polymorphic numbers that in ambiguous cases picks whichever of int or double is more appropriate see the haskell report for detailswhile i won t start a war of ant vs maven maven is much more than just a build tool and that may help you in futureyou should use strcpy or strncpy safer than strcpy to copy the string stored in the array between arraysthe myfile can have one parent and parent can have more than one childrenthis was surprising for me as it is well known fact that udp performs better than tcpthe problem with this approach is it works mostly in google-chrome but not in firefox which is slowerin firefox this might be handled a little nicer than google-chrome but rather than completely redraw an element you should try to append only what you needbetween cruisecontrol and teamcity teamcity is faster and easier to set up but you may need to check on licensing for itthis is sporadic and i see it happening most of the time with firefox 4.0.1 and 5.0 and to a lesser extent with google-chromeif that s true then you might not need all the transactional safety provided by the innodb storage engine and you might be able to get away with switching to myisam which is considerably more efficient on aggregate queriesstrncpy is safer than strcpybecause addition is faster than multiplication and can be faster than shiftfor more understanding with folder directorybeautifulsoup is more suitable for html parsing than lxmlservice to build drools knowledge and get session i prepared a stateless engine lighter than the stateful onemultiple inherited makes it easier to compose classes from small mixin base classes that implement functionality and have properties to remember stateto recap i want to know why a javac compilation utilizes so much more cpu than ecjif there is lot of data exchange then a binary format like protobuf or thrift or avro is betterfor example if i declare and only use it in a way that it could have and should have been declared since chars uses less memory than int will gcc optimize that or does it not even matter since it will be converted to assemblyi haven t read the paper on edison but if it s nothing more than the haskell implementation of purely functional data structures doesn t it make more sense to port the sml code that s in the book thesisxapian is slightly more difficult to setup but is much faster than whooshyou may find that hyperthreading helps more on code that is using large amounts of memory so that the processors is regularly blocked on fetching from memorythe id specific hotspots show an area #id-ed textarea at mouseover and then hide the textareas at mouseout note the css display hidden was remarkably faster than hidedoes tinyint in mysql take up more space than booleanvb.net seems to think lots of things are objects one way or another but vb6 has stronger typing in this casewith tcp its slightly slower than udp and has more featuresif you want to a little bit further you can imagine use more powerfull scm clearcase perforce ... but maven integration is fewer not well documented and community provide less examples than svn or gitinnodb is slower than myisam for most uses but can perform faster in certain conditions due to a better locking mechanismyou can safely upgrade to trunk its better than last versioning anywayi personally would just skip using awt and move to swing which provides better built in functionality for this type of thingnginx makes apache betterinnodb is more scalable and myisam doesn t support any of the properties of acidif you wish to make a more complicated property with getter and setter that do more than merely set the property without polluting the namespace you may hold the underlying value in a closurei ran a simple test out of curiosity and there don t seem to be any differences in performance between float+calc vs flex other than ie rendering both much slower than firefox and google-chromein your code on line in the for-loop does no more point to an arrays --the compiler has no information about the length of the variable that it s pointing at whether it is an arrays a single chars or an int or something else-- but it is just a plain pointer presumably a pointer pointing to a default intapart from that tcp packets by themselves are not slower than udp packets and data transfer with a simple tcp connection can be faster than with a simple udp connection because flow control and reliable transfer is already integrated and you don t have to reinvent everything again and often worsetcp is faster for when using a few connections the important difference is that modern nics perform significant amounts of acceleration on tcp and not really that much for udptime i upgrade to this versioning is much later time of above topic so i don t think because compose versioning issueso we can see that an optimised while loops is faster than a for-loop by 2 operations however it uses more stack spaceit s clearly visible in firefox and is far more subtle yet also distinguishable in google-chromedouble metaphone - this algo will give you a better match than soundex at the cost of speed it is really good for spelling correction thoughit seems gson is more faster than jackson the average time of gson is about 2ms while jackson is about 16ms does i make mistake when using jacksonhow are push notification better than pull notification on iphonesif you think back to grade school you ll recall that multiplication was harder than addition and division was harder than multiplicationthe issue here is that an automatic translation from sql to linq will often have to perform more transliteration than translation - generating examples of how not to write linq queriesin my case apc is 59 times faster than memcachedi should also mention that crypt has this built-in and may be a better solution than md5the problem was the same on both versioning though perhaps a bit worse after the upgradekeeping a list of children in the parent makes more sense from this aspectfloating-point calculations are more expensive time-wise than fixed-point which is why fixed-point remains popular in microcontrollers and embedded systemswindows installer rollback will work as you request if you use 1 a minor upgrade or 2 a properly sequenced major upgrade that uninstalls the older versioning after successfully updating all filesfirst of all ant is older than maven and therefore does not include core support for dependency managementflask has a really great albeit smaller than django community and there are a lot of extensions available for common web-app extensions in the extensions directorythis folder has way more than 1 directory and has a bunch of files so apparently it snot reading something correctlythe reason for the second case much slower on sorted data is that a while-loop is cheaper than the equivalent for-loop when there are zero iterationsgeddy is not better than connect express the big thing that differs is the structure of ithowever when i switch to swift 4.0 the methods declared in swift is no longer visible in objective-chowever dsa verification expect verification calls to be 100x issue is about 10x slower than rsa verificationram is much faster than diskso my question is beyond instrumentation and the profiling using memory leaks which tells you the location of creation of the leaky object but not the root cause are there any other tools i could run that could give me any more info than instrumentation re tracking down the root cause pointi suggest using hover this instead of binding to mouseenter and mouseleave looks cleaner to menotice that besides using the filter method or not even with a plain for-loop is much better for performance create a new arrays from scratch instead of mutate the current one multiple timesin many cases at least 2-3 times faster than mysql postgresqli think a.__init__ self x is better then super .__init__ x because it supports multiple inheritance and i didn t find a way to do it with superbut that post is currently put on hold as my post question is more technically-oriented rather than just a general-purpose questionuse one of the image loading libraries glide square picasso universal-image-loader or ion ion is actually more of a general purpose async loading tool to do the dirty work for youyou lose two benefits of data base consistency data persists after a crash and you need more ram which is more expensive and scarce than disk flashit is just an example that shows a scenario in which get is more secure than post but i don t think it would be a good idea to choose get over post from this attack reasonedit keydown is a little better than keyup for the element bind now enter key fails silently-ishafter recent upgrade to latest wordpress versioning media uploads no longer workthe hide show variant is much fasteri am trying to compare the myisam and innodb write read performance but i am suprised that the myisam s read is much more slower than innodb while its write is much more faster this is totally opposite compared to what i have learnedonce you have this you should be able to have more than one sqldatareader shared on the same sqlconnection in your code and use them independently of one anotheras google-chrome s v8 is dramatically faster than firefox s spidermonkey at the moment these things are constantly in flux pick the forward loop as it s faster on the slower enginedfa is a better choice over nfa because it has only one transition for an input while nfa can have manybut i am lost a bit here because i am not sure how to set up the form get or post is better for this needi d like to have the view tehnology be jsps i find them much easier than freemarker or velocityat that point either get or post will work post is usually betterso far the only legitimate reason i ve found to use datamapper over activerecord is that datamapper is better in terms of the single responsibility principle -- because the database rows are not the actual objects being persisted but with propel that doesn t really concern me because it s generated code anywayi would just use ocaml but haskell s syntax is so much better than ocaml s and haskell is pure and has cool features such as type classesthere are other optimizations available but general rule is that innodb will be quicker than myisam is even with table growthgenerally swing is more efficient and advanced than awtdoes corona have anything that allows us to compare versioning codes and the upgrade happens only if current db versioning is higher than the previous db versioningi wonder why postgresql s single insert statement is completely faster than mysql s when autocommit is turned onbtw why do you want to use fakeiteasy it looks to me less powerful than moqmostly innodb is better choice than a myisamnow a routine to initiate once per second - settimeout is usually more useful than setintervalin computer 1 the eigen3 performance is worse because the number of total processors virtual + physical - Ã¢ due to hyperthreading is greater than the number of physical processorshowever firefox takes significantly longer to run this code about 180 milliseconds on firefox compared to roughly 30 on ie and google-chrome and does not see that same reduction in run time that ie and google-chrome doesmy knowledge of firefox is better than google-chrome so my apologies if i missed somethinginnodb is more concurrent than myisam since it provides row-level lockingafaik jboss is much more adopted in production deployments than glassfish but this doesn t necessarily mean it s betteri am a bit suspicious of the performance because modulo tends to use division which is slower than your subtraction operationsbut my code only works if the parent element is always higher on the list than the children and i want to make that work universallyi was originally using nsscanner because it was easier than nsnumberformatter to use but i ran into the same problem it doesn t parse the entire string just the first number in the stringand wikipedia says that snmp can be run over tcp ip but udp is more commonanother even simpler option than canopy and anaconda is just to download spyder s dmg which comes with the latest versions of numpy scipy matplotlib pandas sympy and the sci-kitsstill you must increase max also if your minimum is anything less than 15 the adk is now building an extra folder new stuff in truth the new version of the adt is annoying i am just starting and now you will see they have enforced the use of fragmentsi don t think that as of today you can run these tests and determine with any certainty whether swift 1.0 is faster or slower than objective-clxml is faster than beautifulsoup i think and has much better functionality while remaining relatively easy to usefor a simple image toggle you might have an easier time with a hide show style insteadi see that the paid version of wunderground has some higher tiers with more features but openweathermap s free tier allows a huge number of useswhen post is better than getand in the future i think you will get better help by posting ubuntu related questions to unix and linux stack or to dedicated to ubuntui think you can do exactly what you want with dill which provides better serialization than pickletcp is far better at transferring large quantities of data but when the network fails it s more likely that udp will get throughby comparison des see section 3.2 and other block ciphers are much faster than the rsa algorithmwhy everybody here is saying post is more secure than get when used over httpsi m trying to add a ribbon to a page using css3 linear-gradients but the rendering in google-chrome looks a lot less pleasant than its firefox or ie alternativewhat is nice about cast is that it works exactly the same on most sql engines sql server postgresql mysql and is much easier to remember how to use itfrom experience i can tell you udp is about 10-15 faster than tcp on dedicated and udp-tuned networksi just want to learn why fast inversion algorithm is slower than math.h sqrt functionfirst you make post request although get request is more suitable for search pupposesthe problem is that tcp creates bigger packages of data while udp uses 8 kb of data blocksusing a non-reversible hash such as md5 is much more secure and you can store the hash value as clear textthe fact that checking with isinstance the membership in a concrete type is not so good while checking the membership in an abc is more often useful lies in a principle that the gang of 4 expressed clearly and intensely in the first part of their wonderful book design patterns in a mostly c++ context but it really applies much more widely than thatfor more day-to-day end users having canned reports that might be modified by the end user via a simple user interface that allows them to modify restrictions grouping sorting is more usefulnginx uses less memory than apache given the size of your setup i would definitely recommend thatif you can t or won t upgrade apache you can downgrade the pcre package to the first versioning that contains libpcre.so.0 which is 7.8 i thinkinnodb -- more effecient than myisam because of the way the primary key is clustered with the data in innodbtherefore i conclude that division is faster than multiplicationthis is a good example of a time to know the basics - i think understanding the ins and outs of struct is more helpful than typedef since you can do so much more with itbecause sml is eagerly evaluated the execution model is far easier to comprehend and debugging via printf works a lot better than in haskellin my opinion swing is easier to learn and to use but the results of swt are often nicer - you can often feel that a swing application behaves not completely rightavailable on almost every platform true of vi vim too of course - whether gui- or text-based java ides are available on most platforms too but only in gui mode and are significantly larger and need to be installed separately whereas emacs is generally more widely available - bsd nix linux mac systemspandas is far more flexible for working with data so i often bring parts of dask dataframes into memory manipulate columns and create new onesthe service is still in beta trial and firefox conversion is working better than safari onebecause there is no confirmation on udp packets it s slightly faster than tcpi ve never done any network programming lower than using libpcap winpcap so i would be happy for any suggestions.innodb has more overhead but uses row-level locking so that reads and writes can happen concurrently without the problems that myisam s table locking incursif you want to learn lisp paip is a better choice to start with because it will teach you a lot about common lisp and a smallish chunk of schemevirtualbox free but less powerfull than vmwarei definitely wouldn t try introducing a new general-purpose type for use in python based on std map which has worse algorithmic complexity in time for many important operations andÃ¢ in at least some implementationsÃ¢ leaves some optimisations to the user that dictionary already hasany ideas why google-chrome is apply more spacing than firefox iefor some problems character level n-gram do better than words level and logistic regression parametersfor example i ve read that opera and ie will fix framerates slower than firefoxwebsphere development studio v7 wdsc is older than ibm i 6.1 your build date is 2007 the article you re referencing came out in 2008purely in terms of the number of comparisons performed is mergesort always more efficient than quicksortever since i did sockets programming on a pdp 11 it s been the case that ip fragmentation will take care of the case where an ip datagram such as a udp datagram is larger than the mtu for the segment allowsbut if you want to get the username of the user who makes the post is easier than that you only need to access the request.userrsa is much slower than aeshowever heapsort is somewhat slower in practice on most machines than a well-implemented quicksortcan you explain me why in this case the parfor loops is slower than the for-loopi recently moved from autotest to guard for a reason it works better than autotest and it has a lot of available guardthis means that while the two underlying sorts it uses mergesort and insertion sort are both worse than quicksort for many kinds of data timsort only uses them when it is advantageous to do soi m writing a c# class to perform 2d separable convolution using int to obtain better performance than double counterpartsearch to each tabs in more than one toolbartake into account that lazy mappings will be disabled so it may be useful to evaluate what will be need to be set to fetchtype.eager with fetchmode.subselect if more than 1 bag is needed to be initialized with itswing is a lightweight framework provided by java while awt relies more on native libraries and is considered heavyweightfor my webapp the integrated visual studio server cassini ist much slower than iisam i right that innodb is better for frequent concurrent updates and inserts than myisamare writers and readers faster than outputstream and inputstreamalso sending receiving data over udp is much simpler than over tcp and it does not require any connectionsi d say that firefox is correct in being stricter than google-chrome here even though i m not entirely sure the base uri has changed and this new uri should be used for the relative uri #symboltype1 toowe have a legacy application that uses hibernate 3.0.5 and we re trying to upgrade it to hibernate 3.3.2 the versioning that has less impact on the current codein some cases on embedded platforms where a fast hash function may not be available these may be more efficient than hmacthen c which is one those languages closer to the processor level is very performant and generally speaking compiled-language because they turn your code into assembly language are more performant than interpreted-languageinnodb shouldn t be much slower than myisamthat said client-side javascript is much more common and if you were using server-side javascript you would probably know the answer to your questionso here the unchecked exception-handling is better to use in order not to copy and paste all that ugly try-catch block rethrowing an exception-handling and add the throws clause to the methodso it looks like the simd implementations give a 2x or more improvement over 64bit scalar code although 256 bit simd doesn t seem to give any improvement over 128bit simd and that typical throughput should be a lot faster than 5 gb sspeaking of get request types you should also know that get requests tend to perform better than postnsstring has a higher level it also inherited form nsobject const on it should have no effect in fact not the same meaning about the no effect on immutable objectwhile it is possible to explore non-imperative computer concepts it doesn t seem to be worth the effort at the current time - building a declarative machine as an interpreter on top of an imperative machine is much cheaper and faster than a true declarative machinebecause there can be more than one pop-up dialog activethis post is more to get advises and ideas rather than solving a problemmultiplication is much faster than divisionas the versioning of the ase in the dumped database will likely be older than the versioning of ase you are installing to do the restore you will technically be doing a database upgrade so you will want to review the installation documentation regarding upgrading databasesit seems that the idea of uu-parsinglib it to be more declarative than parsec so you just have purefor example emacs s macro shortcut f3 and f4 is easier than vim s qq and qsince i am using double nested loops i think for-loop is more suitable than while in this casedecltype is significantly more versatile that auto and can always be used in place of iti understand from searching on so that setinterval is a better way to approach this that settimeout which i was using initially but i haven t figured out how to specify that the function needs to repeatstd ostringstream is much better for that kind of thingalso removing the m from a parent directory is trickier than it might seem so we need to make sure we move from the bottom of the tree the files first and not rename the directories till we re done with all the childrenthe manage link used to come up fine if there are more than one versioning for a document but since i ve upgrade to angular 1.2.0 whenever i create a new document which automatically creates one versioning for it and do subsequent edits on the same document creating more than one versioning the manage link fails to appearif you don t want to write anything on autocompletetextview and select items you have to implement the spinner is more greathowever std ostringstream is probably faster for appending if you absolutely have no idea about the size you have to reservei am confused why tcp throughput is bigger than udpso if we have a vector and want to calculate a component-wise function over it say sin and cos it is faster to use vvsincos from accelerate because it will pipeline the calculations of sin and cos for all the entries in the vector which is faster than using a for-loop over the vectoryour while loops would be better written as a for-looptestng strives to be much more configurable than junit but in the end they both work equally wellif you are curious though rather than just trusting a book or a blog post it is better to make a simple example and take it apart - you get it straight from the horse s mouth and you learn a whole lot morethe calculation language is dax which is an improvement on the horrible mdx - dax reads more like excel functionsfor formatting a single numeric value tostring is marginally more efficient than string.format because string.format has a bunch of overhead to parse the format string out of the curly braces and then pass it to tostringis post more compact than get since get requests have to be url-encodedphusion passenger 4 enterprise bring many advantages over has more features than puma and rainbows for example it has out of band garbage collection can dynamically adjust the number of processes based on traffic completely automates rolling restarts so you don t need scripting etcfirst of udp s datagram is simpler than tcp s onemy service having more than 50 get post methodsbecause spring s xml config is slightly more powerful than shiro s ini spring users are encouraged to use full spring config instead of shiro inii like ubuntu linux which has more than 27 000 packages in its universe repository. now you can run linux and windows at the same timevb.net appears much more complex then vb6 and the learning curve is toughto get a more reliable timing of the query you d need to use profiling or some other way of benchmarking that works more directly with the queryor if you know any better debugger than google-chrome or firefox please let me know becuase i can r figure out google-chrome and firefoxusually you use strsplit to break a string in parts but with substr there s an easier solution for your problemif i d directly say that udp is faster comparatively than tcp that it is used for such applicationsi think that the accessors getter and setter is far better at least in your examplemy question is why do both integer and floating-point multiplication execute faster than their addition counterpartsinstead of working around the 1 label and image you get in a uibutton it s cleaner to start from scratch with a uicontrol and create your tilesthe solutions using a public constructor are fine too but as the constructor cannot be called directly on thr interface i think protected is betteres2015 module is more efficient than the other formats and can facilitate the creation of smaller bundle size through tree-shaking technique importing just the bits you need instead of importing the whole thingif you send a udp datagram larger than the mtu it will be fragmentedthis option is better than simply copying the file as it allows you to overwrite an existing file but you still don t get direct access to the file s propertiesin google-chrome the font appears to be 1px smaller than firefox and ie and i cannot see whyif you are familiar of using junit it is easier to switch into testngnote line value may be inaccurate in adobe coldfusion though railo is much better with thisif you have setter and getter it s no better than public fieldas far as the syntax goes i guess it s a bit different from the more classic syntax of the algol family languages but it s no more and possibly less weird than apli am more familiar with apache php combo rather than say nginx and fastcgi with php setup so focusing on this areaif the dominant memory usage is program data structures then i wouldn t be at all surprised to find pypy using significantly less memory than cpython whether or not the jit was enabledi want to get all the users that has more than one post butalso firefox 4 has hardware accelerated canvas that is marginally faster than ie9 and a lot faster than google-chromeat the beginning the insert performance of innodb is almost 50 times slower than myisam and tokudb is 40 times slower than myisamthe swift designers went through a lot of trouble to make sure that it s more than just objective-c without the constraints of c in fact i almost wish they hadn t said that since it s so often misquotedmultiplication is a relatively complex operation and is likely to be slower than say addition or comparisontried cakephp but yii seems much clearerzsh is more extensible and has a much greater focus on searching and completion than bash1 in mysql engines myisam is better or innodbtheir conclusion innodb has 30 higher performance than myisam on averagechoice is not easy sometimes we use rule of thumb impala is good for queries without joins if all your data stored in hdfs hive spark has bigger latency but joins are reliable it supports more data sources and has rich non-sql processing capabilities like mllib and graphxwhen taking input we can use either get or post.the input is shown in the url when using get but not when post is used.is there a situation where get is more useful than postmy website in developing process looking in mozilla firefox with same font-size declaration margin padding and different font-families always a few smaller than in google-chrome or internet explorerxilinx tools suck but their raw silicon is better than alterai have implemented it using process library and my own java code however i m wondering can it be done in simpler way with activiti jbpm and droolsserving static files with nginx is much more efficient than with apachei think the performance depends a lot on the data provider paging and sorting and filtering the data are easily the most expensive tasks when dealing with databases - so picking a renderer gridview listview repeater is more dependent on your comfort with that particular controlscheme has fewer libraries than common lispi usually use google-chrome s developer mode which imho already gives even more details than firefoxalter your command path so that jruby s version of the ruby command has a higher priority than the mri onelemmatization should lead to better results than stemming sourcefor example jruby is faster than mri jruby 1.7 is faster than jruby 1.6 jruby 1.7 running on hotspot is faster than jruby 1.7 running on j9 jruby 1.7 running on hotspot 1.7 is faster than jruby 1.7 running on hotspot 1.6 jruby 1.7 running on hotspot 1.7 with the c2 compiler is faster than jruby 1.7 running on hotspot 1.7 with the c1 compiler and so onuse having clause to filtering the grouping which is having more than fkeyin the case of autotools it is slightly more complicated because not everybody who compiles the software would need automake and autoconf installed only those that need to change the build system adding new files counts as changing the build systemwifi and bluetooth aren t fast enough for a smooth framerate but the data transfer speed across the usb connector is more than enough up to 480 megabytes second