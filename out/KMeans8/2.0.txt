http is not the internet any more than ftp telnet or world of warcraft are the internet
in bourne-derived shells newer than ksh bash zsh you can combine the assignment and export
some people argue gcc g++ is more popular on linux while icc is more popular on windows
i understand that kerberos has better performance than ntlm
richfaces is more developed and tested generally since primefaces came out later than rf
more sophisticated distinctions between iaas paas and saas are also described in quite a few topics here on stackoverflow for instance in what is saas paas and iaas
basically mongodb supports no more than 100 levels of nesting for bson documents
server-side validation is more secure than the client-side as the user cannot see the code even he does a view-source
in my limited experience using objective-c code from swift is a more common use-case and fairly trivial
isn t testng supposed to a better than junit
is it because request response handling on wildfly is kind of more lightweight than the jboss 4.2.3
it s just a little slower than using apache bench directly against nginx
for xml documents it may be that the elementtree offered by lxml is more productive
there is another lib folder in home username directory which contains older version of pythons also
can i configure more than one hadoop cluster via ui of ambari
you might try running say apache or nginx which is even simpler to set up
the bson storage format used by mongodb supports more native types than javascript including 32-bit and 64-bit integers
i was also looking at sdl allegro sfml i didnt see much tutorials help on this but heard its better than sdl
while postgresql is less popular than mysql most of the serious web hosting supports it
maven is more of a meta-program that can use ant scripts and run your junit tests
download xcode free and learn objective-c or swift swift is easier to learn than objective-c
long-term evidence is showing that pypy runs certain python codes slower than cpython and this drawback seems to be rooted very deeply in pypy
i created a php file which deals with file deleting and uploading but i this file is one directory lower than the folder for files
to avoid misunderstandings my question is not whether web2py or django is better
edit again one completely different approach would be to use pypy s sandboxing mechanism which should be much more secure than cpython plus a sandboxing module
both use the activerecord pattern so you ll actually get your database tables back in objects without fancy domain logic but datamapper is way easier to work with and is thread-safe
the above links to libc++ which is the preferred c++ standard library for mac os x with clang and a lot more complete than libstdc++ even when considering the newest gcc
can anyone give some details about oracle hadoop connectors will it perform better than sqoop
perhaps a highly optimized and tuned implementation with sse avx multithreading is better for me
install newer emacs by homebrew or macports
on linux these syscalls are often mmap 2 perhaps with sbrk 2 and since linux systems are mostly free software you could actually study and improve the implementation of malloc musl libc implementation of malloc the more common gnu libc malloc implementation is perhaps more complex to understand
letâ s encrypt provides great scripts for apache 2 and nginx but not lighttpd which is much more comfortable for small systems like raspberry pi or old boxes
a lot of people seem to say that writing compilers and other language tools in functional languages such as ocaml and haskell is much more efficient and easier then writing them in imperative languages
2 using databasemigrations allows you to use an in-memory sqlite db for testing which is faster and more lightweight than mysql or postgresql
nginx is more performant than apache in most cases with high-levels of requests
but for a really useful explanation you d have to tell us exactly which database and library you re using and which python versionâ cpython 3.3.2 s csv module seems to be a lot faster than cpython 2.7.5 s and pypy 2.1 2.7.2 seems to be faster than cpython 2.7.5 as well but then either one also might run your code faster tooâ and so on
the reason is that maybe like in my case the xcode bot was attempting to archive with the development profiling and development profiling is much easier to debugging than 4f96f173-7ebe-4892-b283-52489de2f409
this way the upgrade rule detects older versioning and shows a custom dialog if it does
but xquery will be more than schematron and i use xquery heavily to validate xml values and i should be able to produce html reports well
poor performance from mysql has more to do with it not being smart and automatically creating an optimized plan like sql server postgresql or oracle would
you can also upgrade to django development versioning it has more versatile list_filter implementation see which can be used for providing advanced admin filters including or-queries
no problem mnt i mentioned possible compatibility between the method tried in 4.25 my solution and 4.00 your versioning but keep in mind the gap in time between these versioning is probably more than two years of upgrade and also a jump between backend databases versioning oracle 10g to oracle 11g r1.
also robocopy is better than xcopy
the only place where raphael defeats d3.js is fallback raphael supports older versions of ie where as d3.js is based on current web standards ie 9
the swift runtime is smaller than the objective-c runtime
if you want a java gui that actually looks nice well nicer than swing or awt then you want to check out swt from ibm
if you need to secure payloads that pass through multiple participants then you need something more than https ssl since https ssl only encrypts one link of the graph
listview much better than the gridview dataview in that they let you write out clean html
it seems activemq is better than rabbitmq in the sense that it is easy to set up and maintenance for cluster
not to be confused ffmpeg is more recent and libav was used in some distributions of linux
memcached has more functionality but is intended for distributed environments while apc works on single servers only
if you are looking for a more flexible build than ant or maven but at the same time utilize maven or ivy repositories you should consider gradle
i moved some .lib files from c program files x86 ibm websphere mq tools lib to c python27 libs and it compiled well
i ve also found unicorn to be faster than webrick especially in production applications and apps running on heroku
it seems simpler to me because i m more experienced with server-side than client-side development
on arm it is not or rather 32-bit os on 64bit uefi is technically possible only would still require the operating system loader to be 64bit but even fiddlier than on x86
accessing and dynamically reloading non-class resources inside jar war files is way easier
example with nunit i have better experiences with nunit than with mstest
far easier than getting mysql or postgresql installed on a system.
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn or tools based on it but svn2git which is much more suited for this use-case
part of the compiler toolchain includes an experimental jit generator now in its fifth incarnation and starting to work really well - the goal is for a jited pypy to run much faster than cpython
the advantages here are that you can block off certain methods or certain parts of couchdb using nginx apache which is typically more flexible than the http options available in couchdb
fwiw i have never gotten freebsd to work properly under virtualbox perhaps if you need that you would be better off with vmware which does
if getting these in sync is an issue make the client-side timer shorter than the server-side one
it turns out jquery datatables is better suited for customisation and we have adopted this instead of using jqgrid
postgresql is more compliant but if you re comfortable with mysql and you re using an orm you should probably use that
one camp most notably the linux kernel people thinks that struct a is clearer than the typedef
if you want to add a plugin and its versioning is higher than the core mvvmcross versioning use nuget to upgrade all mvvmcross packages before adding the plugin
the level of abstraction of datamapper is way higher than the activerecord s
uwsgi is better if you are using nginx i find nginx far better than apache personally
postgresql has a more comprehensive gis extension . mysql s is as dumb as a flapjack in flatland
also with xquery you can re-use your existing skills with xslt + xpath as the languages have a lot in common but xquery is more geared towards database access
an alternative would be firebird which is not so flexible but in my experience it is in some cases performing much better than mysql and postgresql
it looks like vim is slower than geany
i had the same problem when my pyzmq s and zmq s versioning is older versioning i upgrade the versioning to 15.2.0 then resolved the problem the ipc address prefix that i used is inproc
yes swing has newer and better api s than awt
i tried jboss too but i think glassfish is easier to use
apache is more friendly configuration wise htaccess htpasswd rewrite rules etc nginx is fast in regard to static assets
i d totally go with flask unless one dependency bottle is better than three flask jinja2 and werkzeug
i need a sip server hopefully simpler more efficient and more secure than asterisk or other full-featured pbx to just terminate sip calls and play audio based on the incoming number
also i can not use custom dimension because my piwik versioning is older and i can not upgrade it now
so my guess is the hosting provider upgrade something maybe mysql to a versioning that requires stronger passwords
i am using yii 1.1.12 and recently upgraded my php from 5.3 to 5.5 and have found that apc is no longer to be used because opcache has been made part of php5.5
as a note the su command is much older than sudo and the normal procedure before sudo was to su to root and then to another user unless you knew the passwd of that other user
jedit is still pretty good but emacs is quite better
and finally from my experience nginx is faster than apache
yii has a higher learning curve than say codeigniter and cakephp
i believe the storage formats were either jks the standard java keystore jceks a java keystore that provides much stronger protection of private keys or pkcs12
when i m in a hurry i use gedit purely because it is quicker than komodo edit
i really miss this feature on virtualbox because i find vmware to be bloated and it slows the host system down much more than virtualbox does
for next projects i m going to try redmine seems more clean and hipe than trac
i find that objective-c is much nicer for working with core audio than swift
also note that i use objective-c more than swift
lxml parser is generally faster html5lib is the most lenient one - this kind of difference would be relevant if you have a broken or non-well-formed html to parse
declarative code is easier to make bug-free than imperative code
pypy s jit can make python code execute much faster than cpython
is the assumption that codeigniter modules work in kohana or at least can be massaged to without too much effort or is it just that kohana s got fewer modules
also for my money i d create a swing gui not an awt gui as swing is much more robust and flexible
if anything i find working with svn easier and more intuitive than perforce
do any of the other common architectures like arm mips sparc etc have an easier than x86 instruction set
i am using the bash ftp command to ftp files however i have a problem where i try to create a directory that is more than 2 folder deep
although several ci tools such as teamcity have better support for nunit probably would change as mstest becomes more popular
i don t know if it s activated by default on centos but it might be considering it is on ubuntu which is less entreprise oriented
lxml is the faster parser and can handle broken html quite well html5lib comes closest to how your browser would parse broken html but is a lot slower
postgresql seem to better than mysql in terms of speed
i read in a blog article that buildr a ruby based build tool was two times faster than maven for a simple build
does anyone know if the upcoming v8 versioning is easier to upgrade or if its easier to upgrade from a certain previous versioning compared to earlier versioning
note that using the beautifulsoup parser is a lot slower than lxml s default parser
you could use beautifulsoup - but feedparser is much better geared towards rss handing
jspm is more commonly used to bring in client-side front-end libraries and npm for server-side ones
i d also recommend postgresql over mysql if you are going to have nested comments as postgresql does hierarchical querying better than mysql
note that there are plenty of python implementations other than cpython out there - for loopy code pypy tends to be much faster than cpython
if you are looking for a web framework simpler than django look at flask flask uses jinja2 as the default template engine
i always used uwsgi but realized that gunicorn is easier for simple projects like mine
the chance of receiving video streams over http is higher than rtsp rtp rtmp and so on
but if you still wish to figure out the phpbb password encryption hash it is no longer md5 in version 3.0 or higher and is a custom hash
it also allows you to redirect the stderr into the stdout which makes it easier to read
from my experience vmware 5 is faster than virtualbox 4.2 rc3 and has better smp performance
for example nginx is considered faster than apache and a nodejs application is considered faster than a php application
you don t want to use apache because nginx is better suited since nginx is built for async i o
also you should consider using nginx as server that s more flexible than apache
in fact this presentation which still refers to an older incomplete version of mysql s opengis support suggests that with proper indexing some mysql geospatial actions may actually perform better than postgresql postgis though i m sure that s up for debate
in general mysql is optimized for pkey lookups and postgresql is more generally optimized for complex use cases
also what makes nginx better than apache in this case
note i m not saying mysql s license won t work for you but postgresql is definitely simpler
if you have a full version of visual studio 2008 rather than the express edition it integrates the inbuilt mstest much better than nunit does and cruise control also supports mstest
the subversion versioning on the server is older than the versioning on my notebook so i guess my newer versioning somehow upgrade the working directories so they are incompatible with the old versioning on the development server
i have noticed that content extraction is faster in itext but searching words using regex in the content extracted by itext takes longer time than pdfbox
fyi postgresql scales better than mysql on multi-processor overlapping requests from a review i was reading a few months back sorry no link
i ve generally gone with openssl though gnutls is newer perhaps better
you have to make sure your local sql instance is exactly at the same build versioning versioning like the hosting provider otherwise your local sql may upgrade the database structure and you ll be unable to restore it back on the hosting provider or you ll be unable to restore in on your local server if your versioning is earlier than the host s
i know that sqlite in tests should be fast because it is run in-memory and all that stuff but it is just still much slower than normal postgresql mysql database
in fact nginx can use select instead of epoll if you compile it with the --with-select_module option and i bet it will still be more efficient than apache
note that lxml is probably a better option than beautifulsoup for this kind of task nowadays for the reasons given by beautifulsoup s author
if you are using a linux mac unix machine most of time i have had to either start from the root folder such as users .....to the source folder or when using a directory that is closer just use in front of it
how is aes less secure than rsa in this scenario
django is also a wonderful framework but web2py is just better in my limited experience opinion
the atom feed option seems to load faster than the rss one fwiw
may be because vvcospif it is wrapper under objective-c runtime and converting data structures copying of memory from intel simd - objective-c - swift runtime is slower then tiny cos
to show it open the command window search for user keymap and select it and then paste this if empty or edit accordingly this is the file format for versioning 0.7.2 upgrade to it before if your versioning is older
orientdb looks more fancy and advanced but not as popular as neo4j and is not supported on heroku
redmine is an open source ruby on rails application that supports multiple projects much better than trac and seems to be much easier to administer
btw for cron at jobs is better to use absolute directory pathes not relative
expression-blend has much more advanced wpf silverlight visual designer than visual studio including wysiwyg animation editor etc
with gtk it s more common to use cairo already mentioned by jeff foster
assuming you are working with 32bit x86 64bit x64 is harder to deal with you would have to either
on the project i m using bower to manage dependencies because i found that it has way more available versions than npm does
i am a beginner with python and from the hardest way to learn python i know that while loops should be avoided but rewriting to a for-loop is even slower
migrate to enterprise linux or freebsd postgres works much better on unix type systems mdash
i have worked pretty heavily with both flavors of the gwt extjs libraries though i ve spent more time with gxt recently
the alteration to swap the functionality of the page navigation of divi is done in a file titled frontend-builder-scripts.js found in the divi folder directory includes builder scripts frontend-builder-scripts.js
but drupal i believe is more powerful than wordpress and joomla
i m creating a coldfusion railo api wrapper for mailchimp s restful services v3.0
it seems to be younger than zen-cart and oscommerce
i have installed both cakephp and codeigniter and it seems that codeigniter is much smaller a little less overwhelming and documentation is clearer
as for debian being more stable than ubuntu for using as server it can be true in very rare occasions where the package is very obscure
in my experience xlib via mit-shm extension was significantly faster than sdl surfaces not sure i used sdl in the most optimal way though
from that point the servlet file actually the web server tomcat glassfish jboss etc is behaving more or less like the iis and aspx file
the amfphp library is not only faster than regular post get requests it also allows you to pass php objects into flex objects and flex to php
i ve found pdcurses which is more like the ncurses but it lacks a lot of ncurses libraries
as for me jboss implementation is smaller than the whole glassfish so i m using
according to my own experience postgresql run much faster than mysql especially handling big tables 1.4 gb lineitem table in my case
but as i understand it ntlm disallows the more secure kerberos domain credentials if they re available
mozilla has stated that they plan to deprecate add-on that depend on xul xpcom and xbl. while not all bootstrapped add-on depend on these technologies there is a tendency for for bootstrapped add-on to operate at a lower level than add-on sdk and webextension add-on
as a new newbie programmer i find that making daemons over systemd is much easier than over init.d
for the case xcode versioning is lower than ios device s image you can either copy the disk image from other already updated xcode or maybe the internet or upgrade your xcode
as it stands d3.js is not just better than raphael and processing in many cases but is also a viable replacement for jquery underscore.js and other frameworks
take a look at the jackson json parser it s faster than the one in android and faster than gson and supports streaming
either way gitolite is easier to maintain and more up-to-date than gitosis see how do programs like gitolite work
but during upgrade setup launches the older versioning setup bootstrapper ui
i have code that does the same thing but the avx version is considerably slower than the sse version
i like the idea of sqlite but i m more comfortable with postgresql mysql even ms access or oracle
i looked at gson metrics and it seems slower than jackson
versioning of php older than 5.6.0 are eol and are no longer receiving any security updates so from one professional to another i would strongly encourage you to upgrade if your versioning is older than 5.6.0
from my experience webrick is slower than mongrel is slower than thin
testng is much friendlier to this paradigm than junit though
somehow webkit seems to do better than gecko on the html5 single-page spec scripts and i can t figure out why at this point
unfortunately in postgresql select count is often slower than mysql to which it often get s compared to
wxpython is probably easier than pyqt or tkinter i don t want to start a framework war
i recommend using either my own twelvemonkeys imageio plugins supports tiff ico and adds better jpeg support but i guess you could also use apache commons imaging or other library
both systems have large suites of available software packages available freebsd is likely larger and there s a better chance something may have been ported to freebsd over solaris depending on the niche of the package of course
i haven t tried comparing the two but this pypy bug seems to suggest that multiprocessing in pypy is slower than in cpython
postgresql will always be a little bit more mature than mysql
i have searched it in google but most of the articles talk about how to use database cleaner gem with activerecord but none of them clearly specify how to use databasecleaner gem with datamapper
it seems npm 3 handles duplicate dependencies much better than old versioning of npm so delete your node_modules folder upgrade to npm 3 and the run npm i again this should solve the problem
the jruby runtime alone is already pretty heavy much heavier than mri
nginx is better suited than apache as it is light and single threaded vs apache thread per request in most normal setups
the mismatch between blackbox and module io emission is a legacy api for better integration with verilog ip where the chisel designer has little to no control over the verilog
can a nsis section create more than 1 uninstaller
assume this plugin config is in a parent pom.xml only maven super pom.xml is higher up in the hierarchy
it works fine in firefox but in google-chrome it sends more than one requests to servlet and finally there is exception in servlet and it doesn t work
django turbo gears web2py which is better for what
postgresql requires more tuning than mysql to achieve optimal performance
the vm mentioned in here is not like in vmware or virtualbox it is more like java virtual machine jvm as well as python and ruby
at home w ubuntu linux virtualbox is easier to maintain performs as well as i require and is free
troubleshooting the build maven is less reliable than ant especially the non-core plugins
but it s a lot less powerful than vim emacs
while tcl syntax looks more related to shell syntax like bash or tcsh tcl is actually more closely related to perl or php or ruby
libstdc++ does this a lot more than libc++ and the former is the default library for llvm-g++ gcc llvm the latter for clang apple llvm which means a lot of errors will seem to go away when you switch to gcc llvm or just stick with apple llvm and switch your library but your code is still wrong
what i found is that if i build the app using xcode 4.2 base sdk 5.0 deployment target ios 4.0 the size of the text in my uilabel and uitextview renders smaller by maybe 3 points or so
i read somewhere that safari has more stringent requirements on cross domain scripting - it and google-chrome share the same code base
even if jboss is the better product in my next project i will shift to glassfish because of the better documentation
you had a better chance with kohana 2.3.4 as it was derived from codeigniter and was similar
if the most-recent versioning is lower than the running app versioning run your upgrade and bump the versioning
pygobject is nothing more than a thin layer of glue making gobject gio .
i aways heart that nginx performs better than apache server
but in my include directory there is also a opencv2 folder which has more subfolders and in general more files
gson is more about json-based persistence in the vein of xstream which can do json too and sounds a bit too heavyweight for just an applet
i d like to add that couchbase is a faster and more scalable option than couchdb the 2.0 version introduces views at a high level it s a distributed memcached membase server merged with couchdb but of course more sophisticated than just mashing them together
ftp protocol is more complex than http or telnet form example
eclipse ocl provides a much stronger ui and an ocl2java code generator so that ocl embedded in ecore uml provides much more acceptable executable code
multithreading is faster takes up less resources there is no separate namespace for it and you can run them 4 times more than the fork but multithreading requires build php with non-zts some extensions do not work with non-zts and requires something you would understand pthreads model
a better bet might be to install spim and to learn mips assembly which is more straightforward than x86 anyways
for a low traffic site the huge tokens that kerberos send across the network actually makes it slower than ntlm
gcc supports built-in __int128_t and __uint128_t types on 64bit platforms but it looks like formatting support for 128bit integers is less common in libc
i would say pure actionscript is better for programming whether you use flash ide or flex ide is not that relevant and mxml is better for non-programmers to combine the components programmed in as
i think the listview is better than gridview in this situation
the question is is mysql somehow more resistant than postgresql to sql injection attack under the perl dbi and why might this be the case
nvidia is more permissive for example nvidia lets you cast wrongly ie float4 to float only making it a warning ati won t error
while mysql is more famous for serious enterprise-quality database where preserving your data is critical i recommend postgresql
a filesystems such as xfs is more suitable for this
secondly the haskell ffi is more powerful that is it does more with less code than ocaml s and more libraries are avaliable via hackage so i don t think foreign interfaces will be a deciding factor
wondering mainly if svn uses less disk space or more than the same in cvs
i find cobertura and emma to be largely interchangeable in terms of coverage checking just that cobertura has a better maven plugin and emma has a better eclipse plugin in my opinion
also it looks like when i transcode webm to mp4 2.7 is 30 faster than webm
i need to prove that git is better than cvs and svn to my team.the only thing git lack is a standard server
edit it seems junit has more printed books as references compared to testng on amazon
mysql is more than capable of serving your needs as well as alex s suggestion of postgresql
i suggest using a template engine such as freemarker for this or velocity but freemarker is better imo
with firefox it was very easy i just grabbed the apk from their ftp server run the adb install command one would think it should be even easier with google-chrome but it s really not
hardware-specific optimizations makes the code even more complex such as sse avx optimizations for x86 x64
does this make ant more complex than maven
generally i noted that jstl sql taglib is much slower than java code because it put all the result set into an hashmap
rm -rf directory also works faster for billion of files in one folder
libxml2 libxslt also come with their own much lower-level python bindings but lxml is much more straightforward and pythonic and it seems to have great performance as well
https is more flexible than ssl an application can configure the level of security it needs
note there are many more differences between zsh and bash
raphael is very much similar to d3.js but is more on thd lines of a graphics library and the added advantage of compatibility with internet explorer 6 through 8 using vml instead of svg.
just one tip if only job for the http server will be just proxying the play apps consider using some lighter option than apache for an example nginx or lighttpd you ll find sample configurations for all of them in play s documentation
if it is useful to you you are more than welcome to it note i m more familiar with vb6 vba than vb.net so this udf is more in the vba style but still works in vb.net
i know maven is more powerful than ant
so it seems like the opposite - mri 2.3 gets 2-5x slower than jruby 9.1
this would be easier with server-side php plug-in s unless the file is loaded client-side
scriptaculous can do what jquery provides plus more
i ve read that mantis contains less project management tools than redmine
i would recommend postgresql for a beginner as it has far fewer surprises than mysql
it seems like the linux method just using linefeed makes a lot more sense saves spaces and is easier to parse
no trivial support for cache accessing ram is faster than accessing disk
glassfish v3 vs jboss 7.0 in using in production environment i know more people use jboss the application server but glassfish has more features and stability over jboss
svn in much better than cvs and have lot of mature tools for every platform
- if you move towards more static content or go the fastcgi way lighttpd is faster than apache
on gnome gtk+ can be seen as more native whereas on kde qt is more native
with correct locking for safety reasons and heavy concurrent use postgresql performed better than mysql
you could do something like configure a reverse proxy for certain paths in lighttpd to go to a different port which nginx owns but this will still push all the data through lighttpd and just use more resources than having lighttpd serve it directly
verilog and vhdl allows for more optimization
note that json representation of mongodb document could exceed this limit since bson is more compact
one could use saaj soap with attachments api for java which runs at a lower level than jax-ws
conan uses a more direct and easier approach to library dependencies management than biicode supporting both binary packages as building from source
ocaml is closer to c++ because of it s imperative and oo features but i recommend you learn haskell as it is more functional more mindbending and has more resources
postgresql supports some more security features than mysql for example integration with gssapi or kerberos for logins last i checked mysql didn t have these
why nginx might be better than apache when one is long polling and why long polling is better than periodically polling a server
unless you are using the static typing feature xquery is no more strongly typed than xslt
so the solution for you would be to have static contents contents of apk like its manifest file jar file dex file res folder etc ready in a folder create a copy as a temp folder modify resources contents and not names as per user needs then finally create zip of this temp folder and sign it to have the desired .apk file no need for java complier then
vmware has more features but costs 80 virtualbox on the other hand is more basic but is free for most users see virtualbox licensing faq for details
i m in debian wheezy which is much more recent than ubuntu 10.04
my personal experience with both richfaces mixed better with other jsf libs icefaces has more advanced ajax capabilities like server sided push kinda like comet the basic ajax functionality is easier to set up and use but plays difficult sometimes when you mix it with other jsf libs
in contrast to turbogears django is more out-of-the-box
however if that upgrade includes myself say i have a package named server and part of the upgrade includes a newer versioning of server then the upgrade fails
i prefer to use beautifulsoup better than lxml
further more gson really seems to be faster than jackson json
puma also has better concurrency but that threadsafe confgi make webrick multi-thread for me
my suggestion would be to try to use a testing framework testng or junit which gives many more features than just parametrization
in php you should use metaphone it is more accurate than soundex
postgresql is better than mysql in many ways
is opencl just there to make multi processors cores just more portable meaning porting the code to either gpu or cpu or is opencl faster and more efficient
high-availability will be easier with couchbase or aerospike than with redis
seam is more powerful with jsf but not necessarily richfaces or icefaces for they mostly just extend the component set which is anyway fall down to standard html components when rendered by jsf
if you do mind using linux you can use ubuntu which is more user-friendly but not really recommended as a server at least for the default version
the cpu affinity is more like a suggestion to the kernel regarding which cpu to use
so if your document bson is larger than 16 mb mongodb throws exception
i feel postgresql is much more mature and robust than mysql
anyevent http resolved several issues i had with my program locking up and also offered better control over ssl cert validation and use of proxies including socks proxies
nginx s static file performance is better than apache
you seem to be compiling more than one hdl probably vhdl and verilog
textmate isn t known to perform well on large files but sublimetext supposedly performs better than vim on large files and yet supports legacy textmate syntax parsers
as i said postgresql is far superior and i hate mucking with mysql s bizarre bugs and i think that overall postgresql performance is probably better than mysql for any even slightly complicated query
hardware design with vhdl or verilog is more like programming nowadays
to get the html instead of hardcoding it as above use the webclient class since it has a simplier api than webrequest
entity-relationship diagram are simpler than uml diagram
in many cases emacs or vim is more productive than a huge ide that makes coffee
also i want to know if google gson is better than jackson for json parsing
compare the very active django tag on stack overflow with that of pylons or turbogears though and i d argue getting started is simply easier with django irrespective of anything to do with code
also which database syntax postgresql or mysql is closer sql mssql syntax and structure
simple function in zsh to parallelize jobs in not more than 4 subshell using lock files in tmp
| application expects grails versioning 1.3.7 but grails_home is versioning 2.1.0 - use the correct grails versioning or run grails upgrade if this grails versioning is newer than the versioning your application expects
irrlicht has a cleaner api lower system requirements and works better across platforms than ogre in my opinion
an additional bonus i find that conda works better as a package manager than virtualenv
neo4j and cypher is still faster and obviously this has no effect on the gremlin queries on neo4j but that might be just a issue with the gremlin implementation for neo4j
adding lightweight generics to your objective-c api makes it easier to interface with swift because your api gets translated more precisely
nss is more strict than either openssl or gnutls
given postgresql s reputation for doing things better than mysql or at least as good as i daresay that postgresql would demonstrate similar performance if properly used
entity sql which is not available in code first and dbcontext api - you must access it through objectcontext api is more powerful because it is not dependent on limited functionality offered by linq
to upgrade your plone site from 4.3 to 5.0 you can check this link section upgrading plone 4.x to 5.0 the migration should be more simple than older versioning like 3.x or 2.x
i am not sure if vmware server will be much better than virtualbox
probably the project has deployment target setting higher than sdk versioning you have installed - try to change it to the lower versioning that is supported on your mac or upgrade your xcode to newer versioning
now all that said...you might get more visual appeal with pygtk pyqt or wxpython though tkinter coming standard is a nice feature
drupal makes it easier for the developer to accomplish much more complex tasks than joomla or wordpress
this will work for hotfixes and it is simpler than cherry-pick your development changeset from your default branch
ocaml is faster than racket for most of the benchmarks on languages benchmark game
there seems to be a consensus that nginx serves static content faster than apache
also developing enterprise application is such new languages java c# vb.net rubby is easier that vb6 because they rely on frameworks every body can write c# java code that function but it requires tricks good practices and some of imagination to write vb6 strong and rehusable code
the only reason i was considering postgresql was that some research suggested postgresql has much better support for changing schemas along the way than mysql
i also kind of get the impression that scriptaculous drag and drop is better than jquery ui drag and drop based on the online demos
if you re just going to use vim the same way you use gedit don t bother - gedit is better than vim at being gedit
this is easier with lodash underscore.js or even with es5 array and object methods but since you asked about pure js
i presume it s why is pypy faster than cpython some of the time
easy make the pro bundle have a higher versioning than the lite bundle - upgrade only kick in when the versioning is higher
upgrade actually installs newer versioning of the packages you have
i have successfully deploy pm2 on amazon-web-services elastic beanstalk it has more than one way to achieve
actual mounting of filesystems is trickier business and really depends on what you are mounting - ntfs fat ext3 xfs nfs cifs webdav etc etc
i think lwjgl has a implementation too but the jogl one is better
the swing library is much more portable than the awt library
the compare dialog of tortoisegit is more about file and with git you have to compare two master branches not just two commits of the same branches both pointing to the same svn central repo
also on implementations like jython or ironpython could be a lot slower than with cpython
on unix like environments emacs is more native and you can use slime which is usually available as a os package or as a separate download for aquamacs
if using a decently recent version of bash or zsh it s much simpler
you ll have to use jta if you need transactional access to more than one jms session
the upgrade works correctly but if uninstall new build for example build 9 and install an old one example 3 i got an error although nothing currently installed on my machine this versioning is older than installed one
oracle s other application server weblogic still doesn t even fully support java ee 7 - both they and ibm seem to have similar strategies of maintaining stability in their full-fat releases while being more bleeding edge with glassfish for oracle and the liberty profile for ibm s websphere
i m working with both ubuntu mac but i like staying with the linux system feels faster and more stable for me
i did a simple performance test and i noticed postgresql is slower than mysql
is there a specialized commandline tool to resize the images in a more efficient way than imagemagick or graphicsmagick
i m significantly more comfortable with apache but learning to use nginx has been pretty exciting or as exciting as learning to configure a new webserver can be
application expects grails versioning 1.1.1 but grails_home is versioning 1.2.0 - use the correct grails versioning or run grails upgrade if this grails versioning is newer than the versioning your application expects
because webclient is higher class of httpwebrequest and its slower
nexus looks better choice than artifactory because of using filesystem instead of database to keep repository
to protect your user s passwords you need to do better than md5 hash the passwords
however people often argue that postgresql is cleaner and easier to use that mysql
maven is more like a replacement for ant
if you re unsure which version you have or you are targeting a version earlier than air sdk 3.2 you can download the latest air sdk pre-merged with flex sdk from adobe s gaming site download the adobeâ airâ sdk save it to disk and link its location to flashdevelop
postgresql is picky pickier than mysql -- all fields in the select list when using distinct must be present in the order_by and group_by clauses
upgrade solr to a newer versioning seems have sort this problem likely newer versioning has a better heap memory management
i second macports it is more up to date than fink and closer to the freebsd ports system where i come from
in my personal openion mysql is slower than postgresql and mongo db
2 that code appears to be less secure than the bsd solaris versions since it doesn t take into account the saved setid bits
delphi users might want to look at free pascal s paralel implementation of libchm since a pascal solution makes it easier embeddable
i tried to do it in server s pom.xml file and i set the impl module to provided scope so the jar file is not longer contained in war but now the tests are failing as after unpacking the war file used for running the tests does not contain the impl jar file which is required for that
but i don t know anything about sinatra and padrino is the footprint and speed really that better than ruby-on-rails
its just a name they choosed it because odoo provides more than openerp for example web site modules
i was also going to recommend nginx + fastcgi as i prefer nginx to lighttpd it s better mantained or at least that s been my perception the last few years
for other databases like mysql and postgresql there is simpler solution
but if you want a full-fledged java ee 6 server then glassfish 3 or jboss 6 is a better alternative
if the apps versioning number is bigger it s an upgrade and you now need to save that as the last installer versioning
however if i d built a new site with a cms on java i d probably go with magnolia cms because the documentation and community is more mature despite that it s newer than opencms
internet telephony is a lot more than sip - rtp rtcp sdp on-device audio handling etc.
i also know there is nginx and haproxy although i have never used either of them and have a lot more experience with apache
however linux pretend i said ubuntu is even better environment for ruby on rails development and it installs great in vm
from my pov the object pascal paradigm used with fpc object pascal dialect which can coexist with the default object pascal code is more advanced lightweight and integrated than the interface-based plumbing of delphi xe2 compiler with on-the-fly marshalling using rtti
lxml is supposed to be much faster and efficient and can do much more than beautifulsoup
it is great if you want to use git as frontend for an existing svn server but for a one-time conversion you should not use git-svn but svn2git which is much more suited for this use-case
richfaces has better ajax support than icefaces
but when i used iperf on two linux machines to send data using both udp and tcp i found that tcp performs better than udp for 10mb of data
64bit amd and later intel machines run faster than 32-bit x86 machines because when amd designed the new instruction set they added more cpu registers and made sse math the default
mongodb supports no more than 100 levels of nesting for bson
you are mixing libraries and levels of libraries jogl and lwjgl are both pretty thin wrappers around opengl iirc lwjgl has more wrappers for openal audio
i find setinterval is a little cleaner than chaining settimeout calls
cpython runs on more architectures than pypy and has been successfully adapted to run in embedded architectures in ways that may be impractical for pypy
postgresql is stricter to the sql standard than mysql is
vbscript is much more convenient than creating an activex on vb6 or c# vb.net
on top of that fink gives you access to more packages than macports
fifth many-to-one is much easier to use correctly in nhibernate and i assume hibernate than one-to-many collection mapping
yes i know ftp is better than telnet but right now i m stuck with telnet
further than that i wouldn t use apache at all if i needed to optimize things nginx is much better as a server it s even faster than node.js for serving static files for example
i want my permalinks to be accessable via more than one slug
you likely aren t using appropriate plugin and would do better with droppable and draggable
with these options jruby on rails gives about the same or better performance than mri
nginx works great by itself and will likely be much faster than apache
but when is fork and clone better than pthreads
it seems that zsh is more configurable than bash but also more complicated
one framework that tries to do more in the template while remaining less bloated than jsf which isn t that hard anyway is apache tapestry
i have made an app similar to yours for android we use boofcv whose surf is much faster than opencv
for example nunit offers more assert methods than mstest
if you want to use something in front of it though i suggest you use something like nginx better than apache since nginx is also asynchronous like node and it s performs really well at serving static files
also symfony on windows with xampp will run much slower than on linux ubuntu system
while mysql has a larger user base postgresql is gaining more an more popularity ever since implementing several crucial features that were missing in earlier versions
most importantly for your image processing app the compiler will optimize swift code to run faster than objective-c
ivy but gradle does it better
using a virtual machine such as vmware or virtualbox makes this easier
both commands works in the same way only difference is yum list installed output maybe bigger than rpm -qa because yum will show package dependencies also in its output
directx is way faster than gdi
swift is lot smarter than objective-c about singleton class
mbunit has compatible syntax with nunit but has more features especially data driven tests
after you upgrade the application such that the versioning number in the app is higher than the versioning number in the database on disk the sqlitehelper code notices and calls the +onupgrade + method with the old and new versioning numbers
centos is more consistent and reliable because it is enterprise while ubuntu is geared towards desktops and personal computers
if your default audio subsystem is pulseaudio common for fedora ubuntu debian it is better to properly recompile pyaudio and underlying c library portaudio with pulseaudio support only without jack and other subsystems
if you use svn then it still okay because svn handles binary files much better than cvs
in your case postgresql may be a better option than mysql because your query is going to likely be against secondary indexes
we updated freetype in osx 10.6.5 and fontconfig which links against freetype wants this newer version
lxml is much faster than beautifulsoup and probably the fastest parser available for python
innodb table is a bit slower than myisam tables but i don t think it is a major problem as you told you are using drupal system is that a kind of mult-sites like a word-press system
and looks like your php versioning is less then 5.5 so upgrade your php versioning 5.5 and it will work
i have to say that this combination is much better than aptana radrails 2 or aptana 3 for developing ruby on rails apps
therefore serving and caching images from nginx or apache still seems the better choice
for example i ve noticed nvidia s glsl compiler is a little more picky than ati s and rejects some shader code that otherwise works fine
the use of a presenter is closer to mvp and gets away from the dependency injection model advocated by apple mvc
apache activemq which is way more popular than qpid or rabbitmq - or indeed any jms provider would work just fine
the first one can be solved by using svn +ssh which is the more comparable format as cvs uses its own protocol as well
yesterday i needed to reboot production server on debian 6 with more than 3-y uptime and 3rd party configured billing system on it
the advantage with sphinx is easier integration with mysql and postgresql however lucene is more feature-rich
swing will save your more time than awt as all the code of components of swing are purely written in java whereas of awt code of components are written in native language that is other than java thus compilation time of awt is more than swing
the query optimizer in postgresql is more advanced than in mysql and copes with complicated statements much better especially when it comes to sub-selects
alternatively you could seek out a user-agent parsing library which turns the string into something more useful such as google-chrome windows or safari iphone in which case you could reasonably use a shorter varchar value
thanks to opencv i managed to rewrite everything with wxpython which i know better than pygtk
64bit code is not actually faster it is usually a bit slower than x86 code
the eclipse builder uses simpler logic than maven so sometimes the things m2e does are just not enough
the answer is simple here - pickle on pypy is slower because it s implemeneted in pure python as opposed to c in cpython
postgresql is older than mysql so it might have influenced them
if your application is self-sufficient i would recommend going for tomcat as jboss is much more resource intensive as well as weblogic moreover weblogic costs some money
datamapper is potentially more complex then activerecord but it s a lot easier to develop your domain model and database asynchronous then with activerecord
activerecord is much simpler then a datamapper but also much more limited
subjective phpunit provides much nicer code coverage reports than simpletest
if you have the money ericgorr is right perforce is much nicer to work with then svn
xfce runs much smaller than gnome and is full featured
none of the .net libraries are there and there are some syntax differences as vb.net is more strict than vb6 is
testing and support of ant code is quite expensive and integration with maven adds even more complexity
generally the performance of hard filesystems like ntfs is better than that of traditional unix filesystems
also take a look at silex as this has lower overhead than symfony and works with symfony forms
lxml uses libxml2 and provides a nicer interface the elementtree so you get most of the benefit of libxml2 s speed and all of the benefit of it s xpath evaluation
nginx also happens to be better than apache at writing logfiles interestingly
if you are looking for location based queries in relational databases postgresql is more matured compared to mysql
i like the idea of the of editing inside the terminal and like the key bindings of vim but the text highlighting in my vim is much worse than in textmate
raphael supports older versions of ie whereas d3.js is based on current web standards
current task looks like flask is ok for it since it is smaller and simplier than django
ghostscript and imagemagick convert should also be able to do this for you although libtiff is supposedly quicker
if you want to upgrade dependencies major versioning it s more trickier
use clutter which is much more suited to animation and integrates with gtk
i use rspec and capybara together but the language syntax of capybara makes more sense is semantic as rspec when testing for request expectations
in codeigniter and zend-framework which is the better option
if you want to bind data to gridview datalist datalist controls then better option you should use datatable dataset or you can use list ex list
actually it is much better than soapui because with jmeter you can easily read the data from csv and parameterize it
my target is wildfly but glassfish documentation is better so i figured i would start there
while you can munge together a solution with ant maven is a better solution for managing dependencies than ant
i recommend you to use nginx as an reverse proxy since the configuration is easier and the performance is much better than apache
junit is older and have more extensions dbunit cactus etc
it is slower than nginx because apache with the event mpm is very roughly equivalent to an event-driven http proxy nginx varnish haproxy in front of apache with the worker mpm
i would like to find better solution than serializable and deserialization
i suggest that you to move jmock which has a better api or even to mockito whose protocol is even simpler
it certainly looks nicer and has better usability than mantis or bugzilla but it s not open and it makes some tradeoffs for a simpler interface
when you install a msi with abovementioned settings msi will check if any other product installed with same upgrade code if it finds a product then it will check if the new installation has a higher versioning
phpunit is more popular and up to date as simpletest hasn t had a new release for some time though for testing webforms it s still very useful as phpunit does not have good support for that
if you are interested in more verbose javascript utilities for arrays objects and more check out lodash or underscore.js
gitosis which is obsolete for a few years now gitolite is much richer works with bare repos repos without a working tree
when i try to access reporting services via the broswer such as google-chrome or firefox it prompts me for username password in which i do enter but then it gives me an error
mayavi makes it easier to visualize the data but matplotlib looks more professional
explain in postgresql is way more useful than in mysql
although lxml has better documentation better xpath support and better code for technical reasons i cannot use lxml so i am forced to use elementtree
for simple time aggregation influxdb has shown much better results than postgresql and mysql in the order of ten times faster to respond
also i would recommend doing a dual boot to ubuntu it s much easier to work with opencl in a linux cli fashion
do you find rails with postgresql is slower than mysql knowing that it produce more query on the background
perhaps write a config file for them bower.json for bower and package.json for npm that makes things cleaner and you can ensure installation by running npm install
i have used a lot more than 10 linux distributions and i now stick to opensuse
apache is more flexable then nginx but it comes with a high price in performance
another post outlines some more details on this how to get master-master replication with subversion
you do want to upgrade no further than versioning 2.1.6 at the moment as it s the latest one that supports rails 2.3.x
one might want to define kerberos access to more than one ldap server
since ubuntu 10.10 is newer than debian squeeze if you can do it on squeeze you can certainly do it on ubuntu
with swift the code is much more readable than with objective-c
i would however argue that ubuntu or centos is a better option when it comes to server installations
it uses less resources than unicorn but has more requirements to your code it better be thread-safe because puma is a threaded server
i also personally believe that postgresql has better handling of complex queries that include sub-selects and the like which most mysql users used to avoid
i already create the xml for some beans inside the larger bean with xstream and append them as elements to the jdom
postgresql is way better than mysql in nearly every respect
also i believe the ironruby team is smaller than the ironpython team
what s bad about this is that when microsoft were designing asp.net mvc they opted for declarative validation logic using data annotations instead of imperative which is much better suited to validation scenarios and can handle just anything
if the code is to be distributed consider compiling that java class with a target jvm versioning that is somewhat earlier than the latest â otherwise some users will be forced to upgrade their jvm to run your software and some of those won t have admin rights to do that.
if you have a newer processor with sse or avx extensions then ensure that the compiler is compiling to use these features usually this is done automatically when you set optimizations
i ve learned partly by trawling this site that the google-chrome security is fussier and the app loads correctly without errors in firefox and ie but i can t find any resources that are loaded from a non https source
all in all t4 to me is more of a inside vs code-generation tool to quickly create c# or other files while xslt is more of a data-processing data-transformation tool to turn data from xml into another format typically html or pdf using xsl-fo
if you re going to stick with maven and want a plugin for maven that will do the code-coverage job i think cobertura is a better choice as emma stable last build is from 2005
having nginx in front of apache is a better set up in my opinion
objective-c print is more readable compared to swift
maven is higher level than make makefile the classic c c++ build tool or ant build.xml
while leaflet aims to be more lightweight than openlayers openlayers is by far the more mature proj
does that mean perhaps rails team favor postgresql slightly more than mysql
it s called web audio api and is currently a draft but is well supported by webkit you ll need to use prefixes and a little less by gecko
tftp is used because it uses udp which is simpler and had a smaller footprint than a full tcp-based ftp server
note the show hide effect is much softer because of the commented fadein fadeout declarations that were triggering console errors probably because jsfiddle uses jquery slim now
16 cores apache would scale better than nginx while nginx would process more client requests
i have worked on codeigniter but yii is far more ahead of that
i think it mostly depends on the interprter engine in browser which responsible for interpreting th scripts which server sends to your browser and another thing about firefox as you have mentioned the extension in firefox is also responsible for it and another thing which i think matters a lot the developement of the browser as you can see google-chrome has same ui on all windows linux mac since it is mostly written in java so it requires jvm to run hence it is slow as compared to firefox which is written separately for each os using the respective oss apis hence it is fast since it directly interacts with os than interacting with jvm which in turn interacts with os like in case of chrome.still google-chrome is faster in incognito mode because of its intelligence to keep frequently data cached if you ll see the temporary files created by google-chrome they are huge in size as compared to that of firefox
like remove the jar s from your war in case the version of your jar is same or lower than that of jboss s or replace the jar s of jboss and remove that jar s from your war in case the version of your jar is higher than that of jboss s
kmz loads much quicker than gpx and can be integrated with the google maps api as a kml layer
it seems to be common wisdom that if you are deploying django on an apache server then you should still put an nginx server in front of the application to serve static files at which nginx is more performant
eclipse compiler for java jdt ecj is much smarter tool than actual javac
my rails app is coded in jquery but for file uploading i ve yet to find anything better than fancyupload better imho than uploadify or swfupload
always use tls which is ssl which is https more or less
nb weka contains its own implementation - smo but it also provides wrapper for libsvm and libsvm runs faster than smo note that it requires installed libsvm see docs
it s much easier with a shapefile than a geojson as shapefile are much more common in gis software
twip for parameterized testing the junit stuff isn t the greatest in fact testng does this better as well -
you might have better luck with a repeater a datalist or a datagrid
jsf is a web ui framework whereas seam is a more general web application framework that integrates not just jsf but conversational contexts workflow jbpm and object persistance preferably ejb3
in linux the git-core debian package is much smaller and the process is much quickier
as objective-c is the older programming language for ios or macos applications swift allows you to use those classes structs in your code
if i am parsing an rss feed with php and xml how can i parse more than one feed using one fopen statement
gson 1.6 now includes a low-level streaming api and a new parser which is actually faster than jackson
note that in any case for increased security and fast static file css js delivery you might want to add a reverse proxy layer nginx usually provides better performance but apache works as well before the nodejs python server
virtualbox no vmware because virtualbox is more user friendly
the answer is simple so that you don t upgrade to a versioning newer than the versioning in wheezy by accident
and web2py is more lightweight than django rails whatever on pretty much all counts
pd note that firefox s developer tools are better and more complete than google-chrome developer tools but in essence are for the same purpose
ps again i am aware that relying on client-side script is way less secure compared with handling all execution from within the server-side
if you have recently upgrade to a versioning of apache greater than versioning 2.2 the authz_core error error might be coming from your httpd.conf or httpd-vhosts.conf file in the tags
bazaar is easier to extend in an api way git is easier to extend in a unix way pipes
well for that you ll need jsf that is better integrated with seam and jsf does not handle file uploads that actually everyone use so you have to put also icefaces that actually are better managed by maven that you currenty are not using... neverending story
but my directory structure is more organized its more like app lib mypackage folder
to answer klochner both seems quite popular but ruby is not a language that i am familiar with and django seems more heavy and complex to me than web2py
i believe that ubuntu is better than centos when it comes to mono as it is much easier to setup and seems to be better supported
microsoft s free application for stress-testing wcat is underpowered and buggy but the full blown test edition goes up against products like loadrunner but is easier to use better-integrated with vs asp.net and for much less money per virtual user
so you can do a django redirect_to urlconf entry but you d be better off with an apache or nginx or insert-your-webserver-here redirect so the initial request never has to hit django at all
since the upgrade or mac clients can no longer connect through safari and firefox is no longer accepting the about config setting of network.automatic-ntlm-auth.trusted-uris
beautifulsoup is more forgiving in terms of well-formed xml structure see i had to edit the xml a bit to make things work for elementtree and it s actually much easier to work with
for python there is a pypy project which it includes jit making possible the code to run faster than in cpython in many cases
datamapper is much smarter then activerecord
he says he uses debian and is less familiar with centos and so i am posting here
hbase is schema less and from hbase you can create impala or hive external tables
i ve also found scheme ides much more user-friendly than lisp s plt scheme is a good one
gitolite is far more advanced than gitosis and is quite easy to install directly from your workstation based on ssh communication with your git repository server
anyway the most important issue is that web2py is easier than django pylons php and rails
from how i understand it postgresql is a more correct database implementation while mysql is less correct less compliant but faster
xhtml has a stronger syntax than html and is easier to convert to apache-fop this way
mysql is more permissive and allows the non-standard use of distinct but postgresql throws an error
wikipedia defines web services as a software system designed to support interoperable machine-to-machine interaction over a network. as implementation they are more complex than rss feed and are usually used to integrate business applications like connecting an erp with a crm system
llvm compiles code faster than gcc may create code that runs faster and the clang frontend provides more accurate error messages than gcc â so there are definitely reasons for switching
i ve used python on windows and on ubuntu and linux is much cleaner
it is also usable from emacs and vim but this time the emacs interface seems more polished
triggers in postgresql have a syntax a bit more complex than mysql because they execute procedures as the action
swt became slower than swing because it uses proxy to os widgets
2 integration would be easier with jboss eap support from eap 5 or wildfly however if you don t need any java ee technologies i would go with more lightweight server like tomcat or jetty
but changing the chmod maybe even working with umask is better than dealing with root-access and using chown
btw this is not essential for this solution for windows 7 and 10 xcopy is superseded by robocopy which is much more performant and powerful
even if you re on linux it s much easier to get a precompiled version sudo apt install r-cran-rgl on ubuntu if you have the appropriate cran repositories set up
i m trying to create a template in velocity since i have more knoledge than freemarker
for me apache is easier to use but i prefer nginx as it is much faster
that is for symfony so not sure if silex has some better sugar
anyway i just prefer not to use it because gecko is slower then webkit
use httpwebrequest instead of webclient it s just more robust
it is much more efficient than gridview listview for complex layouts
also datamapper is much more ruby syntax friendy and features like lazy loading when doing chainable conditions like activerecord in rails 3 are there from the beginning
scylla a cassandra clone which is generally more efficient than cassandra also has similar issues with huge partitions as in cassandra moderately large partitions are fine but these issues are actively being worked on including re-designing the file format so eventually scylla should support arbitrary-sized partitions
we started with ehcache terracotta server array cause it s well-known backed by terracotta and has bigger community support than hazelcast
on centos dnf install zint ubuntu takes more work
i would go with kohana over symfony because kohana is much easier to understand out of the box and doesn t require any special setup to work with
but one below query which was editable in ms access versioning before back-end upgrade is no more allowing edits
haskell has higher level bindings to llvm than ocaml the haskell ones provide some interesting type safety guarantees and haskell has by far more libraries to use 1700 packages on making it easier to glue together components
i generally use mongodb because it returns queries in json format integrates well with angular.js and its bson format is much faster than json
use firefox network in development tools and check your requests sometimes it just sends options request in cross origin i insist on firefox because it s network tool is much more detailed than google-chrome and safari
however bash has useful interactive features dash does not zsh is still better imho
bower packages are simpler than npm equivalents and don t have subfolders with module dependencies
why postgresql is more capable than others mysql etc. on django
if you overwrite the env versioning the rake db migrate will go downgrade rather than upgrade if versioning is smaller than last known versioning in db schema so please check and avoid similar environment variable
if there is a junit extension or similar framework that provides a better solution than testng then please let me know
gridfs is not a server-side feature but rather a convention on how files larger than the bson document size limit of 16 mb can be stored in mongodb
i read that nginx is faster than apache and i want to try it with some of the projects and leave the others with apache
my requirement is i need to upgrade the existing versioning currently installed versioning on the computer of the application if and only if the new application s versioning is higher than the existing versioning
reference from here link for ntp commands as i am more familiar with ubuntu debian based commands
while celementtree is fast the world standard lxml library which also implements the elementtree is faster still
testng is more flexible than junit and have multiple advantages like support for parallel testing for example
one of the primary distinction betweeen vi vim and emacs is emacs is designed and supposed to be run at times without quitting where as given the quick load time of vim it is easier to quit and start for editing tasks
i feel like using scripts ant maven is more natural for this task whereas java needs to work hard to read all the files folders to heap and write them to another folder
ibm makes it easier for those who can t afford websphere application developer or rational application developer which are both eclipse flavour to use eclipse
i know i can do a client-side redirect with html but i understand that the server-side redirect is nicer
this will be made less onerous by ruby-on-rails 3 which is intended to be orm agnostic after the merge with merb
it is a great tool if you want to use git as a frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case
swift is more strictly typed than objective-c
if you select a versioning that is greater than the compatible versioning the file may be upgrade
saxon-ee supports streaming of large xml documents using xslt or xquery streaming is better supported in xslt than in xquery
if you have six versioning less than 1.10 upgrade it
before do git pull and git push it s better to make sure that git status result is contain text working directory clean
is swt faster than swing
as an added benefit nginx can also serve static files much faster than apache and nginx also uses much less ram and can handle much more connections
i ve had to replace lyebox with colorbox which is much faster and seemingly has less problems conflicting with other scripts lightbox fancybox and others wouldn t work for me
converting to maven requires more work -- afaik there is no official tool or wizard that allows you to generate a full pom.xml configuration from an existing eclipse project
i d recommend datamapper for orm not only it s way faster than activerecord but it s also very modularly built and plugins are actual gems that you can easily install
i know tcp is better to send file but i have a homework about sending file via udp protocol
not sure if it ll work any better than junit but there is testng
hash password by using security salt is more secure than plain text password
is postgresql a better option than mysql for partitioning tables by date
i am getting a problem using printf and fgets as in my code printf is written earlier then fget but it does not run it runs after fgets runs
it s easy much easier than installing freebsd or god forbid opensolaris pretty straightforward and the perl and python will be 64 bits out of the box and part of default installation
i don t know why arch linux is slower than ubuntu on your machine
in fact svn does stores binaries a lot more efficient than cvs for more info see the svn-faq
other posts which reference this error message seem to think it s a problem with not having an upgrade versioning of virtualenv but its versioning is higher than the troublesome versioning
probably webm will load faster than standard mp4 but i am not so familiar with webm format
it is possible for swift to be faster than pure objective-c in things that you would traditionally use c or c++ for anyway
basically - httplib is lower level while urllib is high-level
java has build-in support for work with pkcs#12 keystore work with this containers doesn t much differ than standart jks keystore
i use objective-c more than swift
good options are llvm libc++ static library fewer features more compatible with clang and gnu stl static library more features i had an issue that required me to turn the clang optimizer to -oz to prevent a segfault
instead you can support more than the jks and try the default keystore type and if it fails try the #pkcs12
also changing your imagemagick install from a 16bit one to a 8bit may improve speed as i belive that is one reason graphicsmagick is faster
as for whether to use xslt or xquery the proof is in the pudding xslt is better at transforms and xquery is better at queries
in kohana for example also codeigniter but kohana is more flexible you can build internal requests with
i managed to use andlinux + wine to get this working but honestly i think the vmware virtual pc virtualbox route is simpler
i personally use codeigniter which probably falls in to the heavy framework category but is at least much lighter than cakephp and lighter than zend too i think
however there is a desktop application framework called griffon that uses the same language as grails groovy which should be easier than using swing or swt
imho cmder is better in windows than cygwin to work with unix commands
ant pre-dates more modern tools like maven and gradle that have this feature baked in
lxml is significantly more powerful and robust than beautifulsoup in my experienced opinion
scalacheck s api is also a bit richer than quickcheck s api
you may want to use junit in the part of unit testing but testng is more than a unite testing framework
git and mercurial both handle this more easily that you re imagining and easier than say svn or cvs do
a quick googling says that apc is 5 times faster than memcached
it seems ironpython is just slower than cpython for reading text files
the authors of redmine are trying to create a better trac than trac
grails upgrade if this grails versioning is newer than the versioning your
finally sha1 hash are safer than md5 i tell you that because you used the md5 tag in your post
running pear -v gives me versioning 1.7.2 when i run pear upgrade pear it says my versioning is newer than the current noe which is 1.9.0 if ran pear upgrade -f pear to force an upgrade it downloads the files and installs successfully but i still have versioning 1.7.2 and cannot install phpunit
jboss has a larger community than glassfish
also nginx uses a lot less memory than apache
for more complex xml reading writing you better check xerces which is heavier than tinyxml
apache is more popular and has more features nginx is smaller and faster and has less features
i now think the combination of emacs and vim is better than either alternative
push log files to a central location ftp is faster than smb the windows ftp command can be automated with -s scriptfile
in short as an authentication protocol kerberos is far more secure out of the box is de-centralized and will put less load on your directory authentication servers than ldap will
it is similar to incron however config uses a simpler to read ini file instead of a plain text file
he concludes that nunit wins for unit testing but mstest has much better abilities for integration based testing and team testing with team system
you can do this with beautifulsoup s html parser though the lxml.html package is somewhat more straightforward
looks like postgresql is a little more compliant than mysql so try this instead
consider taking a look at splinter which is a simpler webdriver api than selenium
is there a way to do this in an easier fashion with httplib or urllib
nginx or lighttpd in fastcgi mode use less ram than apache and they can handle more concurrent connections
there are many more out there magento oscommerce zen etc.
i used soundcloud api and sdk and it is better than the grooveshark api which till now i don t know how to embed songs and use my own player anyways soundcloud is good just try it goodluck
i have directory with many folder each mail folder has more folder into
two words of warning against wxpython it is not possible to install it via the popular fink package manager on mac os x currently which makes it far less portable than pyqt and tkinter
that said modifier keys are important in vim even if less than in emacs
charles has a much better ui than fiddler
however my experience is that configuring it in apache is significantly more complex than configuring it in nginx and even with worker it still is not quite as efficient with nginx
lxml also has more features and offers beautifulsoup too
also using a separate httpwebrequest or webclient gives you more control over proxies handling redirection authentication etc
i guess that the maven version contains much more than the ant version
the reason for using lxml for such a task is that it cleans html files better than beautifulsoup do
we are having an issue with uploading ipa files to our mdm solution when there is more than one info.plist present in the ipa file
swift seems to be less dynamic than objective-c in these stuffs
according to this benchmark nginx is a little bit better than lighttpd for serving bigger static contents so nginx would be a good choice for static flv video contents
pyquery uses the css selector syntax familiar from jquery which i find more intuitive than beautifulsoup s
you might want to use r markdown and knitr which is easier than using latex and r as also zhaoy suggested
the problem is that the dropbox folder is no longer in my user directory so r cannot find the directory.
just a tip but from personal experience i ve found that freebsd works much better on low-end hardware than a modern linux distro does
same passenger + mri 2.3.0 is 3 times faster than puma + jruby on same rack app
when the user wants to check for an upgrade download the version-file if the currently installed versioning is smaller than the most recent one then download the apk and install it
postgresql is worth learning and much more advanced than mysql
an earlier than versioning clause in conflicts prevents dpkg from upgrading or installing the package which declares such a conflict until the upgrade or removal of the conflicted-with package has been completed which is a strong restriction
specifically it makes it possible to write objective-c code that plays nicely with swift which is more strongly typed than objective-c
i want to do this in tcsh i know bash is better to use but i have to use tcsh
last version on ibm s website is from 2008 redhat enterprise 5.2 and fedora 9 - has anyone an experience running this ibm sdk on fedora 13 or at least any version higher than stated fedora 9 and is linux available of sufficient testing
stderr is better than stdout for errors for a couple of reasons
i am not certain if xcopy or robocopy is the best solution for this but coming from server administration i am more familiar with robocopy
postgresql is much better suited for data warehousing compared to mysql
if your curl is older than that versioning then you need to upgrade
mongodb is fun to toy with and i ve built a few apps using it myself for that reason but it s almost never a better choice than postgresql mysql sql server etc
vba is in fact a superset of vb6 not a subset -- vba has more functionality built in than vb6 itself
other databases where it was about the same for a transactional database as oracle sql server where were better than mysql postgresql etc
i was told that postgresql is a better choice than mysql for displaying hierarchical data so i installed postgresql and i m ready to go
you can write a simple test script to verify this but using test unit rspec or minitest is even better
is html better than odf as a templating markup for generating emails letters documentation for rtf pdf
i have done it by using ogg files instead of using mp3 files in my application ogg files consumes less amount of memory
consider umbraco its architecture is definitely better than dotnetnuke s
for example pyqt is already available for python 3 as well as 2 and you can use postgresql a splendid open-source sql database engine much more standard than mysql via py-postgresql
swift is stricter about runtime type correctness than objective-c so duck typing alone is not enough
if the currently installed versioning is older than the updated versioning then you could display a please visit the store to upgrade type message instead of the main app ui
so a question for those who know better is datamapper newer than activerecord
the syntax for nginx configuration is different but more clean than apache
minitest or rspec is more or less global to your test suite in that all of your specs will be written using that same framework
fltk is really a full-blown gui toolkit though rather small as gui toolkits go that has a built-in glut emulation that at least the last time i played with it seemed considerably better implemented than glut itself
but if the use of mongodb is a must then i suggest that you reconsider using django in the first place because mongodb has a better integration with flask through mongoengine
however ico files if stored properly are not significantly larger than png files because since windows vista ico files can store png
if you are using anaconda conda is a better alternative to virtualenv as it manages conda packages which are not limited to just python packages
you should see impala as sql on hdfs while hive is more sql on hadoop
in other words serving static files from django will have worse performance than using apache or nginx
i guess rsa is older and dsa is newer
web2py may be young but the mailing list has 2000 messages month which is similar to django and far more than turbogears
due to that swt looks more native than awt swing
if you re doing non-unit testing testng might be a better option than junit
i m working in a spring mvc project and i want to use a template engine i originally choose apache velocity because a slideshare presentation that says it was two times faster than thymeleaf page 41 and since i m working with big tables i need to use a fast template engine does apache velocity supports html5 if not is there other template engine that supports html5 that is not thymeleaf
cassini was much better than iis express but doesn t properly support the integrated pipeline
...i suggest doing all of the scripting from within the vbscript file and avoiding the use of .cmd .bat files completely if you can as vbscript is much more readable and powerful though i prefer using the jscript language instead but that s just me
i ve noticed however that jruby is more sensitive to memory leaks than mri
it s not true unit testing however it does run much faster than mysql or postgresql
devise is mostly used for authentication but cancan is better to deal with user privileges
nunit has better support for parameterized tests than mstest
i d have said that postgresql is more security aware than mysql supporting roles more authentication methods ... but that the database itself has generally a very limited impact on the security of an application
ext4 is a reasonably mature modern filesystems while xfs is older but still quite reliable
if for some reason you want to use an implementation that does not give you a full parse tree then i would suggest parsing the resulting html using lxml a python wrapper of the c lib or html5lib pure python both of which can return an elementtree object and are much faster especially lxml and more forgiving of invalid html especially html5lib which acts more like real browsers in the real world
i think you ll find that your team will like either trac or redmine more than bugzilla or mantis
and postgresql has fewer experienced administrators than the big databases and mysql which i believe contributes to the reputation
overall kohana is more flexible than codeigniter and a great base to build a web application and api on
and a wiki for why postgresql is better than mysql
i like that ini is more for config purposes but with todays interest in json it seems more logical for the config be designed with json in mind
you can use python ncurses it s a part of standard library on nix systems or you can use urwid that is a higher level library for creating console interfaces
so latest codeigniter 2.0 is better than yii according to this benchmarks
while objective-c was good at dynamic type inspection swift is much better of you allow the compiler to do the type checking at compile time
i mean it came as a surprise to me that drupal is so much faster than wordpress and joomla
i am using postgresql before which i tried mysql mysql is even worse
i have configured tomcat with apache web server in past and never slowness problem before and practically speaking nginx is said to much lighter and faster than apache web server
in production it is much better to use a more sophisticated server like phusion passenger or unicorn since they have better performance than thin mongrel or webrick
so simply httpwebrequest is better option then webclient
hi everyone i need help with this i ve already set up nginx + php and it works great faster than apache my problem is how to setup a multiple projects in one ip
cakephp is considered slower than codeigniter but you can tweak it to enhance speed
microsoft has the microsoft speech api sapi however if you want simple ivr it is better not to reinvent the wheel and customize an asterisk implementation which i guess falls under the great ivr library for c++ category it s c not c++ but if you know c++ you should be able to understand the c . using asterisknow you may not even need to write any custom code it may do what you want already
phusion passenger is the de facto apache mod and yes it s better than webrick which is really only good for tiny sites or testing
if i enable this then any setup is ran every time it will be asking for upgrade either it is on lower versioning over higher versioning or higher versioning over lower versioning
since i have seen many reports of the macports package manager being less reliable than the fink package manager i would suggest installing fink and then simply doing
now i want to work on this read-only also i have better experience with bazaar than svn so i want to change this repository from svn to a bazaar repository for working locally how can i do that and one additional thing does svn support local repositories like bazaar
in ios 5.0 and later you can use clgeocoder of core location framework as for ios lower than 5.0 mkreversegeocoder of map kit framework
cron jobs works well with wordpress even if a server cron is better
i ve heard it suggested that i use nginx as a reverse proxy in front of apache and node.js is that a better solution than just nginx
if you want to use sql i strongly reccommend postgresql it seems to deal with large databases and frequent writes a lot better than mysql
using capybara instead of rspec is a better solution for request intergration tests
java object serializable deserialization is not faster than xml writing and parsing in general
jboss 6.4 had no problems with that but yes wildfly is more strict looks like
unfortunately the directory also is a git repository and has a .git folder in it which is much bigger than the directory itself
3 a first of all if you haven t done yet change the storage engine to innodb which has row level locking and in newer versions of mysql has more optimization than myisam has
this question is similar in nature to whether ant is better than maven or c# better than java
keith pointed out that haskell has a more powerful type system but it can also be said that ocaml has a more powerful module system than haskell
i would need a scalable database so probably postgresql would be better than mysql
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but the right svn2git which is much more suited for this use-case
it uses lxml underneath and is much faster than beautifulsoup
i haven t tried any of these in a jsf 2 application but i would recommend using the primefaces one at least the documentation is better than richfaces
once the jvm has warmed up rails requests under jruby are usually significantly more performant than under mri both in terms of raw execution speed and garbage collection
when all you want to do is jam a bunch of shapefiles together or convert a large series of rasters to a common projection gdal ogr is faster to startup and run as it doesn t need to load the whole arcobjects com library to access one or two functions
mef seemed a bit easier than prism and i started to do a hello world mef app with this tutorial
you could also use apache cargo which is more general than the tomcat maven plugin
i have taken on someones project that has automation using task scheduler while i am more familiar with cron jobs
however a sdp object local description by firefox does not contain datachannel at all and moreover the sdp is much shorter than google-chrome and less information bundled
when i demux an mp4 with ffmpeg the provided sps at the beginning of the raw h.264 stream is richer than mine
other solution is to upgrade websphere with newer libraries as per ibm websphere upgrade service instructions
no cross-database queries if you need something like that mapping mysql databases to postgresql schemas is probably easier
but in my location jboss is more popular than glassfish so i have a idea
this ibm technote has more details on the signals part what is a signal and why does this matter for websphere application server
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case and should not suffer from oom error
an efficiently configured mysql is better than a badly configured postgresql and vice-versa
i tried a few ides on ubuntu and it just didn t seem right - gedit is lightweight and i actually enjoy using it more than textmate on os x
carbon emacs is closer to the unix emacs experience whereas the aquamacs people have put considerable effort into os x integration
the scenario you described is perfectly fit into an aggregation or multi-module project from my own experience compare with ant maven provides a more efficient reasonable and native way for managing multi-module project with inter-module dependencies
i am less familiar with postgresql than mysql but
there is also postgresql its a bit more robust than mysql and is free just the same
in ejb3 there is no such thing as stateless is better than stateful session beans
i have the jersey resource classes bundled within a larger war as jar file which is now residing underneath web-inf lib folder on websphere application server
mri has a gil so why is it faster than jruby in handling requests
i had worked on jboss for a year and on weblogic for more than a year now my experience with the web logic is good compared to jboss weblogic is more stable and robust it can handle more than 3000 concurrent requests without throwing a single exception where jboss failed to do so and admin console for the weblogic is excellent but i think weblogic is more complex then jboss
since json can store arrays i can create quite complex config with it and it parses faster than ini files
if you are on linux eg ubuntu you may try gedit for ease of use with some plug-ins but to handle very large files you re better off with vim
hdfs high availabilty is only available when you have more than one namenode configured
the switchover to nginx really had little to do with the rewrite rule and more to do with getting away from apache 2.2 default upstream version for centos however with nginx rewrite rules are more straight forward than apache s imo
and check against a number versioning in your code if the database versioning number is less than your code versioning number call a method for to do the upgrade
lot s of free stuff available look for anything implementing amqp for example and not limited to apache s attempt - activemq zeromq as listed above rabbitmq which is more complete than zero and even red hat are in the game with red hat messaging
but thn i get presented with a setup maven plugin connectors dialog and the pom.xml file shows more errors
if you need to add more than one folder for searching see the msdn for documenation on adddlldirectory for the steps required to allow for multiple search directory
so glfw is just a library for creating windows in a better way than lwjgl did before
ubuntu is the more user-friendly of the two i think ubuntu is actually one of the most newbie-friendly linux distros so if you are new to linux ubuntu is the way to go
is there any cpan module that would make this easier preferably with automatic getter setter generation
wsimport is better don t use wsdl2java
unicorn is supposed to be faster than webrick
as you know apc is much more faster than memcached if we re fetching keys from a single server
this server side product was openfire but you could use ejabberd for even better performance - openfire is easier to set up and maintain though
getting your project migrated to vb.net is certainly easier when you keep the old vb6 controls
see what happens when tcp udp server is publishing faster than client is consuming
as for apache vs nginx in regards to your django app it seems that mod_python is indeed faster than nginx lighty + fastcgi but that s no surprise because cgi regardless of any speed ups is still slow
serializable deserialization becomes a bigger bottleneck when you scale out to a session server or use sql server to manage session state
the requests library can handle post put delete and all other http methods and is significantly less scary than urllib httplib and their variants
the ipb which has less queries runs slower than mybb with more queries
anyways mysql is bad and on longterm especially if you are enough good for java i suggest you to use some better db with postgresql you were really satisfied i think
you would be able to circumvent this by first running mvn clean install on magnicompcommon s pom.xml then on model pom.xml but this is much easier done by invoking maven directly on the root pom.xml
if you need spatial data capabilities postgis with postgresql is better than mysql
is postgresql better than mysql for such purpose
first entity-relationship modeling is more than just an erd
and i do as much work as possible on our linux centos 5 system simply because the tools on it are still newer than anything i can find readily packaged for aix solaris is somewhat better
the difference between pylons and pyramid are the merge of repoze.bfg and turbogears which brings more api resources
being php parseing it is nearly eg the file needs to be opened closed etc as fast as having the code at the top of each script and much faster than ini and xml config solutions
and any python orm will make it easier to switch out your database if you find something better than mysql like postgresql
there are many options for client-side mvc or mvvm code organization such as knockout.js and ember.js but personnally i prefer backbone.js which has less magic but offers more control
is there anything obvious in ubuntu that would otherwise be making sfphpview- render run slower than centos
i m just looking for something a little more polished than vim or emacs but not quite as heavyweight as netbeans or eclipse
active directory is far more than ldap - at the very least you d need kerberos but it also tightly integrates with dns both srv and a records which d require significant trickiness to fake over an ssl connection
on ubuntu 12 04 the kernel must be upgrade and docker installation is more difficult
there is an easier method than using noindex nofollow
there are many other small differences railo is generally stricter about syntax and semantics than adobe coldfusion and often those decisions are driven by performance concerns in that compatibility with adobe coldfusion would make railo slower
this uses pdo and prepared statements which patches the sql injection vulnerability in the most elegant way possible not mysql_real_escape_string and also uses bcrypt for hashing passwords which is infinitely better than one md5 with no salt
postgresql supports recursive queries in the form of recursive common table expressions which make querying heirarchical data easier than in mysql and also give better performance
what could be the reason that makes iis slower than cassini
it seems your apache is more busy than your nginx
then use the guide you found to upgrade it to v3 as v2 - v3 versioning upgrade is rather smaller
one of the things that makes lxml better than beautifulsoup is support for proper css-like class selection or even supports full css selectors if you want to use them
also if you open to moving away from mysql i ve found that postgresql has much better resolution of deadlocks
bower is more similar to npm than to component
i personally believe that it is not worth the effort because basic is a nearly dead language and there are lots of languages better than basic ocaml haskell common lisp clojure scala scheme go d ...
go is much more c++ like and low level oriented than c# and c# has only a few functional features while scala allows you to write typical functional code more verbose than ocaml or haskell but similar
pypy is supposedly faster than cpython while gevent is based on co-routines and greenlets which supposedly makes for a faster web server
though mysql is more popular than postgresql but instagram is using postgresql maybe due to these reasons
postgresql is a bit more restrictive than mysql
personally i think moles is much better suited for mocking the unmockable and i prefer a combination of moq for my own interfaces and classes and moq for framework and externalities like file i o gui db connections etc
engineyard does provide application-level support too which is a fair bit better than what heroku does
nginx is actually quite a lot easier than apache in my opinion
i find the ant one much clearer than the maven one
nvidia and ati architectures differ enough so that for certain tasks such as bitcoin mining ati is vastly better than nvidia
one one ubuntu distro fuser -n tcp 3000 will report a process if i own the process yet on another linux distro i think centos it won t report the process even if i own it
i heard that i should upgrade beatbox to something more than the versioning 21 to be able to access the forecastingitem object so i tried apt-get update upgrade beatbox but i still get the error
razorpdf uses an older version of itextsharp which i believe was the latest free itextsharp version
windows dmd produces omf while coff is more popular now
i recently got this error with tomcat 7.0.21 on windows 7 when a war contained jars which had duplicate class definitions a class was defined in more than 1 jar within the war s web-inf lib directory
however it is not easier than yacc bison
using npm package is a little bit harder than using bower package
icefaces provides more good looking components than richfaces
but i was working on server-side and probably for client-side it s much easier
the dbi versioning is less likely to be the source of the trouble but it would still be good to upgrade to the most current versioning
you re right postgresql has much better support for sql and other advanced features so there s a very good case for why postgresql is superior to mysql
using a filesystemobject is more powerful than dir because dir only returns a string while filesystemobject lets you work with files and folder as actual objects which are much more powerful
nginx apache fits better with nodejs
i have found one benchmark in which yii is faster than codeigniter and another benchmark in which codeigniter is faster than yii
redmine handles multiple projects and sub projects far nicer than trac
ubuntu has nicer frontend and could be more suitable for windows emigrants while debian is more for backend guys
regarding cloudant it s more or less just couchdb so to connect you can use these libraries from the couchdb wiki
for those who are more comfortable with maven you could add this dependency to your pom.xml file
the mp4 implementation is more widely used and wouldn t require a webm fallback in most browsers
you may find this task easier with pexpect which is a third-party module for automating subprocess keyboard interaction
i can see that my skeleton mxml module is slightly larger than my actionscript module 66kb vs
if your shell is bash or ksh or zsh it s much safer and easier to build up a command with an array rather than a string
i have a default installation of mysql and postgresql on my os x box and mysql is 2x faster comparing queries that are warmed up by repeatedly executing the query
apc is faster on a single server - but memcached is distributed
even though git-svn is easier to start with here are some further reasons why using the kde svn2git instead of git-svn is superior besides its flexibility
is bower a better fit than npm for asp .net 5 projects with separation of source and build files and if not what s the recommended way of doing it purely with npm
of course this is no fewer keystrokes than sudo python although at least you wouldn t need to enter a passwd
i ve came to kohana from codeigniter which was a little bit bigger documentation and easier to understood but as far as i found out many programmers say that kohana are alot better than codeigniter
honestly though postgresql scales much better than mysql
since that appears to generate index-color gif files which are smaller than the png files that doxygen generates
next you ll find that the threading model of nginx is much more efficient than apache s for what you re doing
i cannot propose any db not knowing your specific needs but if you want to use a free software which excludes oracle and you re not already experienced with mysql you should try postgresql which is more powerful than mysql
memcached is more along the lines of a distributed object cache vs something like apc or xcache which stores php bytecode in memory so you avoid having to parse it each time
which one goes better with netbeans phpunit or simpletest
from my experience mstest is much slower than nunit
for example nginx is much faster than apache
these are also kept up-to-date much better than the ubuntu debian repositories
the community is smaller than grails but the project is supported by springsource who is quite active in the community
however gambit scheme has smoother access to c c++ code libraries which far outnumber common lisp s libraries
the scipy numpy matplotlib clan is much better at dealing with huge amounts of volume data than matlab or at least gnu octave in my experience
while ant is cool maven is cooler
it provides similar css selector syntax as jquery does and it s much faster than beautifulsoup because it relies on lxml to do the parsing work
nginx or other server is not much more efficient than apache
if you are more comfortable with mysql because you should install postgresql locally if you are going to use postgresql for production then you should consider using one of the mysql add-ons heroku offers
with mri i d use forking with jruby there s more of a case to be made for threading
i know nginx has lower memory footprint and little faster than apache in serving static files
what s the deal i thought actionscript would be nicer than mxml
if you do it over ssl https it is probably more secure
it supports fetch pull and push and is more stable for me than hg-git similar features from hg to git
how can i find all div and span tags with order preserved.with beautifulsoup it is very simple but i switched recently to lxml since it is much faster than beautifulsoup
if your requirement is to store a key with value as json then mongodb is a better fit in this scenario as by default mongodb stores data in bson which is json + additional data types
note that it currently does not support true parallelism you won t have two threads running ocaml code in parallel but it doesn t matter as ocaml is much faster than many other languages for example on a quadcore the language shootout shows that ocaml outperforms even haskell with multicore capabilities
either is capable of doing it but swing is more modern and supports components jtree jtable .. and functionality double-buffering built-in key bindings plafs support for rich text that is missing from the awt apis
i find the simple solution ant calls maven more obvious
redmine was written to be a better trac than trac
gridview has much more bells and whistles than datalist
in an oltp database like mysql or postgresql it s better to use a range query over an index where you keep track of the last value seen on the previous page
consider using force.com canvas now ga which is an added-value iframe with more security and easier integration with salesforce apis than raw iframes - see
since ant is more of a scripting tool and doesn t impose structure or lifecycle like maven and gradle you simply manually invoke ant when you want to use it
which java framework awt or swing makes more sense for something this simple
nginx will definitely work faster than apache
postgresql license bsd is undoubtedly more simple than mysql s
wicket probably has more resources than vaadin
apc gives you some more functionality than memcached
to be trying to implement them using different protocols tcp and udp is even odder h323 voip is the only applciation i know of which does this
so the avx version does indeed appear to faster than the sse version both for the original implementations and the optimised implementations
jvm hosted languages are generally going to be faster than traditional mri ruby and both java and scala are generally faster than jruby when it comes to raw cpu capabilities
though making use of javac api in a nb modules hard to do something better than a getter setter
asp with jscript is 100 times better cleaner simpler nicer than vbscript and makes my job a joy rather than a vbscript head ache
it may even use a different server software say nginx or lighttpd that has less overhead than the traditional apache setup
nginx is very fast much lighter than apache
most likely sqlite3 needs to be upgrade to the most recent versioning which has a newer node-pre-gyp dependency which in turn should have its own updated dependencies to work properly with modern versioning of node
there are multiple reasons why the swift code is slower than the objective-c code
warning you are using requests versioning which is older than requests-oauthlib expects please upgrade to 2.0.0 or later
it is more intuitive for than vim or emacs for the beginners
depends i came from php4 and didn t really touch the level of oop needed for the php5 kohana framework i ve used classes and functions but the hmvc is a process on it s own to learn when it comes to kohana vs yii i d have to say kohana is easier to pickup
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case
for time measurements use google s cpu profiler it gives way better results than gprof
nginx is typically faster than apache but with a low request server it hardly matters
perforce offers more advanced branching and merging capabilities than svn
you can build apps a lot quicker with yii due to the code-gen and active record but it will be a bit harder to learn than codeigniter
i use both gentoo and ubuntu and i see that emerge the package manager of gentoo has a higher readability than apt-get aptitude just because it uses way much more color output than the latter
this is because your ubuntu system has newer system libraries than your centos one
i have successfully set up vvv on virtualbox in the past but i ve been told vmware is much faster
lxml will let you use xpath here which i think will be less painful than beautifulsoup s interface
for static file serving i found nginx performance lot faster than apache
nginx is more picky about case of file names than apache
apache made a claim that apache 2.4 will offer performance as good or better than nginx
as mentioned by ifloop this would be running a cpython c extension module on pypy which often works not always but is slower than on cpython
it s a shame postgresql isn t more popular than mysql since it supports exactly this feature out-of-the-box you d only have to share one sequence object between tables.
however when i run my program on windows 8 dev preview it always pop-up dialog that asks user to enable .net 3.51
first vb.net can be used to perform this xslt transformation which is really simple as you said just applying the xslt stylesheet at server-side if it is considered better than at client-side or even just sending the processing instruction for that to the browser
does this mean that the old adagio about jruby being faster than mri ruby is gone
a database using a separate server to manage multiple clients such as mysql or postgresql is a better choice if performance is an issue
but since ntlm is less secure than kerberos why isn t it the other way around
mysql is more preferred db choise for symfony projects symfony mysql symfony postgresql so choosing postgresql is a rare decision and maybe there are some pitfalls those we have to consider
may be postgresql takes less time than mysql
a time ago i change glassfish to wildfly it works better than glassfish but i m having some problems with this exception
swing is the weaker of the gui technologies relating to accessibility in java compared to swt at any rate
tcl is no better nor worse than perl ruby python or any other scripting language in this regard -- they all do basic file operations with equal aplomb
i really like postgresql s indexes which are far better than mysql s
i haven t tried coded or retrospectiva but i ve used both redmine and trac and in my opinion redmine is better because
no guarantee but it s rather likely. in your case it s even more likely as linux freebsd and os x are all posix-compatible
this python3 cgi https server used to work a few weeks or months ago but now no longer works under linux ubuntu
if you have access to memcached or apc on your webhost some shared plans disable this functionality look them up as they are considered fairly high-performance forms of caching as it utilizes the system memory directly memcached is more suited for distributed systems
webclient has a much simpler interface than httpwebrequest and takes care of reading and writing from the streams for you
beautifulsoup is a python package that parses broken html while lxml does so faster but with high quality html xml
if your service already has an rss feed things are even easier with the rss reader integrated in the buzzbox api
html5lib parser does a better job than lxml or html.parser handling the debate element in this case
you need to control many logging configurations i think the logging agent on ubuntu debian is better choice
im new to swift but i like it more than objective-c as it looks a bit like java does to me from syntax wise compared to objective-c
regarding comparison between gridview and listview my experience is that listview is more lightweight as compared to gridview
the x86_64 64bit platform is much more than twice the width of the x86 32-bit
postgresql is a little more strict than mysql about type conversion and does not let you implicitly cast convert between numbers and strings
that doesn t cover some of the more fundamental problems with maven such as its namespaces breaking java namespaces and xml namespaces it s build unit the pom.xml having no relation to anything in the actual deployment environment think about it when you separate via poms what are you actually accomplishing in the finished product
post explaining why spi is faster than i2c
and im not shure about this statement javascript likes settimeout more than setinterval which gives a little performance boost
i understand redmine is more of a trac clone but retrospectiva seem to support agile methodologies via a nice plugin
there is the mono project that aims to allow .net code to run on mac and linux but between the two delphi being pascal is somewhat more portable
it s can be done in both server-side and client-side but in server-side there s more benefits like database searching before parsing page html and testing routines
i am using postgresql btw which can do more than mysql incase that changes things
since cakephp seems to be much lighter than zend-framework i would suggest that you take a look at cakephp
nginx â without any optimizations done â is much faster than apache
i read that flask for beginner is better than django because educational reasons at the same time django have django oscar
is nginx + php-fpm is suppose to do server operations much faster than apache + mod-php due to efficient usage of memory and other resources
cut and paste in vim takes more steps than in emacs iirc
and even though everybody says ruby is slow buildr was 2-6x faster than maven
vim is more powerful and textmate is worth the price tag
what are your strategies best practices when it comes to dealing with a reasonably sized sql server database anything larger than northwind or adventureworks - do you use multiple filegroups
sometimes a linux distribution contains far more than an operating system but is informally referred to by a single name such as ubuntu and so the line between what the operating system is the linux kernel and standard libraries perhaps and the applications that merely ship with that operating system the gnome and kde environments on linux is pretty gray
datamapper idea is definitely better than activerecord
can the geocode gem support more than one geocoding step
however svn protocol is much faster so i suggest using collabnet svn for performance reasons
talk about sql server 2005 adventureworks is better than northwind
bazaar is a distributed version tool just like git but is imo simpler to setup and use
ps you can also migrate to postgresql it s smarter than mysql when choosing right indexes
my understanding was it was written in vanilla python cpython but if you are more comfortable with ironpython it shouldn t be hard to translate
you used a older versioning of vagrant before 1.5 versioning and made an upgrade to vagrant greater than 1.5 versioning
redmine handles multiple projects and sub-projects right out of the box and overall seems nicer than trac
the solution has a modular design and better performance than ffmpeg or libav at the current time
lxml enables you to search for elements using xpath which i think is easier than using beautifulsoup s api
as gnibbler pointed out cpython is slower in the simple implementation but pypy is jit compiled for much faster code when you need it
i m using the module graphlab in my python script and many more such as pandas and numpy etc graphlab module only works on python2 not for python3
if you use twig which i like better than smarty - although i still prefer self-restraint+plain php most ide s that support django templating should work with it since the syntax is nearly the same
i have been reading about cakephp but it seems a bit more complicated than codeigniter
make sure you re using a source control system that supports branching and merging i ve had experience with perforce and svn and while perforce is better svn is free
in addition another coworker said cvs was a lot more popular than svn
memcached is faster than apc as zend_cache backend but you still need apc extension installed even in development mode to get a great speedup of your code
cocos2d-x already works with marmalade so if you want to take your cocos2d game to ios android symbian webos bada rim qnx and more check out marmalade
i assume you re using linux or f# would be a much better choice than either ocaml or haskell
using nginx rather than apache to server the images nginx generally works better to server static content such as this
it could be a sni problem if you use any kind of load balancer https proxy or more than 1 ssl certificate on the same ip
if blackberry device software versioning is higher than os 6 then continue the app otherwise prompt user dialog showing upgrade os first and exit the application
jogl is more java-like whereas lwjgl provides more gaming functionality on top of opengl access
nosql solutions are better than mysql postgresql and other rdbms techs for this task
i suggest postgresql it s more capable has more features and better support for complex queries and datatypes than mysql and has a lot of tuning options
recompiling ubuntu kernels is harder -- it will require working with debian build tools
also i think the webclient class is more idiomatic these days than hand rolling httpwebrequest
xquery works better than xslt for this because it s more amenable to static analysis as it lacks the polymorphism of xslt s template rules
glassfish however performs better than jboss and has a very slick gui-based admin console whereas jboss can only be administrated with a command line
i ve used both db systems before and while postgresql is great for it s licensing terms and standards compliance mysql is definitely easier to get up and running quickly
client-side validation is more responsive to the user but always back it up with proper server-side checks
gsl can do fft s but fftw is better at doing that
you can use alpine linux docker image it is very light and is better than both ubuntu and centos image to be used as the docker
unless it s a usb keyboard mouse and 8042 emulation is disabled where you would need a usb stack but you can use the boot protocol for the keyboard mouse which is simpler
fdo provides those features too interestingly thanks to integration with gdal ogr in some places like fdo provider for gdal but it feels more like a framework whereas gdal ogr feels more like a library
sorting in java is a little bit more work than in sql on the other hand filtering is more versatile when implemented in java
if you use older version of gcc compiler or if your code under tests runs on vxworks or vxsim you might have a better chance with cppunit than googletest framework
emacs is more powerful than vim it s scripting engine is far more flexible and there are far more scripts modes and the likes built around emacs
any one of the reverse proxy systems can likely do this nginx is popular too and generally has easier configuration than apache but i ve never used it with https
to say directx is faster than gdi is also something of a simplification - wpf and gdi-based rendering technologies just have different performance characteristics
for example it looks like unicorn is a better choice on heroku than puma
in this respect ubuntu is less desirable on a server than rhel or centos which stick to more mature versions
i know postgresql could be considered more mature than mysql with regards to locking thanks to mvcc - can i use row-locking or some other feature in postgresql instead of the token field
imho wordpress is better do work and customize than joomla
with django it is easy to use postgresql instead of mysql so i tried it with the same query and same data in db postgresql is much faster that mysql x10 more faster while using inner join analyse shows it uses indexes unlike mysql
you could always use https that will work both on http and https websites but loading a https resource is slower than loading a http resource because of the encryption and ssl handshakes
and a thing about codeigniter i asked some time ago people about it and most says that kohana based on codeigniter is better
owl is a more advanced language than rdf
with 0.13 m2e this no longer works as the maven builder appears to put things in target your-artificat-version-snapshot web-inf classes
i totally understand the error and assume that the mysql implementation is less sql conform than the postgresql implementation
using macports or homebrew this is rather simpler
note that for more complex builds a java build solution like ant or maven is probably more effective
bazaar is imho easier to learn than git
section 4.13 of better builds with maven describes using cargo to deploy a war specified using maven coordinates but that s serious overkill given that we re using jetty
this will force to upgrade if the upgrade versioning is newer
although if you aren t interested in using adobe cs you can use ubuntu distro which is easier than other linux distro and quiet popular so you won t have any problem finding solution
i prefere lxml it s a harder to understand but much faster than beautifulsoup
shortly put running some benchmarks on a page doing some database operations and serving static dynamic content has shown that plain cherrypy was twice as fast than nginx and memcached and about half faster than lighttpd
i read a lot about gradle and it seems to be a better solution than maven or ant
i have used both prototype scriptaculous as well as jquery in many projects and based on what i am seeing it appears jquery has the more plug-in available so am leaning towards using jquery
if a flac file is newer than the corresponding mp3 file or the corresponding mp3 file doesn t exist then i want to run a bunch of commands to convert the flac file to an mp3 file and copy the tags across
nginx is faster than apache handles slow clients better and is generally easier to use
in my personal experience it is impossible to modify the browser behavior in google-chrome if the addon api does not allow for it - in firefox this is much easier to change as much of the interface logic is written in javascript and there are api s for just about anything
given that i know little about apache modules i would try to remove apache from the equation try writing a simple c program that does little more than a dlopen and possibly the subsequent dlsym then exits
imho creating templates for joomla is the easier than most other cms i know typo wordpress modx as you simply have to replace parts of the static version with joomla tags menu content etc. it still needs some time to get used to the system but its not that hard
graphicsmagick is a fork of imagemagick that is faster and has fewer bugs this is what flickr uses internally so it should be good enough for you
they both are able to handle much more current users than apache lighttpd or nginx.
if you just want the fun of linux command line programs without access to all of ubuntu cygwin is smaller and might be faster
the other distributed tools are a lot faster svn is slow as hell even cvs can be faster sometimes have much more useful features than svn are developing rapidly while seeing any new feature in svn takes years
the problem is that windows ntfs is slower than typical linux filesystems for these lookups
using specific method such as addclass removeclass and slidedown slideup makes it easier to debug your code and see what s going on
note that centos software versions are older than debian s but versions of opensuse software are newer than debian s versions
but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library
it is widely used to have a separated tag with the postfix -alpine in it to indicate that alpine linux is used which is a much smaller base-image than the debian image
in my experience passing css js through controllers slower than pure apache nginx request
fink has more packages than macports
a solution in xslt would work too but if you are not already using xslt then using xquery makes more sense here i guess
when i was googling info on nginx it appears to be faster than apache and works well in serving static pages
in my cases postgresql was better than mysql mysql do not completely support unicode
it s simple and nginx is even more ridiculously fast and lightweight than lighttpd
one of the main advantages people discuss when choosing nginx over apache is higher performance in serving large numbers of static file so when using laravel are those static files loaded as dynamic php files
3 use thin instead of webrick - thin seems easier to configure for ssl
i am currently looking at yii and while its more complex than codeigniter the documentation is much more informative and therefore understandable than cakephp s
x86 have more complex instructions than mips
anyway for the past year i ve been using fink and apt-get on leopard because i m more familiar with debian ubuntu
beyond the license issues clang llvm builds much faster than gcc and in apple s benchmarks and my own experience creates better-performing executables than gcc
if using the versioning of groovy you want and frequent upgrade is more important then consider gmavenplus
part of the point of svn was to make the use of branches and merging much easier than in cvs
it s a lot easier than ant fully compatible with eclipse use maven eclipse eclipse to create eclipse projects and easy to configure
with datamapper this is somewhat more work than with activerecord which provides it s own db tasks
you can also use scgi it is a lot simpler than fastcgi
if you have a secure ftp sftp server or secure http ssl https server then curl can accept ssh keys although using an ssl key is more commonly accepted on the internet. it can use those keys to authenticate and establish a secure connection to the directories which have been made public to your user through the server
if your versioning is older than 5.0.0 run pip install --upgrade notebook to upgrade
it s possible that jython and ironpython are much faster than cpython as well as they are backed by heavily optimized virtual machines jvm and .net clr
can maven examine and resolve internal dependencies of non-mavenized jar library defined earlier by ant
in most regards postgresql is slower than mysql especially when it comes to fine tuning in the end
apache s design is thread per client while nginx uses the reactor pattern meaning - nginx can handle much more traffic than apache as a web server about 50 times the number of requests
it s model it s much more twisted than svn cvs git
i now understand that a windows specific tool such as xcopy xxcopy or robocopy probably is better for backing up but for now i prefer the simplicity of cp and not having to dive into windows command line
jruby is faster than 1.9 mri matz ruby interpreter the standard in certain areas
lwjgl is much more aimed towards gaming with opengl where as jogl is more worried about complete and perfect bindings to opengl opencl
because mongo 3.0 required greater than versioning 1.4 which i was running i had to upgrade the driver at the same time
to receive a file in your api i would use a put request simpler than post multipart and fetch the data from the stream php input
lxml is faster than elementtree but i ve never found an application where the speed boost paid for the hassles of distribution
have you considered creating an object structure for these files and serializing them java object serializable and deserialization is much faster than parsing an xml this is again considering that these 500 or so xml files don t get modified between reads
since you ve switched to lighttpd the webserver itself is going to use fewer resources than apache would but apache is rarely the bottleneck unless you ve run out of ram or seriously misconfigured it
drupal 7 mysql 5.0.15 or higher with pdo postgresql 8.3 or higher
nginx is faster than apache and the configuration is easier
is file based caching faster than the mysql mariadb postgresql
using any kind of non-trivial maven pom.xml makes is more visible though
i actually found the setup of nginx much easier than lighttpd not to mention that you can install a macport of nginx port install nginx +ssl that does not contain the ssl-breaking bug that lighttpd suffers from here
your average debian or ubuntu user is more likely to be familiar with apt-get than with cpan
to see a full example of a maven pom.xml that includes more libraries from play look at the sample pom.xml included in the play-pure-maven-plugin s repository
client-side validation is faster than server-side because the validation takes place on client side on browser and the networking time from client to server is saved
since you re using lxml why not use it in a more direct manner lxml is believed to be faster than beautifulsoup
note please do tell me if lxml is more easy or this elementtree
mongodb s server-side document representation is a json-like binary format called bson which has richer types than javascript json and preserves field order
postgresql has better support but the support by mysql depends on the used storage engine
this is a more general problem with maven 2 it doesn t allow any pom.xml code reuse expect properties and custom plugins
ati seems to tell more than nvidia
you have to realize that this is a common probelm with joomla and wordpress as i explained to you in my other answer to your another question here is joomla 2.5 much faster than joomla 1.5 querywise
you could probably also configure snmp to run over tcp instead of udp which makes tunneling easier
monodevelop is more of a replacement of an ide for mac and linux in windows the recommended thing is to use visual studio or sharpdevelop
according to many benchmarks uwsgi seems to provides better performance than gunicorn and if the performance doesn t change significantly you ll be able to focus your investigation on nginx or ec2 configurations
if your batch file only needs to run on windows vista or later you can use robocopy instead which is an even more powerful tool than xcopy and is now built into the operating system
ubuntu linux is more strict when it comes to opening files that are already open the line
webclient is easier but httpwebrequest is more powerful and allows for more control
by the way i would suggest creating rar self-extracting archives instead of zip self-extracting archives as with rar compression the exe file with the right switches for best compression using additionally also solid archive options could be much smaller than with zip compression
then postgresql is much better than mysql
very fast static assets nginx is faster than apache at serving static assets css js images ... and uses very little memory to do so
if kernel versioning is less than 2.6 then we recommend to upgrade it
couchbase looks more like a memcache server with a persistence layer powered by couchdb and maybe it does not fit your needs
the geocoding api works better than geocode normally but has usage limits and the implementation is bigger
both frameworks are fairly easy to implement flask is much easier than django imo although django has a built in authentication layer that you can use albeit more difficult to implement in a client server scenario like you need
there is almost always some driver issue between them but in general nvidia is better for opengl has bugs in directx implementation and ati amd versions only is better for directx has bugs in opengl implementation
testng offers you more options and possibilites how to run your tests and in which order especially something junit can t
for instance in some benchmarks lighttpd is even faster at serving static resources than apache
firefox just provides far more access to its own internals and system to the extensions so its technically possible to do more with them than with opera widgets or google-chrome extensions
you may also use handbrake which is a simpler encoder than ffmpeg
jruby support - unicorn s a better choice than thin but it doesn t support jruby
i haven t read anywhere that apple llvm clang compiler produces bigger executable so my guess is that i might not be using the optimization settings in xcode properly
i found simpletest was even easier than phpunit to set up
in looking into different frameworks the routing mechanisms they have and the different alternatives employed to make them go faster such as with codeigniter wordpress yii and symphony with alternative caching options how would you do a like-for-like is it possible
try django-ckeditor redactor it s more simple but redactor itself isn t free and i think fckeditor is more flexible in the configuration
i have installed these two tools with the official package of ubuntu and also with the package of debian that seems more updated
directx has a wider scope than opengl in that directx is composed of directsound directplay and direct3d etc
the flwr syntax of xquery is quite intuitive if you have an sql back-ground imo xslt is the more powerful language when dealing with one input one output situations especially if the output will not be xml
it may be that macports doesn t help i have been luckier with homebrew than macports when installing cgal
there are workloads where postgresql is better and there are workloads where mysql is better
both use debian packages and ubuntu is based on debian but is more user friendly
my usual rule-of-thumb is that xquery is better than xslt for simple tasks whereas xslt is better for complex tasks
it will produce the desired layout with a gridview but indeed the asp listview is a better choice
i have found that using jquery javascript inside an updatepanel is more hassel than it is worth as you always need to output the jquery javascript using the scriptmanager or the scriptmanager.registerclientscriptblock
now on windows if the ntfs filesystems has less than 5gb disk space it displays
several things i found in the cocos2d forums lead me to believe it s an issue with the zlib implementation on ios but i ve tried using both stb_image and lodepng to avoid zlib and those libraries actually performed even worse than libpng
1 - why ant script generates more .class files than maven
so your app code is actually run via uwsgi and cherokee is more like a proxy server
how can nginx performs better than apache
mongodb stores everything in memory anyway and works in a similar vein being a key-value based system however i believe mongodb is more flexible as it allows for storing bson objects within themselves
owl is richer than languages such as rdf schema rdfs
webmap toolkit leaflet became popular and easy to use while openlayers is more powerful
i would like to use a lighter framework than ruby-on-rails sinatra ramaze camping but am concerned that by doing so i will not be able to use a lot of shared libraries that have been tailored to ruby-on-rails in the form of plugins
nginx with its own mod_wsgi seems to perform even better than apache but hey you didn t ask about that
maven is a better alternative as build system compared to ant
in world nosql mongo world perhaps the schema is a little more flexible than mysql postgresql and thus changing the schema is more common practice
on i386 the dyld stub is much faster than the powerpc equivalent so we didnâ t bother doing extra work to bypass it
memcached is more for caching database queries and improving performance in that regard while apc is more for improving performance of php code
if that isn t sufficient a lot of standard python code can be run on the pypy implementation which generally faster than the cpython implementation
i m not familar with the facebook api but the fbconnect success looks more like an objective-c selector instead of a url
i found d3.js to be rich library but highcharts is more interactive i guess
this is because ubuntu 15.10 uses a newer version of libc and libstdc++ which is not available on debian 8
seek_hole support in the ext4 filesystem was added to linux in the 3.8 kernel ubuntu 12.04 uses an older kernel than that - your kernel version is 3.2.0-45
however it may be that maven-jaxb2-plugin uses a newer version of xjc than you re using with enum
i ve found that postgresql is in my expirience is slower as mysql
performing this asynchronous testing is actually possible in qunit but is handled better in another javascript testing framework jasmine js
there is a limitation on creating virtual hosts for name based virtual host while using ssl 443 port so if you want to have more than one https port enabled you will need ip based virtual hosting
i don t want this to be a mysql postgresql is better than postgresql mysql debate
how sctp is better then tcp
nawk alas aix don t have sort and unix sort is far more superior then any hand-made sort in awk
you will also likely find the performance characteristics of your ocaml code more intuitive than haskell because of haskell s lazy evaluation
if you want open source postgresql is much smarter than mysql as well
i have read some comparisons of junit and testng and it looks like testng has more configuration options
if i were able to upgrade the server s versioning of mysql to 5.5 would innodb be a safer bet than postgresql
or maybe that is one of the reasons why visual studio gives slower codes than gcc g++ compiler
powermockito might integrate a little easier with testng but i have never used it with junit
if you re focussing on pure client code then i find webstorm to be an excellent javascript html ide - even better than aptana
my conclusion now a days wadl is more common that rest and integration frameworks like camel cxf already supports wadl generate and consume because it is similar to wsdl therefore most easy to understand in this migration process soap to rest
some people were saying that postgresql is better for security purposes whereas mysql is becoming more feature rich.
i am curious to know if detecting the visitor browser with client-side script is more reliable than server-side script
setting the xhtml namespace as the default namespace might be useful though sadly in xquery this also makes it the default namespace for the output - xslt does this better
if you are on linux and have chosen blas and lapack from a repo it is very likely that they are much slower than openblas
if product3 is installed and installed versioning is lower then upgrade
ubuntu 12.04 ships with the ffmpeg fork libav in version 0.8 which is more compatible with ffmpeg 1.0+ or even later ffmpeg versions iirc
as for production side of things upgrading your database in transaction msi-style installation is much better than attempting to upgrade at each app startup since you can potentially end up with desynchronized database-application versioning
you may also want to look at aquamacs which currently has a beta for the latest emacs and offers somewhat better os x integration than the default build
not all of the reasons given are necessarily valid but one important one is that unless you re google server-side cpu cycles are a lot more valuable than client-side cycles so it s easier to have the client compile optimize what is quite often dynamically generated html javascript rather than the server
as i understand it web2py supports gae better out of the box than django
large objects google gson performs faster than jackson and simple json
socket tcp udp uploading is slower than native windows copy when there are more than 1 clients
mysql does a lot of implicit type conversions postgresql is rather more strict and requires you to say exactly what you mean
better use apc on apache server it will be much faster than memcached because you don t need to make a tcp ip call to connect to memcached
you can also use any editors likes sublimetext aptana which gives better flexibility to write code for beginners
seaborn is a higher level library above matplotlib
for instance zeromq can leverage udp multicast to run faster than any tcp protocol but the application programmer doesn t need to learn a new api
the benefit of both apache is more powerful and extensible useless if you don t need that power but anyway... and lighttpd is faster at static content
while not really a console skulpt.org runs python code client-side with no plugins or anything which makes it a lot faster than a server-side prompt
pyenv operates on a wider scale than virtualenv - it holds a register of python installations and can be used to install new ones and allows you to configure which version of python to run when you use the python command
server-side checks are better than client-side
the game will be a graphical roguelike 2d rpg requiring more than libtcod ncurses but no 3d graphics thats why i m using pyglet for now
upgrade_250 the wordpress 2.5.0 upgrade will be run if the database versioning is less than 7499. each of these functions run their own data migration and population procedures some of which are called during the initial database setup script
i prefer the bash c for-loop it doesn t require conditionals to escape loops and looks neater
what you re looking for is linear regression and scikit-learn is much better than nltk for this see
i ended up using scriptaculous for most of my animations simply because it provides smoother animations and more configurable than what jquery ui provides
minitest has much more than most people know for example minitest spec has bdd matchers akin to rspec minitest mock is a mocking system and minitest benchmarking is for performance profiling
the sensible thing is to use ant or maven maven is easier better in most cases
base r seems to work fine in linux windows 10 uses 20gb of disc space whereas ubuntu only needs a few gb the ram needed with ubuntu is slightly lower
it uses less overhead than smb cifs and therefore acchieves greater performance - also - there are many versions of smb in many versions of windows that might not be compatible with each other
as you ve already said ant is more a replacement for gnu make while maven is primary a buildout dependency-management application
very small object google gson performs faster than jackson and simple json
also forgot to mention junit testing framework and a great eclipse plugin eclemma for code coverage much better than cobertura ecobertura and easier to use and of course you can try maven as the other post mentionned or try ant as build tool
judging from the benchmarks posted on the pypy speed center it appears as if pypy is faster than cpython for all but two of the tests presented
i want test unix-like operating systems on historicial computers like commodore amiga atari st and i386 cpu and run posix compatible apps like pkgsrc x window system and blackbox wm for 40mhz higher versions minix 1.5 is best os for those systems better than netbsd but it is not posix-compatible
i would like to apply a hash code solution on my webpage which is more compact than md5 and sha-1 because i want to use them as keys in a json hash table
i tend to prefer leaving the cors handling to the http server nginx apache it gives more flexibility to the people deploying your app
i wrote a detailed description of the sstable format on scylla s site scylla is a more efficient c++ re-implementation of cassandra to which i contribute
speaking about usability personally i would prefer gnutls api but at the time openssl looks more preferable to use
regarding weblogic and jboss i d prefer jboss weblogic is more complex
if you are targeting android you can use firefox for android by developing a webapp that has native mathml support and because of it will be much faster than mathjax or other javascript solution
i realized that emacs would load slower than vim but this seems ridiculous for a fresh install
because fink is reputedly more stable than macports and has many more packages
however some things ant handles better than maven and if there s not a maven plugin for it it may be difficult to handle in maven
when using yslow or pagespeed which is a better tool try and use control+f5 to refresh your page so the site is forced reloaded without any offline files
alternatively zen-cart looks simpler than magento but without some of the flexibility
postgresql is far more powerful and scalable and doesn t have mysql s silly limitations and gotchas
with a gui interface along with a command line one subversion has tortoisesvn rapidsvn which is more of a traditional ui or ankhsvn for visual studio integration
sergio suggested nginx + unicorn or nginx + puma but nginx + passenger which replaces unicorn puma is much easier to setup performs great uses less memory works better and has more features
i know gitolite better than gitosis
nginx can be configured to only respond to requests matching a predefined pattern far easier than with apache
kif makes ui testing really easy and useful with lots of great apis that are less complex than xctest
emacs or vim is not significantly better than vim or emacs
i ve used both for the same project boost is better integrated with the stl and especially c++ exceptions
postgresql with the optional hstore module might be better than mysql at this.
vba being a whole lot less than vb6
i would recommend lxml for html parsing it s simple and considerably faster than beautifulsoup can be as much as two orders of magnitude
i think you would like lemp e stands for the nginx and for a lot small projects it would be better than apache
ajax calls using get are more performant than post according to yahoo
though openrasta looks more mature than wcf web api i m still a bit confused
ant is simpler and older and the default just called a java project maven is newer more powerful and flexible
magento is way ahead and has larger extensions than opencart
i would really like not to run both apache and nginx i did switch everything to apache yet found it loaded my proxies slower than nginx
a major upgrade uninstalls the previous versioning and installs the newer versioning which is most similar to what you ve described though in most cases small updates and minor upgrade are more fitting
vb.net is a better language than vb6 use its com capabilities to save you from writing endless sketchy vb6 code
in java if you want a graphic user interface you can use swt or swing and swing is better than swt
since servers omit the working copy you should generally expect server-side bare repositories to be smaller than client-side non-bare repositories
kerberos could be considered as a better option than ntlm
magento is much better if you can find a good magento developer to customize it for you but opencart is easier to use
also when your setting up the server i would say start with nginx it s uses less resources than apache
if you really want something with php then i guess bugzilla but imho trac is better
at least use xcopy robocopy is even faster
but if codeigniter has a bit too much bloat for you maybe you can try kohana which is a bit less bloated than codeigniter started as a fork
if you are developing your hbase application in java i recommend using the raw hbase api - that is more powerful than thrift rest avro etc
gitolite is maintained has a dozen features more than gitosis and the author actually responds to emails
splinter simpler than selenium
i know that perl performs better for some regex but will the tcl performance really be this bad in comparison
i am not going into how to do rewrites on nginx because it is much more complicated than apache
with the transitive dependencies declared even if they are used explicitly the maven pom.xml becomes more verbose
it shows that rsa encrypt is faster then aes encrypt
3des is more expensive than aes for example
use robocopy it s much more powerful than xcopy
my app is a python wsgi with cherrypy and works perfectly in appfog but i don t wan t cherrypy to serve static content i think that apache or nginx is a better option for that
i know this can be achieved with junit but in my experience it is easier with testng
xcb is simpler to use has a better response to a multithread environment but lacks documentation while xlib is a more dated complex tool better documented and fully implemented
assuming that you are building a webapp jspm is more suitable for managing your frontend dependencies than npm
gnu gdb fedora 6.8-37.el5 or gnu gdb gdb redhat enterprise linux 7.0.1-37.el5
mysql is more widely supported and a little easier to use but postgresql has some very cool features and functionality that s worth taking a gander at
i suspect codeigniter doesn t have quite as flexible a structure it s smaller and lighter than cakephp but a quick look at the cakephp manual to see how behaviors components helpers and the vendors folder may be helpful
see but if you are using a linux distro there may be shortcut instructions that make it simpler under ubuntu for example there are shortcuts in
for general testing phpunit is a more well-established product while behat is focussed on tests written using bdd methodology behaviour driven design
why do people say cakephp is somewhat harder than codeigniter for people new to mvc
postgresql is good too but mysql is undoubtedly more popular and you re going to find more hosts that provide you a mysql database for instance if that matters
so using easymock with junit should give you better coverage and better tests than junit alone
not only is nginx supposedly faster than apache at delivering static content but this also offloads your rails application for every image stylesheet javascript or whatever other static content
a document in mongodb is more or less like a json structure bson to be specific
i ve been attempting to upgrade to php 7.1 using phpbrew and elected to install it with nginx as i read everywhere that it was simpler than apache not that simple in my humble opinion
cakephp is newer more feature rich and heavier than codeigniter codeigniter is designed to have a much smaller footprint so you will most likely find yourself creating functionality in codeigniter to match cake s
here is a bash script that can use after you installed bash from msys or you can sort it with a linux box - ubuntu is no bigger than 800mb and can run as livecd without interfering your current windows system and the livecd can double as a system saver when needed
avoiding them by modifying vb6 is lot easier than fixing the issues in vb.net
in general postgresql knows more tricks for how to optimize complicated queries than the mysql optimizer does but it also relies heavily on your having given the optimizer enough data to work with
the documentation sucks but it s very lightweight there s a good community even on so it s more simple than symfony and more powerful than codeigniter the first version of kohana was based on codeigniter
with this in mind customizing the css of a wicket app is significantly easier than vaadin for the simple reason that you control the markup
linux however is less forgiving and has a filesystem that is case sensitive at least my dev ubuntu version does but i guess it is the default for linux
now back to the question my guess based on reading tests published here would be that the proper multi-thread apache architecture should scale better than nginx on multi-core cpus
listview gridview is more work but is faster
iis express would only be used by people who don t have access to iis or want something that is lighter than iis but more like iis than cassini
wan is less stable than lan
but as i checked-out some example apps from spring source repo and it seems that maven is more preferred and powerful than ant
also have a look at nginx for example it is fast and uses less memory than apache to handle client connections
jax-rs is much younger than jax-ws jax-ws had a final draft in 2006 jax-rs came out in 2008-9
executable size of swift application is much bigger than size of objective-c application
in other words is mysql better or worse than postgresql to handle unicode etc
keep in mind that a maven project is more than just the pom.xml file it also conforms to the maven standard directory layout and more but that should get you started
there are two reasons for that performance aes is faster then rsa and resources aes is less resource hungry than rsa
the workspace limit is on non-free hosted workspaces any workspace that s private or larger than 1gb disk space and 512mb ram ssh workspaces are unlimited
declarative sql is usually simpler and faster than imperative pl sql so it s usually best to do most of the work in sql and just glue it together with pl sql
moreover i m using m2e the maven plugin for eclipse so it seems that the compatibility of any maven plugins that might work by themselves is even less likely with m2e
the robocopy command provides a more intelligent exclusion feature switches xd and xf than xcopy does which you could use for your task
either postgresql more proven than mysql for such huge data
thanks to a suggestion in the comments i removed the passwd from the server declaration since i think getting sudo to work without a passwd is a cleaner solution anyway
iis express is a web server albeit better than cassini iis express is not your problem
i found that postfix dovecot is much more robust and it seems imap is the best way to work with it from php please correct me if i m wrong
this works fine on my local and current hosted environment using mysql but postgresql is clearly more strict
perf standard tool dtrace supported only in some linuxes have license problems - cddl incompatible with gpl stap systemtap works better with red linuxes like centos
moreover ogg vorbis is better then mp3 at all bitrates
sinatra and padrino are not automatically faster than ruby-on-rails
if you want more control over launchd background processes from ruby including properly detaching ttys and a host of other things check out the daemons gem
also i don t think it is so much that asp.net mvc is so much better than cakephp or codeigniter ruby on rails etc. the great thing about asp.net mvc and other asp.net-based technologies such as monorail is that developers who are using asp.net now have the option of following the mvc pattern using tools and languages they are familiar with
for longer-running applications like a web application rubinius or jruby will generally perform better than mri
nginx + gunicorn is likely to work better than apache + modwsgi at this point in time
i dont recomend apache to do these nginx fits better with nodejs
also nginx s configuration is much more flexible than apache and by having it on the front end it gives you a lot of flexibility
that s why it s usually said that mysql is best for webapps while postgresql is more enterprisey
lift s ajax support is far less verbose than wicket s
edit don t use this for html work use the lxml library it s python based and much faster than beautifulsoup
i did some benchmarking 3 years ago may be stale... which showed that on large datasets basically postgresql fulltext is 10-100x faster than mysql and xapian 10-100x faster than postgresql but not integrated
m2e is also a platform that let others provide better integration with additional maven plugins android web development etc.
yes joomla takes more time in cooking the resulting html when compared to wordpress
if your ruby versioning is older than 2.2.4 then please upgrade it
i know object pascal delphi lazarus more or less but absolutely zero in anything networking-related and these platforms seem absolutely inadequate for the server
can somebody explain how it can be that the same api call returns so much quicker with vb6 than with vb.net
itext versioning is 5.5.x but i guess we can upgrade it if the task would be easier with newer versioning
i actually picked junit over testng for android testing i thought it was more lightweight than testng for on-device testing
i used ppm pgm files as they are simpler to write and more portable than bmp
swing has more or less deprecated awt so you should extend jframe instead of frame
google does this because their feed api can parse more than rss
although this is only for ios the main app portion will be built in react-native as i am more familiar with js swift objective-c are very new to me
postgresql is already slower than mysql up to a certain point it is actually faster when you have a ridiculously large database
if you are using linux check out netdiscover this uses arp i think arp is lower level than tcp udp and with java you can only create apps from tcp udp and above
what does rabbitmq do better or worse than activemq
i d suggest having a look at openrasta which is much closer to http semantics than asp.net asp.net-mvc is
swing is far better than the obsolete awt library
if you re writing a mac app the opengl profiling tool profiling opengl code better than instrumentation
problems with corruption seem to be more frequent with mysql than with postgresql
postgresql is much more similar to oracle than mysql is
i would like to use more than one cpu to run ubuntu 14.04 32-bit in virtualbox but when i stop the machine and go in settings - system - processors the processors s slider is grayed out as you can see in the screenshot image
if you prefer tp delphi dialect free pascal is the better choice
in my experiance with the two postgresql has shown to be faster on most write operations while mysql is slightly faster on the reads
codeigniter has the lower learning curve overall so i would recommend it over cakephp
flask is more focused on simplicity instead of functionality while django has more functionality
see this reply what happens when tcp udp server is publishing faster than client is consuming
many say that svn was build to be a better cvs and in almost all aspects svn is better and is widely used
after some time of using codeigniter i found that using yii is more convenient
the main method does little more than to get the program running here to create a jframe to put the main gui code s jpanel in and then display that jframe
nginx seems to be the webserver getting the majority of the buzz lately it may be able to serve faster than lighttpd maybe not
so i can use neither gprof which isn t available on android valgrind which requires an older version of the ndk than what i m using nor the android-ndk-profiler which is for dynamic libraries loaded by android activities either java or native not plain executables
if your system linux is older like debian wheezy for example your glibc version will be older than the required one
i had the same problem configuring apache until i gave up and change to hiawatha much more easy to configure and according some benchmark is faster than apache
like npm bower is slower than component at installing has an unnecessary publish step does not support multiple versions of dependencies and does not cache installations
due to many improvements to couchdb and that cloudant has more features than vanilla couchdb my suggestion would be to use a c++ http library to communicate with cloudant
essentially there s no need for gcc any more llvm + clang is more than enough
ubuntu heavily relies on python scripting and generally consumes more resources than debian
frameworks like firebase angular-fire lib have handy built in auto-sync functionality alternatively the rest post put request is a more traditional design pattern
now if you re intending to use a remote filesystem with ofs which is the primary use-case you have to first install the relevant remote filesystem packages on the os you re using then use for example if we ve got cifs which is the newer name for smb samba
one thing you could look into is using tablesorter - which is much simpler than datatables - with a drag and drop plugin like sortable for jquery ui or this
thirdly use a better hash than md5 for passwords
perl uses nfa which is slower yet more powerful than the dfa engine sed has
if you are using mysql or postgresql this is a better way
from gwt 2.1 requestfactory is better counterpart than gwt rpc when you use db4o together
i encourage you to upgrade jquery mobile to 1.3.x and take a look at jquery mobile 1.3 s pop-up widget which is different from the dialog and works more like what you want than dialog does
gwt requestfactory by design is slower than gwt rpc and gwt json etc
i am running an application on jboss 7 and weblogic 12 when i make a soap call on weblogic is more restrictive than jboss
i think you ll find that web2py is even easier to learn and use than rails and django
the device in question will have a arm cpu with 400 to 900 mhz clock a vga or wvga display and about 256 mb ram or more with standard debian linux minimalistic install
i just checked the timings using mysql 5 and they are slightly worse than postgresql
if you spreadsheet file has to be downloaded from server you can use epplus on server to generate spread sheet it will be much faster than vsto than you can use wcf from add-in in excel app to upload the data
check airflow webserver or scheduler logs for more details as stderr or stdout goes there
tcl is more verbose than perl here
this performance difference issue when doing profiling is better than debugging also has troubled me for a few hours i even tried to move code from web api to console application to test and console application has similar performance as good as when profiling web api
if the versioning is older than 0.10 please upgrade
hfs+ supports much larger files than hfs block addresses are 32-bit length instead of 16-bit and uses unicode utf-16 encoding to name files folders and other filesystems objects
nginx is faster and lighter but many people find it easier to work with apache because of .htaccess support nginx does not have an analog due to performance concern
in fact in some ways ntlm is better than kerberos
that way they are in a separate file that can be parsed a bit easier than a maven pom.xml
more useful with nvidia than ati for example
you may also consider using a listview which is easier to customize than the gridview
homebrew is generally a bit nicer than macports as it doesn t require lots of sudo action
for a one man shop teamcity is far easier to setup and configure than cruisecontrol
that site does not claim pypy is 6.3 times faster than cpython
you can read all over the web that awt is old and deprecated and swing is old but newer than awt and should be preferred over awt whenever possible
i prefer using teamcity but jenkins is much more popular
the way you are using the kotlin for-loop is much closer to java s foreach loops for i indexes
you ll need to implement serializable to have java handle the serializable or externalizable if you need more control over the deserialization process
i have more experience with vhdl and verilog
i am more acquainted with debian than centos and i know the libraries i need are
the later version of jmock makes things easier by integrating with the junit lifecycle as a runner
udp is significantly easier do you really need tcp btw
requests is one of the cleanest api s i ve ever seen way better than httplib + urllib + urllib2
some say mysql is much better for bigger projects while others think just go with postgresql
i get that pushing the code up is a matter of using git aws.push - but what do i need to do to push the data up the the ebs environment i m happy to use either postgresql or mysql on ebs - but i m guessing postgresql is the better choice given that s what the local app uses - if so how would i need to configure my database.yml for postgresql on ebs
you can serve it from for example nginx varnish which are usually faster than apache
sudo is better in most respects but still requires a passwd which asroot does not
and it turns out maven really does a better job of managing dependencies for ant build.xml files than does ivy
alternatively the stanford parser can do the same stuff and might be a bit quicker being java based or lingpipe but nltk is waaaaaay more user friendly
i want to move to nginx since it s better than apache
my cygwin installation is now in two directory c cygwin64 and my windows user folder which makes backup more complicated and is tied to my username another user couldn t use it
i m trying to figure out how to better deal with json serializable deserialization of nested java objects in spring mvc
richfaces looks more good option to work than icefaces bcoz it has inbuilt support its easy to learn its long time support guarantee for seam+richfaces combination
does this affect postgresql harder than mysql
django s admin is better and more customizable than web2py s appadmin
also the native for-loop is faster than any other jquery loops method
good at serving static files it s slower than apache and nginx
my understanding is webkit is pretty good smaller than gecko
how can you get similar highlightings to zsh s less than bash s less in ubuntu
i set up a maven multi module project one with packaging war two more with packaging jar
on kde aptana ran perfectly quicker than on gnome at the best of times
once the set of projects has been validated maven now does some more parsing of those pom.xml files to construct the list of build extensions if any and the list of plugins
xml files have none - so sql databases are a lot more efficient with sorting and filtering
traditionally postgresql has had fewer security issues than mysql but they are both doing very well on that
wpf .net represents more functionality than straight swing or swt but the eclipse netbeans spring rcp projects provide a much more comprehensive foundation for complex and modular gui applications
swing has newer and better api s than awt
this will restart the site and when it runs for the first time after that it will see that the dll versioning is higher than the one in the config files and the db and will kick off the upgrade procedure
mysql is probably more often offered by shared hosting providers postgresql is probably a little more powerful
as far as i know you cannot configure more than one https virtual host for each ip that s it name based virtual hosting is limited to only one ssl virtual host
postgresql is much more complete and solid and will much better support complex queries and their optimization while mysql may shine in terms of retrieval speed for extremely simple queries
anything django does web2py does better
i ve built a rails application using mysql and now would like to move some models to a postgresql database for performance reasons the tables are quite big and postgresql is faster
ini is really a much simpler format than xml if you have less than fifty config options and they are not nested
i believe ubuntu is smaller debian wheezy smaller still or even alpine for tiny start point
there is a nice comparison of threads and processes here when is clone and fork better than pthreads
postgresql is stricter about conversions than mysql is and generally will throw an error rather than try to convert a string to an integer if it doesn t look like one
i think richfaces has a more mature ajax integration and their ajax components and events are more easy to use for me than trinidad ones
bad news is that the asmlib version of memmove is slower than the glibc version it is now running at the 300ms mark on par with the glibc version of memcpy
prestashop is much easier than zen cart oscommerce and magento
the reference c++ program with input 28 compiled with llvm 8.0.0 runs in 0.67s on my machine the same with clang 3.7 is marginally slower 0.68s
but in mysql it is ok and in postgresql it is wrong and ask for the other fields besides site_id either in a group by clause or in a aggregation function i know that postgresql is stricter on sql than mysql so i must select the site_id in the query object of msg_published but in pure sqlalchemy i can do like this
i will add that i ve often heard that nginx is faster than apache for serving static files to the point that it s sometimes worth using nginx for static files and reverse proxying to apache for dynamic content
there exists a simd fork of pillow which claims to have much better performance than imagemagick or plain pillow but there are no comparisons to opencv
block crypto algorithms like aes do suffer from this problem too but without a pki aes is no less safe than rsa
are client-side binding grids better than the server-side ones
generally speaking i find postgresql lends itself to 24 7 operations better than mysql
development and deployment of python code is made much easier by setuptools in combination with virtualenv and pip
i have recently read that nginx is faster than apache
automating sudo is slighly more complex if you need to pass the passwd but still can be done
i am more familiar with postgresql than mysql
mac os x llvm gcc based crypt fuction is borked junk hardwired to only use des a proven breakable hash worse than md5
and my php versioning is lower than 5.3.0 i upgrade that fixed my problem
alternatively you can use lxml module which is lot faster than beautifulsoup
apache airflow is a good option if you need something more full featured than cron jobs
installing from source is somewhat more time-consuming than using macports and fink but enables you to have a working environment that is optimized for your system
we have found that using servlets and those 3 different kinds of handlers instead one single type of modules the generic term for other servers like apache or nginx makes user-developments easier safer and faster
i m doing a comparison of erlang haskell elixir and es6 and i m less farmiliar with erlang and elixir but i want to represent all of these languages fairly so is this good erlang code
that s much easier with a libcurl wrapper like curb like the tin man suggested than dropping to the shell and using libcurl there
ant is much more powerful than maven in many respects but maven excels in dependency management and ease of deployment
using sha256 with a salt will be much more secure than md5
although i myself have prior experience in implementing filesystems much simpler ones than ntfs xfs or ext2 i would not tackle this job
it s known that sqlite is slower than mysql postgresql excepting very small tiny dbs
mysql has some advantages like easy replication but postgresql is generally nicer to work with
that way of adding dependencies is better managed by maven with m2e
i think glassfish is a better j2ee app server to start with than jboss
the chapter starts with short course to xml general talk but with the atom syndication feed example then it continues with the standard xml.etree.elementtree and continues with third party lxml that implements more with the same interface full xpath 1.0 based on libxml2
sqlite is very fast in many trivial cases it performs faster than mysql postgresql or firebird and supports a good subset of sql-92 syntax but there is extra overhead to populate the data-set sqlite db and building any indices etc
the standard html.parser option handles broken html less well than other options while the html5lib option is closest to how a modern browser would handle broken html albeit at a slower rate than lxml would handle html parsing
mongodb is way faster than mysql and postgresql but there s a tiny chance like 1 in a million that it won t save correctly
i found the xsl-fo designer from ecrion to be good for both programmers familiar with xslt and xsl-fo and old ladies that need to make changes to the templates we are deploying a desktop solution based on xsl-fo that replaces an older proprietary solution and the ladies can make small changes to the document templates
primefaces has more components but lack combobox available in richfaces
postgresql or mysql is better for production environment
as i now joined the team so i am trying to change it to rspec-based integration testing using capybara but i have to convince the top management that rspec and capybara is better option for rails based application
i don t know whether this port of cql3 to ruby support activerecord it acts more like a simple datamapper but it worths having a look
they do this using a jquery plugin called isotope which is a more complete version of masonry you pay for
i ve used vim for 10+ years but never really into vim scripting always subjectively beliving that this was one area where vim was weaker than emacs
mongodb supports no more than 100 levels of nesting for bson documents
vba add-in are a bit troublesome to deploy but vsto is even more so
mongodb supports no more than 100 levels of nesting for bson document.
it is worth learning both because emacs is better than vim at editing certain languages and doing certain tasks and vice versa
btw a case-sensitive search done with removing i is much faster than a case-insensitive search
it was specifically developed with containerised systems in mind to make it easier and can be a better choice than uwsgi and gunicorn
if your server versioning is older it is highly recommended to upgrade postgres anyway to use jsonb efficiently
svn is better than cvs
gson is not particularly fast but the jackson library can almost compete with most binary serializers jackson is 2-4x faster than gson in most situations and 10-20x faster on utf-8 because it has special code for utf-8
i m currently considering which is a better choice for my php application - mysql which i m more familiar with or postgresql which has less php support no object-oriented wrapper but seems tried and tested
is embedded jar better than embedded war file
i donâ t like using git itself though itâ s far better than svn or cvs but github is such an awesome site that iâ ve considered switching just to use it
paradoxally it does not mean that apache is faster than nginx it just means that on 1 2 3 .
also don t forget to upgrade the gradle plugin to 1.5.0 or newer as older versioning are not supported
one more example with gem fog and heroku configuration for carrierwave with amazon s3 hosted on heroku
the origin server would get the images from s3 process them using graphicsmagick since it s much faster than imagemagick then serve them
since developing in ironruby ironpython is faster you can use it to write pocs and later implement the real application in c# or whatever you re using
con you can encounter issues related to library versions and dependencies macports has more software than homebrew
nowadays with xquery there is no reason to use xslt anymore xquery is much nicer
maven is better for managing dependencies but ant is ok with them too if you use ant+ivy and build artefacts
it is a great tool if you want to use git as frontend for an existing svn server but for one-time conversions you should not use git-svn but svn2git which is much more suited for this use-case and also makes proper git tags from the svn tags
the pattern-based version installed by default on red hat-based linux distros fedora centos etc is simpler
while you could use -cp to javac to add the required dependencies to this compilation you d be far better served by learning ant or maven
glassfish seems to be slower than resin
for these ultra simple queries postgresql can be slower than mysql - postgresql has richer planner that works better on more complex queries but on trivial queries is slower
i am getting better with google-chrome and firefox debugging tools but i still have not found a way to easily examine the local entity cache managed by breeze
haskell has more momentum these days but there are plenty of good parsing libraries for ocaml as well including the peg parser generator aurochs menhir and the glr parser generator dypgen
we recently have migrated redmine from a server which was running under centos 5.5 with the same ror environment the same load the performance was a way better than on debian 7
check out the quartz scheduler it does what cron does and more is easily integrated in a web app and allows you to call jobs written in java without any complicated plumbing
i think using a gridview is better for your case than a listview
xcopy will not be better than robocopy at this
is there any easy php testing framework and may be simpler than simpletest and not command line based like phpunit
junit is more direct and simpel to use if you start to learn java testng has more features but maybe is more complex
datamapper is newer than activerecord
the silverstripe cms is a great php framework better than laravel the most popular at the moment but its documenation lacking
note first there is no combobox item in awt there is jcombobox in swing which is better to use than choice of awt
on a side note i d recommend using tcpdf instead - it s a fork of fpdf that has better supports for utf8 among some other improvements
using settimeout is considered better than setinterval because of the screwy ways that js s event loop works
one more thing as in maven we can update or if we save the pom.xml file maven downloads all those dependency automatically
think about project management bug reports and it all adds up to something more than just cruisecontrol svn and nant
gitosis which is no longer in active development and you should be using gitolite but this answer applies to both of them stores each user s public keys in in your case gitosis .ssh authorized_keys
i ve read time and time again that tdd test first is more difficult with mstest than it is with other testing frameworks such as nunit mbunit etc.
nfs with the right setup version and tuning is just a tad slower than smb cifs
i think architecture with sockets was chosen for better portability between different lisp btw slime also supports clojure and mit scheme and os-es slime works on windows too
g++ compiler is more strict then gcc compiler
testng has more capabilities and can be helpful with integration tests junit is more focused on unit tests
svn is much better then cvs and git or mercurial are even better again
on linux it would be easier for you to link to shared library and use symlinks to correct version - imo it s much easier than using dlopen + dlsym
rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server
b use indexes - postgresql has bigger repertoar of indexes then mysql so use it - there are gist gin indexes
the famous line is nginx is not apache in other words nginx has better ways to handle urls than rewriting
sqlite is a more simpler database than postgresql or mysql and if you are testing very small applications you can easily use it instead of postgresql
i didn t work with these applications yet but afaik typo3 and ezpublish both php are considered much more professional than joomla
mysql is easier than postgresql but it doesn t really matter either way
for this the best option is gitolite better than gitosis
how could i make the imageview have more priority than textview
since using ram is faster than using disk zram allows linux to make more use of ram when swapping paging is required especially on older computers with less ram installed
i know that rails jruby handles concurrency better than mri but i don t know how to do it
web.py has a templating language of it s own it looks easier than django s
injecting code in a swift application is harder than it was for an objective-c application but it s still possible
for starters beautifulsoup is no longer actively maintained and the author even recommends alternatives such as lxml
i prefer web2py because there are more conveniences built into the environment than offered by django but web2py is much newer than django and hindsight always makes it easier make new implementations better
you can enable the root account and set a passwd but jumping to it with sudo is the better method
nginx is still faster and i might choose it but apache isn t asleep
found a dirty solution the preferences list .globalpreferences.plist located in library preferences folder of the user home directory contains preferred languages of the user default home directory is users user and if the user is root the path is var root but this path can be configured here method form nsstring can be used to get home directory
i hear postgresql is more robust and doesn t crash like mysql does in these situations
xna is more popular and has more tutorials then libgdx
a 64bit capable x86 cpu is no worse at running 32-bit code
jackson is faster but the api is 37x more complex than the gson api
does an eclipse installation perform slower after the upgrade
the advantage that you have is that unlike upgrading an operating system upgrading from ie7 to google-chrome 8 or firefox 3.6 is a more reachable goal for the average user of your app especially if you provide a link and upgrade instructions
give swt a go the api is a lot simpler than swing
i am new to laravel it s good for coding but it is not much faster than codeigniter
this is a weak point that iirc postgresql can handle better but with mysql you have to work around that by reverting the changes yourself in case of rollbacks
and since you asked for a work-around if you have access to visual studio you could whip up a little com-visible class library that exposes a .net-flavored regex much more similar to java s than vbscript s api that you could reference and use in your vba code
in my opinion glassfish is more user friendly than jboss so i decided use glassfish for my project
web.py is more low-level comparing with django
perhaps someone more familiar with bash zsh osx can make more sense of this
and people do install on their ubuntu system some external libraries so you need to search a lot more than what ubuntu contains and i won t be surprised if ubuntu or debian are large enough to already have conflicting libraries
nginx uses an event based non blocking single thread and the memory usage is relatively much lower than apache
the inclusion of jscript code into a batch file is simpler than vbscript and the translation of a small code segment from vbs to jscript is not problematic
in choosing heroku is more full-service whereas engineyard is a more traditional service giving you access to boxes but needing sysadmin skills
sure there is a learning curve with maven but reading a pom.xml is far easier than reading a build.xml
i want to encrypt decrypt a long file with rsa i know aes is better but this is just for a comparison in openssl libcrypto
cassini is not actually iis it is more of an emulation
attributes are used in a more meaningful manner than mstest or nunit
i ve read that nginx is faster for static pages but there are questions about its performance with php compared to apache s performance with php
installing a real database server is fairly easy so i d recommend sql server express as others have or even mysql or postgresql whatever is easier to set up
even lighttpd or nginx with natively pre-compiled c++ is slower than g-wan s c scripts
liferay is responsible for storing passwords with encryption or better as salt hash in the database
with gcc and clang your sse code is better whereas icc is a looser
postgresql gets much better performance and this is coming from a former mysql partisan
on the server off jsfiddle the submit button sits inline with the checkbox and tick text and the checkbox sits higher than the tick text rather than inline
postgresql is more sql compliant than mysql
i have solved it in the past very successfully using robocopy it s much more robust than xcopy
perforce is soooo much faster than svn because all the check-outs are stored on the server so it doesn t have to check every file on an update
if you really want to go more secure than ntlm your may want to configure kerberos
nginx is better at handling requests since it does not spawn a new process for every request unlike apache
also what happens when common msi c s versioning is higher in product b and b upgrade c on install
the upgrade sequence is much simpler i have a hard link in the app that points to the latest versioning of the apk the donwload starts and automatically laucnhes the install
freemarker is more advanced but a little complex as compared to apache velocity
though flot may be simpler d3.js is definitely more powerful
the xdm model used by xslt xpath xquery is much stricter it allows a free-standing zero-length text node but as soon as you try and add such a node to a tree it disappears
now started porting game from cocos2d-x to sprite-kit as cocos2d-x not offers box2d physics and new version of cocos2d-x 3.0 has less features
however due to it lack of android portability i have to replace all of my glfw code with sdl since sdl is more portable
it seems openmpi has better support for assigning ranks than mpich but setting up slurm and mpich wasn t trivial due to the cluster setup so i m hesitant to start over with openmpi
homebrew has less of a stranglehold on your machine doesn t require as much reading as macports
memcached has more overhead since you have to use a tcp connection to access it versus just a function call for apc xcache shared objects
so i suggest you build a p2 repository can be done in ant but seems simpler in maven tycho and split the projects to several repositories
but doing that kind of things with apache is rather painfull and is easier with nginx
in other words a future cffi release should give an alternative way to do embedding simpler than both cpython s and pypy s custom solutions respectively using the cpython c api and following
in vim it s much more difficult to run a subprocess than it is in emacs so in vim you need to have a separate running idris repl
i built a simple app for reading rss feed using rails and postgresql but am running into performance issues when i try to query my feed_entries table for posts from more than one feed
according to the above posts and my own experience lxml is definitely faster than beautifulsoup
apache mod_php is much more stable and cleaner while nginx will often deliver http bad gateway error coded in 502
x86 allows easier debugging - edit and continue is not supported when running in 64bit mode
5 a war file can be runnable executable though this is more common with jar files
ps llvm clang is easier to port.
it s generally accepted that lxml is faster than beautifulsoup ref
from the article it sounds like fossil isn t a database any more than git is a database
bionic the android version of libc is more slightly more limited not by much
i can think of two relatively straightforward things you can do without ditching php though i have to mention that php doesn t have much to recommend it and you would likely be better off with python django python flask or ruby rails
in other words m2e is more friendly to the maven way
by looking at various blogs i understand glassfish versioning 4.1 has older jackson library 2.4 which does not have this method and need to upgrade jakcson versioning 2.8
section 4.13 of better builds with maven describes using cargo to deploy a war specified using maven coordinates
maven can t be compared with ant as in maven vs ant maven is more than a build script than ant is
but in low traffic sites mysql postgresql is better
when maven is going deeper it falls back to normal pom.xml
-security concerns if this is a web application which i think it is as you mentioned lightweight you re better off with a ssl certificate which encrypts all traffic to from your server by using https
i switched from apache to nginx to save memory especially to serve static file i seem to be using about 75 less memory with nginx
i found that postgresql 9.3 has better capabilities for json than the mysql versions i am using
maven 2 has a steeper learning curve but provides a much richer set of functionality for building your projects and eclipse integration through m2e or iam
it seems a little bit more straight forward than kerberos but provides good ntlm sso capabilities
i am wondering what happens when i release a upgrade that has a higher target sdk versioning then the previous versioning of my app
use a swing gui not an awt gui since swing is much more powerful and flexible than awt
i didn t dig on why scikit-learn gives such unprecise result but it seems scipy gives better precision
perforce does have support for many other oses but our non-windows devs feel more comfortable with svn too
repeater has fewer templates then gridview
before i am using codeigniter but i found out that laravel is much better than codeigniter and it has a lot of features
i ve tried using pypy because i ve heard its faster than the cpython interpreter but still no good
jackson xml module faster than xstream
openssl is more similar to peter gutmann s cryptlib and gnu s gnutls
i feel like emacs is so much better than textmate
in my general programming experience compiled c c++ programs generally run faster than most other compiled-language like java or even compiled python and almost always run faster than interpreted-language like uncompiled python or javascript
then run all upgrade scripts but scripts should be written in such way that they do not execute if current versioning is higher than versioning expected by the script
ps i think that writing script is easier than hacking valgrind plugin callgrind with adding several counters for every instruction type
since postgresql is a lot more sane than mysql there are not that many tricks to report on
and it sounds strange but jruby scales very well and it s faster than mri with java 7
if that will solved later than wordpress menu is better than joomla
a typical lamp application like wordpress or phpbb runs more than 10 queries per pageview without problems
this also might be fixed solved in the git add mechanism in more up to date versioning i vaguely remember them adding their own .gitignore files to empty directories so i d really recommend trying to upgrade to the highest git versioning you can for that and other benefites your distro may provide by default an older versioning as ubuntu and debian do
i mostly work with esri software though i ve had a little bit of work with mapguide mostly for clients whose engineering departments are using cad more than arcmap
at least if the php versioning is newer and not including the deprecated functions like the extension in the error message i recommend to upgrade to a newer typo3 versioning and find a way to replace the extension ph_nextgenmenu with a newer one or edit it manually to use the typo3 sql api or the newer php functions directly
i am not an expert in deployment but in my experience nginx is much faster and more friendly to django compared to apache
i m testing some simple benchmarking calculations on win7 and linux ubuntu 16 to compare the timings and being wonder win appears to be much faster than linux
alternate build tools ant lots of configuration gradle conventions again less verbose than maven
in addition there are third-party libraries for xml manipulation which you may find more convenient such as dom4j suggested by duffymo or jdom
i think this method of manipulating the dom from the client-side is easier than using regex from a server-side language
swing or javafx would be better than awt
elementtree is included in the standard library but lxml is faster
if your in the market for a templating engine twig a new templating engine used by symfony is much better than smarty imho
postgresql is also a lot better imo than mysql and is the recommended database to use with django according to a lot of the people close to django
i m more familiar with ocaml than haskell so type constructor may not be the right term
that is one area i really think mongodb fits for but mysql postgresql is more recommended in general
apt-get upgrade actually installs the newer versioning
so if you want to use django or something like that it s probably not smart to use ironpython because it isn t really cross-platform doesn t work with some frameworks and it performs worse than cpython
by simple i mean setting up some compiler flags -wall doesn t show any errors or using such tools as valgrind used it with memcheck that didn t help much
maven is more or less an update concept of ant
when attempting to access the admin side of wordpress if the db versioning is lower than your wordpress versioning expects it will redirect you to a database upgrade page
in the non open-source world choices are wider such as qnx neutrino and vxworks
in regard to vao and vbo performance i disagree that vbo is faster i suggest to see this link
mysql is not less complicated that postgresql -- they re the same thing
the xcb library is alternative to xlib which is much better all around and supports a non-blocking interface but it doesn t play well with opengl
by default psycopg2 uses its own versioning of libssl and it seemed to keep a dependency on an old versioning of the library which no longer existed after my upgrade
be aware that the bourne shell in freebsd is more capable than on linux
i ve been using uwsgi in production on heroku for over a year and it seems to handle everything a lot better than gunicorn
apc have less feature than memcached and is easly to use and optimize but this depends on your needs
also note that while maven is no slower than ant for multi-module projects of this sort importing your maven project into an ide will generally result in far faster builds than maven can perform itself
i can understand windows 10 performing faster than linux on vm but why is the baremetal ubuntu so slow
gradle support is much newer and somewhat less mature than ant or maven but it works
update turns out that zsh implementation based on builtin compctl is much simpler than the bash implementation based on builtin complete
maven definitely has better integration with flex than ant
the framework has also improved majorly not to mention it supports pdo mysqli more secure than mysql and postgresql
jboss is a big and quite complex application and glassfish is smaller and i find it easier to understand
while ruby and rails don t change as often as they did a few years ago the dev ecosystem still evolves faster than linux distributions like ubuntu can keep up with
in ios regardless of whether the app is being written in objective-c or swift afnetworking makes life easier when writing requests
probably more popular than xquery is xpath which is the basis of xslt transform
regarding beautifulsoup lxml is more efficient and in my experience can handle broken html better than beautifulsoup
textmate is a better emacs for macs though that won t help you with solaris
for students in computer science major learning programming on linux freebsd is much better than doing these on windows
i would give you more info except a ip aliasing on centos 7 is more involved than i like much easier on solaris and b i m not familiar at all with configuring nginx very easy on apache
i like the monodevelop ide even better than sharpdevelop but i m not sold on installing and using mono s compiler just yet nor do i know if it can even handle the latest vb.net c# language features
between cruisecontrol and teamcity teamcity is faster and easier to set up but you may need to check on licensing for it
for more understanding with folder directory
beautifulsoup is more suitable for html parsing than lxml
service to build drools knowledge and get session i prepared a stateless engine lighter than the stateful one
to recap i want to know why a javac compilation utilizes so much more cpu than ecj
xapian is slightly more difficult to setup but is much faster than whoosh
if you want to a little bit further you can imagine use more powerfull scm clearcase perforce ... but maven integration is fewer not well documented and community provide less examples than svn or git
nginx makes apache better
the issue here is that an automatic translation from sql to linq will often have to perform more transliteration than translation - generating examples of how not to write linq queries
in my case apc is 59 times faster than memcached
else if you have more than one listview or gridview in the scrollview you need to create a customlistview
windows installer rollback will work as you request if you use 1 a minor upgrade or 2 a properly sequenced major upgrade that uninstalls the older versioning after successfully updating all files
first of all ant is older than maven and therefore does not include core support for dependency management
flask has a really great albeit smaller than django community and there are a lot of extensions available for common web-app extensions in the extensions directory
in many cases at least 2-3 times faster than mysql postgresql
after recent upgrade to latest wordpress versioning media uploads no longer work
i d like to have the view tehnology be jsps i find them much easier than freemarker or velocity
i would just use ocaml but haskell s syntax is so much better than ocaml s and haskell is pure and has cool features such as type classes
does corona have anything that allows us to compare versioning codes and the upgrade happens only if current db versioning is higher than the previous db versioning
i wonder why postgresql s single insert statement is completely faster than mysql s when autocommit is turned on
between lxml and beautifulsoup lxml is more equivalent to nokogiri
afaik jboss is much more adopted in production deployments than glassfish but this doesn t necessarily mean it s better
and wikipedia says that snmp can be run over tcp ip but udp is more common
another even simpler option than canopy and anaconda is just to download spyder s dmg which comes with the latest versions of numpy scipy matplotlib pandas sympy and the sci-kits
lxml is faster than beautifulsoup i think and has much better functionality while remaining relatively easy to use
and in the future i think you will get better help by posting ubuntu related questions to unix and linux stack or to dedicated to ubuntu
what is nice about cast is that it works exactly the same on most sql engines sql server postgresql mysql and is much easier to remember how to use it
nginx uses less memory than apache given the size of your setup i would definitely recommend that
if you can t or won t upgrade apache you can downgrade the pcre package to the first versioning that contains libpcre.so.0 which is 7.8 i think
available on almost every platform true of vi vim too of course - whether gui- or text-based java ides are available on most platforms too but only in gui mode and are significantly larger and need to be installed separately whereas emacs is generally more widely available - bsd nix linux mac systems
virtualbox free but less powerfull than vmware
websphere development studio v7 wdsc is older than ibm i 6.1 your build date is 2007 the article you re referencing came out in 2008
swing is a lightweight framework provided by java while awt relies more on native libraries and is considered heavyweight
for my webapp the integrated visual studio server cassini ist much slower than iis
we have a legacy application that uses hibernate 3.0.5 and we re trying to upgrade it to hibernate 3.3.2 the versioning that has less impact on the current code
that said client-side javascript is much more common and if you were using server-side javascript you would probably know the answer to your question
as the versioning of the ase in the dumped database will likely be older than the versioning of ase you are installing to do the restore you will technically be doing a database upgrade so you will want to review the installation documentation regarding upgrading databases
for example emacs s macro shortcut f3 and f4 is easier than vim s qq and q
bower is more focused on browser libraries and css while npm is more for server-sided stuff using node.js
testng strives to be much more configurable than junit but in the end they both work equally well
because spring s xml config is slightly more powerful than shiro s ini spring users are encouraged to use full spring config instead of shiro ini
i like ubuntu linux which has more than 27 000 packages in its universe repository. now you can run linux and windows at the same time
vb.net appears much more complex then vb6 and the learning curve is tough
if you are familiar of using junit it is easier to switch into testng
note line value may be inaccurate in adobe coldfusion though railo is much better with this
i am more familiar with apache php combo rather than say nginx and fastcgi with php setup so focusing on this area
tried cakephp but yii seems much clearer
zsh is more extensible and has a much greater focus on searching and completion than bash
xilinx tools suck but their raw silicon is better than altera
i have implemented it using process library and my own java code however i m wondering can it be done in simpler way with activiti jbpm and drools
serving static files with nginx is much more efficient than with apache
alter your command path so that jruby s version of the ruby command has a higher priority than the mri one
for example jruby is faster than mri jruby 1.7 is faster than jruby 1.6 jruby 1.7 running on hotspot is faster than jruby 1.7 running on j9 jruby 1.7 running on hotspot 1.7 is faster than jruby 1.7 running on hotspot 1.6 jruby 1.7 running on hotspot 1.7 with the c2 compiler is faster than jruby 1.7 running on hotspot 1.7 with the c1 compiler and so on
in the case of autotools it is slightly more complicated because not everybody who compiles the software would need automake and autoconf installed only those that need to change the build system adding new files counts as changing the build system
