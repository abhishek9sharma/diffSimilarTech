file, little, life, ---------------------------------------------------

file,little,life,easier
i changed the bitmap header file a little to typedef the struct and make life easier at least for me

foo,easier,name-lookup
struct foo is easier to parse then typedef d foo as the name-lookup is simpler

others---------------------------------------------------

symbol,natural,languages,c#,need,thing
many people who use the symbol defined by the typedef feel it more natural because often they come from other languages c++ c# ... where there s no need for the struct thing

pcb_q,need
you already typedef the pcb_q no need to use struct keyword any more

linux,kernel,clearer
one camp most notably the linux kernel people thinks that struct a is clearer than the typedef

longer,place,cleaner,smidgen
if you re using typedef you no longer need to write struct all over the place by useing typedef code is more cleaner since it provides a smidgen more abstraction

int,array,earlier
looking at what they have the struct holds and int and it holds an array that should be populated with the f_string typedef they defined earlier

length,symbols,longer,similar,counterparts,microsoft,compilers
you can verify with a simple objdump symbols objfile.obj that the length of decorated symbols by using typedef s is incredibly longer than their similar counterparts split into struct s microsoft compilers have historically used a proprietary name mangling scheme

readable
i usually typedef my struct to make it more readable

better
also i think typedef is a better choice when you want to define a struct

link,precise,type,pointer,actual,node
the list is composed of link struct to be more precise it appears the link type is typedef d to be a pointer to the actual node struct

keyword
c++ allows you to define struct without the struct keyword so the typedef is used less often

internal,better,encapsulation
having typedef s internal to the struct gives me better encapsulation since i only need to pass a single template parameter the dataset class rather than individually specifying the dataset plus t r .

ins,outs,helpful
this is a good example of a time to know the basics - i think understanding the ins and outs of struct is more helpful than typedef since you can do so much more with it

gudelines,fancy,data,definitions,type,understanding,complicated
following the linux kernel coding gudelines i don t fancy typedef because they tend to make the data definitions opaque if something is declared elsewhere as the typedefined type understanding that is a struct is somewhat more complicated

