radius, magnitude, special, ---------------------------------------------------

circle,special,sides,greater,radius
does the polygons encompass the circle this is that special case where the distance from all of the sides of the polygons would be greater than the circle s radius but the circle and polygons still obviously intersect

magnitude,center,circle,radius,intersects
if the magnitude of the distance between the center of the circle and the center of the polygons is less than the radius of the circle the polygons intersects

radius,circle
if that distance is less than the radius of the circle then you know that the polygons intersects the circle

actual,minimum,maximum,greater
calculate the actual minimum distance and continue through the sorted list until the maximum distance between the polygons is greater than the minimum distance found so far

points, point, original, ---------------------------------------------------

original,smaller,centroid,vertex,percentage,point
to answer your original question as to how to generate the smaller polygons you can find the centroid of each polygons and offset each vertex by a percentage of the distance to that centroid point of the polygons to get the smaller polygons

notes,width,articulation,points,larger
notes the width of the polygons cannot be fixed as you realize because at articulation points the distance will be larger

function,st_distance,point,greater,data
root punto is a valid geojson point i checked it with the st_isvalid function and also if i use the function st_distance checking if the distance between the point and the polygons is greater than zero the data retrieved is correct but i don t know if this approach is correct

others---------------------------------------------------

rectangles,easier,nearest_rect,its_diagonal
testing the distance between rectangles is easier than testing the distance between polygons and you can immediately eliminate any polygons that are more than nearest_rect + its_diagonal away possibly you can refine that even more

new,segment,x,last,point.
plenty of others don t use a delimiter at all and require you to start a new segment polygons if you re more than x distance away from the last point. furthermore these things often wind up being multi-gb ascii files so reading the entire thing into memory can be impractical

edges,blue,lower,upper,minimal,red
then i would simply check the edges of all blue polygons whose lower bound of distance is lower than the upper bound of minimal distance against all the edges of the red polygons

route,greater
that the distance when the route is confined to the polygons should be greater in this case 5.00

buffer,negative,smaller,shape,original
create a buffer with a negative distance to get a smaller polygons with the shape of the original

drawback,vertices,intuitive,area,proportional
the one drawback is that distance between vertices might be slightly less intuitive than polygons area but the two are proportional

average,beetween,points,segment,outer,longer,avgd
- for example if you call avgd the average distance beetween points you could add the constraint that no segment of your outer polygons should be longer than 1.2 avgd or better alpha avgd and you try your algorithm with different alpha

