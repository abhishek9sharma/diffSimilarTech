others---------------------------------------------------

efficient,generation,rtti,exceptions,exception,call-frame,noexcept-declared
noexcept allows for more efficient code generation in that it does not have to perform rtti on throw exceptions instead if an exception is throw from a call-frame underneath a noexcept-declared function std terminate is called short-circuiting the crazy std unexpected machinery specified by the 98 standard

certain,body,explicit,compiler,ancestor,class,runtime
on the other hand if you are certain that the body may not throw you may want to declare it noexcept to be more explicit and help the compiler optimize but be careful if you choose to do this because if a destructor of any member ancestor of your class decides to throw your code will abort at runtime

execution,terminated.,optimized
unwound before program execution is terminated. he said code using noexcept is more optimized than code using throw

keyword,exception
i ve heard that noexcept keyword is more like it should never throw an exception rather than it doesn t

specifiers,powerful
noexcept was added rather than just removing all throw specifiers other than throw because noexcept is more powerful

