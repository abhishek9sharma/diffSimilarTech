easier, application, experience, ---------------------------------------------------

opinion,easier,results,nicer,application,right
in my opinion swing is easier to learn and to use but the results of swt are often nicer - you can often feel that a swing application behaves not completely right

application,easier
into swing application i like to avoid using it with swt but is its more easier its ok

layuots,exact,easier
it can be hard to get the layuots exact the way you want in swt it s usually easier in swing

view,easier,experience
so in my view using swing is simply easier unless you have more experience in swt

faster, versions, enough, ---------------------------------------------------

vs,netbeans,faster
as for swing vs swt netbeans gui considerably faster than eclipse.

faster,modern,versions,enough
swt is claimed to be faster than swing although in modern versions swing is also fast enough

different, awt, note, ---------------------------------------------------

ps,anybody,different,technology,awt,better
ps i m not set on swt if anybody thinks a different library technology such as swing awt is better

different,note,customizable,best,awt,limited,platform
these two are completely different logically speaking and you should choose only one of them to go further with note that swt is more customizable and tries to combine the best from awt and swing while swing is more limited and uses the platform s native widgets

api, uglier, simpler, ---------------------------------------------------

uglier,api,deal,breaker
i find swt to be an uglier api than swing in general though but not really a deal breaker

api,simpler
give swt a go the api is a lot simpler than swing

opinion,nicer,api,respect
having used it myself in my opinion it s also far nicer than swing in its api more like swt in that respect looks far nicer by default and far more flexible in what it allows you to do

others---------------------------------------------------

easier,components,hand,native,look,performance,enough,good,faster
it api seems for me easier than swt you haven t got to manage disposing components by hand to prevent memory leaks you adding component to panel instead of constructing components with parent panel information former is closer to my previous experience...etc. native look and feel you can get in swing too overall performance is enough good swt should be faster because it s using native components of backed os - but is the performance gain really big pro

point,native,controls,ability,better
keep in mind that the point of swt is to use native controls so if you desire the ability to completely customize your controls perhaps using swing would be a better option

weaker,gui,technologies,accessibility,rate
swing is the weaker of the gui technologies relating to accessibility in java compared to swt at any rate

platform-specific,look,ships,built-in,external,libraries,use,eclipse
swt has a more platform-specific look about it but java ships with swing built-in there s no messing about with external libraries as with swt although the use of eclipse may make that much easier i still develop quite a bit of my stuff from the command line unfortunately

eager,familiar
i m not too eager for using swt though since i m more familiar with swing

newer
also swt is actually newer and more actively maintained than swing

bugs,harder,final,hostile,package,several,sources
fixing bugs in swt is much harder than in swing most classes in swt are final or contain hostile checks in the constructor to make sure no one extends them the package is signed so you can t simply replace classes and so far i tried several times to compile swt from sources - and failed

community,smaller,tools
swt community is smaller and it doesn t provide that many tools as swing does

simple,first,ui
swt is more simple to use than swing especially if this is your first ui

native,awt
due to that swt looks more native than awt swing

design,aspects,simpler,imo,better
even though i liked many design aspects of swt and it is simpler than swing imo swing is the one to learn because imo it has far far better documentation examples etc

slower,proxy,os
swt became slower than swing because it uses proxy to os widgets

nice,nicer,awt,ibm
if you want a java gui that actually looks nice well nicer than swing or awt then you want to check out swt from ibm

faster
is swt faster than swing

