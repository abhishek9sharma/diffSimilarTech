convenient, ejb3, lighter, ---------------------------------------------------

knowledge,session,engine,lighter
service to build drools knowledge and get session i prepared a stateless engine lighter than the stateful one

convenient,wicket,better,jsf
while this is much less convenient than stateful wicket i still find much better than say stateless jsf or struts

kinds,transactions,session,faster
for certain kinds of transactions a stateless session may perform slightly faster than a stateful session

ejb3,thing,better,session,beans
in ejb3 there is no such thing as stateless is better than stateful session beans

others---------------------------------------------------

cluster,simpler
dealing with a stateless cluster is often simpler then dealing with a stateful cluster

development,connections,problems,simpler
while a lot of development has been done with stateless connections to solve most problems sometimes it s just simpler with stateful connections

short,better
or in short stateless is better than stateful

components,easier,rule,thumb,possible
so because stateless components are easier to keep bug-free the rule of thumb when working with react is to have as few stateful components as possible and to keep those in the top of the component hierarchy

service,harder,scale,services
a stateful service is typically harder to develop and scale than stateless services

days,sense,opt-in,sessionscope,universal
but note that while stateful isn t used much these days it usually makes more sense to opt-in for stateless sessionscope is much more universal and fits into nearly any session-based scenario

services,thin,admin,console,interactive,functionality
the restful services are rather thin and completely stateless whereas the admin console is stateful and has more interactive functionality and therefore more memory and processing required

ejb,faster
stateless ejb are faster then stateful ejb

client,server,aware
i think stateful client stateless server makes you more aware of the amount of data that is transported back and forth between tires

situation,appropriate
do you have any situation where stateful is more appropriate than stateless

applications,definition,better,ones
but keep in mind that in many cases being stateful or not stateless is no problem and not all stateless applications are by definition better than stateful ones

