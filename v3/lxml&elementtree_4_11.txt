api, world, effective, ---------------------------------------------------

faster,application,speed
lxml is faster than elementtree but i ve never found an application where the speed boost paid for the hassles of distribution

faster,effective,api,standard
but in general you will find that lxml is faster more effective and has an api which adheres closely to a python standard the elementtree which comes with the python standard library

world,standard,faster
while celementtree is fast the world standard lxml library which also implements the elementtree is faster still

others---------------------------------------------------

step,import
with those step i can import lxml and got no more problem with from lxml import elementtree

xml,documents,productive
for xml documents it may be that the elementtree offered by lxml is more productive

libxml2,nicer,interface,benefit
lxml uses libxml2 and provides a nicer interface the elementtree so you get most of the benefit of libxml2 s speed and all of the benefit of it s xpath evaluation

tree,html,wrapper,lib,html5lib,pure,object,faster,forgiving,invalid
if for some reason you want to use an implementation that does not give you a full parse tree then i would suggest parsing the resulting html using lxml a python wrapper of the c lib or html5lib pure python both of which can return an elementtree object and are much faster especially lxml and more forgiving of invalid html especially html5lib which acts more like real browsers in the real world

better,documentation,technical,use
although lxml has better documentation better xpath support and better code for technical reasons i cannot use lxml so i am forced to use elementtree

note,easy
note please do tell me if lxml is more easy or this elementtree

standard,faster
elementtree is included in the standard library but lxml is faster

better
lxml -- 100x better than elementtree

