data, queue, b, ---------------------------------------------------

structures,better,read-heavy,data,natural
thus write-heavy data structures are probably better implemented mutably and with something like a skip-lists where you only need to lock locally while read-heavy data structures are probably better implemented immutably where a tree is a more natural data structure

double-ended,queue,b,better,data
the most simple would be an array but a double-ended queue or an indexed skip-lists b tree could be better depending on the data size we are talking about

different,binary,custom,data,better,concurrent
in a single thread world is different you can use a sorted set a binary tree or your custom data structure that would perform better than concurrent skip-lists

search, e.g, performance, ---------------------------------------------------

doubt,better,e.g,avl
i doubt that the skip-lists was the better choice than an e.g an avl tree even in 1989

binary,search,better
so as you can see the random binary search tree was rather a lot better than the skip-lists

difficult,self-balancing,binary,better,performance
skip-lists isn t any more difficult to implement than a self-balancing binary tree and gives much better performance in some situations

binary,search,lists,rebalancing
balanced binary search tree will perform more poorly than a skip-lists in such a case as skip lists require no rebalancing and skip lists are also inherently sorted like a bst

bounds, asymptotic, faster, ---------------------------------------------------

asymptotic,time,bounds,balanced,simpler,faster
skip-lists algorithms have the same asymptotic expected time bounds as balanced tree and are simpler faster and use less space

algoriths,asymptotic,bounds,balanced,simple,faster
that is not exactly what i was expecting from skip-lists algoriths have the same asymptotic expected time bounds as balanced tree and are simple faster and use less space pug89

others---------------------------------------------------

pain,red-black,manageable
for example if you want to implement an equivalent of std map it would be a pain to do it with a red-black tree but a skip-lists is much more manageable

