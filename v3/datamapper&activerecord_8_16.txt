newer, better, idea, ---------------------------------------------------

newer
datamapper is newer than activerecord

better,newer
so a question for those who know better is datamapper newer than activerecord

idea,better
datamapper idea is definitely better than activerecord

legitimate,better,single
so far the only legitimate reason i ve found to use datamapper over activerecord is that datamapper is better in terms of the single responsibility principle -- because the database rows are not the actual objects being persisted but with propel that doesn t really concern me because it s generated code anyway

logic, standard, thread-safe, ---------------------------------------------------

complex,easier,domain,database,asynchronous
datamapper is potentially more complex then activerecord but it s a lot easier to develop your domain model and database asynchronous then with activerecord

pattern,database,domain,logic,easier,thread-safe
both use the activerecord pattern so you ll actually get your database tables back in objects without fancy domain logic but datamapper is way easier to work with and is thread-safe

model,easier,defacto,standard
from my point of view the datamapper model is much easier to grasp but since activerecord is the defacto standard it feels weird to change the orm just for this little problem

others---------------------------------------------------

level,abstraction,higher
the level of abstraction of datamapper is way higher than the activerecord s

port,support,simple,look
i don t know whether this port of cql3 to ruby support activerecord it acts more like a simple datamapper but it worths having a look

simpler,limited
activerecord is much simpler then a datamapper but also much more limited

cleaner,gem,none,databasecleaner
i have searched it in google but most of the articles talk about how to use database cleaner gem with activerecord but none of them clearly specify how to use databasecleaner gem with datamapper

faster,modularly,plugins
i d recommend datamapper for orm not only it s way faster than activerecord but it s also very modularly built and plugins are actual gems that you can easily install

syntax,friendy,chainable,conditions,beginning
also datamapper is much more ruby syntax friendy and features like lazy loading when doing chainable conditions like activerecord in rails 3 are there from the beginning

smarter
datamapper is much smarter then activerecord

work,tasks
with datamapper this is somewhat more work than with activerecord which provides it s own db tasks

codeignitter,faster,use
codeignitter is using activerecord something that uses datamapper could be faster not sure if you can change that though most probably you can havent use codeignitter

