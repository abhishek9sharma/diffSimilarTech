slower, thousands, query, ---------------------------------------------------

range,faster
you d still have to filtering to get a range though it ought to be faster than sorting at least

query,pseudomedian,faster
in terms of your speed query i d propose that your pseudomedian filtering is faster because it doesn t involve sorting

slower,thousands
if almost all elements fail the filtering then it s considerably slower than just sorting everything since you ll end up selecting thousands of times

data, milliseconds, smaller, ---------------------------------------------------

rows,data,milliseconds
the filtering on about 10 000 rows of data and sorting all happens in less than 50 milliseconds

objects,longer,smaller,data
sorting all the objects before filtering is sure to take longer than filtering and then sorting a smaller data set

others---------------------------------------------------

expensive
filtering is a lot less expensive than sorting

little,bit,sql,hand,versatile
sorting in java is a little bit more work than in sql on the other hand filtering is more versatile when implemented in java

tricks,user-driven,sectioning,better,predicate,nsfetchrequest,actual,model
these kinds of tricks can be applied to modify user-driven sorting and sectioning but for filtering you re better off using a predicate on nsfetchrequest which filtering on actual model data

indexing,simpler
filtering indexing sorting all is simpler that way

least,point,complete
but the least filtering i apply the more sorting is glitching up to the point of being complete broken

note,age,values,equal
note this won t be sorting sorting by age it should be exactly a filtering having values less or equal to 18 and older than 18 -- a drop down list or radio buttons

_score,relevance,km,geo-distance
i thought i can use _score for sorting and give more relevance to people who are under 1000 km but geo-distance is a filtering i don t seem to find any way to give relevance in filtering

hand,stable,contexts,stable_sort,approach,straightforward,numbers,sign
on the other hand you may want stable sorting in other contexts as well and so if you have the stable_sort function defined this approach would still be more straightforward than filtering out the numbers with each sign and recombining them

book,advantage,array,simpler,iife
or taking a leaf out of friedi s book taking advantage of sorting the array first but using reduce instead of filtering which is slightly simpler because it means we do not need a iife to close around a previous item

field,selective,cheaper
if your author field is selective and sorting is cheaper than filtering

local,paging,round-trip,server
the reason of the choice local sorting paging and filtering will be typically more quickly as the round-trip to the server

datatables,paging,html,table
datatables allows you to add sorting paging filtering limiting and more to any html table

complicated,summation,median,longer,time
considering sorting is more complicated than summation median filtering will cost longer time

step,longer
but right now the sorting step is taking way longer than the filtering step so i would like to combine them in some way

search,efficient,single,use,binary,findany,stream
but if the collection isn√¢ t sorted a simple linear search is more efficient than sorting just for a single use of binary search not to speak of the fact that binary search works with list s only while filtering findany works with any stream supporting every kind of source collection

pagination,conditions,complicated,photos
you can filtering by adding pagination conditions but sorting is more complicated seeing as photos can have multiple categories

