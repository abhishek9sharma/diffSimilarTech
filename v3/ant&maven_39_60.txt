better, easier, tool, ---------------------------------------------------

oy,gradle,ivy,dependency
you get the same mechanism for other dependency managers like ivy oy gradle maven ivy ant gradle are more than just dependency managers but it s not the point here

better,dependencies,ant+ivy,build
maven is better for managing dependencies but ant is ok with them too if you use ant+ivy and build artefacts

dependencies,easier,conifrtable
i think updating dependencies with maven is pretty easier than dealing with ant but of course you could select the other way if you feel more conifrtable

better,alternative,system
maven is a better alternative as build system compared to ant

things,harder
you can do things easily in ant that are harder to do in maven

better,job,dependencies,build.xml,files
and it turns out maven really does a better job of managing dependencies for ant build.xml files than does ivy

modern,tools,gradle,feature
ant pre-dates more modern tools like maven and gradle that have this feature baked in

better,tool,long,run
while i personally think maven is a better tool than ant in the long run our experience will make maven3 a better tool than maven2

easier,compatible,eclipse,use
it s a lot easier than ant fully compatible with eclipse use maven eclipse eclipse to create eclipse projects and easy to configure

similar,nature,better,c#
this question is similar in nature to whether ant is better than maven or c# better than java

better,big,projects
maven is definitely better than ant and well used for big projects

system,architect,better,projects
trust me i did this before for another job where the system architect decided that maven was better than ant and all of our projects must be converted from ant to maven

file,operations,better,bet
if you want to stick to lower level basic file operations ant is better bet than maven

ivy,better,difficult
i also find ant with ivy to be better documented than maven although that s not too difficult

scripting,tool,structure,lifecycle
since ant is more of a scripting tool and doesn t impose structure or lifecycle like maven and gradle you simply manually invoke ant when you want to use it

size,jar,bigger
the size of maven jar is bigger then ant jar i don t know why help me please

gradle,freedom,easier
you can take a look on gradle which for me could provide more freedom than maven but is easier to use than ant

proper,tool,easier,necessary,difficult
i agree with previous answers but i would also recommend to use proper java build tool - like ant perceived easier to use but not necessary or maven perceived more difficult to use but really worth learning

internal,dependencies,jar,earlier
can maven examine and resolve internal dependencies of non-mavenized jar library defined earlier by ant

better,integration,flex
maven definitely has better integration with flex than ant

war,tool,future
while i won t start a war of ant vs maven maven is much more than just a build tool and that may help you in future

script,.class,files
1 - why ant script generates more .class files than maven

things,better,plugin,difficult
however some things ant handles better than maven and if there s not a maven plugin for it it may be difficult to handle in maven

shell,script,easier,control
the second build can run a shell script or ant instead of maven allowing you easier control of your remote server

ecobertura,easier,post,tool
also forgot to mention junit testing framework and a great eclipse plugin eclemma for code coverage much better than cobertura ecobertura and easier to use and of course you can try maven as the other post mentionned or try ant as build tool

better,project
i know that ant would be better for this but i m using maven in my project

younger,tool,time,maturity
first maven is a much younger tool than ant or make so you have to expect that its going to take time to get to the maturity level of those applications

number, tool, sophisticated, ---------------------------------------------------

number,dependencies,similar,tool,sophisticated
a hood technique is to tag milestone releases of your projects giving then a version number and then manage dependencies with maven or a similar tool a bit more sophisticated than ant

interesting,useful,system,tool,broader,development
having said all of that i do think that maven is a very interesting and useful system i m not calling it a tool like ant is maven is broader than that for software development configuration and build management

older,number,projects,ground
ant is older and while it is still used in a number of projects it is rapidly losing ground to maven

simpler, directory, repository, ---------------------------------------------------

simpler,older,default,project,newer,powerful
ant is simpler and older and the default just called a java project maven is newer more powerful and flexible

p2,repository,simpler,tycho,projects
so i suggest you build a p2 repository can be done in ant but seems simpler in maven tycho and split the projects to several repositories

projects,different,directory,structure,spring,source
also maven projects come with a different directory structure and seems to be doing much more than what ant does in the spring source tutorial

complex, powerful, ---------------------------------------------------

powerful
i know maven is more powerful than ant

complex
does this make ant more complex than maven

respects, repo, excels, ---------------------------------------------------

source,repo,preferred,powerful
but as i checked-out some example apps from spring source repo and it seems that maven is more preferred and powerful than ant

powerful,respects,excels,dependency
ant is much more powerful than maven in many respects but maven excels in dependency management and ease of deployment

gradle, maven-centric, notation, ---------------------------------------------------

alternate,tools,configuration,gradle,conventions,verbose
alternate build tools ant lots of configuration gradle conventions again less verbose than maven

rest,scripts,gradle,path,maven-centric,better,notation
if they are going to use any non-maven way to retrieve them ui rest scripts ant gradle then you can go with any path and name you like and you ll get full support from artifactory uploading searching etc. with nexus which is much more maven-centric you ll better stick to maven notation

others---------------------------------------------------

simple,solution,obvious
i find the simple solution ant calls maven more obvious

usage,lower
maven usage is lower compared to ant but just how much lower is not really known

cool,cooler
while ant is cool maven is cooler

version
i guess that the maven version contains much more than the ant version

meta-program,scripts,junit
maven is more of a meta-program that can use ant scripts and run your junit tests

clearer
i find the ant one much clearer than the maven one

replacement,gnu,primary,buildout
as you ve already said ant is more a replacement for gnu make while maven is primary a buildout dependency-management application

better,common,tasks,complicated,build.xml,good,defaults
it is much better than ant because for most common tasks you don t have to write a complicated build.xml maven has very good defaults and it s all convention over configuration

alive
did maven has achieved more then ant or ant is still alive

older,core,support
first of all ant is older than maven and therefore does not include core support for dependency management

new,standard,pure
this is to learn something new but also because it seems like implementing maven within ant is less of a standard than is just pure maven.

slower,multi-module,projects,sort,project,ide,faster,builds
also note that while maven is no slower than ant for multi-module projects of this sort importing your maven project into an ide will generally result in far faster builds than maven can perform itself

builds,basic,pom.xml,filds,simple,specific,stuff,scripts,system
it will depend on the complexity of your builds if you have basic java builds then maven might be more suited as the pom.xml files maven build filds are pretty simple but if you need to do a lot of custom specific stuff you may well end up having ant scripts to perform also if you already have one system in place there isnt necessarily a huge advantage of swapping

quotation,fair
the quotation you brought up just claim that maven does more than ant so that it s not fair to compare the two

higher,level,classic,tool,build.xml
maven is higher level than make makefile the classic c c++ build tool or ant build.xml

replacement
maven is more like a replacement for ant

reliable,non-core,plugins
troubleshooting the build maven is less reliable than ant especially the non-core plugins

a.k.a,live,different,environments.all,environment,things,capable,care,this.though,flexibility
in maven you can define a.k.a testing.staging live etc which allow you to configure settings for different environments.all you need to specify maven about the environment for which you want the things to move and maven is capable enough to take care of this.though this can be done with ant also but i believe that maven provides more flexibility

jacoco,tasks,freedom,plugin,specification
in jacoco 0.7.9 there are jacoco ant tasks and in 0.8.0 there will be jacoco command line interface - both provide more freedom than jacoco maven plugin in specification of what should be included into report in particular can be used for arbitrary third-party jar files

concept
maven is more or less an update concept of ant

testing,support,expensive,integration,complexity
testing and support of ant code is quite expensive and integration with maven adds even more complexity

