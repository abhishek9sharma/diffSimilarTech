better, ---------------------------------------------------

better
strtol can be a better atoi specifically w.r.t

better
you can also use strtol which is obviously better than atoi

errors, int, checking, ---------------------------------------------------

string,equal,better,error
once you ve done that you can use strcmp to see if the string is equal to stop and if not then call atoi or better yet strtol which has better error checking to get the numerical value

checking,errno,better
all have more or less cumbersome and non-obvious error checking involving errno strtol is way much better than atoi in any case so avoid using atoi

better,failures
besides strtol is a better option than atoi as strtol can handle failures better

error,check,better,errors
you need to error check strtol and ensure there are as many passed before using them -- strtol is better than atoi as helps detect errors

better,error
strtol is better than atoi with better error handling

better,error,checking
you can also look into strtol which is better than using atoi in terms of error checking

use,better,error,reporting
use strtol it does better error reporting than atoi

better,function,error,checking
instead of atoi using a better function like strtol which allows error checking

function,better,habit
the c function strtol is much better make it a habit to prefer that one to atoi

instance,better,time,strtok
for instance strtol is better than atoi and you should be checking each time whether strtok returns null

string,int,solution,better,example
i used atoi to convert the string to int but for a more robust solution it s better to use strtol but for your example atoi is more than enough

better,error,handling,sscanf
i would recommend strtol which provides better error handling than atoi or sscanf

digit,number,better,failures
if you want to accept a number rather than a digit and only a number strtol works much better than atoi as it allows you to check for failures

others---------------------------------------------------

buffer,human-readable,text,value,note,powerful,long,int
i start off calling gets to fill the buffer then using strtol to convert the human-readable text in buffer to an actual computer int value - note that strtol is more powerful than atoi and uses long int instead of int as its declared type

things,reliable,easier,solutions,kirilenko
so when trying to make things more reliable as atoi and easier to use as strtol solutions like kirilenko s would be used

safer,counterpart
also instead of using atoi use the safer counterpart strtol

strtof,atof,former,errors,flexible,non-base-10
i understand that strtol and strtof are preferred to atoi atof since the former detect errors and also strtol is much more flexible than atoi when it comes to non-base-10

