safer, alternative, overflows, ---------------------------------------------------

safer,right
using strncpy instead of strcpy is normally safer but here you alloc eachtime the right amount of memory needed to store inpoint into mpoint so i cant see what s the point

unsafe,cousins,strcpy_s,safer
strcpy is notoriously unsafe as are it s cousins strcpy_s and strncpy although they are mildly safer than strcpy

printpiglatin,function,better,safer,overflows
concerning the problem your printpiglatin could use the existing function strcpy or better strncpy which is safer in regards to buffer overflows

safer,alternative
in general strncpy is a safer alternative to strcpy

safer,method
strncpy is not safer method to use as strcpy

safer,additional,parameter
i was exploring around with c regarding strncpy since most people says that it is safer than strcpy additional parameter length to avoid buffer overflows

safer,segmentation
replaced strcpy with strncpy which is much safer apparently and that removed the segmentation fault

safer
strncpy is safer than strcpy

myth,safer,version
myth 3 strncpy is a safer version of strcpy

safer,type,bugs
strncpy is not safer than strcpy it just trades one type of bugs with another

switch, simpler, checking, ---------------------------------------------------

better,things,strlcpy
using strncpy 3 is better than strcpy 3 but things like strlcpy 3 are better still

better,checking
strcpy could be better replaced by strncpy which does some bound checking

string,use,better
to copy a string in c use carefully strcpy 3 often strncpy is better

i.e,better,simpler,willing
i.e strncpy is actually better than the simpler strcpy if you are willing to improve the code

switch,strncat,better
switch from using strcpy to strncpy or strncat which i think is better than strncpy

null, nonsense, complete, ---------------------------------------------------

dangerous,null,termination,mechanism,intuitive
it is in fact considered to be much more dangerous than strcpy since the null termination mechanism of strncpy is not intuitive and therefore often misunderstood

safe,version,complete,nonsense,unsafe,null
it was never intended to be some safe version of strcpy - that s complete nonsense since strncpy is far more unsafe because of the null termination issue

others---------------------------------------------------

safier,second,one
using strncpy is considered safier than strcpy because the second one can easily cause buffer overrun

initial,strlen,safety,slower,check,difference,memcpy,worth
but for the example you give it doesn t matter - if it s going to fail it will be in the initial strlen so strncpy doesn t buy you anything in terms of safety and presumbly strncpy is slower as it has to both check bounds and for nul and any difference between memcpy and strcpy isn t worth changing code for speculatively

buffer,overflow
strncpy is more recommended that strcpy because protect your code against buffer overflow

custom,version,weird,length,input
the best solution is to write a custom version of strncpy that is less weird or if you know the length of the input just use strcpy

instance,useless,nothing
for instance strncpy is mostly useless it gives you nothing more than strcpy

secure
so that the strncpy is more secure than strcpy

