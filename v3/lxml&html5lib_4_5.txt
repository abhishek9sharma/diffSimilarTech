slower, rate, faster, ---------------------------------------------------

faster,parser,broken,html,closest,browser
lxml is the faster parser and can handle broken html quite well html5lib comes closest to how your browser would parse broken html but is a lot slower

html,options,closest,modern,slower,rate,parsing
the standard html.parser option handles broken html less well than other options while the html5lib option is closest to how a modern browser would handle broken html albeit at a slower rate than lxml would handle html parsing

others---------------------------------------------------

parser,faster,lenient,kind
lxml parser is generally faster html5lib is the most lenient one - this kind of difference would be relevant if you have a broken or non-well-formed html to parse

parser,better,job,html.parser,debate
html5lib parser does a better job than lxml or html.parser handling the debate element in this case

tree,html,wrapper,lib,pure,elementtree,object,faster,forgiving,invalid,real,browsers
if for some reason you want to use an implementation that does not give you a full parse tree then i would suggest parsing the resulting html using lxml a python wrapper of the c lib or html5lib pure python both of which can return an elementtree object and are much faster especially lxml and more forgiving of invalid html especially html5lib which acts more like real browsers in the real world

