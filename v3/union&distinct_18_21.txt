better, sort, first, ---------------------------------------------------

better,first,order
union all performs better than union union works like distinct first order by then remove duplicates

better,performance
the union all with a distinct gives better performance though i believe..

better,performance-wise
so union is much better than the union all with distinct in performance-wise

better,sort,set,different
union all is better than union because it avoids a sort you know you ll get a distinct set because you re joining on two different tables

better,records,expensive,sort,operation
union all will perform better than union when you re not concerned about eliminating duplicate records because you re avoiding an expensive distinct sort operation

better,subqueries,computation,values
the union can result in better performing subqueries which makes up for the increased computation for removing distinct values

better,last,count
i don t think you can do much better than 3 union maybe the last 2 can be combined with count distinct

slower, quicker, tables, ---------------------------------------------------

tables,huge,faster
however the tables are huge and the union all i read its faster than distinct takes forever to execute even with just two tables let alone 6

quicker,check
using union all is quicker than using union since a distinct check does not need to be done

faster
that s one reason why omitting distinct and replacing union by union all is much faster

slower
union forces a distinct to occur and there s little slower than distinct

situations,query,slower
i have experienced situations where union s made a query much slower than union all with a distinct afterwards

slower,values
the union might be slower due to it attempting to get the distinct values

faster
union all is generally faster than using distinct or grouping

duplicates,slower
keep in mind that union will return a distinct list - duplicates will be removed but it will perform slower than using union all which will not remove duplicates

note, resultset, data, ---------------------------------------------------

note,rows,faster,duplicates
a side note since you want all rows using union all is faster since it does not need to perform a distinct to eliminate duplicates

difference,faster,duplicates,resultset,select
the difference is that union all is faster than union due to the fact that union eliminates duplicates from the resultset by using select distinct

outer,query,faster,uniqueness,data
i am currently using union all and a distinct in the outer query as this proved much faster than using union s for the uniqueness of data

others---------------------------------------------------

session,values,tables,set,common,requirement
it sounds to me like you are asking for the union of the filtered session values from the two tables and as you want the distinct set you do want union rather than union all union all is actually a much more common requirement than union

enums,c#,appropriate,f#,read-only,values
it s common to use either strings or enums for these in c# java but discriminated union seem more appropriate in f# because these are distinct read-only values

similar,efficient,operation
then you might switch to except all similar to union all which might be more efficient than union because it avoids the distinct operation

