0---------------------------------------------------

specific
ienumerable is less specific than ilist

specific,functions
ienumerable is less specific than an ilist that is ilist has functions that ienumerable does not

other---------------------------------------------------

method,collections,abstract
another suggestion change you to because you can keep an extension method for more collections because the ienumerable is more abstract than ilist

lighter,situations,approach
yes i understand that ienumerable is much more lighter rather than ilist but anyway there is a lot situations where we need to have ilist instead of ienumerable and in this approach we need to cast ienumerable to ilist isn t it

stronger,guarantees
ilist is stronger in that it makes more guarantees than ienumerable

work,specialized
the reason why this doesn t work specifically is because ilist is more specialized than ienumerable

tolist,interface,functionality
you need to use tolist to convert it from ienumerable because the ilist interface supports more functionality than the ienumerable interface

specific
an ienumerable is less specific than an ilist

able
thus ilist is more than ienumerable and you won t be able to get away with it

specific,implements,.count,delete,use
ienumerable is less specific than ilist ilist implements ienumerable so unless you want something specific from ilist such as .count as you suggest or perhaps add delete etc i d use ienumerable

abstract,list,possible
ienumerable is more abstract and is generally preferred to list or ilist if possible

