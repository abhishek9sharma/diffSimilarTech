0---------------------------------------------------

container,height,items,elements,larger,minheight,element
how can i achieve that my container will adjust the height accordingly of the children items when the height of the children elements is larger then configured minheight of their parent element

smallest,state,greater
if smallest state of all children is greater than parent s state then update parent

view,larger,expansion,suffix
again if the parent view is not larger than its children the expansion suffix does not make any difference as well

lower,z-index,modal
if the parent has lower z-index than the modal everything in it will be behind the modal regardless of the children s z-index

actual,size,list,number,file
if the actual size of the parent s list of children is less than the parent s expected number of children originally read from the file push the parent back onto the stack

tree,number,root,node
there are also different types of trees -- i am going to assume that you are using a normal old tree any number of children no more than one parent one root node

keys,comparable,greater
however if the keys are not comparable how are we supposed to tell whether the children are greater or less than the parent

labelling,scheme,i+1,height,child,right
so in this labelling scheme left children are 2 i+1 more than their parent where i is the height of the child while right children are 1 more than their parent

side,node,keys,greater
you allow children on either side of a node to contain keys that are neither less than nor greater than the parent

bigger,div,overflow
the children iframe will always be bigger than parent div and parent div overflow will be hidden

table,headers,header,bigger,columns,index
the table can contain two or more headers where the parent header gets a bigger colspan and the bottom header conforms by giving the equivalent amount of columns i.e index 4 has two children indexed 1 and 2

harypyon,efficient,problem
as harypyon suggests storing the children is a more efficient way of viewing this problem than storing the parent and then computing the children

higher,opacity,opacities
children can t have a higher opacity than their parent as their opacities multiply

white-space,nowrap,sure,width,wider
also if you don t want the boxes to wrap when the page is too small for them to fit on one line you will need to add white-space nowrap to the parent or make sure the width of the parent is wider than the two children

line-height,smaller,line,box
when the children s line-height is smaller than parent s it looks like the children s line-height is ignored because parent s line-height will hold up the line box when the children s line-height is smaller

container,height,cells
basically you make your cells float with 20 width so 5 per row and height 100 of the container then you can change this height if the parent has more than 5 children cells

family,tree,nodes
i stumbled upon the above where someone answered a question regarding implementing a tree that has 2 nodes and i just wanted to get someone s thoughts on how best to implement a family tree with parent nodes which have more than two children nodes

rule,thumb,bigger
as a general rule of thumb i keep the parent bigger than the children

simple,higher,id
this is a very simple case which will do that asuming your children always have a higher id than their parent

sibling,elements,z-index,descendant,lower,higher,former
however if for example you have two parent sibling elements where one has a higher z-index than the other no descendant of the parent with the lower z-index will ever have a higher z-index than children of the parent with the higher z-index even if you set the former s children to z-index 500 or something like that

trees,greater
they seem to be trees in which each parent is strictly greater than its children

nested,set,values,greater,right
just remember in a nested set all children s left values are greater than and right values are less than the parent

code,element,higher,list,work
but my code only works if the parent element is always higher on the list than the children and i want to make that work universally

smaller
as long as each parent is smaller than its children - it will work

smaller,height,top,inline-block
if you have children that have a smaller height than their parent floats will bring them to the top whereas inline-block will screw up sometimes

child,table
in that case the update is done directly on the child table parent has more children .

side,note,higher,z-index,.codbg,page
as a side note the children can t have a higher z-index than their parent so everything inside .codbg is -1 behind the page then you need to fix the tab images the problem is not that they re behind the background it s that they re transparent and look darker on top of a darker background

old,h,larger
new h i is guaranteed to be the smallest of the old h i s children which is still larger than old h i s parent

capable,order,smaller
also it seems this is only the problem when there are a lot of duplicates the heap doesn t seem completely capable of staying in order the parent is smaller than the children

element,reactid,certain
i don t know react so can you make any parent element with reactid not accept more than certain children

note,nodes,value,larger
note that children nodes have value larger than the parent

search,tree,larger,valid
by the properties of the binary search tree you already know that all children have to be larger than the parent 15 therefore using one of them instead of the 25 is valid

higher
all children will have higher z than parent

width,bigger,element,min-width
ok so your parent are fixed width the children are bigger than the parent element also min-width 150px

heap,structure,node,larger,smaller,nodes
i understand the heap is a structure that the parent node is always larger or smaller than its children nodes

child,image,higher,z-index
by giving .artist-container a higher z-index you are placing it higher in the stacking order than the child image though children always have a higher z-index than their parent

table,ids
there is a parent table he can add more than one children email ids no

subtree,heapifyhelper,smaller,node,larger
and the reason why the subtree isn t reached is because you only call heapifyhelper for the children if one of the children is smaller than the parent but when you call heapifyhelper 1 the two children of the node 5 are 9 and 11 both larger than the root value

widget,little,larger,sizehint,layout
i was expecting the parent widget to have a little larger sizehint than the children layout

smaller,narrow,screens
why is the parent smaller than the children on narrow screens

left,right,larger,least,heap,property
specifically you compare the new root with the left and right children and keep swapping if the parent is larger than at least one of the children until the heap property is satisfied

home,block,level,higher,li
and since the children in your home block start their own stacking context one level higher than the parent your home li can never be above the items inside it

words,div,wider,narrower,multiple,unused,space
in other words if the parent div is wider or narrower than a multiple of it s children unused space remains within the parent div

values,sets,score,lower
you could do something similar using the score values in sorted sets giving children a score just lower than the parent

invariant,index,lesser
the invariant here however is that the parent s index must always be lesser than its children

greater
both children are greater than the parent

divs
you can check for each of those divs if it s parent has more than 3 children

player,small,width,greater
i have an issue when the player is small the children combine width is greater than the parent width

right,greater,node
all right children are greater than the parent node

binary,tree,node,greater,time,child
the max heap is an array that could be more easily represented with a binary tree where the parent node is always greater than it s children and every time you add a child you added it towards the left so that every time the tree increases it s height it is a full tree

1st,value,easier,efficient,list
i would prefer the 1st one since maintaining 1 value of parent is easier efficient than maintaining list of all children

tree,track,specific,order,child,smaller,left,greater,equal,right
insertng in search binary tree you need to keep track that children are stored in the specific order child smaller than parent on the left and greater or equal on the right and parent has at most 2 children

divs,width,smaller
i want to prevent the two divs to be placed under another if the parent width becomes smaller than the children combinded width

element,z-index,elements,higher
you would think that you could simply increment each element s z-index by two but that does not work due to the fact that children elements cannot have a higher z-index than their parent if the parent s z-index is set

grandchild,width,room
unless the rounding goes the other way in which case your grandchild has less width and or your parent has less room to hold its children

rules,heap,greater
im trying to take an array of type t and switch its values around so it correctly corresponds to the rules of a heap where the parent is always greater than the 2 children

node
presumably you know that it is precisely that no node has more than one parent or more than two children

child,co-ordinate,equal,spaces,middle,length,lines
if an element has only 1 child then the child is placed below the parent on the same x co-ordinate if the parent has more than one child then the children are placed with equal spaces apart and the parent needs to be in the middle above the children to two equal length lines join to both the children from the parent

bigger
ok if we say that the parent is always bigger than the children because it is above them we write

suffix,view,larger,combined,size,additional,space
suffix expand if the parent view is larger than the combined size of all its children additional space is available then the space is proportioned amongst child views with that suffix

smaller,id,default,value,column,null
assuming that the parent has a smaller id than any of its children and that the default value of the parent column is null could you order them this way

tree,specific,node,left,right,greater,links,direction
the reason we only traverse a tree from the parent to the children is because we are usually searching for a specific node and as long as the binary tree is implemented such that all left children are less than the parent and all right children are greater than the parent or vice-versa we only need links in one direction to find that node

part,multiple,child
a parent part can have multiple children and a child part can belong to more than 1 parent

structure,property,greater
a heap is a data structure that maintains only the property that all parent are less than their children or all parent are greater than their children

thread,id
this works because a parent thread will always have an id which is less than its children

type,heap,greater,equal
i need to pull in an array of any type and make it into a heap where the parent is always greater than or equal to both of its children

overflow,hidden,div.alert,height,lower
i don t want to hide overflowing part by overflow hidden i want to force parent div.alert height to be not lower than its children

opacity,container,#contentborder,div,cannot,higher
when opacity on a parent container the #contentborder div in this case is set to less than 1 any children inherit that and cannot be higher than the parent

heap,property,node,greater,arrays,nodes
the heap property that the parent node is greater than it s child nodes 2i + 1 and 2i + 2 using zero-based arrays holds for all nodes that have children

code,divs,wider,wrong,value
code is almost working but children divs are a bit wider than parent and i am getting a wrong value of offsetwidth

left,node
left children are less than the parent node and

heap,value
in case of min heap when you insert the element which is less than some nodes in the tree the data structure now doesn t follow heap condition in case of min heap value of parent should be less than its children so you have to shift up and up

element,elements,context,z-index,order,lower,axis
because in this case both the parent element and children elements are belonging to a same stacking context #root in your demo and negative z-index order let children stay lower than parent in the z axis

greater,equal,level,tree,greatest,element
but its parent is greater than or equal to w so at some level of the tree one of the children of the greatest element is w

pseudo-element,div,better
now since the pseudo-element is below all of the floated children the parent div happens or better yet seems to contain the floated children as well - which is really what you want

-webkit-filter,filter,child
if any of the children also has -webkit-filter npx the filter gets applied twice once for child and once for parent

inner,wider,div,scrollbars
also the inner children div have to be wider than the parent div for the scrollbars to work

manytoone,tree
manytoone if you plan to have a tree as a parent can have more than one children

elements,node,larger,max,heap
pushing and popping any item on a heap simply updates the elements in it in such a way that there is no node where its children are larger than the parent for max heap

rectangles,wider,high,next
if there are two rectangles and the parent is wider and than it is high then the children should be placed next to each other

check,greater,node
check if any of the children are greater than the parent node

option,element,position,absolute,hight,higher
is there any option to prevent parent element be overflowed by children element when children element position is absolute and hight of children is higher than parent

make,sure,width,smaller,left
of course there are a few other small details to take care of such as make sure the children width is smaller than the parent make sure the left and right margins and paddings are equal etc...

heap,property,larger
as you are always swapping it with the larger of the two heap property means that the parent is always larger than its children

lower,z-index,irrespective
because the parent has lower z-index than the .modal-backdrop everything in it will be behind the modal irrespective of any z-index given to the children

naming,child,classes,counter,intuitive,smaller,extra,funtionality
the naming of parent and child classes sometimes is counter intuitive as we often think as children as being smaller than the parent but in programming the child is the same as the parent but with extra funtionality

opacity,opaque
as for inheriting opacity - children cannot be less opaque than parent but could be more

minheapify,function,least
i d say that the array must first be built into a heap using a typical buildheap function which starts at half the length of the array and calls a minheapify function to ensure each parent is at least less than its children

fixheap2,valid,keys,smaller
your fixheap2 fails to consider the case where both children are valid but have keys smaller than the parent s

height,greater
if children height is greater than parent i need to set height of children to parent

processes,time,exits,process,child,given,moment
in the same breath i would also like to be able to run a specific number of child processes at any given time say for example n children running concurrently whenever one exits the parent process starts another child if needed but has no more than n children at any given moment

collapsible,panel,green,wider,red
i have a collapsible panel that was designed in a way that the children green are wider than their parent red

tree,nodes,lower,index
i will assume that this data structure represents a tree and that nodes are numbered so that the parent always has a lower index than the children

root,k,child
how would i go about creating a formula by which to traverse a data tree stored as a one dimensional array in which the root has k children and where each child has one less child than the parent

first,occurence,smaller,query,bigger
then i thought of putting each integer from s into a binary search tree and searching for first occurence where one of children is smaller than query and parent is bigger than query but i don t know if this will work

heap,property,value,smaller
in min heap a single insertion is o logn in the worst case as that cost is only incurred if the heap property that the parent value should be smaller than the children is violated

higher,z-index,default,browser
since parent have a higher z-index than its children you need to change the default browser stacking behavior

larger,difference,alignments
if the parent however is not larger then its children you won t notice any difference between those alignments

tag,not.for,id,result_box
am passing the word asdasdasd to the text area with the id source and triggering the click event.after that trying to check whether the result value which is wrapped under the newly created span tag or not.for that am checking whether its parent with the id result_box has more than one children

cannot,higher,opacity,possible,workaround
i understand that children cannot have a higher opacity than their parent but is there a possible workaround for this

property,requirement
i used to think heaps have this property but it just seems that the only requirement is for the children to be less than the parent

id,greater
it looks like all the children have an id greater than the parent

node,smaller,value
where the parent node is a smaller value than that of its children

problem,z-index,lower,mask
the problem here is the parent z-index is lower than the mask so any children are always behind the mask

smaller
children smaller than parent

words,larger,total,width,fine
edit in other words if the parent is larger than the total width of the children that s fine

query,id,lower,number
the above query only works if the parent id is a lower number than all the children

context,higher,z-index,fine
the parent establishes a stacking context and the children have higher z-index than the parent and cover the parent up so that s all fine

heap,constraint,greater,possible
the heap constraint which is that children are not greater than their parent does not completely specify the heap so there is usually more than one possible arrangement

widths,larger,width
the widths of the children is often larger than the width of the parent

elements,insertafter,jquery,position,higher,unwanted,behavior
i ve tried a bunch of other things as well one of them being hook elements with insertafter but stay in parent - jquery which worked perfectly but if the position was higher than the children inside the parent it didn t know what to do with it and causing a lot of unwanted behavior

second,class,.main-body,bigger,height
for some reason the second children class .main-body lightseagreen color of a column-layouted flexbox container .content-main plum color has a bigger height than its parent which i do not want it to

pairing,function,bigger,integer,overflow
i ve thought in using a pairing function but that makes children exponentially bigger than parent so after a few splits there is an integer overflow

number,methods,smaller,floating
here a number of methods are described to fix the parent which collapses to smaller than its floating children

width,container,jquery,wider,axis
just calculate the parent width and children container width using jquery and if the parent is wider than children container make a transform across x axis to shift all thumbnails to the left

position,equal,higher
i m trying to stop dragging the children div when his position is equal or higher than the parent position

correct,width,smaller,overflow
when the browser window is smaller than the min-width the child elements are the correct width but the parent keeps getting smaller causing the children to overflow

valid,heap,bigger
the result you are getting is also a valid heap - each parent is bigger than its children

smaller,total,width,numbers,new
if the parent becomes smaller than the total width of the children as numbers 1 2 3 and 4 dictate the children should shrink to stay within the new parent width

lower,index
parent are always at a lower index than their children so it is ordered

child2,possibility,higher,rating
you may need to also add another bit to the child2 join to remove the possibility of parent having a higher rating than the children

id,reliable,higher,circumstance,cte
i can order by id but this doesn t feel reliable as even though i know in this case that children will have a higher id than their parent i can t guarantee this will always be the case in every circumstance i want to use a cte

zombie,child,longer
it looks like the parent will become a zombie too if children aren t handled and a child runs longer than the parent

zoom,levels,elements,larger,element
when you zoom in google chrome some zoom levels cause the children elements to be larger than the parent element

filter,objects
ultimately i want to filter all parent objects that have less than 2 children

item,multiple
an item can have multiple children and can also have more than one parent

equal,smaller
what if both children are equal and smaller than the parent

sense,node,child,nodes,greater
that tree is a binary tree in the sense that each node has only two children but the child nodes aren t less or greater than their parent node

max,heap,node,larger
max heap in which parent node is always larger than its children

bigger
here s what it looks like if the parent is bigger than the children

z-index,higher
the z-index for the children should be higher than the parent

index,greater,vector
index for children will always be greater than the parent as shown in the vector above

heap,property,greater
this is a draft i made and where i m stuck at - from the fact that we have distinct elements and the heap property we know that the parent is always greater than its children

problem,order,recursive,results,id
the problem i have is that some children have more than one parent but because in order to use the recursive parent nicely i need to group the results by id i only see distinct entries

left,keys,list,node
if the left children must be strictly less than their parent then duplicate keys form a linked list that works like a single node since you can t have any left children in it

simple,solutions,index,greater
there are relatively simple solutions if the parent always have an index greater than the children but that is not the case here

cell,stretches,rows,streches
please notice how the family cell stretches to house more than one parent rows and the parent cell streches to house more than one children rows

lower,z-index
now the children have a lower z-index than the parent

heap,value,greater
simply put a max heap is a heap where the value of the parent is greater than the value of any of its children

space,width,things,screen
as with all the cases when weight is involved be sure that the needed space for width for the 2 children is less than what the parent can offer otherwise you will have things off screen

views,different,width,bigger,view
my children views may be a different width but it not be bigger than parent view

child
here a child will be having more than one parent and a parent has more than 2 children

min,smaller,precondition,node
in case 1 the node at which we stop is the local min because i it s smaller than both of its children and ii it s smaller than its parent which is the precondition of our deciding to check this node

opacity,properties,elements,text,higher
use rgba instead on the container div to set the opacity as the opacity properties is inherited by all children elements even text nodes meaning a descendant of any kind can t have a higher opacity than its parent

condition,height,higher,background-color
as we use less i was thinking about using a condition where i could specify that if the height of the children is higher than the parent s height the background-color is different

divs,larger,overflow
to prevent children divs to become larger than the parent you have to set an overflow

height,greater,container
this children height can be greater than the parent container

id,pid,node,lower,common,tree
this class assumes that nodes have numeric values for id and pid and parent node has lower id than its children which is common in tree structures

array,guarantees,smaller,child,nothing,order,right
if still not then think of it as a min heap represented in array guarantees that parent is smaller than its child but says nothing about are all children arranged in sorted order left to right

particular,node,lower,value
the max-heapfiy method of a heap bubbles up the max to the top such that any particular node s children all have lower value than their parent

fewer,tree,binary
if one parent has fewer or more than two children the tree is not binary

common,priniciple,smaller
in a heap when there is any change in the heap insert delete update then the heap is restructured in a way such that the common priniciple is maintained in above case the parent remains always smaller than its children

heap,constraint,greater,possible
i think that in short the second answer to that question covers it all the heap constraint which is that children are greater than their parent does not completely specify the heap so there is usually more than one possible arrangement

heap,greater
in a heap the parent is always less than all of its children or greater than all of its

views,height,size,bigger
my children views have their height set to wrap_content i know that the behavior of wrap_content is to fit the content size unless its bigger than the parent

element,overflow,scroll,thinner,line
the parent element has overflow scroll and when the parent become thinner than the children i don t want the children to break line but the parent to overflow them horizontally

consideration,left,node,right,greater
once you have chosen a root node it is already easy to construct a bst taking into consideration the fact that left children are less than the parent node and all right children are greater than the parent node

orders,id,higher,top
this is because the secondary sorting orders by id and if the parent id happens to be higher than any children the parent may not show up on top of the children

min,heap,node,smaller
min heap in which parent node is always smaller than its children

problem,div,height,larger
so the problem i have now that the parent div height is larger than his children s height

order,example,larger,id
are the nodes in order like in your example where the children have a larger id than the parent

elements,h2,child
i suppose that once we start adding elements from h2 as children to elements of h2 then we will have to start checking whether that child is less than the parent and if not we swap them

tree,left,smaller,right,larger,property
assuming that the binary tree follows that all left children are smaller than their parent and all right children are larger than their parent you could use this property of the tree to reduce the amount you need to search through

node,left,child,smaller,value,right
if a node has two children then the left child has a smaller value than the parent and the right child has a bigger value

sure,container,width,least,larger,elements
make sure that the parent container has a width and that this width is at least larger than the children elements

problem,table,dependent
problem a parent can have more than one children and parent table is dependent on child table

element,pseudos,z-index,higher,effect
i thought of using before and after pseudos to display top-to-bottom and bottom shadows on the containing element but these pseudos display within their parent element and positioning parent z-index higher than these children has no effect

combined,width,willing
also if you are willing to change your layout a bit you could achieve this through weight and linearlayout note however that this will work only if the desired combined width of the 2 children is less than what the parent is willing to offer

id,smaller,sample,data
this assumes that the id of the parent is smaller than the id of the children as is the case with the sample data in the question.

siftdown,function,smaller
you need to just change the siftdown function so that the parent is always the smaller than the children

1---------------------------------------------------

mating,similar,likely,worse,compatible
by promoting the mating of more similar parent the children are less likely to be much worse than the parent because the parent just were compatible

individuals,subject,likely,worse
when such individuals are subject to crossover their children are likely to be worse than either parent

instance,crossover,worse
because of this i m not sure if traditional crossover algorithms will work well for instance i tried ordered crossover and the children it created were generally worse than its parent

2---------------------------------------------------

complex,input
it can handle parent with more than two children and with a more complex input data set we could leverage the graph approach to do even more cool stuff

input
this way it is not ok if the parent has more children let say they are input s

3---------------------------------------------------

simple,has_many,relationship
i have a simple parent has_many children relationship and i m trying to get all parent that have less than n children

relationship,indentation
on mac os x dwarfdump shows this relationship with indentation - children dies are indented a little more than parent dies

4---------------------------------------------------

query,particular
i wrote one query but it will fails if a particular parent has more than 10 children

query
this query lists all parent sharing the same children where there are more than one parent

5---------------------------------------------------

disadvantages,row,data,duplicated
disadvantages again if a parent can have a row that relates to more than one children data will be duplicated as there will be one row per each of them so there is a limitation in this solution

row,data
in this case a parent row can be linked to more than one children without duplicating data

words,row,fields,child,data
in other words if a parent row can have more than one children when sending the fields to each child the parent data will be duplicated in each children

other---------------------------------------------------

#wr
since the parent #wr has more children #con_bottom does not fit

directory,trickier,files,directories
also removing the m from a parent directory is trickier than it might seem so we need to make sure we move from the bottom of the tree the files first and not rename the directories till we re done with all the children

table,id_1,id_2,many-to-many,relationship
if your table represents id_1 is a parent of id_2 then both a parent can have many children and children can have more than one parent this is known as a many-to-many relationship

graphs,mysql
but if you re dealing with children that have more than one parent then you re dealing with graphs and for that reason mysql it s not suitable for you

branch,stable
this really helps keeps parent branch more stable than children

application,crashes,excess
if any parent has more children than there are parent the application crashes if any of the excess children are selected

work
unfortunately this doesn t work as children can t have more than one parent

clause,b.employee_id,null
the where clause basically includes only the parent who have less than 4 children or who do not have any children at all b.employee_id is null


children can belong to more than one parent

words,user
what i want to do is to search for all parent who has more then n children in other words i would want to get all user records that had an activity more then n times within given period of time eventtimestamp

faster
children is faster than find for example just like parent is faster than parent

event,scale,zoom,fashion,control,higher,rate,certain,point
i subscribed to the main canvas sizechanged event and applied a scale transform so that the canvas and its children would shrink and grow in a zoom like fashion when the control is resized which is working but for some reason the parent canvas is shrinking at a much higher rate than the children making the children fall off of the canvas at a certain point because of the scale rate


can children have more than one parent


this does not work if any parent has more than one children

father,methods,better,new,nothing,child,class
in inheritance the father should not access the methods of the children it is better to inherit and implement new methods that have nothing to do with the parent in the child class

current,situation,lesser
however it is not possible to rotate in the current situation since both children end up in becoming lesser than a parent

myfile
the myfile can have one parent and parent can have more than one children


i believe that some parent will have more than 2 children

invariant
the invariant is that each parent is less than both its children

possible
or generally speaking is it possible to add the same children to more than one parent

notice,solution,array,element.
notice that a children choice solution can have more than one parent and that choice can be either an array or one element.

loop,duplicated
this gives me but when i loop through it i get duplicated parent when this parent has more than one children

use,router-outlet,component,route,file
use router-outlet in the parent component and make more than one children route in the routing file


what if a parent has more than 100 children

inheritence,structure,restrictive
this would generally be the wrong inheritence structure if your saying what i think you are the reason being that children should not be less restrictive than parent

text,content
i have come up with a few ideas such as traversing the html document tree to its leaves adding up the length of the text and only seeing what other text the parent has if the parent gives us more content than the children do


each parent can already have more than 1 children

able
i would like to be able to let children have more than one parent

real,life
let s again use parent and children but like in real life children do have more than 1 parent

depth,path
then children have one more depth than their parent and children s path starts with the parent path


of course two parent can generate more than two children

top,reply,tile,thread,multiple,view,scroll
whenever a top parent reply tile goes out of the viewport it is disposed as expected but when trying to bring it back into view it scrolls right to the top and looks very jumpy even worse whenever a bigger thread with multiple children tries to come back into view it doesn t scroll at all

guess,wrong,process,earlier,terminal,output
i guess the reason you observe this behaviour with just a guess it could be wrong is because the parent process is terminated earlier than its children so your terminal s prompt is printed before some of the children s output

tip,place,blue,higher,orange,bird,wings,pattern,side,many-to-many,relationship
tip when i place parent blue here higher vertically than children orange here and i notice the bird body with raised wings pattern of a parent on either side then i recognize a many-to-many relationship exists between the parent


if a parent has more than 2 children

direct,level,deeper
it selects all direct children children exactly one level deeper than the parent

better
do you keep the parent if they are better than the children


get all the parent that have more than two children

resource,attrbiute,attribute
i have one parent resource which can have more than one children of one attrbiute and one than more children of other attribute

