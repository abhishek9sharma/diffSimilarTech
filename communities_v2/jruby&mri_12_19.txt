0---------------------------------------------------

rails,concurrency,better
i know that rails jruby handles concurrency better than mri but i don t know how to do it

rails,requests,performant,raw,execution
once the jvm has warmed up rails requests under jruby are usually significantly more performant than under mri both in terms of raw execution speed and garbage collection

options,rails,better,performance
with these options jruby on rails gives about the same or better performance than mri

application,rubinius,better
for longer-running applications like a web application rubinius or jruby will generally perform better than mri

1---------------------------------------------------

old,adagio,faster,ruby
does this mean that the old adagio about jruby being faster than mri ruby is gone

faster
mri is faster than jruby

surprised,slower
this really surprised me because i expected mri to be slower than jruby

faster,matz,ruby
jruby is faster than 1.9 mri matz ruby interpreter the standard in certain areas

opposite,2-5x,slower
so it seems like the opposite - mri 2.3 gets 2-5x slower than jruby 9.1

gil,faster,requests
mri has a gil so why is it faster than jruby in handling requests

strange,scales,faster
and it sounds strange but jruby scales very well and it s faster than mri with java 7

faster,traditional,ruby,scala,raw,cpu
jvm hosted languages are generally going to be faster than traditional mri ruby and both java and scala are generally faster than jruby when it comes to raw cpu capabilities

other---------------------------------------------------

sensitive,memory,leaks
i ve noticed however that jruby is more sensitive to memory leaks than mri

process,advice,better,long,lot,faster
lastly if you are frequently finding yourself running long running process i advice you to try jruby which is works much better with long running processes due to jvm lot faster than mri

faster,right,parameters,warmup,fast,system
sometimes mri is faster but with the right parameters and warmup jruby was 3 to 3.5 times as fast on my system for this particular

command,path,version,ruby,higher,priority
alter your command path so that jruby s version of the ruby command has a higher priority than the mri one

windows,rubyspec,tests,ruby,meaning,yarv
in fact on windows jruby passes more rubyspec tests than ruby meaning mri or yarv itself

faster,hotspot,j9,c2,compiler,c1
for example jruby is faster than mri jruby 1.7 is faster than jruby 1.6 jruby 1.7 running on hotspot is faster than jruby 1.7 running on j9 jruby 1.7 running on hotspot 1.7 is faster than jruby 1.7 running on hotspot 1.6 jruby 1.7 running on hotspot 1.7 with the c2 compiler is faster than jruby 1.7 running on hotspot 1.7 with the c1 compiler and so on

runtime,heavy,heavier
the jruby runtime alone is already pretty heavy much heavier than mri

