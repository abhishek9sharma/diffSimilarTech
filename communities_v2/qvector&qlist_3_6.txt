0---------------------------------------------------

size,better,store
size qlist performs better than qvector because it doesn t store the

size,element,type,pointer,better,store,objects
if the size of the qlist s element type is greater than the pointer s size qlist performs better than qvector because it doesn t store the objects sequentially but stores sequentially pointers to heap copies

other---------------------------------------------------

code
qlist code is generally less optimized than qvector one

better,easy
qvector is better than qlist in this case because it s easy to resize it

better,performance,items,memory,heap
qvector will usually give better performance than qlist because qvector always stores its items sequentially in memory where qlist will allocate its items on the heap unless sizeof t sizeof void and t has been declared to be either a q_movable_type or a q_primitive_type using q_declare_typeinfo

pointers,heap,worse
if it stores it as pointers on the heap won t qlist be much worse off than qvector

