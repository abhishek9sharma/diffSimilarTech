other---------------------------------------------------

looser,constraints,theory,faster,data,unlikely
grouping has looser constraints than sorting so in theory it could be marginally faster than sorting but unless you re dealing with a lot of data you re unlikely to see a speed difference

elements,faster,input,documents
the reason being that sorting less elements which the grouping generally produces is going to be faster than sorting all input documents

output,input,common,sublists,dict,sense,list,groupby
your desired output does not reflect what you have as input if you want to grouping common sublists you can use itertools.groupby considering you want sorted output using a dict and then sorting makes less sense than just creating the grouping from the sorted list using groupby

order,clause,optimal,operation,query,execution
if the database is sophisticated enough adding an explicit order by clause will hint that sorting is more optimal for the grouping operation as well as the sorting can then be re-used in the query execution pipeline

int,column,better,text,columns
this way only a single int column needs to be sorted grouping which performs much better than sorting two text columns

columns,application,code,simpler,fields
instead knowing that we want to grouping by these columns we can make the application code to do so simpler by sorting by these fields

order,necessary,efficient
of course ordering could be forced obj.gettype .tostring and using lexical order but since a strict order is not necessary only grouping i was wondering if there s a more efficient way than sorting

