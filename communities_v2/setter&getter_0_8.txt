other---------------------------------------------------

level,lower,private
you can override the setter s level to be lower than the getter s level with either private set or internal set

code,interesting,precedence
the code in the setter is far more interesting than the getter should it not take precedence and be defined first

calculation,expensive,changeable,properties
if the calculation is expensive or the getter is executed more often than the setter for the changeable properties playername by far it can be an optimization to change the property inside the class into a read-write property and set the value every time the changeable properties are changed

filter,calls,efficient,filters,list
if we put our filter in between these calls either in getter or setter setter is more efficient as it is called only when filters change we modify original filtered list with our filter and return it back through the getter

restricted,odd.
but then your setter is less restricted than your getter which is odd.

special,design,general,type,number,requests,integer
note that the test bean has a very special design as the getter returns a more general type number than the setter requests integer

complexity,higher,unit-test
the setter complexity can be higher than the getter and thus validate a unit-test

argument
if your getter takes more than one argument it s not called a setter anymore

