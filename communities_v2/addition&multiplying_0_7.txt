other---------------------------------------------------

slower,simple,temporary,register
we don t actually multiplying it s slower than simple addition and as you can see we destroy temporary register t0 but don t touch s0 s1

x1,c1,faster,todays,cpus
you can try x1 c1 and then x1 + c1 but i don t think the addition is much faster than multiplying on todays cpus

exact,behavior,better,sum,result
so the compiler can t make the optimization because it can t tell if you wanted the exact behavior where multiplying is better or the implemented behavior where the scale of sum affects the result of the addition

slower
if multiplying is slower than addition then case 2 is slightly slower than case 1

gradeschool,circuit,log,deeper
so we must show that a gradeschool multiplying circuit is o log n times deeper than an addition circuit

complex,operation
however multiplying is a more complex operation than addition or shifting

boilerplate,code,complex,terms
the boilerplate code would multiplying rapidly when the express get more complex than addition of two terms

