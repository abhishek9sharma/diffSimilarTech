0---------------------------------------------------

keyword,compiler,symbol,rule,actual
the keyword inline is more about telling the compiler that the symbol will be present in more than one object file without violating the one definition rule than about actual inlining which the compiler can decide to do or not to do

keyword,definition,compiler,hint
generally speaking the inline keyword is used more now to allow you to violate the one definition rule when you define a function in a header than to give the compiler a hint about inlining

other---------------------------------------------------

code,longer,savings,smaller,hard,limit
but as the inline code gets longer the savings for inlining become smaller so maybe you could just have a hard limit on the size of the code - any code to be inline must be smaller than the limit

similar,argument,functions,faster,big-o,size,tradeoff,program,larger
a similar argument can be made for inlining functions inline is generally faster but will remain in the same big-o complexity class although there is an additional size tradeoff inlining makes your compiled program larger if the code was being used in many places

aware,compiler,decision,user,non-specified,inline-functions
i m well aware that inline is more of compiler decision than of user going so far as even to inlining non-specified inline-functions so the user control is almost negligible

reality,keyword,code,legal
in reality the inline keyword has less to do with inlining code and more to do with allowing legal violation of the one definition rule

good,gcc,negative,impact,binary,bigger
if a function is static thus not exported anyway and only called once within your code and you never use a pointer to the function chances are good that gcc will decide to inline it automatically as it will have no negative impact the binary won t get bigger by inlining it only once

templates,standard,meaning,related,definition,actual,code
templates will be inline in the standard meaning of inline which is more related to the one definition rule than to actual code inlining

fatter,code,faster,functions,call
inlining inlining produces fatter code which is faster the inline functions will not appear in the call stack

compiler,able,better,calls
if your compiler can do this then writing functions in a way that the compiler is able to inline is better than manually inlining the calls yourself

bytecodes,method,larger,maxinlinesize,next,level
callee is too large message is printed by c1 when the size in bytecodes of the method being inline is larger than maxinlinesize 35 multiplied by nestedinliningsizeratio 90 on each next level of inlining

