new,format,in-memory,smaller,current,data,new,format,data
rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server

image,backbuffer,copies,lower,resolution
is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png

jpg,slower
jpg png is slower to draw than a bmp

wpf,app,faster
i have a sample wpf app here and wondering why bmp is loading faster than png

files,natural,transparency,smaller,files
not only do png files have natural support for transparency they are also smaller than bmp files

note,format,more,complex,compression
note that the png format is much more complex than bmp since it allows compression etc

image,backbuffer,copies,lower,resolution
is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png

jpg,slower
jpg png is slower to draw than a bmp

note,format,more,complex,compression
note that the png format is much more complex than bmp since it allows compression etc

new,format,in-memory,smaller,current,data,new,format,data
rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server

files,natural,transparency,smaller,files
not only do png files have natural support for transparency they are also smaller than bmp files

wpf,app,faster
i have a sample wpf app here and wondering why bmp is loading faster than png

new,format,in-memory,smaller,current,data,new,format,data
rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server

wpf,app,faster
i have a sample wpf app here and wondering why bmp is loading faster than png

jpg,slower
jpg png is slower to draw than a bmp

note,format,more,complex,compression
note that the png format is much more complex than bmp since it allows compression etc

files,natural,transparency,smaller,files
not only do png files have natural support for transparency they are also smaller than bmp files

image,backbuffer,copies,lower,resolution
is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png

jpg,slower
jpg png is slower to draw than a bmp

wpf,app,faster
i have a sample wpf app here and wondering why bmp is loading faster than png

files,natural,transparency,smaller,files
not only do png files have natural support for transparency they are also smaller than bmp files

image,backbuffer,copies,lower,resolution
is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png

new,format,in-memory,smaller,current,data,new,format,data
rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server

note,format,more,complex,compression
note that the png format is much more complex than bmp since it allows compression etc

jpg,slower
jpg png is slower to draw than a bmp

files,natural,transparency,smaller
not only do png files have natural support for transparency they are also smaller than bmp files

new,format,in-memory,smaller,current,data
rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server

note,format,more,complex,compression
note that the png format is much more complex than bmp since it allows compression etc

wpf,app,faster
i have a sample wpf app here and wondering why bmp is loading faster than png

image,backbuffer,copies,lower,resolution
is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png

new,format,in-memory,smaller,current,data
rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server

jpg,slower
jpg png is slower to draw than a bmp

app,wondering,loading,faster
i have a sample wpf app here and wondering why bmp is loading faster than png

note,format,more,complex,compression
note that the png format is much more complex than bmp since it allows compression etc

image,backbuffer,copies,lower,resolution
is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png

files,natural,transparency,smaller
not only do png files have natural support for transparency they are also smaller than bmp files

wpf,app,faster
i have a sample wpf app here and wondering why bmp is loading faster than png

new,format,in-memory,smaller,current,data
rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server

jpg,slower
jpg png is slower to draw than a bmp

image,backbuffer,copies,lower,resolution
is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png

note,format,more,complex,compression
note that the png format is much more complex than bmp since it allows compression etc

files,natural,transparency,smaller
not only do png files have natural support for transparency they are also smaller than bmp files

note,format,more,complex,compression
note that the png format is much more complex than bmp since it allows compression etc

wpf,app,faster
i have a sample wpf app here and wondering why bmp is loading faster than png

image,backbuffer,copies,lower,resolution
is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png

new,format,in-memory,smaller,current,data
rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server

files,natural,transparency,smaller
not only do png files have natural support for transparency they are also smaller than bmp files

jpg,slower
jpg png is slower to draw than a bmp

note,format,more,complex,compression
note that the png format is much more complex than bmp since it allows compression etc

slower
jpg png is slower to draw than a bmp

new,format,in-memory,smaller,current,data
rebuild a new png format in-memory data which is much more smaller than current bmp data and send the new png format data by socket to remote server

wpf,app,faster
i have a sample wpf app here and wondering why bmp is loading faster than png

image,backbuffer,copies,lower,resolution
is not simple scale or crop but to be able to rotate scale and crop every single sprite and draw it in the exactly order to compose the final hight resolution image in a backbuffer then save it in bmp and make some copies in lower resolution as png

files,natural,transparency,smaller
not only do png files have natural support for transparency they are also smaller than bmp files

